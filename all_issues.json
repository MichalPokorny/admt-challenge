[{"milestone": null, "number": 1379, "html_url": "https://github.com/python/mypy/pull/1379", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1379", "id": 148391051, "events_url": "https://api.github.com/repos/python/mypy/issues/1379/events", "updated_at": "2016-04-14T16:01:39Z", "body": "'locals' is effectively dead since it is always either None or an\r\nempty SymbolTable.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1379/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove dead 'symtable' and 'locals' fields of TypeChecker", "assignee": null, "closed_at": "2016-04-14T16:01:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1379/comments", "labels": [], "created_at": "2016-04-14T15:05:11Z", "user": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1379.patch", "html_url": "https://github.com/python/mypy/pull/1379", "diff_url": "https://github.com/python/mypy/pull/1379.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1379"}, "locked": false}, {"milestone": null, "number": 1378, "html_url": "https://github.com/python/mypy/pull/1378", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1378", "id": 148249218, "events_url": "https://api.github.com/repos/python/mypy/issues/1378/events", "updated_at": "2016-04-14T14:48:01Z", "body": "mypy cannot parse the classes defined in typing.py, such as:\r\n\r\n    class Tuple(Final, metaclass=TupleMeta, _root=True): ...\r\n\r\nInstead, it stops with a parse error at the comma following metaclass=TupleMeta.  The original code assumed that there would be a list of superclasses, possibly followed by metaclass=....  This patch generalizes the parsing to an arbitrary set of keyword arguments, popping the metaclass out of the list when it is complete.\r\n\r\nI updated the ClassDef node in nodes.py to hold on to the keyword arguments and serialize to and from json, but I don't know how to trigger the serialization code, so this is not tested.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1378/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "parse extra keyword args in class definition", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1378/comments", "labels": [], "created_at": "2016-04-14T04:26:32Z", "user": {"followers_url": "https://api.github.com/users/pkienzle/followers", "gists_url": "https://api.github.com/users/pkienzle/gists{/gist_id}", "html_url": "https://github.com/pkienzle", "following_url": "https://api.github.com/users/pkienzle/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/473456?v=3", "url": "https://api.github.com/users/pkienzle", "organizations_url": "https://api.github.com/users/pkienzle/orgs", "starred_url": "https://api.github.com/users/pkienzle/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/pkienzle/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/pkienzle/subscriptions", "login": "pkienzle", "repos_url": "https://api.github.com/users/pkienzle/repos", "received_events_url": "https://api.github.com/users/pkienzle/received_events", "id": 473456, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1378.patch", "html_url": "https://github.com/python/mypy/pull/1378", "diff_url": "https://github.com/python/mypy/pull/1378.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1378"}, "locked": false}, {"milestone": null, "number": 1377, "html_url": "https://github.com/python/mypy/pull/1377", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1377", "id": 148172735, "events_url": "https://api.github.com/repos/python/mypy/issues/1377/events", "updated_at": "2016-04-13T22:19:46Z", "body": "@ddfisher what do you think? This improves the awkward formatting of --help output a bit.\r\n\r\nBefore (excerpt):\r\n```\r\n  -s, --silent-imports  don't follow imports to .py files\r\n  --silent              deprecated name for --silent-imports\r\n  --almost-silent       like --silent-imports but reports the imports as\r\n                        errors\r\n  --disallow-untyped-calls\r\n                        disallow calling functions without type annotations\r\n                        from functions with type annotations\r\n  --disallow-untyped-defs\r\n                        disallow defining functions without type annotations\r\n                        or with incomplete type annotations\r\n  --check-untyped-defs  type check the interior of functions without type\r\n                        annotations\r\n```\r\nAfter:\r\n```\r\n  -s, --silent-imports      don't follow imports to .py files\r\n  --silent                  deprecated name for --silent-imports\r\n  --almost-silent           like --silent-imports but reports the imports as\r\n                            errors\r\n  --disallow-untyped-calls  disallow calling functions without type\r\n                            annotations from functions with type annotations\r\n  --disallow-untyped-defs   disallow defining functions without type\r\n                            annotations or with incomplete type annotations\r\n  --check-untyped-defs      type check the interior of functions without type\r\n                            annotations\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1377/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "(Unrelated) Make `mypy -h` look a little prettier.", "assignee": null, "closed_at": "2016-04-13T22:19:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1377/comments", "labels": [], "created_at": "2016-04-13T20:20:45Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1377.patch", "html_url": "https://github.com/python/mypy/pull/1377", "diff_url": "https://github.com/python/mypy/pull/1377.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1377"}, "locked": false}, {"milestone": null, "number": 1376, "html_url": "https://github.com/python/mypy/pull/1376", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1376", "id": 148138170, "events_url": "https://api.github.com/repos/python/mypy/issues/1376/events", "updated_at": "2016-04-14T11:39:18Z", "body": "Fixes #1246.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1376/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Compute type of inherited constructor correctly", "assignee": null, "closed_at": "2016-04-14T11:39:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1376/comments", "labels": [], "created_at": "2016-04-13T18:06:29Z", "user": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1376.patch", "html_url": "https://github.com/python/mypy/pull/1376", "diff_url": "https://github.com/python/mypy/pull/1376.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1376"}, "locked": false}, {"milestone": null, "number": 1375, "html_url": "https://github.com/python/mypy/pull/1375", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1375", "id": 148125878, "events_url": "https://api.github.com/repos/python/mypy/issues/1375/events", "updated_at": "2016-04-13T17:44:59Z", "body": "This field was effectively unused since the removal of the runtime\r\ntype checking target in commit 6dca530 \"Remove obsolete\r\ntransform-related code\".", "labels_url": "https://api.github.com/repos/python/mypy/issues/1375/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove bound_vars field of CallableType", "assignee": null, "closed_at": "2016-04-13T17:44:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1375/comments", "labels": [], "created_at": "2016-04-13T17:17:37Z", "user": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1375.patch", "html_url": "https://github.com/python/mypy/pull/1375", "diff_url": "https://github.com/python/mypy/pull/1375.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1375"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1374, "html_url": "https://github.com/python/mypy/issues/1374", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1374", "id": 148124203, "events_url": "https://api.github.com/repos/python/mypy/issues/1374/events", "updated_at": "2016-04-13T17:10:01Z", "body": "Sometimes, --silent-imports prevents importing a module that defines the base class for some other class. The other class then implicitly inherits from Any, and this means that many operations on the instances of that class are not type-checked at all. I just fixed (#1365) an issue where something *was* type-checked without taking this unknown base class into account, and the result was an incorrect error. However there are also plenty of situations imaginable where this situation prevents useful type-checking from happening. So perhaps we should issue a warning in this situation (i.e. a base class being undefined due to an import being suppressed due to --silent-imports). Maybe --almost-silent could be augmented to also issue these warnings.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1374/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Warn when a base class has type Any due to --silent-imports", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1374/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-04-13T17:09:48Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1373, "html_url": "https://github.com/python/mypy/issues/1373", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1373", "id": 148036594, "events_url": "https://api.github.com/repos/python/mypy/issues/1373/events", "updated_at": "2016-04-13T11:56:00Z", "body": "For finding rare crash bugs we generally rely on user bug reports. We could potentially find some of them automatically by running mypy against large amounts of (unannotated or annotated) open source code, such as the Python standard library and a bunch of third party modules. The simplest form of such a test would only report crashes as errors and wouldn't even try to catch unexpected false positives. We could hook this up to CI to find such bugs as soon as they are introduced. Alternatively, it could be a script that gets run manually before each release or every once in a while.\r\n\r\nThis isn't a high-priority thing as we have plenty of known bugs to work with, but this could become useful once mypy gets closer to production quality.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1373/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Run a regression test against a large corpus of unannotated code", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1373/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-04-13T11:56:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1372, "html_url": "https://github.com/python/mypy/pull/1372", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1372", "id": 147939717, "events_url": "https://api.github.com/repos/python/mypy/issues/1372/events", "updated_at": "2016-04-13T16:12:19Z", "body": "Implement the idea in the issue by Ben Darnell.  (However, this\r\nimplementation still silences the case where main.py -> stub.pyi ->\r\nx.py -> y.py. Hopefully that doesn't matter.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1372/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't let -s silence .py imports from stubs. Fix #1364.", "assignee": null, "closed_at": "2016-04-13T16:12:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1372/comments", "labels": [], "created_at": "2016-04-13T03:55:09Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1372.patch", "html_url": "https://github.com/python/mypy/pull/1372", "diff_url": "https://github.com/python/mypy/pull/1372.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1372"}, "locked": false}, {"milestone": null, "number": 1371, "html_url": "https://github.com/python/mypy/pull/1371", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1371", "id": 147904585, "events_url": "https://api.github.com/repos/python/mypy/issues/1371/events", "updated_at": "2016-04-13T17:10:31Z", "body": "Also deprecated --silent (at least in --help output).\r\n\r\nFixes #1367.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1371/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add --almost-silent, which modifies --silent-imports to warn about silenced imports", "assignee": null, "closed_at": "2016-04-13T16:58:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1371/comments", "labels": [], "created_at": "2016-04-12T23:41:52Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1371.patch", "html_url": "https://github.com/python/mypy/pull/1371", "diff_url": "https://github.com/python/mypy/pull/1371.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1371"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1370, "html_url": "https://github.com/python/mypy/issues/1370", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1370", "id": 147845786, "events_url": "https://api.github.com/repos/python/mypy/issues/1370/events", "updated_at": "2016-04-14T12:09:27Z", "body": "The semantic analysis can generate quite a few errors when run on a large unannotated code base.\r\n\r\nWhen such errors refer to the body of an unannotated function, this violates people's expectations based on a simplified definition of gradual typing (\"mypy only checks the body of a function when it's annotated\").\r\n\r\nThis noise makes it less feasible to approach such a code base piecemeal (annotating one function/class/file at a time, then hunting down the errors).\r\n\r\nOTOH there are perhaps some errors from semantic analysis that are useful.\r\n\r\nWe should do some kind of survey and either silence some of the noisiest errors from semantic analysis or (almost) all of them, depending on the outcome.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1370/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Maybe suppress all/most errors in unannotated functions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1370/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-04-12T19:12:30Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1369, "html_url": "https://github.com/python/mypy/pull/1369", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1369", "id": 147839783, "events_url": "https://api.github.com/repos/python/mypy/issues/1369/events", "updated_at": "2016-04-12T18:48:53Z", "body": "It turns out this could complain spuriously when a file has some\r\nof its dependencies pruned due to ModuleNotFound around L1218.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1369/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove complaint about inconsistent dependencies.", "assignee": null, "closed_at": "2016-04-12T18:48:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1369/comments", "labels": [], "created_at": "2016-04-12T18:47:34Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1369.patch", "html_url": "https://github.com/python/mypy/pull/1369", "diff_url": "https://github.com/python/mypy/pull/1369.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1369"}, "locked": false}, {"milestone": null, "number": 1368, "html_url": "https://github.com/python/mypy/pull/1368", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1368", "id": 147836544, "events_url": "https://api.github.com/repos/python/mypy/issues/1368/events", "updated_at": "2016-04-13T10:45:12Z", "body": "Fixes #689.\r\n\r\nThis will also need documentation, would you like me to write it and add it to this pull request?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1368/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement TypeVar(..., bound=<type>)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1368/comments", "labels": [], "created_at": "2016-04-12T18:34:01Z", "user": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1368.patch", "html_url": "https://github.com/python/mypy/pull/1368", "diff_url": "https://github.com/python/mypy/pull/1368.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1368"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1367, "html_url": "https://github.com/python/mypy/issues/1367", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1367", "id": 147827210, "events_url": "https://api.github.com/repos/python/mypy/issues/1367/events", "updated_at": "2016-04-13T16:58:00Z", "body": "We've encountered a few cases where users were baffled when they found out that a certain error (to them obvious) was *not* reported, and the reason was that some essential file was excluded due to use of the --silent-imports (-s) flag.\r\n\r\nIt seems to be particularly baffling when there's a base class that comes from a silenced import. See e.g. #1363 -- once we fix that, there remains the problem that Base has type Any and so in Derived, self has effectively type Any (as do all other instances of Derived).\r\n\r\nOne possibility would be to have an option that's just like --silent-imports but which reports an error at every suppressed import (possibly displaying a different message depending on whether the module was found or not). This option might also add an additional message when a base class is undefined due to a missing import.\r\n\r\nAnother approach might be to treat this as a new reporting option.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1367/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Silent imports is too silent", "assignee": null, "closed_at": "2016-04-13T16:58:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1367/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-04-12T17:55:45Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1366, "html_url": "https://github.com/python/mypy/issues/1366", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1366", "id": 147814307, "events_url": "https://api.github.com/repos/python/mypy/issues/1366/events", "updated_at": "2016-04-12T17:36:46Z", "body": "According to MyPy, these two functions type check, but they shouldn't:\r\n```\r\ndef f(arg:Optional[str])->str:\r\n    return arg\r\n\r\ndef g(arg:Union[str, None])->str:\r\n    return arg\r\n```\r\n\r\nThis is (correctly) rejected:\r\n```\r\ndef h(arg:Union[str, int])->str:\r\n    return arg\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1366/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Overly permissive handling of Optional parameters", "assignee": null, "closed_at": "2016-04-12T17:36:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1366/comments", "labels": [], "created_at": "2016-04-12T17:03:09Z", "user": {"followers_url": "https://api.github.com/users/markshannon/followers", "gists_url": "https://api.github.com/users/markshannon/gists{/gist_id}", "html_url": "https://github.com/markshannon", "following_url": "https://api.github.com/users/markshannon/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/9448417?v=3", "url": "https://api.github.com/users/markshannon", "organizations_url": "https://api.github.com/users/markshannon/orgs", "starred_url": "https://api.github.com/users/markshannon/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/markshannon/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/markshannon/subscriptions", "login": "markshannon", "repos_url": "https://api.github.com/users/markshannon/repos", "received_events_url": "https://api.github.com/users/markshannon/received_events", "id": 9448417, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1365, "html_url": "https://github.com/python/mypy/pull/1365", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1365", "id": 147812041, "events_url": "https://api.github.com/repos/python/mypy/issues/1365/events", "updated_at": "2016-04-13T16:36:03Z", "body": "This has some tests that simulate the reported problem, and the hack makes them pass; but the reported case still fails outside the test harness (probably because fixtures/dict.py doesn't overload `__init__`).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1365/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow overloading to succeed if an arg is an instance of a class derived from Any. Fix #1363.", "assignee": null, "closed_at": "2016-04-13T16:36:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1365/comments", "labels": [], "created_at": "2016-04-12T16:53:45Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1365.patch", "html_url": "https://github.com/python/mypy/pull/1365", "diff_url": "https://github.com/python/mypy/pull/1365.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1365"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1364, "html_url": "https://github.com/python/mypy/issues/1364", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1364", "id": 147604093, "events_url": "https://api.github.com/repos/python/mypy/issues/1364/events", "updated_at": "2016-04-13T16:12:20Z", "body": "```\r\n$ mypy -f tornado/ioloop.py\r\n$ mypy -f -s tornado/ioloop.py\r\ntornado/ioloop.py:48: error: Module has no attribute 'set_close_exec'\r\ntornado/ioloop.py:48: error: Module has no attribute 'Waker'\r\n```\r\n\r\nIn Tornado, I prefer to use inline annotations instead of stub files, but occasionally I use a stub for something that would be too tricky to mark up inline. In [this case](https://github.com/tornadoweb/tornado/blob/b6998247702a960f0c73004a6b5f8ae775607c03/tornado/platform/auto.pyi), a stub file imports and reexports definitions from a python file. With `-s`, python imports are silently ignored.\r\n\r\nMy suggestion would be to solve this by making `-s` apply only to imports that appear in `.py` files; imports in `.pyi` files would always be processed regardless of their target.\r\n\r\n(Versions tested: tornadoweb/tornado@b69982477, python/mypy@ac193cf9dd, python/typeshed@68306484a)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1364/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fails with `--silent-imports`; passes without it", "assignee": null, "closed_at": "2016-04-13T16:12:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1364/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-04-12T01:25:12Z", "user": {"followers_url": "https://api.github.com/users/bdarnell/followers", "gists_url": "https://api.github.com/users/bdarnell/gists{/gist_id}", "html_url": "https://github.com/bdarnell", "following_url": "https://api.github.com/users/bdarnell/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/160562?v=3", "url": "https://api.github.com/users/bdarnell", "organizations_url": "https://api.github.com/users/bdarnell/orgs", "starred_url": "https://api.github.com/users/bdarnell/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bdarnell/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bdarnell/subscriptions", "login": "bdarnell", "repos_url": "https://api.github.com/users/bdarnell/repos", "received_events_url": "https://api.github.com/users/bdarnell/received_events", "id": 160562, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1363, "html_url": "https://github.com/python/mypy/issues/1363", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1363", "id": 147572442, "events_url": "https://api.github.com/repos/python/mypy/issues/1363/events", "updated_at": "2016-04-13T16:36:04Z", "body": "Consider the following:\r\n```\r\nfrom typing import Any, Dict\r\nfrom base import Base\r\n\r\nclass Derived(Base):\r\n    def to_dict(self) -> Dict[str, Any]:\r\n        return dict(self)\r\n```\r\n\r\nWhen we run mypy with `--slient-imports` on only this file, we get the following error:\r\n```\r\nnote: In member \"to_dict\" of class \"Derived\":\r\nerror: No overload variant of \"dict\" matches argument types [test_mypy_dict.Derived]\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1363/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dict constructor with unknown base class", "assignee": null, "closed_at": "2016-04-13T16:36:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1363/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-11T22:20:29Z", "user": {"followers_url": "https://api.github.com/users/ahaven/followers", "gists_url": "https://api.github.com/users/ahaven/gists{/gist_id}", "html_url": "https://github.com/ahaven", "following_url": "https://api.github.com/users/ahaven/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1711285?v=3", "url": "https://api.github.com/users/ahaven", "organizations_url": "https://api.github.com/users/ahaven/orgs", "starred_url": "https://api.github.com/users/ahaven/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ahaven/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ahaven/subscriptions", "login": "ahaven", "repos_url": "https://api.github.com/users/ahaven/repos", "received_events_url": "https://api.github.com/users/ahaven/received_events", "id": 1711285, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1362, "html_url": "https://github.com/python/mypy/issues/1362", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1362", "id": 147568271, "events_url": "https://api.github.com/repos/python/mypy/issues/1362/events", "updated_at": "2016-04-11T23:07:11Z", "body": "```python\r\nclass Foo(object):\r\n    @property\r\n    @some_decorator\r\n    def foo(self):\r\n        ...\r\n```\r\n\r\nis valid in Python 2, but MyPy complains `Decorated property not supported`.\r\nAdding `type: ignore` does not ignore the error.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1362/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Decorated property not supported", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1362/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-04-11T22:03:52Z", "user": {"followers_url": "https://api.github.com/users/pyrocat101/followers", "gists_url": "https://api.github.com/users/pyrocat101/gists{/gist_id}", "html_url": "https://github.com/pyrocat101", "following_url": "https://api.github.com/users/pyrocat101/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/541540?v=3", "url": "https://api.github.com/users/pyrocat101", "organizations_url": "https://api.github.com/users/pyrocat101/orgs", "starred_url": "https://api.github.com/users/pyrocat101/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/pyrocat101/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/pyrocat101/subscriptions", "login": "pyrocat101", "repos_url": "https://api.github.com/users/pyrocat101/repos", "received_events_url": "https://api.github.com/users/pyrocat101/received_events", "id": 541540, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1361, "html_url": "https://github.com/python/mypy/pull/1361", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1361", "id": 147267638, "events_url": "https://api.github.com/repos/python/mypy/issues/1361/events", "updated_at": "2016-04-11T20:44:45Z", "body": "Fix #1360.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1361/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't use an arg type corresponding to ** arg kind as inference context for the argument", "assignee": null, "closed_at": "2016-04-11T20:44:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1361/comments", "labels": [], "created_at": "2016-04-10T21:09:49Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1361.patch", "html_url": "https://github.com/python/mypy/pull/1361", "diff_url": "https://github.com/python/mypy/pull/1361.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1361"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1360, "html_url": "https://github.com/python/mypy/issues/1360", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1360", "id": 147169080, "events_url": "https://api.github.com/repos/python/mypy/issues/1360/events", "updated_at": "2016-04-11T20:44:45Z", "body": "This was reported by @ahaven on our internal Slack; @ddfisher came up with the following minimal repro.\r\n\r\n```python\r\nfrom typing import *\r\n\r\ndef f1(iterable: Iterable[Tuple[str, int]] = None) -> None:\r\n    f2(**dict(iterable))  # <------- Error here\r\n\r\ndef f2(iterable: Iterable[Tuple[str, int]], **kw: Any) -> None:\r\n    pass\r\n```\r\nWe get the following mysterious error:\r\n```\r\nstar.py: note: In function \"f1\":\r\nstar.py:4: error: Argument 1 to \"dict\" has incompatible type Iterable[Tuple[str, int]]; expected Iterable[...]\r\n```\r\nSome debugging shows that `Iterable[...]` in the error message stands for `Iterable[Tuple[Tuple[str, int], <something>]`, IOW it somehow takes `Dict[KT, VT]` and substitutes the `Tuple[str, int]` for just KT, even though the variant it chose from the overloaded dict constructor has `iterable: Iterable[Tuple[KT, VT]]` as its lone arg.\r\n\r\nI think I've followed the trail into infer_type_arguments() at the very end of mypy/infer.py; it gets called with:\r\n```\r\ntype_var_ids: [-1, -2]\r\ntemplate: builtins.dict[_KT`-1, _VT`-2]\r\nactual: typing.Iterable[Tuple[builtins.str, builtins.int]]\r\n```\r\nAfter calling `infer_constraints(template, actual, SUBTYPE_OF)`, constraints is set to\r\n```\r\n[-1 <: Tuple[builtins.str, builtins.int], -1 :> Tuple[builtins.str, builtins.int]]\r\n```\r\nwhich seems to tell me that type var -1 (i.e. `_KT`) is both a subtype and a supertype of `Tuple[str, int]` while leaving type var -2 (i.e. `_VT`) unconstrained. The reported error follows from this I think.\r\n\r\nI can also understand why these constraints are inferred -- it tries to match `Dict[KT, VT]` with `Iterable[Tuple[...]]` and of course `Dict[KT, VT]` inherits from `Iterable[KT]` so the tuple type ends up associated with KT -- but it appears confused because we should actually take the argument rather than the return type.\r\n\r\nThat's all I have for now.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1360/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Incorrect type inferred for **dict(iterable)", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": "2016-04-11T20:44:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1360/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-09T22:18:01Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1359, "html_url": "https://github.com/python/mypy/pull/1359", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1359", "id": 147166401, "events_url": "https://api.github.com/repos/python/mypy/issues/1359/events", "updated_at": "2016-04-10T21:05:38Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1359/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "When positional args passed to dict(), analyze them. Fix #1357.", "assignee": null, "closed_at": "2016-04-10T21:05:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1359/comments", "labels": [], "created_at": "2016-04-09T21:51:12Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1359.patch", "html_url": "https://github.com/python/mypy/pull/1359", "diff_url": "https://github.com/python/mypy/pull/1359.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1359"}, "locked": false}, {"milestone": null, "number": 1358, "html_url": "https://github.com/python/mypy/issues/1358", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1358", "id": 147100973, "events_url": "https://api.github.com/repos/python/mypy/issues/1358/events", "updated_at": "2016-04-12T19:38:52Z", "body": "It looks like #815 has not been fixed completely, here is an example\r\n```python\r\nfrom collections import defaultdict\r\n\r\n# this is now fixed\r\ndefaultdict(list)\r\n\r\nclass MyDDict(defaultdict):\r\n    pass\r\n\r\n# and here we see the old bug again\r\n# Argument 1 to \"MyDDict\" has incompatible type List[_T]; expected Callable[[], _VT]\r\nMyDDict(list)\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1358/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy incorrectly determines type", "assignee": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "closed_at": "2016-04-12T19:38:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1358/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}], "created_at": "2016-04-09T07:18:42Z", "user": {"followers_url": "https://api.github.com/users/ilevkivskyi/followers", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "html_url": "https://github.com/ilevkivskyi", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/12005495?v=3", "url": "https://api.github.com/users/ilevkivskyi", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "login": "ilevkivskyi", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "id": 12005495, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1357, "html_url": "https://github.com/python/mypy/issues/1357", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1357", "id": 147072987, "events_url": "https://api.github.com/repos/python/mypy/issues/1357/events", "updated_at": "2016-04-10T21:05:39Z", "body": "A file with just\r\n```python\r\nx = dict(undefined_variable)\r\n```\r\nsucceeds, when it should give a `Name 'undefined_variable' is not defined` error.  Without the `dict` constructor, the error is generated correctly.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1357/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "unknown variable not caught in `dict` constructor", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": "2016-04-10T21:05:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1357/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-09T00:50:22Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1356, "html_url": "https://github.com/python/mypy/issues/1356", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1356", "id": 147015405, "events_url": "https://api.github.com/repos/python/mypy/issues/1356/events", "updated_at": "2016-04-08T19:31:46Z", "body": "We might not always be able to infer the type of the variable bound by a `with` statement, just like we might not always be able to infer the type of a variable being assigned to for the first time. For this minimal example\r\n```\r\nfrom typing import TypeVar\r\nfrom contextlib import ContextManager\r\nT = TypeVar('T')\r\ndef g() -> ContextManager[T]: ...\r\n\r\nwith g() as x:\r\n    pass\r\n```\r\nmypy reports\r\n```\r\nwith.py:6: error: Need type annotation for variable\r\n```\r\nIt would be nice to be able to write, for example,\r\n```\r\nwith g() as x:  # type: int\r\n```\r\ndeclaring the type of `x`. This is currently rejected by mypy as a parse error.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1356/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type annotations on `with` statements", "assignee": null, "closed_at": "2016-04-08T19:31:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1356/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2016-04-08T19:21:23Z", "user": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1355, "html_url": "https://github.com/python/mypy/issues/1355", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1355", "id": 147007646, "events_url": "https://api.github.com/repos/python/mypy/issues/1355/events", "updated_at": "2016-04-09T16:53:54Z", "body": "The cache-reading code for incremental mode currently crashes rather rudely when a cache file cannot be read or doesn't conform to the schema. We need to fix this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1355/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Handle various error conditions in the incremental cache more gracefully", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1355/comments", "labels": [{"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}], "created_at": "2016-04-08T18:51:46Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1354, "html_url": "https://github.com/python/mypy/issues/1354", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1354", "id": 147007074, "events_url": "https://api.github.com/repos/python/mypy/issues/1354/events", "updated_at": "2016-04-08T18:54:23Z", "body": "When mypy changes we may want to reset the cache for incremental mode.\r\n\r\nIn particular when the serialization format changes we should do this (otherwise reading the cache will just crash, currently).\r\n\r\nWe should probably have some marker file in the cache root directory indicating the version -- or it can be a field in the metadata JSON.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1354/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Reset cache when mypy version changed (or cache format version changed)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1354/comments", "labels": [{"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}], "created_at": "2016-04-08T18:49:26Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1353, "html_url": "https://github.com/python/mypy/issues/1353", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1353", "id": 147004370, "events_url": "https://api.github.com/repos/python/mypy/issues/1353/events", "updated_at": "2016-04-12T01:08:58Z", "body": "Currently we use a custom built lexer/parser which is pretty slow (taking about 40% of mypy's runtime in some tests).  We could get a significant speedup by switching to a parser based on CPython's ast extension module, if we fork it as a separate library (typed_ast) and add type comment parsing support.\r\n\r\nSo far, this is working for Python 3 and is available in mypy behind the experimental `--fast-parser` flag.  High-level items remaining:\r\n- [x] fork CPython 2.7's ast module, make it run on Python 3.5, and modify it to parse type comments\r\n- [ ] integrate typed_ast into mypy by translating its ast to mypy's internal ast, and make it available behind the `--fast-parser` flag\r\n- [ ] ensure typed_ast works on Python 3.2 - 3.5\r\n- [ ] update tests to work with new parser\r\n- [ ] enable fast parsing by default", "labels_url": "https://api.github.com/repos/python/mypy/issues/1353/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Switch to a faster parser based on CPython's ast module", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1353/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2016-04-08T18:35:30Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1352, "html_url": "https://github.com/python/mypy/issues/1352", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1352", "id": 147000918, "events_url": "https://api.github.com/repos/python/mypy/issues/1352/events", "updated_at": "2016-04-08T18:53:00Z", "body": "We now have incremental mode but it's off by default; we would like to turn it on by default.\r\n\r\nThis is a follow-up on #932, which was closed after #1292 landed.\r\n\r\nDependencies are at least #1349 (add tests), #1350 (check which files we rechecked), and #1351 (interaction between -i and -s).\r\n\r\nWe probably also want some command-line options to force resetting the cache or control the name of the cache directory.\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1352/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Turn on the incremental cache by default", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1352/comments", "labels": [{"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-04-08T18:21:00Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1351, "html_url": "https://github.com/python/mypy/issues/1351", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1351", "id": 147000785, "events_url": "https://api.github.com/repos/python/mypy/issues/1351/events", "updated_at": "2016-04-13T17:59:52Z", "body": "When using --incremental mode (-i) with -s (--silent-imports) the cache should technically be invalidated when a different set of files is passed, since imports that are \"silenced\" by this flag are stored as objects of type Any in the importing module's namespace.\r\n\r\nWe need this to work seamlessly, either by emptying the cache whenever the set of files changes, or by recording the silenced dependencies in the cache metadata, or by some other approach.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1351/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Handle interaction of -i and -s", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1351/comments", "labels": [{"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2016-04-08T18:20:38Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1350, "html_url": "https://github.com/python/mypy/issues/1350", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1350", "id": 146993077, "events_url": "https://api.github.com/repos/python/mypy/issues/1350/events", "updated_at": "2016-04-08T18:53:38Z", "body": "We need to improve the test harness for incremental tests (in testcheck.py) to check which files were or weren't rechecked. We probably need to add new syntax to test descriptions to describe expectations here.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1350/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Check which files were rechecked in incremental mode test cases (and which weren't)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1350/comments", "labels": [{"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}], "created_at": "2016-04-08T17:45:13Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1349, "html_url": "https://github.com/python/mypy/issues/1349", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1349", "id": 146992418, "events_url": "https://api.github.com/repos/python/mypy/issues/1349/events", "updated_at": "2016-04-08T18:53:25Z", "body": "We need more tests before turning incremental mode on by default (+ more manual testing).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1349/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add extensive tests for incremental type checking", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1349/comments", "labels": [{"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}], "created_at": "2016-04-08T17:42:14Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1348, "html_url": "https://github.com/python/mypy/pull/1348", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1348", "id": 146975360, "events_url": "https://api.github.com/repos/python/mypy/issues/1348/events", "updated_at": "2016-04-08T20:06:27Z", "body": "Closes #1226. @johnthegen Can you try this out?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1348/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add a batch file", "assignee": null, "closed_at": "2016-04-08T20:06:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1348/comments", "labels": [], "created_at": "2016-04-08T16:28:20Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1348.patch", "html_url": "https://github.com/python/mypy/pull/1348", "diff_url": "https://github.com/python/mypy/pull/1348.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1348"}, "locked": false}, {"milestone": null, "number": 1347, "html_url": "https://github.com/python/mypy/pull/1347", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1347", "id": 146780116, "events_url": "https://api.github.com/repos/python/mypy/issues/1347/events", "updated_at": "2016-04-08T00:57:41Z", "body": "(This does *not* fully address #1341.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1347/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add report_internal_error() processing to ThirdPass.", "assignee": null, "closed_at": "2016-04-08T00:57:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1347/comments", "labels": [], "created_at": "2016-04-08T00:40:48Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1347.patch", "html_url": "https://github.com/python/mypy/pull/1347", "diff_url": "https://github.com/python/mypy/pull/1347.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1347"}, "locked": false}, {"milestone": null, "number": 1346, "html_url": "https://github.com/python/mypy/pull/1346", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1346", "id": 146779635, "events_url": "https://api.github.com/repos/python/mypy/issues/1346/events", "updated_at": "2016-04-08T18:59:52Z", "body": "Fixes #475.\r\n\r\nShould probably be reviewed by someone who understands the checker's `self.binder`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1346/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Get type information from isinstance assertions", "assignee": null, "closed_at": "2016-04-08T18:59:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1346/comments", "labels": [], "created_at": "2016-04-08T00:35:45Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1346.patch", "html_url": "https://github.com/python/mypy/pull/1346", "diff_url": "https://github.com/python/mypy/pull/1346.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1346"}, "locked": false}, {"milestone": null, "number": 1345, "html_url": "https://github.com/python/mypy/issues/1345", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1345", "id": 146775016, "events_url": "https://api.github.com/repos/python/mypy/issues/1345/events", "updated_at": "2016-04-08T00:14:57Z", "body": "Sometimes we put in `# type: ignore` comments because of some mypy or typeshed bug (or a missing feature). It would be nice if mypy told us when we can take those out (e.g. because the bug is fixed).\r\n\r\nMaybe this should be a command-line flag, I can imagine it might be annoying occasionally too.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1345/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Idea: issue an error if a '# type: ignore' comment is unused", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1345/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-04-07T23:57:16Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1344, "html_url": "https://github.com/python/mypy/pull/1344", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1344", "id": 146773633, "events_url": "https://api.github.com/repos/python/mypy/issues/1344/events", "updated_at": "2016-04-08T00:13:34Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1344/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Skip unreachable blocks in ThirdPass.  Fixes #1319.", "assignee": null, "closed_at": "2016-04-08T00:13:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1344/comments", "labels": [], "created_at": "2016-04-07T23:49:04Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1344.patch", "html_url": "https://github.com/python/mypy/pull/1344", "diff_url": "https://github.com/python/mypy/pull/1344.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1344"}, "locked": false}, {"milestone": null, "number": 1343, "html_url": "https://github.com/python/mypy/pull/1343", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1343", "id": 146584078, "events_url": "https://api.github.com/repos/python/mypy/issues/1343/events", "updated_at": "2016-04-07T16:48:28Z", "body": "The option `args.py2` doesn't exist (has been renamed?) so using the `--fast-parse` option failed immediately at the command line argument parsing stage.\r\n\r\nThe test seems a bit heavy weight just to test the command line parsing, but I couldn't see another way.\r\n\r\n~~Also I think you have pull request building switched off in travis?~~ building now I've actually created the pull request.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1343/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fixing use of '--fast-parse' option", "assignee": null, "closed_at": "2016-04-07T16:45:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1343/comments", "labels": [], "created_at": "2016-04-07T11:06:49Z", "user": {"followers_url": "https://api.github.com/users/samuelcolvin/followers", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "html_url": "https://github.com/samuelcolvin", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4039449?v=3", "url": "https://api.github.com/users/samuelcolvin", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "login": "samuelcolvin", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "id": 4039449, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1343.patch", "html_url": "https://github.com/python/mypy/pull/1343", "diff_url": "https://github.com/python/mypy/pull/1343.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1343"}, "locked": false}, {"milestone": null, "number": 1342, "html_url": "https://github.com/python/mypy/issues/1342", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1342", "id": 146557815, "events_url": "https://api.github.com/repos/python/mypy/issues/1342/events", "updated_at": "2016-04-07T14:56:09Z", "body": "I encountered an internal error while running `mypy --py2 tools/print-all/print-all`. [print-all](https://github.com/zulip/zulip/blob/master/tools/print-all/print-all#L135) is a python 2 script in Zulip.\r\n\r\nThis script is not annotated at all.\r\n\r\nI used the latest version of mypy from this repository (f3c1c55). I also tested it on the version available on pypi. Both of them are throwing this internal error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/main.py\", line 51, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/main.py\", line 95, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/build.py\", line 239, in build\r\n    result = manager.process(initial_states)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/build.py\", line 459, in process\r\n    next.process()\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/build.py\", line 928, in process\r\n    self.semantic_analyzer().visit_file(self.tree, self.tree.path)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/semanal.py\", line 233, in visit_file\r\n    self.accept(d)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/semanal.py\", line 2196, in accept\r\n    node.accept(self)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/nodes.py\", line 721, in accept\r\n    return visitor.visit_with_stmt(self)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/semanal.py\", line 1646, in visit_with_stmt\r\n    self.visit_block(s.body)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/semanal.py\", line 995, in visit_block\r\n    self.accept(s)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/semanal.py\", line 2196, in accept\r\n    node.accept(self)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/nodes.py\", line 381, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/mnt/Code/git_repos/forked/zvenv3/lib/python3.4/site-packages/mypy/semanal.py\", line 285, in visit_func_def\r\n    if isinstance(symbol.node, FuncDef) and symbol.node != defn:\r\nAttributeError: 'NoneType' object has no attribute 'node'\r\n\r\n*** INTERNAL ERROR ***\r\n\r\ntools/print-all/print-all:135: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n\r\nNOTE: you can use \"mypy --pdb ...\" to drop into the debugger when this happens.\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1342/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal error occurred", "assignee": null, "closed_at": "2016-04-07T14:56:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1342/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-07T09:18:47Z", "user": {"followers_url": "https://api.github.com/users/sharmaeklavya2/followers", "gists_url": "https://api.github.com/users/sharmaeklavya2/gists{/gist_id}", "html_url": "https://github.com/sharmaeklavya2", "following_url": "https://api.github.com/users/sharmaeklavya2/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3839472?v=3", "url": "https://api.github.com/users/sharmaeklavya2", "organizations_url": "https://api.github.com/users/sharmaeklavya2/orgs", "starred_url": "https://api.github.com/users/sharmaeklavya2/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/sharmaeklavya2/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/sharmaeklavya2/subscriptions", "login": "sharmaeklavya2", "repos_url": "https://api.github.com/users/sharmaeklavya2/repos", "received_events_url": "https://api.github.com/users/sharmaeklavya2/received_events", "id": 3839472, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1341, "html_url": "https://github.com/python/mypy/issues/1341", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1341", "id": 146488410, "events_url": "https://api.github.com/repos/python/mypy/issues/1341/events", "updated_at": "2016-04-08T17:41:15Z", "body": "We have a nice `report_internal_error` mechanism for catching unexpected exceptions and reporting them explicitly as internal errors with the source file and line number that triggered the issue.\r\n\r\nIn the crash reported as #1319, that mechanism didn't fire. That was in the third pass of semantic analysis, and from the code it looks like we invoke that mechanism around the main (second) pass of semantic analysis and the type checker itself, but not the third pass.\r\n\r\nBecause it seems somewhat tricky to get this error reporting into every context where we know a specific line number, it might be helpful, in addition to any fix specifically for `ThirdPass`, to put a backstop layer of reporting that makes sure we at least identify the file. (As #1319 illustrates, it can be tricky to identify that from the outside!) It looks like the `State.process` call in the main build loop in `BuildManager.process` could be an effective spot for that.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1341/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal errors in third pass go uncaught", "assignee": null, "closed_at": "2016-04-08T17:41:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1341/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-04-07T02:16:00Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1340, "html_url": "https://github.com/python/mypy/pull/1340", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1340", "id": 146430747, "events_url": "https://api.github.com/repos/python/mypy/issues/1340/events", "updated_at": "2016-04-06T22:11:58Z", "body": "This ended up amounting to just removing a check!\r\n\r\nFixes #1236. But something is still not right when using type\r\nvariables constrained to a list of values; added a failing test for\r\nthat case.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1340/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement subtype checking when right-hand side is a generic callable", "assignee": null, "closed_at": "2016-04-06T22:11:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1340/comments", "labels": [], "created_at": "2016-04-06T20:50:07Z", "user": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1340.patch", "html_url": "https://github.com/python/mypy/pull/1340", "diff_url": "https://github.com/python/mypy/pull/1340.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1340"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1339, "html_url": "https://github.com/python/mypy/issues/1339", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1339", "id": 146383689, "events_url": "https://api.github.com/repos/python/mypy/issues/1339/events", "updated_at": "2016-04-12T17:59:43Z", "body": "In trying to provide more information on #1319 I ran into lots of problems with trying to set `MYPYPATH`. There doesn't seem to be any documentation on how it should be set.\r\n\r\nFor example my library has the following `__init__.py` file:\r\n\r\n```python\r\nfrom distutils.version import StrictVersion\r\nVERSION = StrictVersion('0.0.1')\r\n```\r\n\r\nThis seems to cause mypy a lot of problems.\r\n\r\nMy project uses `virtualenv` and `pip` to install packages, `sys.path` looks as follows:\r\n```python\r\n['',\r\n '/home/samuel/code/harrier/env/lib/python35.zip',\r\n '/home/samuel/code/harrier/env/lib/python3.5',\r\n '/home/samuel/code/harrier/env/lib/python3.5/plat-x86_64-linux-gnu',\r\n '/home/samuel/code/harrier/env/lib/python3.5/lib-dynload',\r\n '/usr/lib/python3.5',\r\n '/usr/lib/python3.5/plat-x86_64-linux-gnu',\r\n '/home/samuel/code/harrier/env/lib/python3.5/site-packages']\r\n```\r\n\r\nWhat value should I set `MYPYPATH` to to allow checking a script including `distutils.version`? All the things I tried failed.\r\n\r\nI think partially related to #1293.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1339/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "documentation on how to configure MYPYPATH is needed", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1339/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2016-04-06T17:37:34Z", "user": {"followers_url": "https://api.github.com/users/samuelcolvin/followers", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "html_url": "https://github.com/samuelcolvin", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4039449?v=3", "url": "https://api.github.com/users/samuelcolvin", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "login": "samuelcolvin", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "id": 4039449, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1338, "html_url": "https://github.com/python/mypy/issues/1338", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1338", "id": 146347364, "events_url": "https://api.github.com/repos/python/mypy/issues/1338/events", "updated_at": "2016-04-07T18:21:10Z", "body": "The following is not an error currently:\r\n```\r\nclass C:\r\n    a = None  # type: int\r\nclass D(C):\r\n    a = None  # type: int  # No error\r\n```\r\n(Even though repeating the definition in C does cause an error.)\r\nWorse, there's not even a check that the types match:\r\n```\r\nclass C:\r\n    a = None  # type: int\r\nclass D(C):\r\n    a = None  # type: str  # Still no error\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1338/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Class attribute that duplicates a base class attribute is not flagged", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1338/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-06T15:20:39Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1337, "html_url": "https://github.com/python/mypy/issues/1337", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1337", "id": 146220614, "events_url": "https://api.github.com/repos/python/mypy/issues/1337/events", "updated_at": "2016-04-07T18:22:51Z", "body": "```python\r\nfrom typing import TypeVar, Generic\r\n\r\nT = TypeVar('T')\r\n\r\n\r\nclass A(Generic[T]):\r\n    @classmethod\r\n    def func(cls) -> T:\r\n        pass\r\n\r\n\r\nclass B(A['B']):\r\n    pass\r\n\r\n\r\ndef except_b(b: B):\r\n    pass\r\n\r\n\r\nexcept_b(B.func())\r\n```\r\nis a valid python3 code, but mypy warns that\r\n```\r\nfile:20: error: Argument 1 to \"except_b\" has incompatible type \"T\"; expected \"B\"\r\n```\r\nbut the resolved pseudo-code of class B should be\r\n```python\r\nclass B(A['B']):\r\n    @classmethod\r\n    def func(cls) -> 'B':\r\n        pass\r\n```\r\nif I replace it, mypy doesn't complain anymore.\r\n\r\nI'm might have overlook some specificities of `@classmethod` but I think that `func` is also bind to `class B` thus should be type checking.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1337/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "`@classmethod` of `Generic` class", "assignee": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1337/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-06T07:48:17Z", "user": {"followers_url": "https://api.github.com/users/tharvik/followers", "gists_url": "https://api.github.com/users/tharvik/gists{/gist_id}", "html_url": "https://github.com/tharvik", "following_url": "https://api.github.com/users/tharvik/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5735566?v=3", "url": "https://api.github.com/users/tharvik", "organizations_url": "https://api.github.com/users/tharvik/orgs", "starred_url": "https://api.github.com/users/tharvik/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/tharvik/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/tharvik/subscriptions", "login": "tharvik", "repos_url": "https://api.github.com/users/tharvik/repos", "received_events_url": "https://api.github.com/users/tharvik/received_events", "id": 5735566, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1336, "html_url": "https://github.com/python/mypy/pull/1336", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1336", "id": 146192368, "events_url": "https://api.github.com/repos/python/mypy/issues/1336/events", "updated_at": "2016-04-06T14:21:20Z", "body": "Fixes #1335.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1336/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ensure that generic function type variable ids are fresh", "assignee": null, "closed_at": "2016-04-06T14:21:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1336/comments", "labels": [], "created_at": "2016-04-06T05:38:50Z", "user": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1336.patch", "html_url": "https://github.com/python/mypy/pull/1336", "diff_url": "https://github.com/python/mypy/pull/1336.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1336"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1335, "html_url": "https://github.com/python/mypy/issues/1335", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1335", "id": 146183874, "events_url": "https://api.github.com/repos/python/mypy/issues/1335/events", "updated_at": "2016-04-06T14:20:21Z", "body": "```\r\nfrom typing import TypeVar\r\nT = TypeVar('T')\r\nU = TypeVar('U')\r\n\r\ndef outer(x: T) -> T:\r\n    def inner(y: U) -> T: ...\r\n    return inner(1)    # error: Incompatible return value type: expected T`-1, got builtins.int*\r\n```\r\nI should be able to pass `inner` a value of any type and get back a `T` to return from `outer`. But internally the type variables `U` and `T` of `inner` have the same id (-1) so effectively mypy thinks `inner` has a type like `(U) -> U`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1335/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type variables of a nested generic function are confused with type variables of surrounding generic function", "assignee": null, "closed_at": "2016-04-06T14:20:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1335/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-06T04:29:50Z", "user": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1334, "html_url": "https://github.com/python/mypy/issues/1334", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1334", "id": 146143840, "events_url": "https://api.github.com/repos/python/mypy/issues/1334/events", "updated_at": "2016-04-07T18:29:23Z", "body": "When typechecking the following file, we give an error:\r\n```\r\n$ cat /tmp/foo.py\r\ndef f(foo):\r\n  if foo is not None:\r\n    dumps = foo.dumps\r\n  else:\r\n    from json import dumps\r\n\r\n$ mypy /tmp/foo.py\r\n/tmp/foo.py: note: In function \"f\":\r\n/tmp/foo.py:5: error: Name 'dumps' already defined\r\n```\r\n\r\nBecause the function `f` doesn't have a type annotation, we ought to let this code be without complaining about it -- that makes it easier to start using mypy in parts of a large file, and pay the cost of fixing up code like this to work with mypy incrementally.\r\n\r\n(Thanks to @varenc for reporting this issue -- he tried putting an annotation on one new function in a 3kLOC file with 188 existing functions, and it had this one error which stopped him.)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1334/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error on conditional import inside unannotated function", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1334/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-06T00:00:16Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1333, "html_url": "https://github.com/python/mypy/issues/1333", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1333", "id": 146069474, "events_url": "https://api.github.com/repos/python/mypy/issues/1333/events", "updated_at": "2016-04-07T18:30:52Z", "body": "For example, when generating a stub for `itertools` mypy should notice that bunch of the classes define `__iter__` and `__next__` and infer an `Iterator` base class.\r\n\r\n(Reported originally by Rahul Gopinath.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1333/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Stubgen doesn't infer abstract base classes such as Iterator automatically ", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1333/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-04-05T18:23:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1332, "html_url": "https://github.com/python/mypy/issues/1332", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1332", "id": 146069091, "events_url": "https://api.github.com/repos/python/mypy/issues/1332/events", "updated_at": "2016-04-07T18:23:56Z", "body": "`_` is commonly used as a throw-away variable in list unpacking, but this will make mypy unhappy if two lists with different types are unpacked in the same function.  For example\r\n```python\r\nx, _ = [\"foo\", \"bar\"]\r\nn, _ = [1, 2]\r\n```\r\nresults in:\r\n```\r\ntest.py:2: error: Incompatible types in assignment (expression has type \"int\", variable has type \"str\")\r\n```\r\n\r\nTo support this pattern, we may want to consider special-casing `_` and not generating this sort of type error if the variable is never read.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1332/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy is unhappy with repeated use of `_` as a throw-away variable", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1332/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-04-05T18:22:27Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1331, "html_url": "https://github.com/python/mypy/pull/1331", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1331", "id": 146042091, "events_url": "https://api.github.com/repos/python/mypy/issues/1331/events", "updated_at": "2016-04-06T04:00:05Z", "body": "Gentoo uses a wrapper around pythons to handle their dynamic default\r\npython selection on a system with many versions of python installed\r\nsimultaneously.  Due to this mypy's script is a symlink to a file in\r\n/usr/lib/python-exec/python3.5.  This means that the search path needs\r\nto check if python-exec is being used and return the appropriate path\r\n(usually '/usr/lib').  This patch works successfully on my Gentoo system.\r\n\r\nFixes #653.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1331/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "add Gentoo path to default_data_dir", "assignee": null, "closed_at": "2016-04-05T23:56:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1331/comments", "labels": [], "created_at": "2016-04-05T16:31:44Z", "user": {"followers_url": "https://api.github.com/users/alunduil/followers", "gists_url": "https://api.github.com/users/alunduil/gists{/gist_id}", "html_url": "https://github.com/alunduil", "following_url": "https://api.github.com/users/alunduil/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/169249?v=3", "url": "https://api.github.com/users/alunduil", "organizations_url": "https://api.github.com/users/alunduil/orgs", "starred_url": "https://api.github.com/users/alunduil/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/alunduil/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/alunduil/subscriptions", "login": "alunduil", "repos_url": "https://api.github.com/users/alunduil/repos", "received_events_url": "https://api.github.com/users/alunduil/received_events", "id": 169249, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1331.patch", "html_url": "https://github.com/python/mypy/pull/1331", "diff_url": "https://github.com/python/mypy/pull/1331.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1331"}, "locked": false}, {"milestone": null, "number": 1330, "html_url": "https://github.com/python/mypy/pull/1330", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1330", "id": 146034015, "events_url": "https://api.github.com/repos/python/mypy/issues/1330/events", "updated_at": "2016-04-05T19:45:18Z", "body": "Closes #1328.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1330/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support isinstance with a tuple of types", "assignee": null, "closed_at": "2016-04-05T19:45:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1330/comments", "labels": [], "created_at": "2016-04-05T16:03:18Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1330.patch", "html_url": "https://github.com/python/mypy/pull/1330", "diff_url": "https://github.com/python/mypy/pull/1330.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1330"}, "locked": false}, {"milestone": null, "number": 1329, "html_url": "https://github.com/python/mypy/issues/1329", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1329", "id": 145968515, "events_url": "https://api.github.com/repos/python/mypy/issues/1329/events", "updated_at": "2016-04-06T06:38:23Z", "body": "```\r\nmypy --py2 mylittlepony\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/main.py\", line 54, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/main.py\", line 98, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/build.py\", line 206, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/build.py\", line 403, in process\r\n    next.process()\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/build.py\", line 907, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 406, in visit_file\r\n    self.accept(d)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/nodes.py\", line 382, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 562, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 620, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 717, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 462, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 1112, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/nodes.py\", line 623, in accept\r\n    return visitor.visit_return_stmt(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 1547, in visit_return_stmt\r\n    typ = self.accept(s.expr, return_type)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/nodes.py\", line 965, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 1946, in visit_call_expr\r\n    return self.expr_checker.visit_call_expr(e)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 142, in visit_call_expr\r\n    return self.check_call_expr_with_callee_type(callee_type, e)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 193, in check_call_expr_with_callee_type\r\n    e.arg_names, callable_node=e.callee)[0]\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 253, in check_call\r\n    arg_types = self.infer_arg_types_in_context(None, args)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 301, in infer_arg_types_in_context\r\n    arg_type = self.accept(arg, ctx)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 1423, in accept\r\n    return self.chk.accept(node, context)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/nodes.py\", line 965, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 1946, in visit_call_expr\r\n    return self.expr_checker.visit_call_expr(e)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 142, in visit_call_expr\r\n    return self.check_call_expr_with_callee_type(callee_type, e)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 193, in check_call_expr_with_callee_type\r\n    e.arg_names, callable_node=e.callee)[0]\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 262, in check_call\r\n    self.infer_arg_types_in_context(None, args)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 301, in infer_arg_types_in_context\r\n    arg_type = self.accept(arg, ctx)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 1423, in accept\r\n    return self.chk.accept(node, context)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/nodes.py\", line 1187, in accept\r\n    return visitor.visit_func_expr(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checker.py\", line 2071, in visit_func_expr\r\n    return self.expr_checker.visit_func_expr(e)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/checkexpr.py\", line 1238, in visit_func_expr\r\n    ret_type = e.expr().accept(self.chk)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/nodes.py\", line 1184, in expr\r\n    return ret.expr\r\nAttributeError: 'AssignmentStmt' object has no attribute 'expr'\r\n```\r\n*** INTERNAL ERROR ***\r\n\r\nmylittlepony/core/history.py:279: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n\r\nFile history.py:279 contains:\r\n`lambda (x, y): normalize(y) != normalize(getattr(model, x)),`\r\n\r\nEntire expr:\r\n```\r\nreturn dict(\r\n        filter(\r\n            lambda (x, y): normalize(y) != normalize(getattr(model, x)),\r\n            data.iteritems())\r\n    )\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1329/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "'AssignmentStmt' object has no attribute 'expr'", "assignee": null, "closed_at": "2016-04-06T06:38:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1329/comments", "labels": [], "created_at": "2016-04-05T12:09:15Z", "user": {"followers_url": "https://api.github.com/users/lunemec/followers", "gists_url": "https://api.github.com/users/lunemec/gists{/gist_id}", "html_url": "https://github.com/lunemec", "following_url": "https://api.github.com/users/lunemec/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1670632?v=3", "url": "https://api.github.com/users/lunemec", "organizations_url": "https://api.github.com/users/lunemec/orgs", "starred_url": "https://api.github.com/users/lunemec/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lunemec/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lunemec/subscriptions", "login": "lunemec", "repos_url": "https://api.github.com/users/lunemec/repos", "received_events_url": "https://api.github.com/users/lunemec/received_events", "id": 1670632, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1328, "html_url": "https://github.com/python/mypy/issues/1328", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1328", "id": 145862333, "events_url": "https://api.github.com/repos/python/mypy/issues/1328/events", "updated_at": "2016-04-05T19:45:10Z", "body": "For example in the following code:\r\n```\r\ndef f(x):\r\n  # type: (object) -> list\r\n  if isinstance(x, (list, set)):\r\n    return [g(i) for i in x]\r\n```\r\nmypy will complain that an `Iterable` is expected (it still only sees `x` as an `object`). This can be resolved with e.g. a manual `cast` of `x` to `Union[list, set]`, but this adds a slight overhead and isn't as clean.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1328/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "isinstance(x, (t1, t2)) doesn't change mypy's knowledge of x's type.", "assignee": null, "closed_at": "2016-04-05T19:45:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1328/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-04-05T02:08:42Z", "user": {"followers_url": "https://api.github.com/users/nathanielherman/followers", "gists_url": "https://api.github.com/users/nathanielherman/gists{/gist_id}", "html_url": "https://github.com/nathanielherman", "following_url": "https://api.github.com/users/nathanielherman/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5169954?v=3", "url": "https://api.github.com/users/nathanielherman", "organizations_url": "https://api.github.com/users/nathanielherman/orgs", "starred_url": "https://api.github.com/users/nathanielherman/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/nathanielherman/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/nathanielherman/subscriptions", "login": "nathanielherman", "repos_url": "https://api.github.com/users/nathanielherman/repos", "received_events_url": "https://api.github.com/users/nathanielherman/received_events", "id": 5169954, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1327, "html_url": "https://github.com/python/mypy/issues/1327", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1327", "id": 145822520, "events_url": "https://api.github.com/repos/python/mypy/issues/1327/events", "updated_at": "2016-04-05T23:31:25Z", "body": "We have some code to the effect of\r\n```\r\nif IS_LINUX:\r\n    from linux_class import SomeClass\r\nelif IS_MAC:\r\n    from mac_class import SomeClass\r\nelif IS_WINDOWS:\r\n    from windows_class import SomeClass\r\n\r\nassert SomeClass\r\n```\r\n\r\nBecause SomeClass doesn't have quite the same interface in all three places, I tried to add `type: ignore` to the second and third imports. This caused the following crash while running mypy:\r\n\r\n```\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/main.py\", line 51, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/main.py\", line 95, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/build.py\", line 239, in build\r\n    result = manager.process(initial_states)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/build.py\", line 456, in process\r\n    next.process()\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/build.py\", line 964, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/checker.py\", line 416, in visit_file\r\n    self.accept(d)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/checker.py\", line 457, in accept\r\n    typ = node.accept(self)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/nodes.py\", line 632, in accept\r\n    return visitor.visit_assert_stmt(self)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/checker.py\", line 1710, in visit_assert_stmt\r\n    self.accept(s.expr)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/checker.py\", line 457, in accept\r\n    typ = node.accept(self)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/nodes.py\", line 902, in accept\r\n    return visitor.visit_name_expr(self)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/checker.py\", line 1961, in visit_name_expr\r\n    return self.expr_checker.visit_name_expr(e)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/checkexpr.py\", line 75, in visit_name_expr\r\n    result = self.analyze_ref_expr(e)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/checkexpr.py\", line 103, in analyze_ref_expr\r\n    result = type_object_type(node, self.named_type)\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/checkmember.py\", line 320, in type_object_type\r\n    init_method = info.get_method('__init__')\r\n  File \"/code/client-all/client/.mypy_lint/mypy/mypy/nodes.py\", line 1593, in get_method\r\n    for cls in self.mro:\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\nI've spent some time trying to get a small example of how to repro this, but haven't been able to yet.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1327/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash on type: ignore in import", "assignee": null, "closed_at": "2016-04-05T23:31:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1327/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-04T22:32:23Z", "user": {"followers_url": "https://api.github.com/users/ahaven/followers", "gists_url": "https://api.github.com/users/ahaven/gists{/gist_id}", "html_url": "https://github.com/ahaven", "following_url": "https://api.github.com/users/ahaven/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1711285?v=3", "url": "https://api.github.com/users/ahaven", "organizations_url": "https://api.github.com/users/ahaven/orgs", "starred_url": "https://api.github.com/users/ahaven/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ahaven/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ahaven/subscriptions", "login": "ahaven", "repos_url": "https://api.github.com/users/ahaven/repos", "received_events_url": "https://api.github.com/users/ahaven/received_events", "id": 1711285, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1326, "html_url": "https://github.com/python/mypy/pull/1326", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1326", "id": 145795244, "events_url": "https://api.github.com/repos/python/mypy/issues/1326/events", "updated_at": "2016-04-04T20:47:37Z", "body": "This idea appeared in a discussion at https://github.com/python/typing/issues/79", "labels_url": "https://api.github.com/repos/python/mypy/issues/1326/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Clarified error message for runtime generics", "assignee": null, "closed_at": "2016-04-04T20:47:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1326/comments", "labels": [], "created_at": "2016-04-04T20:30:34Z", "user": {"followers_url": "https://api.github.com/users/ilevkivskyi/followers", "gists_url": "https://api.github.com/users/ilevkivskyi/gists{/gist_id}", "html_url": "https://github.com/ilevkivskyi", "following_url": "https://api.github.com/users/ilevkivskyi/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/12005495?v=3", "url": "https://api.github.com/users/ilevkivskyi", "organizations_url": "https://api.github.com/users/ilevkivskyi/orgs", "starred_url": "https://api.github.com/users/ilevkivskyi/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ilevkivskyi/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ilevkivskyi/subscriptions", "login": "ilevkivskyi", "repos_url": "https://api.github.com/users/ilevkivskyi/repos", "received_events_url": "https://api.github.com/users/ilevkivskyi/received_events", "id": 12005495, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1326.patch", "html_url": "https://github.com/python/mypy/pull/1326", "diff_url": "https://github.com/python/mypy/pull/1326.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1326"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1325, "html_url": "https://github.com/python/mypy/issues/1325", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1325", "id": 145770548, "events_url": "https://api.github.com/repos/python/mypy/issues/1325/events", "updated_at": "2016-04-07T18:36:14Z", "body": "From https://github.com/python/typeshed/issues/132#issuecomment-205421042 (@gvanrossum):\r\n\r\n>  I think this may be undocumented but it's not meant to be varying by Python implementation -- the rule is that classes defined in extension modules don't have `__dict__` but anything defined using a class statement has a `__dict__` unless it defines `__slots__` and all its base classes also don't have a `__dict__`.\r\n>\r\n> Hm, that actually suggests a way to mark classes that doesn't require anything new in typing.py: we could add `__slots__` to all classes that are supposed to be builtin (e.g. object, str, int) and mypy could implement a new rule that implicitly adds `__dict__`: `Dict[str, Any]` to any class definition that doesn't have `__slots__`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1325/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Detect if an instance has __dict__ based on existence __slots__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1325/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-04-04T18:43:24Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1324, "html_url": "https://github.com/python/mypy/issues/1324", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1324", "id": 145642249, "events_url": "https://api.github.com/repos/python/mypy/issues/1324/events", "updated_at": "2016-04-07T19:23:46Z", "body": "Mypy currently treats an unannotated function within an annotated function as being dynamically typed, similar to all unannotated functions. However, this can be unexpected, and it's easy to miss nested functions when annotating code because they aren't visually prominent. Perhaps mypy should enforce that nested function are annotated within an annotated function?\r\n\r\n Once we have strict mode, it could be used to enforce this as well, but it might be useful have a separate check for this.\r\n\r\n(This was suggested by Alex Allain.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1324/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Require annotations for all nested functions within an annotated function", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1324/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-04-04T10:19:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1323, "html_url": "https://github.com/python/mypy/issues/1323", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1323", "id": 145641209, "events_url": "https://api.github.com/repos/python/mypy/issues/1323/events", "updated_at": "2016-04-07T18:36:39Z", "body": "Mypy reports a bogus error for the following program (reported by Alex Allain):\r\n\r\n```\r\nfrom typing import TypeVar\r\n\r\nT = TypeVar('T', int)\r\ndef outer(a):\r\n    # type: (T) -> None\r\n    def inner(b):\r\n        # type: (T) -> None\r\n        pass\r\n\r\n    inner(a)  # Argument 1 to \"inner\" has incompatible type \"int\"; expected \"T\"\r\n```\r\n\r\nI suspect that mypy doesn't substitute T in the nested function when type checking the outer function. Generalizing substitution to nested functions might be enough to fix this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1323/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type variable not substituted in a nested function within a generic function", "assignee": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1323/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-04T10:14:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1322, "html_url": "https://github.com/python/mypy/issues/1322", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1322", "id": 145145639, "events_url": "https://api.github.com/repos/python/mypy/issues/1322/events", "updated_at": "2016-04-07T18:31:40Z", "body": "This was reported by Alex Allain.\r\n\r\nMypy doesn't give an error for this program even though it should:\r\n\r\n```\r\nfrom typing import TypeVar, overload, List\r\n\r\nT = TypeVar('T')\r\n\r\n@overload\r\ndef f(x: T) -> List[T]: ...\r\n@overload\r\ndef f(x: T, y: int) -> int: pass\r\n\r\ndef not_checked(text):\r\n    # type: (str) -> str\r\n    return f(*[])  # no error reported!\r\n```\r\n\r\nMypy infers type `List[None]` for `[]` (which is arguably okay, though a little confusing), and this results in all overload variants matching, which is again okay. Now since multiple overload variants match, mypy incorrectly gives up and infers `Any` as the return type of `f(*[])`, even though in this case we could infer a more precise type: a union of all return types of all overload variants, i.e. `Union[List[None], int]`. Alternatively, mypy could give up and say that the return type is ambiguous, but it's less clear when this would be an okay thing to do (if ever).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1322/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Any incorrectly inferred for a call to an overloaded function", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1322/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-04-01T10:35:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1321, "html_url": "https://github.com/python/mypy/issues/1321", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1321", "id": 145139177, "events_url": "https://api.github.com/repos/python/mypy/issues/1321/events", "updated_at": "2016-04-04T13:31:16Z", "body": "[Maybe my google-fu or my manual-reading skills are poor, I apology beforehand if that's the case]\r\n\r\nI read some things about [instance and class attributes](http://mypy.readthedocs.org/en/latest/class_basics.html#instance-and-class-attributes). However, the PEP0484 does not say anything about class attributes (anything I could find).\r\n\r\nI am currently using Python 2, and I would be interested in using \"something\" for explicit types for class attributes, as in the Mypy documentation, but I am also eager to follow the PEP0484 or, at least, be somewhat compatible with the `typing` module for Python 3. As fas as I know there is no such thing as \"annotations for class attribute assignment\". And I am not sure of internals, so maybe it is out of the question for technical reasons. Or maybe there is plan to add the concept and I can start working on that.\r\n\r\nSome thoughts about that?\r\n\r\nEdit: Sorry, forgot my question related to class attributes and the Mypy \"instance and class attributes\" approach: is there something like the `typing.get_type_hints` but for the class attributes? I could not find anything similar on the frontend.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1321/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "About class attributes, its type and the stance about them", "assignee": null, "closed_at": "2016-04-04T13:31:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1321/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2016-04-01T09:59:39Z", "user": {"followers_url": "https://api.github.com/users/alexbarcelo/followers", "gists_url": "https://api.github.com/users/alexbarcelo/gists{/gist_id}", "html_url": "https://github.com/alexbarcelo", "following_url": "https://api.github.com/users/alexbarcelo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/665750?v=3", "url": "https://api.github.com/users/alexbarcelo", "organizations_url": "https://api.github.com/users/alexbarcelo/orgs", "starred_url": "https://api.github.com/users/alexbarcelo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/alexbarcelo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/alexbarcelo/subscriptions", "login": "alexbarcelo", "repos_url": "https://api.github.com/users/alexbarcelo/repos", "received_events_url": "https://api.github.com/users/alexbarcelo/received_events", "id": 665750, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1320, "html_url": "https://github.com/python/mypy/issues/1320", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1320", "id": 144534401, "events_url": "https://api.github.com/repos/python/mypy/issues/1320/events", "updated_at": "2016-03-31T02:45:54Z", "body": "The old moinmoin wiki has a pretty bad spam problem and moinmoin doesn't seem very actively maintained. I'm going to migrate the wiki to the github wiki.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1320/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move the wiki to github wiki", "assignee": null, "closed_at": "2016-03-30T12:01:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1320/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-30T10:12:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1319, "html_url": "https://github.com/python/mypy/issues/1319", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1319", "id": 144023076, "events_url": "https://api.github.com/repos/python/mypy/issues/1319/events", "updated_at": "2016-04-08T00:13:35Z", "body": "with `mypy-lang==0.3.1`. I think this is in an imported module not my code as `unset MYPYPATH` stops the exception.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/samuel/code/harrier/env/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/main.py\", line 54, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/main.py\", line 98, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/build.py\", line 206, in build\r\n    result = manager.process(initial_states)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/build.py\", line 403, in process\r\n    next.process()\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/build.py\", line 894, in process\r\n    self.semantic_analyzer_pass3().visit_file(self.tree, self.tree.path)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/semanal.py\", line 2341, in visit_file\r\n    file_node.accept(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/nodes.py\", line 171, in accept\r\n    return visitor.visit_mypy_file(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/traverser.py\", line 34, in visit_mypy_file\r\n    d.accept(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/nodes.py\", line 673, in accept\r\n    return visitor.visit_if_stmt(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/traverser.py\", line 110, in visit_if_stmt\r\n    o.else_body.accept(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/traverser.py\", line 38, in visit_block\r\n    s.accept(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/nodes.py\", line 673, in accept\r\n    return visitor.visit_if_stmt(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/traverser.py\", line 110, in visit_if_stmt\r\n    o.else_body.accept(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/traverser.py\", line 38, in visit_block\r\n    s.accept(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/nodes.py\", line 485, in accept\r\n    return visitor.visit_class_def(self)\r\n  File \"/home/samuel/code/harrier/env/lib/python3.5/site-packages/mypy/semanal.py\", line 2350, in visit_class_def\r\n    for type in tdef.info.bases:\r\nAttributeError: 'NoneType' object has no attribute 'bases'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1319/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "AttributeError: 'NoneType' object has no attribute 'bases'", "assignee": null, "closed_at": "2016-04-08T00:13:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1319/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-28T16:46:43Z", "user": {"followers_url": "https://api.github.com/users/samuelcolvin/followers", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "html_url": "https://github.com/samuelcolvin", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4039449?v=3", "url": "https://api.github.com/users/samuelcolvin", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "login": "samuelcolvin", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "id": 4039449, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1318, "html_url": "https://github.com/python/mypy/issues/1318", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1318", "id": 143741567, "events_url": "https://api.github.com/repos/python/mypy/issues/1318/events", "updated_at": "2016-03-26T19:33:24Z", "body": "Mypy just says `Invalid function type` which isn't helpful.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1318/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unhelpful error message when the first argument to Callable is not a list", "assignee": null, "closed_at": "2016-03-26T19:33:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1318/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-26T19:29:03Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1317, "html_url": "https://github.com/python/mypy/issues/1317", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1317", "id": 143381880, "events_url": "https://api.github.com/repos/python/mypy/issues/1317/events", "updated_at": "2016-04-08T20:16:04Z", "body": "The following:\r\n```python\r\nfrom typing import *\r\nfrom contextlib import *\r\n\r\nT = TypeVar(\"T\")\r\n\r\n@contextmanager\r\ndef foo(x):\r\n  # type: (T) -> Iterator[T]\r\n  yield x\r\n\r\ny = 1\r\nwith foo(2) as f:\r\n  y = f\r\n```\r\n\r\ngives this error:\r\n```\r\nerror: Incompatible types in assignment (expression has type \"T\", variable has type \"int\")\r\n```\r\n\r\nIt should recognize the input as an `int` which would lead to the output being an `int` as well, not a `T`. This is probably due to the way the `contextmanager` stub is defined in typeshed.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1317/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "TypeVar fails to resolve in a context manager", "assignee": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1317/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-24T22:53:29Z", "user": {"followers_url": "https://api.github.com/users/alexsydell/followers", "gists_url": "https://api.github.com/users/alexsydell/gists{/gist_id}", "html_url": "https://github.com/alexsydell", "following_url": "https://api.github.com/users/alexsydell/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3269831?v=3", "url": "https://api.github.com/users/alexsydell", "organizations_url": "https://api.github.com/users/alexsydell/orgs", "starred_url": "https://api.github.com/users/alexsydell/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/alexsydell/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/alexsydell/subscriptions", "login": "alexsydell", "repos_url": "https://api.github.com/users/alexsydell/repos", "received_events_url": "https://api.github.com/users/alexsydell/received_events", "id": 3269831, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1316, "html_url": "https://github.com/python/mypy/issues/1316", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1316", "id": 143376569, "events_url": "https://api.github.com/repos/python/mypy/issues/1316/events", "updated_at": "2016-04-04T20:45:45Z", "body": "This sample code:\r\n```python\r\nfrom typing import *\r\nfrom contextlib import *\r\n\r\nclass Test(object):\r\n    @contextmanager\r\n    def f(self, x):\r\n        # type: (int) -> Iterator[int]\r\n        yield x + 1\r\n\r\n    def g(self):\r\n        # type: () -> None\r\n        with self.f(1) as y:\r\n            print y\r\n\r\nTest().g()\r\n```\r\n\r\ngives the following error:\r\n```\r\nnote: In member \"g\" of class \"Test\":\r\n12: error: Too many arguments for \"f\" of \"Test\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1316/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Too many arguments error when using instance method as context manager", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": "2016-04-04T20:45:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1316/comments", "labels": [], "created_at": "2016-03-24T22:24:53Z", "user": {"followers_url": "https://api.github.com/users/alexsydell/followers", "gists_url": "https://api.github.com/users/alexsydell/gists{/gist_id}", "html_url": "https://github.com/alexsydell", "following_url": "https://api.github.com/users/alexsydell/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3269831?v=3", "url": "https://api.github.com/users/alexsydell", "organizations_url": "https://api.github.com/users/alexsydell/orgs", "starred_url": "https://api.github.com/users/alexsydell/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/alexsydell/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/alexsydell/subscriptions", "login": "alexsydell", "repos_url": "https://api.github.com/users/alexsydell/repos", "received_events_url": "https://api.github.com/users/alexsydell/received_events", "id": 3269831, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1314, "html_url": "https://github.com/python/mypy/issues/1314", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1314", "id": 143066560, "events_url": "https://api.github.com/repos/python/mypy/issues/1314/events", "updated_at": "2016-04-07T18:30:21Z", "body": "When turning on type checking the 'cls' argument of class methods (https://github.com/python/mypy/pull/1313) I came across an interesting special case: a class method that constructs an instance of the class and then calls an abstract method on the instance. E.g.\r\n```python\r\nclass C(metaclass=ABCMeta):\r\n    @classmethod\r\n    def foo(cls) -> None: cls().bar()\r\n    @abstractmethod\r\n    def bar(self): raise NotImplementedError\r\n```\r\nClearly in this case calling\r\n```python\r\nC.foo()  # not cool\r\n```\r\nwill be a runtime error since the `cls()` call is not allowed.\r\n\r\nBut just as clearly the intention of the author is that there's a concrete subclass that implements bar(), and then the call works fine:\r\n```python\r\nclass D(C):\r\n    def bar(self): pass\r\nD.foo()  # this is fine\r\n```\r\nI discussed this briefly with @ddfisher and we don't think you can just disallow calling all class methods on abstract classes (a nice example is Type.deserialize() here: https://github.com/python/mypy/pull/1292/files#diff-abd352ca9f518956b2d76e1cfc9ad35bR121\r\n\r\nMaybe we can internally recognize class methods that construct instances? This would have to be a transitive closure of class methods. But then how would you say in a stub file that a given class method can only be called on a concrete subclass? That's where we left it for now. I don't think this has high priority.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1314/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Class method calling abstract method after constructing an instance", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1314/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-23T20:08:32Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1313, "html_url": "https://github.com/python/mypy/pull/1313", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1313", "id": 142853879, "events_url": "https://api.github.com/repos/python/mypy/issues/1313/events", "updated_at": "2016-04-04T17:09:06Z", "body": "With Jukka's help!", "labels_url": "https://api.github.com/repos/python/mypy/issues/1313/labels{/name}", "comments": 12, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give classmethod first arg a reasonable type. Fixes #292", "assignee": null, "closed_at": "2016-04-04T17:09:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1313/comments", "labels": [], "created_at": "2016-03-23T04:01:26Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1313.patch", "html_url": "https://github.com/python/mypy/pull/1313", "diff_url": "https://github.com/python/mypy/pull/1313.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1313"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1312, "html_url": "https://github.com/python/mypy/issues/1312", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1312", "id": 142718003, "events_url": "https://api.github.com/repos/python/mypy/issues/1312/events", "updated_at": "2016-04-07T18:38:43Z", "body": "test.py:\r\n```filter(lambda (x): x > 0, [0,1])```\r\n\r\n```\r\n...$ mypy --py2 test.py \r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 54, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 98, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 206, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 403, in process\r\n    next.process()\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 907, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 406, in visit_file\r\n    self.accept(d)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/nodes.py\", line 540, in accept\r\n    return visitor.visit_expression_stmt(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 1534, in visit_expression_stmt\r\n    self.accept(s.expr)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/nodes.py\", line 965, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 1946, in visit_call_expr\r\n    return self.expr_checker.visit_call_expr(e)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checkexpr.py\", line 142, in visit_call_expr\r\n    return self.check_call_expr_with_callee_type(callee_type, e)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checkexpr.py\", line 193, in check_call_expr_with_callee_type\r\n    e.arg_names, callable_node=e.callee)[0]\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checkexpr.py\", line 233, in check_call\r\n    callee, args, arg_kinds, formal_to_actual, context)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checkexpr.py\", line 399, in infer_function_type_arguments\r\n    callee_type, args, arg_kinds, formal_to_actual)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checkexpr.py\", line 328, in infer_arg_types_in_context2\r\n    res[ai] = self.accept(args[ai], callee.arg_types[i])\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checkexpr.py\", line 1423, in accept\r\n    return self.chk.accept(node, context)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 447, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/nodes.py\", line 1187, in accept\r\n    return visitor.visit_func_expr(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 2071, in visit_func_expr\r\n    return self.expr_checker.visit_func_expr(e)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checkexpr.py\", line 1249, in visit_func_expr\r\n    self.chk.check_func_item(e, type_override=inferred_type)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 620, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 717, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 463, in accept_in_frame\r\n    changed, _ = self.binder.pop_frame(True, True)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 209, in pop_frame\r\n    changed = self.update_from_options(options)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 161, in update_from_options\r\n    if not is_same_type(type, current_value):\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/sametypes.py\", line 27, in is_same_type\r\n    return left.accept(SameTypeVisitor(right))\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/types.py\", line 157, in accept\r\n    return visitor.visit_erased_type(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/sametypes.py\", line 74, in visit_erased_type\r\n    raise RuntimeError()\r\nRuntimeError: \r\n\r\n*** INTERNAL ERROR ***\r\n\r\ntest.py:1: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1312/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "internal error with filter", "assignee": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1312/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-22T17:21:06Z", "user": {"followers_url": "https://api.github.com/users/michal-au/followers", "gists_url": "https://api.github.com/users/michal-au/gists{/gist_id}", "html_url": "https://github.com/michal-au", "following_url": "https://api.github.com/users/michal-au/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5759349?v=3", "url": "https://api.github.com/users/michal-au", "organizations_url": "https://api.github.com/users/michal-au/orgs", "starred_url": "https://api.github.com/users/michal-au/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/michal-au/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/michal-au/subscriptions", "login": "michal-au", "repos_url": "https://api.github.com/users/michal-au/repos", "received_events_url": "https://api.github.com/users/michal-au/received_events", "id": 5759349, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1311, "html_url": "https://github.com/python/mypy/pull/1311", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1311", "id": 142713555, "events_url": "https://api.github.com/repos/python/mypy/issues/1311/events", "updated_at": "2016-03-23T17:31:36Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1311/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "update", "assignee": null, "closed_at": "2016-03-23T17:31:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1311/comments", "labels": [], "created_at": "2016-03-22T17:02:51Z", "user": {"followers_url": "https://api.github.com/users/Naruto0/followers", "gists_url": "https://api.github.com/users/Naruto0/gists{/gist_id}", "html_url": "https://github.com/Naruto0", "following_url": "https://api.github.com/users/Naruto0/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/12645720?v=3", "url": "https://api.github.com/users/Naruto0", "organizations_url": "https://api.github.com/users/Naruto0/orgs", "starred_url": "https://api.github.com/users/Naruto0/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Naruto0/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Naruto0/subscriptions", "login": "Naruto0", "repos_url": "https://api.github.com/users/Naruto0/repos", "received_events_url": "https://api.github.com/users/Naruto0/received_events", "id": 12645720, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1311.patch", "html_url": "https://github.com/python/mypy/pull/1311", "diff_url": "https://github.com/python/mypy/pull/1311.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1311"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 2, "number": 1, "html_url": "https://github.com/python/mypy/milestones/Questions", "state": "open", "id": 1616623, "url": "https://api.github.com/repos/python/mypy/milestones/1", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/1/labels", "description": "", "closed_at": null, "title": "Questions", "updated_at": "2016-04-07T18:39:32Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:12:38Z"}, "number": 1310, "html_url": "https://github.com/python/mypy/issues/1310", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1310", "id": 142582332, "events_url": "https://api.github.com/repos/python/mypy/issues/1310/events", "updated_at": "2016-04-07T18:39:32Z", "body": "I'm wondering how to add type information for a Django project. For example, consider a typical Django model:\r\n\r\n```\r\nclass Foo(models.Model):\r\n    field1 = models.TextField(choices=(('a', 'Choice A'), ('b', 'Choice B')))\r\n    parent = models.ForeignKey('self', null=True, blank=True, related_name='children')\r\n```\r\nThe metaprogramming in Django will generate the following attributes and methods:\r\n  1. Foo.objects, a QuerySet for Foo objects. For example Foo.objects.get(pk=1) will return a Foo object, and Foo.objects.filter(pk__gte=1) is an iterable of Foo objects.\r\n  2. There will be an autogenerated method get_field1_display() for Foo. It returns the human readable value for foo field1's value (that is, it returns an str).\r\n  3. foo.parent should be a Foo instance, foo.children should be a QuerySet of Foo instances.\r\n\r\nThe request itself for this issue is to document a way to add type information for meta-programming generated attributes and methods. Optimally this would be done as part of the meta-programming itself.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1310/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "How to typecheck methods and attributes generated by metaprogramming", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1310/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-03-22T08:36:04Z", "user": {"followers_url": "https://api.github.com/users/akaariai/followers", "gists_url": "https://api.github.com/users/akaariai/gists{/gist_id}", "html_url": "https://github.com/akaariai", "following_url": "https://api.github.com/users/akaariai/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/125285?v=3", "url": "https://api.github.com/users/akaariai", "organizations_url": "https://api.github.com/users/akaariai/orgs", "starred_url": "https://api.github.com/users/akaariai/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/akaariai/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/akaariai/subscriptions", "login": "akaariai", "repos_url": "https://api.github.com/users/akaariai/repos", "received_events_url": "https://api.github.com/users/akaariai/received_events", "id": 125285, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1309, "html_url": "https://github.com/python/mypy/pull/1309", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1309", "id": 142551739, "events_url": "https://api.github.com/repos/python/mypy/issues/1309/events", "updated_at": "2016-03-26T12:41:21Z", "body": "(This branch isn't yet ready for merge. I wanted to get this out for comment before going home for the night, but I should clean up the sequence of commits and the commit messages, and there's the one small commit with TEMP in the title that I'll take out. Other than the two lines in that commit, the code is exactly as I propose to merge it.)\r\n\r\nI was frustrated at how long it takes to run our tests, so I spent a couple of hours making them run faster.\r\n\r\nThe headline gain from this branch is that on my desktop (with 8 virtual cores), the total time for `./runtests.py` goes from 2m7s down to 1m11s.\r\n\r\nAt this point the limiting factor is actually a single \"task\", the test file `mypy/test/testpythoneval.py` -- on my machine the whole thing takes precisely as long as that task, and everything else is finished well before it. So on a machine with fewer cores, I expect the relative speedup from this branch to be somewhat bigger still.\r\n\r\nThe biggest win in this branch is type-checking things just once, instead of again and again from a bunch of entry points. In particular, rather than point `mypy` at each of the files in the implementation in turn, and end up type-checking nearly the whole thing each time, we type-check the whole thing all at once. I used the line-count reporter to confirm that we end up type-checking exactly the same set of files in this part.\r\n\r\nAlong the way, one commit extends the `-m` option to `mypy` to be repeatable for type-checking multiple modules. This is pretty easy now that we use a real CLI-parsing library (thanks David!)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1309/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Speed up tests", "assignee": null, "closed_at": "2016-03-26T01:52:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1309/comments", "labels": [], "created_at": "2016-03-22T05:25:46Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1309.patch", "html_url": "https://github.com/python/mypy/pull/1309", "diff_url": "https://github.com/python/mypy/pull/1309.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1309"}, "locked": false}, {"milestone": null, "number": 1308, "html_url": "https://github.com/python/mypy/issues/1308", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1308", "id": 142396367, "events_url": "https://api.github.com/repos/python/mypy/issues/1308/events", "updated_at": "2016-03-22T14:13:25Z", "body": "Version: mypy 0.3.1\r\n\r\nProgram:\r\n\r\n```\r\nfrom functools import reduce\r\n\r\nfrom typing import List\r\n\r\ndef func(x, y):\r\n    # type: (int, int) -> int\r\n    return x + y\r\n\r\ndef junk(li_of_int):\r\n    # type: (List[int]) -> None\r\n\r\n    res = reduce(func, li_of_int, 0)\r\n    print(res)\r\n\r\nif __name__ == \"__main__\":\r\n    junk([1, 2])\r\n```\r\n\r\nThe type of ```func()``` is obviously correct.\r\n\r\nThe type of ```junk()``` is asserted to be List[int].\r\n\r\nThe reported errors are:\r\n\r\n```\r\n[mulhern@dhcp-25-209 justbases]$ python3 -m mypy junk.py\r\njunk.py: note: In function \"junk\":\r\njunk.py:12: error: Argument 1 to \"reduce\" has incompatible type Callable[[int, int], int]; expected Callable[[int], int]\r\njunk.py:12: error: Argument 2 to \"reduce\" has incompatible type List[int]; expected Iterator[int]\r\n```\r\nI think they are both wrong. The first argument to reduce() _must_ be a function that takes two arguments. reduce() is perfectly compatible with List, it should not be required to make it an Iterable. I get the idea that List and Iterable need a common supertype, since probably neither is a subtype of the other.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1308/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Problems type-checking reduce() in Python 2", "assignee": null, "closed_at": "2016-03-22T14:13:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1308/comments", "labels": [], "created_at": "2016-03-21T16:10:18Z", "user": {"followers_url": "https://api.github.com/users/mulkieran/followers", "gists_url": "https://api.github.com/users/mulkieran/gists{/gist_id}", "html_url": "https://github.com/mulkieran", "following_url": "https://api.github.com/users/mulkieran/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1218366?v=3", "url": "https://api.github.com/users/mulkieran", "organizations_url": "https://api.github.com/users/mulkieran/orgs", "starred_url": "https://api.github.com/users/mulkieran/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mulkieran/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mulkieran/subscriptions", "login": "mulkieran", "repos_url": "https://api.github.com/users/mulkieran/repos", "received_events_url": "https://api.github.com/users/mulkieran/received_events", "id": 1218366, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1307, "html_url": "https://github.com/python/mypy/issues/1307", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1307", "id": 142181097, "events_url": "https://api.github.com/repos/python/mypy/issues/1307/events", "updated_at": "2016-04-07T18:49:26Z", "body": "### comments\r\n\r\nThere's no error if the line `Element = Union['Node', 'Tree']` follows the line `Node = NamedTuple('Node', [('ref', int)])`.\r\n\r\nLatest version of mypy is installed from github.\r\n\r\n    > mypy --version\r\n    mypy 0.3.1\r\n\r\n### code\r\n\r\n    from typing import List, NamedTuple, Union\r\n\r\n    Element = Union['Node', 'Tree']\r\n    Node = NamedTuple('Node', [('ref', int)])\r\n\r\n\r\n    class Tree(object):\r\n        def __init__(self, data: List[Element]) -> None:\r\n            self.content = data\r\n\r\n        def swap(self, i: int, j: int) -> None:\r\n            self.content[i], self.content[j] = self.content[j], self.content[i]\r\n\r\n### result\r\n\r\n    > mypy q.py\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/bin/mypy\", line 6, in <module>\r\n        main(__file__)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/main.py\", line 51, in main\r\n        type_check_only(sources, bin_dir, options)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/main.py\", line 95, in type_check    _only\r\n        python_path=options.python_path)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 211, in build\r\n        result = manager.process(initial_states)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 426, in process\r\n        next.process()\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 930, in process\r\n        self.type_checker().visit_file(self.tree, self.tree.path)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 416, in visit_    file\r\n        self.accept(d)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 457, in accept\r\n        typ = node.accept(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 484, in accept\r\n        return visitor.visit_class_def(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1038, in visit    _class_def\r\n        self.accept(defn.defs)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 457, in accept\r\n        typ = node.accept(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 525, in accept\r\n        return visitor.visit_block(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1133, in visit    _block\r\n        self.accept(s)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 457, in accept\r\n        typ = node.accept(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 381, in accept\r\n        return visitor.visit_func_def(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 570, in visit_    func_def\r\n        self.check_func_item(defn, name=defn.name())\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 628, in check_    func_item\r\n        self.check_func_def(defn, typ, name)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 738, in check_    func_def\r\n        self.accept_in_frame(item.body)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 472, in accept    _in_frame\r\n        answer = self.accept(node, type_context)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 457, in accept\r\n        typ = node.accept(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 525, in accept\r\n        return visitor.visit_block(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1133, in visit    _block\r\n        self.accept(s)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 457, in accept\r\n        typ = node.accept(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 563, in accept\r\n        return visitor.visit_assignment_stmt(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1142, in visit    _assignment_stmt\r\n        self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1157, in check    _assignment\r\n        infer_lvalue_type)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1224, in check    _assignment_to_multiple_lvalues\r\n        self.check_assignment(lv, rv, infer_lvalue_type)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1187, in check    _assignment\r\n        self.check_indexed_assignment(index_lvalue, rvalue, rvalue)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1526, in check    _indexed_assignment\r\n        context)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 261, in chec    k_call\r\n        messages=arg_messages)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 653, in over    load_call_target\r\n        typ)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 729, in eras    ed_signature_similarity\r\n        None, check_arg=check_arg)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 609, in chec    k_argument_types\r\n        actual + 1, i + 1, callee, context, messages)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 721, in chec    k_arg\r\n        overload_arg_similarity(caller_type, callee_type))\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 1632, in ove    rload_arg_similarity\r\n        for item in actual.items)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 1632, in <ge    nexpr>\r\n        for item in actual.items)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 1635, in ove    rload_arg_similarity\r\n        for item in formal.items)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 1635, in <ge    nexpr>\r\n        for item in formal.items)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/checkexpr.py\", line 1655, in ove    rload_arg_similarity\r\n        return 2 if is_same_type(erasetype.erase_type(actual), erasetype.erase_type(form    al)) else 0\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/erasetype.py\", line 21, in erase    _type\r\n        return typ.accept(EraseTypeVisitor())\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/types.py\", line 74, in accept\r\n        return visitor.visit_unbound_type(self)\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/erasetype.py\", line 26, in visit    _unbound_type\r\n        assert False, 'Not supported'\r\n    AssertionError: Not supported\r\n    \r\n    *** INTERNAL ERROR ***\r\n    \r\n    q.py:12: error: Internal error -- please report a bug at https://github.com/JukkaL/m    ypy/issues\r\n    \r\n    NOTE: you can use \"mypy --pdb ...\" to drop into the debugger when this happens.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1307/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy crashes at some forward references", "assignee": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1307/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-20T16:57:17Z", "user": {"followers_url": "https://api.github.com/users/arkoort/followers", "gists_url": "https://api.github.com/users/arkoort/gists{/gist_id}", "html_url": "https://github.com/arkoort", "following_url": "https://api.github.com/users/arkoort/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3337978?v=3", "url": "https://api.github.com/users/arkoort", "organizations_url": "https://api.github.com/users/arkoort/orgs", "starred_url": "https://api.github.com/users/arkoort/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/arkoort/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/arkoort/subscriptions", "login": "arkoort", "repos_url": "https://api.github.com/users/arkoort/repos", "received_events_url": "https://api.github.com/users/arkoort/received_events", "id": 3337978, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1306, "html_url": "https://github.com/python/mypy/pull/1306", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1306", "id": 141991298, "events_url": "https://api.github.com/repos/python/mypy/issues/1306/events", "updated_at": "2016-03-22T00:48:30Z", "body": "This report is aimed at measuring the total adoption of type annotations in the codebase being type-checked.  The bottom-line output is the \"number of lines of annotated code, as physical LOC.\"\r\n\r\nMore details in individual commit messages.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1306/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add a line-count report", "assignee": null, "closed_at": "2016-03-22T00:48:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1306/comments", "labels": [], "created_at": "2016-03-18T22:18:31Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1306.patch", "html_url": "https://github.com/python/mypy/pull/1306", "diff_url": "https://github.com/python/mypy/pull/1306.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1306"}, "locked": false}, {"milestone": null, "number": 1305, "html_url": "https://github.com/python/mypy/pull/1305", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1305", "id": 141973812, "events_url": "https://api.github.com/repos/python/mypy/issues/1305/events", "updated_at": "2016-03-18T21:12:52Z", "body": "This lets users work around #1304 for now by repeating the full concretization of parent types in child subclasses and adding a # type: ignore.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1305/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow semantic analyzer errors to be suppressed with # type: ignore", "assignee": null, "closed_at": "2016-03-18T21:12:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1305/comments", "labels": [], "created_at": "2016-03-18T20:47:26Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1305.patch", "html_url": "https://github.com/python/mypy/pull/1305", "diff_url": "https://github.com/python/mypy/pull/1305.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1305"}, "locked": false}, {"milestone": null, "number": 1304, "html_url": "https://github.com/python/mypy/issues/1304", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1304", "id": 141949404, "events_url": "https://api.github.com/repos/python/mypy/issues/1304/events", "updated_at": "2016-04-07T18:46:23Z", "body": "Partially filling in generic parameters in a subclass results in a _runtime_ type error, even though the PEP says it should be allowed.  For example:\r\n```python\r\nT = TypeVar('T')\r\nU = TypeVar('U')\r\n\r\nclass Base(Generic[T, U]):\r\n  pass\r\n\r\nclass PartialBase(Generic[U], Base[int, U]):\r\n  pass\r\n\r\nclass Child(PartialBase[str]):\r\n  pass\r\n```\r\nresults in\r\n```\r\nTypeError: Cannot change parameter count from 2 to 1\r\n```\r\n\r\nThis probably requires a change to the standard library `typing.py`, but I'm making the issue here so we remember to follow up. See https://github.com/python/typing/issues/115 for earlier discussion.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1304/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Find consensus around partially concretizing classes with multiple generic parameters", "assignee": null, "closed_at": "2016-04-07T18:46:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1304/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2016-03-18T18:51:56Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1303, "html_url": "https://github.com/python/mypy/issues/1303", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1303", "id": 141935483, "events_url": "https://api.github.com/repos/python/mypy/issues/1303/events", "updated_at": "2016-04-07T09:15:56Z", "body": "If we have two files:\r\ntest1.py:\r\n```python\r\nfrom typing import Callable, Any\r\nimport test2\r\n\r\ndef deco(f: Callable[[int, int], Any]) -> Callable[[int, int], Any]:\r\n    pass\r\n\r\n@deco\r\ndef add(self, other: int) -> int:\r\n    pass\r\n```\r\n\r\ntest2.py:\r\n```python\r\nimport test1\r\ntest1.add(1, 1)\r\n```\r\n\r\nRunning `mypy test1.py test2.py` results in:\r\n`test2.py:2: error: Cannot determine type of 'add'`\r\n\r\nRemoving the `@deco` decorator from add or reversing the order of the files on the command line makes the error go away.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1303/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Decorators are sensitive to import cycle ordering", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1303/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-18T17:52:58Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1302, "html_url": "https://github.com/python/mypy/pull/1302", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1302", "id": 141920881, "events_url": "https://api.github.com/repos/python/mypy/issues/1302/events", "updated_at": "2016-03-18T16:58:31Z", "body": " Fixes #1301.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1302/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "A decorator returning Callable[..., T] should work on a method.", "assignee": null, "closed_at": "2016-03-18T16:58:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1302/comments", "labels": [], "created_at": "2016-03-18T16:48:26Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1302.patch", "html_url": "https://github.com/python/mypy/pull/1302", "diff_url": "https://github.com/python/mypy/pull/1302.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1302"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1301, "html_url": "https://github.com/python/mypy/issues/1301", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1301", "id": 141906024, "events_url": "https://api.github.com/repos/python/mypy/issues/1301/events", "updated_at": "2016-03-18T16:58:31Z", "body": "Repro without contextlib:\r\n```\r\nfrom typing import Callable\r\ndef cm(func) -> Callable[..., None]: pass\r\nclass C:\r\n    @cm\r\n    def foo(self) -> None: pass\r\nC().foo()  # E: Invalid method type\r\n```\r\nFirst spotted in https://github.com/python/typeshed/pull/122", "labels_url": "https://api.github.com/repos/python/mypy/issues/1301/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "The new contextlib stubs trigger an incorrect \"Invalid method type\" error", "assignee": null, "closed_at": "2016-03-18T16:58:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1301/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-18T15:52:56Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1300, "html_url": "https://github.com/python/mypy/pull/1300", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1300", "id": 141718382, "events_url": "https://api.github.com/repos/python/mypy/issues/1300/events", "updated_at": "2016-03-17T22:35:14Z", "body": "- Use a build flag instead of adding a bool in Options.\r\n- Change the typing mode instead of adding implicit Any's to function\r\n  definitions.\r\n- Add test.\r\n\r\nFixes #1233.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1300/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename --implicit-any to --check-untyped-defs and do some cleanup", "assignee": null, "closed_at": "2016-03-17T22:35:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1300/comments", "labels": [], "created_at": "2016-03-17T22:02:30Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1300.patch", "html_url": "https://github.com/python/mypy/pull/1300", "diff_url": "https://github.com/python/mypy/pull/1300.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1300"}, "locked": false}, {"milestone": null, "number": 1299, "html_url": "https://github.com/python/mypy/pull/1299", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1299", "id": 141717407, "events_url": "https://api.github.com/repos/python/mypy/issues/1299/events", "updated_at": "2016-03-17T22:21:35Z", "body": "This stopped being used in 6dca530 \"Remove obsolete transform-related code\",\r\nin Sep 2014.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1299/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cut disused attribute FuncItem.is_implicit", "assignee": null, "closed_at": "2016-03-17T22:21:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1299/comments", "labels": [], "created_at": "2016-03-17T21:56:46Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1299.patch", "html_url": "https://github.com/python/mypy/pull/1299", "diff_url": "https://github.com/python/mypy/pull/1299.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1299"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1298, "html_url": "https://github.com/python/mypy/issues/1298", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1298", "id": 141676207, "events_url": "https://api.github.com/repos/python/mypy/issues/1298/events", "updated_at": "2016-04-06T14:26:20Z", "body": "There are several issues that are pretty closely related to each other. This issue tracks them together. Here are the issues:\r\n\r\n* #292 (type checking `cls` argument of class methods) **(EDIT: done)**\r\n* #1212 (`SelfType`, return type of a `copy()` method)\r\n* #1195 (type of `self.__class__`)\r\n* https://github.com/python/typing/issues/107 (`Type[T]`)\r\n\r\nSummary of how the above are related:\r\n\r\n* If we support `Type[T]` we could use that as the type of the `cls` argument in class methods.\r\n* The result of `cls(...)` could have type `SelfType`.\r\n* The type of `self.__class__` could be `Type[T]` (similarly for `type(self)`).\r\n\r\nAnother thing to discuss is determining/specifying when overrides of `__init__` should be compatible with a base class, which is usually not required. For example, we want to restrict `__init__` to accept a single argument here:\r\n\r\n```\r\nclass A:\r\n    def __init__(self, x: int) -> None: ...\r\n\r\n    @classmethod\r\n    def f(cls) -> None:\r\n        a = cls(1)\r\n        ...\r\n\r\nclass B(A):\r\n    def __init__(self) -> None: ...   # should be rejected!\r\n```\r\n\r\nThere are at least are a few different ways of fixing the above issue:\r\n\r\n* Detect any calls to `cls` and if such things exist, enforce `__init__` compatibility implicitly. This wouldn't work well in a stub as function bodies are empty.\r\n* Require a magic `__init__` decorator or class decorator that causes `__init__` compatibility to be enforced. Don't support `cls(...)` unless the decorator exists.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1298/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Better story around class methods, self types and type object types", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1298/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "needs pep change", "color": "fbca04", "url": "https://api.github.com/repos/python/mypy/labels/needs%20pep%20change"}], "created_at": "2016-03-17T18:54:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1297, "html_url": "https://github.com/python/mypy/issues/1297", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1297", "id": 141670679, "events_url": "https://api.github.com/repos/python/mypy/issues/1297/events", "updated_at": "2016-04-06T09:56:35Z", "body": "Even though #649 was closed, there still remains several issues related to conditional imports. This issue is a top-level issue for these.\r\n\r\nRelated, more specific issues:\r\n\r\n* #591 \r\n* #1107 \r\n* #1153 \r\n* #1026 \r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1297/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Issues with conditional imports", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1297/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-17T18:34:39Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1296, "html_url": "https://github.com/python/mypy/pull/1296", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1296", "id": 141650651, "events_url": "https://api.github.com/repos/python/mypy/issues/1296/events", "updated_at": "2016-03-17T19:02:49Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1296/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "When two coding cookies are present, use the first. Fixes #1281.", "assignee": null, "closed_at": "2016-03-17T19:02:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1296/comments", "labels": [], "created_at": "2016-03-17T17:25:06Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1296.patch", "html_url": "https://github.com/python/mypy/pull/1296", "diff_url": "https://github.com/python/mypy/pull/1296.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1296"}, "locked": false}, {"milestone": null, "number": 1295, "html_url": "https://github.com/python/mypy/pull/1295", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1295", "id": 141447513, "events_url": "https://api.github.com/repos/python/mypy/issues/1295/events", "updated_at": "2016-03-17T19:03:46Z", "body": "I had this partially written, so I thought it was worth taking an hour to get it in.  From here, we can start simplifying build flags/Options and other parts of `main.py`.\r\n\r\nFixes #1257.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1295/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Switch parser to argparse", "assignee": null, "closed_at": "2016-03-17T19:03:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1295/comments", "labels": [], "created_at": "2016-03-17T01:16:04Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1295.patch", "html_url": "https://github.com/python/mypy/pull/1295", "diff_url": "https://github.com/python/mypy/pull/1295.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1295"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1294, "html_url": "https://github.com/python/mypy/issues/1294", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1294", "id": 141352995, "events_url": "https://api.github.com/repos/python/mypy/issues/1294/events", "updated_at": "2016-03-17T20:57:17Z", "body": "Currently we only flush errors at the very end of a run. It might be nicer if we flushed errors after each file is fully processed (i.e. once the type checking pass has finished). We buffer errors so we can sort them and de-dupe them, but there shouldn't be any new errors for a file once it's been processed.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1294/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Flush buffered errors after each file is processed", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1294/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-16T17:56:41Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1293, "html_url": "https://github.com/python/mypy/issues/1293", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1293", "id": 141128618, "events_url": "https://api.github.com/repos/python/mypy/issues/1293/events", "updated_at": "2016-04-12T15:29:28Z", "body": "I'm adding MyPy annotations to a single Python 2 file that uses the `py2neo` package, here's what I have so far (just 2 functions annotated). The file is called `gdb.py`.\r\n\r\n```\r\nfrom py2neo import Graph\r\nfrom contexttimer import Timer\r\nimport simpleflake\r\nfrom datetime import datetime\r\n\r\ngraph   = None\r\n\r\ndef init(neo4j_uri):\r\n    # type: (str) -> None\r\n    global graph\r\n    graph = Graph('{}/db/data'.format(neo4j_uri))\r\n\r\n\r\ndef _exec(cypher_text, params):\r\n    # type: (str, Dict[str,Any]) -> Tuple[RecordListList,Timer]\r\n    with Timer() as t:\r\n        result = graph.cypher.execute( cypher_text, params )\r\n    return result, t\r\n```\r\n\r\nI run MyPy from the terminal in the same directory and virtual-environment as normal Python `> mypy --py2 gdb.py`\r\n\r\nI get this error output:\r\n```\r\nfugu_gdb.py:15: error: Cannot find module named 'py2neo'\r\nfugu_gdb.py:15: note: (Perhaps setting MYPYPATH would help)\r\nfugu_gdb.py:16: error: Cannot find module named 'contexttimer'\r\nfugu_gdb.py:17: error: Cannot find module named 'simpleflake'\r\nfugu_gdb.py: note: In function \"_exec\":\r\nfugu_gdb.py:34: error: Name 'RecordListList' is not defined\r\n```\r\n\r\nI can't find any documentation on how `MYPYPATH` is meant to be set.\r\n\r\nMy `__init__.py` file doesn't contain anything of significance, just futures imports.\r\n\r\nPython itself works fine - `python gdb.py` runs without any errors when run from the same terminal session as `mypy`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1293/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "MyPy cannot find module", "assignee": null, "closed_at": "2016-04-07T18:57:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1293/comments", "labels": [], "created_at": "2016-03-15T23:37:54Z", "user": {"followers_url": "https://api.github.com/users/DavidCookBrite/followers", "gists_url": "https://api.github.com/users/DavidCookBrite/gists{/gist_id}", "html_url": "https://github.com/DavidCookBrite", "following_url": "https://api.github.com/users/DavidCookBrite/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/16768531?v=3", "url": "https://api.github.com/users/DavidCookBrite", "organizations_url": "https://api.github.com/users/DavidCookBrite/orgs", "starred_url": "https://api.github.com/users/DavidCookBrite/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/DavidCookBrite/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/DavidCookBrite/subscriptions", "login": "DavidCookBrite", "repos_url": "https://api.github.com/users/DavidCookBrite/repos", "received_events_url": "https://api.github.com/users/DavidCookBrite/received_events", "id": 16768531, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1292, "html_url": "https://github.com/python/mypy/pull/1292", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1292", "id": 140763686, "events_url": "https://api.github.com/repos/python/mypy/issues/1292/events", "updated_at": "2016-04-08T18:53:13Z", "body": "tl;dr: Please review in this order: semanal.py+tests; nodes.py+types.py; fixup.py; build.py; main.py.\r\n\r\nSee https://paper.dropbox.com/doc/Mypy-incremental-checking-ifj77IF7eNNySxhXYAaBe#:h=Technical-debt for some technical debt (read the paper from the top for a more complete overview).\r\n\r\nDespite that technical debt I'd like to merge this into master in the current state, because at this point it works well enough and in particular I've tested it with typeshed's runtests.py script as well as with the selection of files in the internal Dropbox server repo. Some considerations:\r\n\r\n- The new (SCC + topsort) algorithm for determining dependencies is always used\r\n- The incremental (cache) feature is only used when `-i/--incremental` is used\r\n- After merging this would require additional real-world testing before we can do a release\r\n- My own biggest concern is the hack for the sqlalchemy cycle: https://github.com/gvanrossum/mypy/commit/ede81849a636e88d4f048472bc290224aa0cc7a0\r\n\r\nDon't be fooled by the large number of commits! There are a lot of dead ends and U-turns that you can ignore. Most of the changes are limited to a small number of files:\r\n\r\n- build.py: the new dependency manager (I ripped out the old one)\r\n- nodes.py, types.py: added [de]serialize() methods to many classes\r\n- fixup.py: new module to fix up symbol tables after deserialization\r\n- main.py: added the `-i/--incremental` option\r\n- semanal.py: a fix for anonymous namedtuples needed by serialization\r\n- some tests added/changed for the namedtuple fix\r\n- .gitignore the .mypy_cache directory (though not even sure I want this)\r\n\r\nSomehow GitHub refuses to show the diffs for build.py. Sorry about this; I guess you have to view them locally. You could also try to view the incremental diffs to this file starting with https://github.com/python/mypy/commit/0b4ef76db49c0cb3719ef7d3c6688bcfc2c81b3a. (Also note that the dates GitHub lists for the diffs are bogus -- they represent the most recent rebase. The actual work started over a month ago.)\r\n\r\nSome questions about how to merge this monster into master. I've got a feeling that the detailed commits from my branch are not that useful. I propose the following order, as separate commits to master:\r\n\r\n1. the semanal.py changes and related tests\r\n2. (de)serialization methods in nodes.py, types.py\r\n3. the rest: fixup.py, build.py, main.py, .gitignore\r\n\r\nThis may also represent a reasonable review order.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1292/labels{/name}", "comments": 17, "repository_url": "https://api.github.com/repos/python/mypy", "title": "The mother of all pull requests: add --incremental", "assignee": null, "closed_at": "2016-04-08T17:34:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1292/comments", "labels": [{"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}], "created_at": "2016-03-14T18:47:57Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1292.patch", "html_url": "https://github.com/python/mypy/pull/1292", "diff_url": "https://github.com/python/mypy/pull/1292.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1292"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1291, "html_url": "https://github.com/python/mypy/issues/1291", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1291", "id": 140684452, "events_url": "https://api.github.com/repos/python/mypy/issues/1291/events", "updated_at": "2016-04-07T18:50:45Z", "body": "I pulled the most recent version from git today in order to make mypy work.  However, when I run the following:\r\n\r\n`> mypy pampas/core/common.py`\r\n\r\nI get the result:\r\n\r\n`pampas/__init__.py:1: error: Could not find builtins`\r\n\r\nI found the following closed issue: #389 which seemed similar, but the solution given (`sudo chmod -R go+rX /usr/local/lib/mypy`) did not work for me.\r\n\r\nInterestingly, if I change to the pampas/core path, and execute:\r\n\r\n`> mypy common.py`\r\n\r\nit seems to work:\r\n\r\n`common.py: note: In class \"Plugin\":\r\ncommon.py:1318: error: Parse error before \"async\"\r\ncommon.py:1318: error: Parse error before :\r\ncommon.py:1319: error: Inconsistent indentation\r\ncommon.py: note: At top level:\r\ncommon.py:1751: error: Inconsistent indentation\r\ncommon.py: note: In class \"ListEntryGenerator\":\r\ncommon.py:2423: error: Parse error before \"def\"\r\ncommon.py:2423: error: Parse error before :\r\ncommon.py:2424: error: Inconsistent indentation\r\ncommon.py:2425: error: Parse error before \"self\"\r\ncommon.py: note: At top level:\r\ncommon.py:2428: error: Parse error before \"def\"\r\ncommon.py:2428: error: Parse error before :\r\ncommon.py:2429: error: Inconsistent indentation\r\ncommon.py:2437: error: Parse error before \"task\"\r\ncommon.py:2442: error: Inconsistent indentation\r\ncommon.py: note: In class \"ListEntry\":\r\ncommon.py:2776: error: Parse error before \"async\"\r\ncommon.py:2776: error: Parse error before :\r\ncommon.py:2777: error: Inconsistent indentation\r\ncommon.py:2793: error: Parse error before \"loop\"\r\ncommon.py: note: At top level:\r\ncommon.py:2909: error: Parse error before \"async\"\r\ncommon.py:2909: error: Parse error before :\r\ncommon.py:2910: error: Inconsistent indentation\r\ncommon.py:2922: error: Parse error before \"loop\"\r\ncommon.py:2924: error: Inconsistent indentation\r\ncommon.py:3041: error: Parse error before \"async\"\r\ncommon.py:3041: error: Parse error before :\r\ncommon.py:3042: error: Inconsistent indentation\r\ncommon.py:3052: error: Parse error before \"cls\"\r\ncommon.py:3052: error: Parse error before :\r\ncommon.py:3053: error: Inconsistent indentation\r\ncommon.py:3055: error: Inconsistent indentation\r\ncommon.py:3057: error: Inconsistent indentation\r\ncommon.py:3057: error: Parse error before :\r\ncommon.py:3058: error: Inconsistent indentation\r\ncommon.py:3076: error: Inconsistent indentation`\r\n\r\nSo I am thinking it has something to do with trying to call mypy from a different directory than the file I want to check is in.\r\n\r\nI will note that I am running mypy from a virtual environment (venv), and it was installed correctly there (so technically, I used `sudo chmod -R go+rX ~/venv/cliff/lib/mypy` when I tried to do the fix from #389)\r\n\r\nI also will note that I am using it with Python 3.5.1.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1291/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot find builtins (when installing from a tarball?)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1291/comments", "labels": [{"name": "needs repro", "color": "fbca04", "url": "https://api.github.com/repos/python/mypy/labels/needs%20repro"}], "created_at": "2016-03-14T14:16:47Z", "user": {"followers_url": "https://api.github.com/users/xlorepdarkhelm/followers", "gists_url": "https://api.github.com/users/xlorepdarkhelm/gists{/gist_id}", "html_url": "https://github.com/xlorepdarkhelm", "following_url": "https://api.github.com/users/xlorepdarkhelm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/881707?v=3", "url": "https://api.github.com/users/xlorepdarkhelm", "organizations_url": "https://api.github.com/users/xlorepdarkhelm/orgs", "starred_url": "https://api.github.com/users/xlorepdarkhelm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/xlorepdarkhelm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/xlorepdarkhelm/subscriptions", "login": "xlorepdarkhelm", "repos_url": "https://api.github.com/users/xlorepdarkhelm/repos", "received_events_url": "https://api.github.com/users/xlorepdarkhelm/received_events", "id": 881707, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1290, "html_url": "https://github.com/python/mypy/pull/1290", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1290", "id": 140438452, "events_url": "https://api.github.com/repos/python/mypy/issues/1290/events", "updated_at": "2016-03-13T05:06:36Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1290/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Write \"regular\" errors to stdout. Fixes #1051 again.", "assignee": null, "closed_at": "2016-03-13T05:06:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1290/comments", "labels": [], "created_at": "2016-03-13T02:31:26Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1290.patch", "html_url": "https://github.com/python/mypy/pull/1290", "diff_url": "https://github.com/python/mypy/pull/1290.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1290"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1289, "html_url": "https://github.com/python/mypy/issues/1289", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1289", "id": 140367368, "events_url": "https://api.github.com/repos/python/mypy/issues/1289/events", "updated_at": "2016-03-18T13:24:16Z", "body": "The following code causes mypy to crash:\r\n\r\n```python\r\ndef fun1():\r\n    pass\r\n\r\ntry:\r\n    pass\r\nexcept:\r\n    fun2 = fun1\r\nelse:\r\n    def fun2():\r\n        pass\r\n```\r\n\r\nTraceback:\r\n\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"./scripts/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"mypy/mypy/main.py\", line 50, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"mypy/mypy/main.py\", line 94, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"mypy/mypy/build.py\", line 210, in build\r\n    result = manager.process(initial_states)\r\n  File \"mypy/mypy/build.py\", line 425, in process\r\n    next.process()\r\n  File \"mypy/mypy/build.py\", line 930, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"mypy/mypy/checker.py\", line 409, in visit_file\r\n    self.accept(d)\r\n  File \"mypy/mypy/checker.py\", line 450, in accept\r\n    typ = node.accept(self)\r\n  File \"mypy/mypy/nodes.py\", line 707, in accept\r\n    return visitor.visit_try_stmt(self)\r\n  File \"mypy/mypy/checker.py\", line 1732, in visit_try_stmt\r\n    self.accept(s.else_body)\r\n  File \"mypy/mypy/checker.py\", line 450, in accept\r\n    typ = node.accept(self)\r\n  File \"mypy/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"mypy/mypy/checker.py\", line 1113, in visit_block\r\n    self.accept(s)\r\n  File \"mypy/mypy/checker.py\", line 450, in accept\r\n    typ = node.accept(self)\r\n  File \"mypy/mypy/nodes.py\", line 382, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"mypy/mypy/checker.py\", line 594, in visit_func_def\r\n    'redefinition with type')\r\n  File \"mypy/mypy/checker.py\", line 2117, in check_subtype\r\n    if not is_subtype(subtype, supertype):\r\n  File \"mypy/mypy/subtypes.py\", line 49, in is_subtype\r\n    return left.accept(SubtypeVisitor(right, type_parameter_checker))\r\nAttributeError: 'NoneType' object has no attribute 'accept'\r\n```\r\n\r\nI'm still trying to understand the code and why it might be crashing. As a side issue, one thing I find odd is that presumably when mypy checks itself, it isn't seeing that `TypeChecker.check_subtype()` doesn't accept `None` for the first argument (it accepts `Type` but doesn't specify it using `Optional`). When it's called, the first argument is defined like this:\r\n\r\n```python\r\norig_type = defn.original_def.type\r\n```\r\n\r\nWhere `defn` is of the type `mypy.nodes.FuncDef`. `FuncDef.original_def` is of the type `Union[mypy.nodes.FuncDef, mypy.nodes.Var]`. `FuncDef.type` and `Var.type` are of the type `Optional[mypy.types.Type]` (both fields are optional because they're set to `None` on their respective classes).\r\n\r\nShouldn't the checker, using type inference when `orig_type` is defined, catch that type mismatch when `TypeChecker.check_subtype()` is called?\r\n\r\nEdit: I suppose my digression above might be invalid if all types are nullable, but while PEP 484 states, \"[b]y default, None is an invalid value for any type, unless a default value of None has been provided in the function definition\", the mypy docs say, \"None is a valid value for every type, which resembles null in Java.\" Are the mypy docs out of date/incorrect, or is every type nullable?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1289/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash when checking function conditionally defined in try/except/else clause", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1289/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-12T09:46:19Z", "user": {"followers_url": "https://api.github.com/users/brodie/followers", "gists_url": "https://api.github.com/users/brodie/gists{/gist_id}", "html_url": "https://github.com/brodie", "following_url": "https://api.github.com/users/brodie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/42407?v=3", "url": "https://api.github.com/users/brodie", "organizations_url": "https://api.github.com/users/brodie/orgs", "starred_url": "https://api.github.com/users/brodie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/brodie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/brodie/subscriptions", "login": "brodie", "repos_url": "https://api.github.com/users/brodie/repos", "received_events_url": "https://api.github.com/users/brodie/received_events", "id": 42407, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1288, "html_url": "https://github.com/python/mypy/issues/1288", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1288", "id": 140060426, "events_url": "https://api.github.com/repos/python/mypy/issues/1288/events", "updated_at": "2016-04-07T18:55:03Z", "body": "Most of our existing documentation refers to the project as \"mypy\", in lower case, except capitalizing it at the start of the sentence -- just like an ordinary noun.\r\n\r\nI've generally preferred to refer to the project in the manner of a proper name: \"Mypy\", capitalized. Mostly this is in informal transient contexts like emails and chat messages, but it's also landed in some bits of semi-outward-facing documentation like [our CONTRIBUTING file](https://github.com/python/mypy/blob/master/CONTRIBUTING.md).\r\n\r\nI chatted with @JukkaL about this briefly in person, and he was open to the proper-name style but correctly pointed out that we should come to a clearly decided consistent view on the preferred style. Hence this issue. For this issue thread, I think it's enough to come to a decision which we'll then all carry out when we see something that doesn't match -- then in the background, perhaps tracked by a follow-up issue, we can optionally sweep through existing documents for consistency.\r\n\r\nMy own view on which style is preferable:\r\n* The name of the project and of the overall body of software is a pretty classic proper name, and it makes sense to capitalize it in the same fashion as other proper names. When it's lower-cased, I find it can get swallowed somewhat in a sentence.\r\n* When referring specifically to the command-line program `mypy`, the name is lowercase. Similarly the Python package (as in `python3 -m mypy`), the PyPI package (as in `pip install mypy-lang`), and other contexts where it's a specific identifier that is meaningful to the computer. Generally these are usages that should also be enclosed in backticks or marked in some other way as literal fragments of text-for-a-computer.\r\n* This style is broadly common among software projects:\r\n  * Git is a version-control system and `git` is a command.\r\n  * Emacs is a text editor and `emacs` is a command.\r\n  * Twisted is a Python networking-and-concurrency framework and `twisted` is a Python package.\r\n  * `grep` is a command and the software as a whole is often called \"grep\" in lower case. This is a nice example because this program is very closely identified with its command-line interface, which pushes things toward just using the lower-case name everywhere. And even here, the [official web page](https://www.gnu.org/software/grep/) actually turns out to say \"Grep\" more often than \"grep\" (it isn't totally consistent) when referring to the software as a whole and the project.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1288/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Standardize capitalization of the project's name", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1288/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-03-11T01:35:37Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1287, "html_url": "https://github.com/python/mypy/pull/1287", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1287", "id": 140057574, "events_url": "https://api.github.com/repos/python/mypy/issues/1287/events", "updated_at": "2016-03-11T01:37:26Z", "body": "Switch to recommended relative-link format.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1287/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Link to CONTRIBUTING.md from README.md; use proper link format", "assignee": null, "closed_at": "2016-03-11T01:22:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1287/comments", "labels": [], "created_at": "2016-03-11T01:21:17Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1287.patch", "html_url": "https://github.com/python/mypy/pull/1287", "diff_url": "https://github.com/python/mypy/pull/1287.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1287"}, "locked": false}, {"milestone": null, "number": 1286, "html_url": "https://github.com/python/mypy/pull/1286", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1286", "id": 140054267, "events_url": "https://api.github.com/repos/python/mypy/issues/1286/events", "updated_at": "2016-03-11T01:01:21Z", "body": "I went and read the file as rendered on the GitHub website,\r\nand this is the one edit that stuck out at me.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1286/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "CONTRIBUTING: actually link to README", "assignee": null, "closed_at": "2016-03-11T01:01:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1286/comments", "labels": [], "created_at": "2016-03-11T01:00:30Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1286.patch", "html_url": "https://github.com/python/mypy/pull/1286", "diff_url": "https://github.com/python/mypy/pull/1286.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1286"}, "locked": false}, {"milestone": null, "number": 1285, "html_url": "https://github.com/python/mypy/pull/1285", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1285", "id": 140046412, "events_url": "https://api.github.com/repos/python/mypy/issues/1285/events", "updated_at": "2016-03-14T23:00:59Z", "body": "This is something we want to add sooner or later, so I figured I'd just add it now that someone's explicitly asked for it.  This catches ~10 incomplete signatures in `builtins.pyi` and `typing.pyi`, which would need to be fixed up in a separate typeshed PR.\r\n\r\nFixes #1282.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1285/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add `--disallow-untyped-functions`", "assignee": null, "closed_at": "2016-03-14T23:00:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1285/comments", "labels": [], "created_at": "2016-03-11T00:12:23Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1285.patch", "html_url": "https://github.com/python/mypy/pull/1285", "diff_url": "https://github.com/python/mypy/pull/1285.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1285"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1284, "html_url": "https://github.com/python/mypy/issues/1284", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1284", "id": 139991532, "events_url": "https://api.github.com/repos/python/mypy/issues/1284/events", "updated_at": "2016-04-07T18:44:27Z", "body": "Several users (@wittekm among them) have asked for a feature where you can define something that's like a type alias in referring to an existing underlying type at runtime, but which isn't considered equivalent to it in the type-checker -- like what Hack and Haskell call `newtype`.\r\n\r\nOne classic application of this would be aliases/newtypes of `str` (or `unicode` or `bytes`) to distinguish fragments of HTML, Javascript, SQL, etc., from arbitrary text and enforce that conversions are only done with proper escaping, to prevent classes of vulnerabilities like XSS and SQL injection. A definition might look like `HtmlType = NewType(\"HtmlType\", str)`.\r\n\r\nOther classic uses include distinguishing identifiers of different things (users, machines, etc.) that are all just integers, so they don't get mixed up by accident.\r\n\r\nA user can always just define a class, say an empty subclass of the underlying type, but if an application is handling a lot of IDs or text fragments or the like, it costs a lot at runtime for them to be some other class rather than actual `str` or `int`, so that that isn't a good solution.\r\n\r\nThe main open question I see in how this feature might work is how to provide for converting these values to the underlying type. For a feature like this to be useful there has to be some way to do that -- so it's possible to write the conversion functions that take appropriate care like escaping text into HTML -- but preferably one that's private to a limited stretch of code, or failing that is at least easy to audit with `grep`. In Hack the types are implicitly equivalent just within the source file where the newtype is defined; in Haskell the newtype comes with a data constructor which is the only way to convert, and typically one just doesn't export that from the module where it's defined.\r\n\r\nThe Hack solution could work, and has the advantage that it means no run-time overhead at all, other than invoking the intended conversion functions that live in the newtype's file. It feels odd to me, though, because Python generally doesn't treat specially whether a thing is defined in a given module vs. imported into it. Another solution could be something like `html = HtmlType.make(text)` and `text = HtmlType.unmake(html)`, which would follow perfectly normal Python scoping and would be reasonably auditable.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1284/labels{/name}", "comments": 19, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type aliases without implicit conversion (\"newtype\")", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1284/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "needs pep change", "color": "fbca04", "url": "https://api.github.com/repos/python/mypy/labels/needs%20pep%20change"}], "created_at": "2016-03-10T19:52:15Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1283, "html_url": "https://github.com/python/mypy/issues/1283", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1283", "id": 139791681, "events_url": "https://api.github.com/repos/python/mypy/issues/1283/events", "updated_at": "2016-04-07T18:56:46Z", "body": "It is mentioned in PEP 484 and exists in the official typing.py, but not in mypy's typing.py nor in typeshed's typing.pyi.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1283/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy doesn't support FrozenSet", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1283/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2016-03-10T05:34:38Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1282, "html_url": "https://github.com/python/mypy/issues/1282", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1282", "id": 139735149, "events_url": "https://api.github.com/repos/python/mypy/issues/1282/events", "updated_at": "2016-03-15T17:20:22Z", "body": "I would love an option on the command line to force the use of type hints so that all code is statically typed.\r\n\r\nIs this possible or easy to accomplish with mypy?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1282/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Enforce Type Hints", "assignee": null, "closed_at": "2016-03-14T23:00:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1282/comments", "labels": [], "created_at": "2016-03-09T23:37:14Z", "user": {"followers_url": "https://api.github.com/users/theonewolf/followers", "gists_url": "https://api.github.com/users/theonewolf/gists{/gist_id}", "html_url": "https://github.com/theonewolf", "following_url": "https://api.github.com/users/theonewolf/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/522248?v=3", "url": "https://api.github.com/users/theonewolf", "organizations_url": "https://api.github.com/users/theonewolf/orgs", "starred_url": "https://api.github.com/users/theonewolf/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/theonewolf/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/theonewolf/subscriptions", "login": "theonewolf", "repos_url": "https://api.github.com/users/theonewolf/repos", "received_events_url": "https://api.github.com/users/theonewolf/received_events", "id": 522248, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1281, "html_url": "https://github.com/python/mypy/issues/1281", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1281", "id": 139725252, "events_url": "https://api.github.com/repos/python/mypy/issues/1281/events", "updated_at": "2016-03-21T15:10:25Z", "body": "When a file has two different coding cookies (one in line 1, one in line 2) mypy gets confused and uses the cookie from the second line. It should use the first.\r\n\r\nLow priority; I found this by accident and the new parser will presumably make this go away.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1281/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy gets confused by double coding cookie", "assignee": null, "closed_at": "2016-03-17T19:02:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1281/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-09T22:47:10Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1280, "html_url": "https://github.com/python/mypy/issues/1280", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1280", "id": 139559295, "events_url": "https://api.github.com/repos/python/mypy/issues/1280/events", "updated_at": "2016-04-07T19:02:16Z", "body": "This happened when I commented out a long block of code (over 600 lines or so):\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/runpy.py\", line 170, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/local/lib/python3.5/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"mypy/__main__.py\", line 5, in <module>\r\n    main(None)\r\n  File \"mypy/main.py\", line 50, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"mypy/main.py\", line 94, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"mypy/build.py\", line 210, in build\r\n    result = manager.process(initial_states)\r\n  File \"mypy/build.py\", line 427, in process\r\n    next.process()\r\n  File \"mypy/build.py\", line 759, in process\r\n    tree = self.parse(self.program_text, self.path)\r\n  File \"mypy/build.py\", line 856, in parse\r\n    fast_parser=FAST_PARSER in self.manager.flags)\r\n  File \"mypy/parse.py\", line 98, in parse\r\n    tree = parser.parse(source)\r\n  File \"mypy/parse.py\", line 147, in parse\r\n    is_stub_file=self.is_stub_file)\r\n  File \"mypy/lex.py\", line 170, in lex\r\n    l.lex(string, first_line)\r\n  File \"mypy/lex.py\", line 378, in lex\r\n    map.get(c, default)()\r\n  File \"mypy/lex.py\", line 751, in lex_break\r\n    self.lex_indent()\r\n  File \"mypy/lex.py\", line 698, in lex_indent\r\n    self.lex_indent()\r\n  File \"mypy/lex.py\", line 698, in lex_indent\r\n    self.lex_indent()\r\n\r\n  [...]\r\n\r\n  File \"mypy/lex.py\", line 698, in lex_indent\r\n    self.lex_indent()\r\n  File \"mypy/lex.py\", line 697, in lex_indent\r\n    self.lex_break()\r\n  File \"mypy/lex.py\", line 735, in lex_break\r\n    s = self.match(self.break_exp)\r\nRecursionError: maximum recursion depth exceeded\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1280/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Lexer exceeds maximum recursion depth if too many comments", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1280/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-09T12:07:57Z", "user": {"followers_url": "https://api.github.com/users/tsavola/followers", "gists_url": "https://api.github.com/users/tsavola/gists{/gist_id}", "html_url": "https://github.com/tsavola", "following_url": "https://api.github.com/users/tsavola/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/55473?v=3", "url": "https://api.github.com/users/tsavola", "organizations_url": "https://api.github.com/users/tsavola/orgs", "starred_url": "https://api.github.com/users/tsavola/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/tsavola/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/tsavola/subscriptions", "login": "tsavola", "repos_url": "https://api.github.com/users/tsavola/repos", "received_events_url": "https://api.github.com/users/tsavola/received_events", "id": 55473, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1279, "html_url": "https://github.com/python/mypy/issues/1279", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1279", "id": 139121703, "events_url": "https://api.github.com/repos/python/mypy/issues/1279/events", "updated_at": "2016-03-07T23:18:54Z", "body": "Python 3.5.1, mypy 2f89c79.\r\n\r\nTest code:\r\n```\r\nfrom typing import NamedTuple\r\n\r\nBase = NamedTuple('Base', [('param', int)])\r\n\r\n\r\nclass Child(Base):\r\n\r\n    def __new__(cls, param: int = 1) -> 'Child':\r\n        return Base.__new__(cls, param)\r\n\r\n\r\nprint(Child())\r\n```\r\n\r\nPython result:\r\n\r\n```\r\n% python3 test2.py \r\nChild(param=1)\r\n```\r\n\r\nmypy output:\r\n\r\n```\r\ntest2.py: note: In member \"__new__\" of class \"Child\":\r\ntest2.py:9: error: Too many arguments for \"__new__\" of \"object\"\r\ntest2.py: note: At top level:\r\ntest2.py:12: error: Too few arguments for \"Child\"\r\n```\r\n\r\nI poked around in the code a bit and I believe I managed to narrow this down to the following difference:\r\n\r\n* The code above depends on the namedtuple-generated class to have ``__new__`` defined (CPython: https://github.com/python/cpython/blob/9967d6c1053f186f3b3d118ac336a03752efec32/Lib/collections/__init__.py#L316)\r\n* mypy treats namedtuple definitions as if they were overriding ``__init__`` instead (https://github.com/python/mypy/blob/2f89c79a5b030343879f2f3c7172f0ad2b00c4de/mypy/semanal.py#L1444)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1279/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Two issues with subclassing namedtuple-generated class and overriding __new__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1279/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-07T23:07:36Z", "user": {"followers_url": "https://api.github.com/users/jstasiak/followers", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "html_url": "https://github.com/jstasiak", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/36209?v=3", "url": "https://api.github.com/users/jstasiak", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "login": "jstasiak", "repos_url": "https://api.github.com/users/jstasiak/repos", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "id": 36209, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1278, "html_url": "https://github.com/python/mypy/issues/1278", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1278", "id": 139099428, "events_url": "https://api.github.com/repos/python/mypy/issues/1278/events", "updated_at": "2016-04-08T16:17:30Z", "body": "Currently, `None` types in the code either mean:\r\n- the internal `Void` type: a type that cannot be used\r\n- `None`: an uninhabited type (i.e. a type without any values)\r\n- the internal `NoneTyp` type: the type that contains only the value `None` (this cannot currently be explicitly specified)\r\n\r\nAfter doing proper Optional checking, I propose that we make `None` types always mean `NoneTyp`.  Optional checking will prevent functions that return `None` from being used in places they shouldn't, and allowing users to specify something is the uninhabited type isn't currently useful at all.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1278/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "None unification", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1278/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-03-07T21:27:00Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1277, "html_url": "https://github.com/python/mypy/pull/1277", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1277", "id": 138835118, "events_url": "https://api.github.com/repos/python/mypy/issues/1277/events", "updated_at": "2016-03-06T22:13:35Z", "body": "Fixes #1276.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1277/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Distinguish between namedtuple without items and errors.", "assignee": null, "closed_at": "2016-03-06T22:13:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1277/comments", "labels": [], "created_at": "2016-03-06T20:43:25Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1277.patch", "html_url": "https://github.com/python/mypy/pull/1277", "diff_url": "https://github.com/python/mypy/pull/1277.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1277"}, "locked": false}, {"milestone": null, "number": 1276, "html_url": "https://github.com/python/mypy/issues/1276", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1276", "id": 138813583, "events_url": "https://api.github.com/repos/python/mypy/issues/1276/events", "updated_at": "2016-03-06T22:13:35Z", "body": "```python\r\nBlue = NamedTuple(\"Blue\", [])\r\n```\r\nFails with:\r\n```python\r\nexample.py:5: error: \"object\" not callable\r\n```\r\n\r\nBut this code runs fine in python2/python3.\r\n\r\n__Edit__:  \r\nSeems like it's falling out to [here](https://github.com/python/mypy/blob/e308f2f786d432577286e0d84abaca505d02ec81/mypy/checkmember.py#L160)\r\na bit odd to me because NamedTuple does indeed have a `__call__` attribute\r\n\r\nInteresting. The following fails:\r\n```python\r\nalist = [('afield', str)]\r\nGreen = NamedTuple(\"Green\", alist)\r\n\r\nexample.py:3: error: List literal expected as the second argument to namedtuple()\r\nexample.py:3: error: \"object\" not callable\r\n```\r\nBut this works:\r\n```python\r\nGreen = NamedTuple(\"Green\", [('afields', str)])\r\n```\r\nI think the `type_map` is storing `NameExpr(NamedTuple [typing.NamedTuple])` as an `object`, and it looks like the in the latter case it's skipping a check . . . I remember reading in an issue that NamedTuple wasn't fully supported, so I assume that's what's going on.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1276/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "NamedTuple with no fields causes `\"object\" not callable` error", "assignee": null, "closed_at": "2016-03-06T22:13:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1276/comments", "labels": [], "created_at": "2016-03-06T17:29:28Z", "user": {"followers_url": "https://api.github.com/users/averagehat/followers", "gists_url": "https://api.github.com/users/averagehat/gists{/gist_id}", "html_url": "https://github.com/averagehat", "following_url": "https://api.github.com/users/averagehat/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5606168?v=3", "url": "https://api.github.com/users/averagehat", "organizations_url": "https://api.github.com/users/averagehat/orgs", "starred_url": "https://api.github.com/users/averagehat/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/averagehat/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/averagehat/subscriptions", "login": "averagehat", "repos_url": "https://api.github.com/users/averagehat/repos", "received_events_url": "https://api.github.com/users/averagehat/received_events", "id": 5606168, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1275, "html_url": "https://github.com/python/mypy/pull/1275", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1275", "id": 138705103, "events_url": "https://api.github.com/repos/python/mypy/issues/1275/events", "updated_at": "2016-03-05T23:28:58Z", "body": "This results in roughly a 20% speedup on the non-parsing steps.\r\nHere are the timings I got from running mypy on itself:\r\n\r\nBefore the change:\r\n```\r\n3861.8ms (49.0%) SemanticallyAnalyzedFile\r\n2760.3ms (35.0%) UnprocessedFile\r\n1111.8ms (14.1%) ParsedFile\r\n 142.8ms ( 1.8%) PartiallySemanticallyAnalyzedFile\r\n```\r\n\r\nAfter the change:\r\n```\r\n3086.1ms (45.1%) SemanticallyAnalyzedFile\r\n2665.1ms (39.0%) UnprocessedFile\r\n 945.1ms (13.8%) ParsedFile\r\n 139.6ms ( 2.0%) PartiallySemanticallyAnalyzedFile\r\n```\r\n\r\nI've never used ABCs before so I can't really comment on how much is lost by switching away from them.\r\n\r\nCloses #1274", "labels_url": "https://api.github.com/repos/python/mypy/issues/1275/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make the AST classes not ABCs", "assignee": null, "closed_at": "2016-03-05T23:28:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1275/comments", "labels": [], "created_at": "2016-03-05T18:11:11Z", "user": {"followers_url": "https://api.github.com/users/kmod/followers", "gists_url": "https://api.github.com/users/kmod/gists{/gist_id}", "html_url": "https://github.com/kmod", "following_url": "https://api.github.com/users/kmod/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/271916?v=3", "url": "https://api.github.com/users/kmod", "organizations_url": "https://api.github.com/users/kmod/orgs", "starred_url": "https://api.github.com/users/kmod/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kmod/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kmod/subscriptions", "login": "kmod", "repos_url": "https://api.github.com/users/kmod/repos", "received_events_url": "https://api.github.com/users/kmod/received_events", "id": 271916, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1275.patch", "html_url": "https://github.com/python/mypy/pull/1275", "diff_url": "https://github.com/python/mypy/pull/1275.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1275"}, "locked": false}, {"milestone": null, "number": 1274, "html_url": "https://github.com/python/mypy/issues/1274", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1274", "id": 138631255, "events_url": "https://api.github.com/repos/python/mypy/issues/1274/events", "updated_at": "2016-03-05T23:28:53Z", "body": "Making `nodes.Context` not an ABC results in a 20% speedup (excluding parse time). This is likely because ABCs (and their descendants) have a much slower `isinstance` check.\r\n\r\nThis looks like low hanging fruit for optimization.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1274/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "potential speedup: making `nodes.Context` not an ABC results in a ~20% speedup", "assignee": null, "closed_at": "2016-03-05T23:28:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1274/comments", "labels": [], "created_at": "2016-03-05T01:40:07Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1273, "html_url": "https://github.com/python/mypy/pull/1273", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1273", "id": 138607515, "events_url": "https://api.github.com/repos/python/mypy/issues/1273/events", "updated_at": "2016-03-05T03:23:41Z", "body": "Fixes #670.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1273/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support bare `Callable`", "assignee": null, "closed_at": "2016-03-05T03:23:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1273/comments", "labels": [], "created_at": "2016-03-04T22:40:03Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1273.patch", "html_url": "https://github.com/python/mypy/pull/1273", "diff_url": "https://github.com/python/mypy/pull/1273.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1273"}, "locked": false}, {"milestone": null, "number": 1272, "html_url": "https://github.com/python/mypy/issues/1272", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1272", "id": 138588226, "events_url": "https://api.github.com/repos/python/mypy/issues/1272/events", "updated_at": "2016-03-06T01:13:11Z", "body": "The versions of typing.py installed by mypy (in lib-typing/{2.7,3.2}) are out of date. They should be updated to the latest versions in python/typing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1272/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Upgrade typing.py from python/typing repo", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1272/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-04T21:18:26Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1271, "html_url": "https://github.com/python/mypy/issues/1271", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1271", "id": 138519252, "events_url": "https://api.github.com/repos/python/mypy/issues/1271/events", "updated_at": "2016-03-04T18:10:35Z", "body": "It would be nice if there was a way to enforce a constraint on `__eq__` -- maybe a warning? I almost never want to do the following\r\n```python\r\ndef test_operator(): # type: () -> None\r\n    1 == \"1\"\r\n# produces no complaints\r\n```\r\nWhile that check may make sense in a world of vanilla python, I'd argue it doesn't make much sense within mypy's world (especially if the arguments are explicitly typed as different types; i.e., one is not a subtype of the other).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1271/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Stricter equality checks?", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1271/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-04T16:37:13Z", "user": {"followers_url": "https://api.github.com/users/averagehat/followers", "gists_url": "https://api.github.com/users/averagehat/gists{/gist_id}", "html_url": "https://github.com/averagehat", "following_url": "https://api.github.com/users/averagehat/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5606168?v=3", "url": "https://api.github.com/users/averagehat", "organizations_url": "https://api.github.com/users/averagehat/orgs", "starred_url": "https://api.github.com/users/averagehat/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/averagehat/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/averagehat/subscriptions", "login": "averagehat", "repos_url": "https://api.github.com/users/averagehat/repos", "received_events_url": "https://api.github.com/users/averagehat/received_events", "id": 5606168, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1270, "html_url": "https://github.com/python/mypy/issues/1270", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1270", "id": 138421820, "events_url": "https://api.github.com/repos/python/mypy/issues/1270/events", "updated_at": "2016-03-06T02:22:11Z", "body": "I am trying to model a generic container (a [Pandas Series][1] though it shouldn't matter too much for this). The container has a generic \"value type\" and a generic \"index type\". When iterating over the container, you get the value type back. So I tried with:\r\n```python\r\nclass Series(Generic[VT, IT], Sequence[VT]):\r\n\r\n    @overload\r\n    def __getitem__(self, key: slice) -> List[VT]: ...\r\n\r\n    @overload\r\n    def __getitem__(self, key: int) -> VT: ...\r\n```\r\nThis gives me an error:\r\n```\r\nstubs/pandas/__init__.pyi: note: In class \"Series\":\r\nstubs/pandas/__init__.pyi:186: error: Signature of \"__getitem__\" incompatible with supertype \"Sequence\"\r\n```\r\n\r\nThat baffled me for a while and on a whim, I tried reordering the two signatures:\r\n```python\r\nclass Series(Generic[VT, IT], Sequence[VT]):\r\n\r\n    @overload\r\n    def __getitem__(self, key: int) -> VT: ...\r\n\r\n    @overload\r\n    def __getitem__(self, key: slice) -> List[VT]: ...\r\n```\r\n\r\nThe error is now gone! :-)\r\n\r\nWhen I first got the error, I tried going into `typing.py` to see exactly what signature Sequence has. That didn't help me since Sequence is defined as\r\n```python\r\nclass Sequence(Sized, Iterable[T_co], Container[T_co],\r\n               extra=collections_abc.Sequence):\r\n    pass\r\n```\r\nI think it could have been helpful if mypy could have written the exact types it was comparing.\r\n\r\nThis was tested with 0ec0cb4.\r\n\r\n[1]: http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.html", "labels_url": "https://api.github.com/repos/python/mypy/issues/1270/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ordering matters for @overload", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1270/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-04T09:08:38Z", "user": {"followers_url": "https://api.github.com/users/mgeisler/followers", "gists_url": "https://api.github.com/users/mgeisler/gists{/gist_id}", "html_url": "https://github.com/mgeisler", "following_url": "https://api.github.com/users/mgeisler/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/89623?v=3", "url": "https://api.github.com/users/mgeisler", "organizations_url": "https://api.github.com/users/mgeisler/orgs", "starred_url": "https://api.github.com/users/mgeisler/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mgeisler/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mgeisler/subscriptions", "login": "mgeisler", "repos_url": "https://api.github.com/users/mgeisler/repos", "received_events_url": "https://api.github.com/users/mgeisler/received_events", "id": 89623, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1269, "html_url": "https://github.com/python/mypy/issues/1269", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1269", "id": 138419656, "events_url": "https://api.github.com/repos/python/mypy/issues/1269/events", "updated_at": "2016-03-24T14:41:27Z", "body": "I was testing how to make a generic Sequence with an overloaded `__getitem__` and had these input files:\r\n```python\r\n# test.py\r\nimport overload\r\nc = overload.Container\r\nc[10] = 20\r\n```\r\n\r\n```python\r\n# overload.py\r\nclass Container:\r\n    def __getitem__(self, key):\r\n        pass\r\n```\r\n\r\n```python\r\n# overload.pyi\r\nfrom typing import TypeVar, Generic, Sequence, overload\r\nT = TypeVar('T')\r\n\r\nclass Container(Generic[T], Sequence[T]):\r\n\r\n    @overload\r\n    def __getitem__(self, key: int) -> T: ...\r\n\r\n    @overload\r\n    def __getitem__(self, key: slice) -> Sequence[T]: ...\r\n```\r\n\r\nRunning `mypy test.py` produces\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/mg/.virtualenvs/mypy/bin/mypy\", line 6, in <module>\r\n    exec(compile(open(__file__).read(), __file__, 'exec'))\r\n  File \"/home/mg/src/mypy/scripts/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/home/mg/src/mypy/mypy/main.py\", line 50, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/home/mg/src/mypy/mypy/main.py\", line 94, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/home/mg/src/mypy/mypy/build.py\", line 210, in build\r\n    result = manager.process(initial_states)\r\n  File \"/home/mg/src/mypy/mypy/build.py\", line 425, in process\r\n    next.process()\r\n  File \"/home/mg/src/mypy/mypy/build.py\", line 930, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/home/mg/src/mypy/mypy/checker.py\", line 409, in visit_file\r\n    self.accept(d)\r\n  File \"/home/mg/src/mypy/mypy/checker.py\", line 450, in accept\r\n    typ = node.accept(self)\r\n  File \"/home/mg/src/mypy/mypy/nodes.py\", line 564, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/home/mg/src/mypy/mypy/checker.py\", line 1122, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/home/mg/src/mypy/mypy/checker.py\", line 1167, in check_assignment\r\n    self.check_indexed_assignment(index_lvalue, rvalue, rvalue)\r\n  File \"/home/mg/src/mypy/mypy/checker.py\", line 1499, in check_indexed_assignment\r\n    self.try_infer_partial_type_from_indexed_assignment(lvalue, rvalue)\r\n  File \"/home/mg/src/mypy/mypy/checker.py\", line 1513, in try_infer_partial_type_from_indexed_assignment\r\n    if var is not None and isinstance(var.type, PartialType):\r\nAttributeError: 'TypeInfo' object has no attribute 'type'\r\n\r\n*** INTERNAL ERROR ***\r\n\r\ntest.py:4: error: Internal error\r\n```\r\n\r\n----\r\n\r\nTesting some more, I see the same error when I remove the overloaded `__getitem__` method and test with\r\n```python\r\n# overload.pyi\r\nfrom typing import TypeVar, Generic, Sequence\r\nT = TypeVar('T')\r\n\r\n\r\nclass Container(Generic[T], Sequence[T]):\r\n    pass\r\n```\r\n\r\nThis is with mypy 0ec0cb406f55.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1269/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal error on overloaded __getitem__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1269/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-04T08:57:18Z", "user": {"followers_url": "https://api.github.com/users/mgeisler/followers", "gists_url": "https://api.github.com/users/mgeisler/gists{/gist_id}", "html_url": "https://github.com/mgeisler", "following_url": "https://api.github.com/users/mgeisler/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/89623?v=3", "url": "https://api.github.com/users/mgeisler", "organizations_url": "https://api.github.com/users/mgeisler/orgs", "starred_url": "https://api.github.com/users/mgeisler/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mgeisler/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mgeisler/subscriptions", "login": "mgeisler", "repos_url": "https://api.github.com/users/mgeisler/repos", "received_events_url": "https://api.github.com/users/mgeisler/received_events", "id": 89623, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1268, "html_url": "https://github.com/python/mypy/pull/1268", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1268", "id": 138052645, "events_url": "https://api.github.com/repos/python/mypy/issues/1268/events", "updated_at": "2016-03-11T03:23:31Z", "body": "Closes #1265.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1268/labels{/name}", "comments": 11, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add a CONTRIBUTING file", "assignee": null, "closed_at": "2016-03-11T00:28:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1268/comments", "labels": [], "created_at": "2016-03-03T02:10:38Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1268.patch", "html_url": "https://github.com/python/mypy/pull/1268", "diff_url": "https://github.com/python/mypy/pull/1268.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1268"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1267, "html_url": "https://github.com/python/mypy/issues/1267", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1267", "id": 138036371, "events_url": "https://api.github.com/repos/python/mypy/issues/1267/events", "updated_at": "2016-04-07T18:55:45Z", "body": "Playing around with a toy situation as below:\r\n```\r\nclass AsdfMeta(type): pass\r\nclass AsdfConcrete1(object):\r\n  __metaclass__ = AsdfMeta\r\n\r\ndef accepts_an_asdf_class(klass): # type: (AsdfMeta) -> None\r\n  pass\r\n\r\naccepts_an_asdf_class(AsdfConcrete1)\r\naccepts_an_asdf_class(AsdfConcrete1())\r\naccepts_an_asdf_class(\"hello, i am a string and not a class with metaclass AsdfMeta\")\r\n```\r\n\r\nI get back \r\n```\r\n56: error: Argument 1 to \"accepts_an_asdf_class\" has incompatible type \"AsdfConcrete1\"; expected \"AsdfMeta\"\r\n57: error: Argument 1 to \"accepts_an_asdf_class\" has incompatible type \"AsdfConcrete1\"; expected \"AsdfMeta\"\r\n58: error: Argument 1 to \"accepts_an_asdf_class\" has incompatible type \"unicode\"; expected \"AsdfMeta\"\r\n```\r\n\r\n(This is super low-priority in my opinion.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1267/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "MyPy does not consider classes instances of their metaclass", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1267/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-03-03T00:35:10Z", "user": {"followers_url": "https://api.github.com/users/wittekm/followers", "gists_url": "https://api.github.com/users/wittekm/gists{/gist_id}", "html_url": "https://github.com/wittekm", "following_url": "https://api.github.com/users/wittekm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/578530?v=3", "url": "https://api.github.com/users/wittekm", "organizations_url": "https://api.github.com/users/wittekm/orgs", "starred_url": "https://api.github.com/users/wittekm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/wittekm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/wittekm/subscriptions", "login": "wittekm", "repos_url": "https://api.github.com/users/wittekm/repos", "received_events_url": "https://api.github.com/users/wittekm/received_events", "id": 578530, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1266, "html_url": "https://github.com/python/mypy/issues/1266", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1266", "id": 137976217, "events_url": "https://api.github.com/repos/python/mypy/issues/1266/events", "updated_at": "2016-03-03T19:36:26Z", "body": "```python\r\nfrom typing import Union\r\n\r\nx = None   # Union[int, str]\r\nx = 1\r\nx + 1\r\nx = \"foo\"\r\nx + \"hi\"\r\n```\r\nresults in\r\n```\r\ntest.py:6: error: Incompatible types in assignment (expression has type \"str\", variable has type \"int\")\r\ntest.py:7: error: Unsupported operand types for + (\"int\" and \"str\")\r\n```\r\n\r\nThis behavior is odd.  I think we probably shouldn't specialize `x` to an `int` just due to the assignment.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1266/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy does not respect union type annotations in some cases", "assignee": null, "closed_at": "2016-03-03T00:30:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1266/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-03-02T19:58:59Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1265, "html_url": "https://github.com/python/mypy/issues/1265", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1265", "id": 137968919, "events_url": "https://api.github.com/repos/python/mypy/issues/1265/events", "updated_at": "2016-03-11T00:31:00Z", "body": "@brettcannon pointed out yesterday as a followup to #924 that GitHub has a handy feature to help us highlight some information for people who participate by creating PRs and issues: https://help.github.com/articles/setting-guidelines-for-repository-contributors/\r\n\r\nWe should make one of those -- doesn't need to be very long. Topics to cover include\r\n* the code of conduct (#924)\r\n* the conventions @ddfisher, @JukkaL, and I established yesterday for triaging issues and haven't yet properly documented\r\n* the basic workflow of PRs (#1070)\r\n* either link to or incorporate all the other material at http://www.mypy-lang.org/wiki/DeveloperGuides\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1265/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document practices in a CONTRIBUTING file", "assignee": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "closed_at": "2016-03-11T00:28:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1265/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2016-03-02T19:31:30Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 1264, "html_url": "https://github.com/python/mypy/issues/1264", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1264", "id": 137953342, "events_url": "https://api.github.com/repos/python/mypy/issues/1264/events", "updated_at": "2016-04-07T18:55:22Z", "body": "Currently the overlapping checks for `__add__` / `__radd__` and similar make it impossible to have reasonable types for the `fractions` std lib module (and probably also `numbers`).\r\n\r\nThere are several potential related issues:\r\n\r\n* If a base class has a dynamically typed operator method and it gets overridden with an annotated method, mypy may get confused (it shouldn't complain about dynamically typed methods).\r\n* The overlapping checks should perhaps not complain if multiple inheritance can break type safety, as if we do this we'll have to reject way too much basically valid code (or the checks become so complicated that it's difficult to give useful feedback for users).\r\n* We'll probably have to allow more flexibility around overriding overloaded functions so that a subclass can introduce new overload variants with fewer restrictions.\r\n* Overriding methods that use type variables with enumerated values may also be broken in cases where a subclass uses a different set of values.\r\n\r\nThis is just a placeholder issue -- I'll add more detail later. Perhaps create separate issues for all the above issues.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1264/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make operator overloading overlapping checks more lenient", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1264/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-03-02T18:29:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1263, "html_url": "https://github.com/python/mypy/pull/1263", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1263", "id": 137930603, "events_url": "https://api.github.com/repos/python/mypy/issues/1263/events", "updated_at": "2016-03-03T19:50:17Z", "body": "An attempt to fix #1225. As stated there, a more general solution using `setuptools` could be more desirable.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1263/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix for issue #1225", "assignee": null, "closed_at": "2016-03-03T17:24:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1263/comments", "labels": [], "created_at": "2016-03-02T16:56:30Z", "user": {"followers_url": "https://api.github.com/users/allthedata/followers", "gists_url": "https://api.github.com/users/allthedata/gists{/gist_id}", "html_url": "https://github.com/allthedata", "following_url": "https://api.github.com/users/allthedata/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/6295582?v=3", "url": "https://api.github.com/users/allthedata", "organizations_url": "https://api.github.com/users/allthedata/orgs", "starred_url": "https://api.github.com/users/allthedata/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/allthedata/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/allthedata/subscriptions", "login": "allthedata", "repos_url": "https://api.github.com/users/allthedata/repos", "received_events_url": "https://api.github.com/users/allthedata/received_events", "id": 6295582, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1263.patch", "html_url": "https://github.com/python/mypy/pull/1263", "diff_url": "https://github.com/python/mypy/pull/1263.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1263"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1262, "html_url": "https://github.com/python/mypy/issues/1262", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1262", "id": 137770324, "events_url": "https://api.github.com/repos/python/mypy/issues/1262/events", "updated_at": "2016-03-02T23:35:32Z", "body": "We have two main bodies of documentation right now:\r\n* PEP 484 serves to some extent as reference documentation on the type system. The PEP format isn't directly oriented to this purpose, as it also has the history of the proposal, the rejected alternatives, etc. It's also to some extent a historical document and has a high barrier to making changes, which impedes incrementally improving it as documentation. At present PEP 484 also leaves a lot of details unspecified, because we're reluctant to standardize details that we haven't gotten enough experience with in real usage to be confident how they should work.\r\n* The Mypy documentation is aimed at being user documentation for the type system, as well as on the use of the `mypy` type-checker tool. It describes the system in more narrative fashion aimed at someone writing type annotations, and it describes details that aren't specified in the PEP. This is much like how for most Python language features, developers generally refer to the Python Language Reference rather than a corresponding PEP.\r\n\r\nWe've arrived at this setup through a particular historical path, and there are some things that aren't great about it. As we continue to improve the documentation, we should work out what set of bodies of documentation we'd like to have, and how to move toward that.\r\n\r\nHere's one setup that I think would improve some things:\r\n* PEP 484, in much the same role as today.\r\n* User-facing documentation of the PEP 484 type system and annotation syntax. Perhaps under a title like \"Python Type Hints Reference\", to follow the title of PEP 484 \"Type Hints\".\r\n* Documentation of the use of the `mypy` tool itself. This would focus on the CLI and the workflow specific to the type-checker, plus any Mypy-specific details that are too involved to put into a \"Mypy only\" box in the Type Hints Reference. (The latter might then have a box that mostly just links to the relevant section of this document.) Perhaps the \"Mypy Usage Reference\"? A quick-start or tutorial section might have some small annotation examples in order to be self-contained for its purpose, but the bulk of the work of documenting how to write annotations would be left to the Type Hints Reference, which this would just link to.\r\n\r\nA good first draft of the Python Type Hints Reference and Mypy Usage Reference might come from just taking the [existing Mypy documentation](http://mypy.readthedocs.org/en/latest/) and pulling it apart into two documents. Most of it would land in the Type Hints Reference, I think, and the Mypy Usage Reference would be relatively short.\r\n\r\nThe big value of making this distinction, though, comes if we can make the Python Type Hints Reference function as shared documentation across all the tools that implement PEP 484, including PyCharm and pytype, with the same kind of shared status as the PEP itself -- playing a role complementary to the PEP by addressing annotation-writers rather than implementors, having a more narrative style with more examples, and being readily editable with a low-friction pull-request workflow to continuously improve as exposition.\r\n\r\nIn particular:\r\n* To the extent that the various tools that implement PEP 484 agree on details, this allows us all to share the effort of documenting them well, and allows our users (especially users of multiple tools!) to go to a common place to read about them.\r\n* To the extent those agreed-on details aren't specified in the PEP, we should consider making them explicit there in any case. Or when the implementations happen to agree but we aren't yet confident of standardizing that for some reason, it'd be good to be explicit that that's the case where we do document those details.\r\n* To the extent the implementations disagree, this is likely to cause grief to users who use multiple tools (e.g., python/typing#184), and we should be discussing those details to find agreement (as we are in that thread) and putting that in the PEP.\r\n* To the extent that the implementations disagree and we can't work out the differences, or haven't yet, users will benefit from explicitly documenting the disagreements. In a Type Hints Reference we might do this with boxes labeled \"Mypy only:\" and so on, like how the Library Reference documents differences between Python versions.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1262/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Think through a strategy for documenting Mypy and the type system", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1262/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-03-02T04:29:54Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1261, "html_url": "https://github.com/python/mypy/issues/1261", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1261", "id": 137747694, "events_url": "https://api.github.com/repos/python/mypy/issues/1261/events", "updated_at": "2016-04-06T21:31:42Z", "body": "Currently type variables are identified by two namespaces \"function\" and \"class\" and a small numeric index, with the numbering starting from 1 in each new function and class. Which function or which class a given type variable refers to is implicit in where the type variable comes from in a given section of code in the type-checker. This leads to a number of bugs (TODO: link some of them here.)\r\n\r\n@JukkaL suggests instead identifying each type variable by a fresh ID number distinct from all others, which is common practice in other type-inference engines.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1261/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix handling of type variables to prevent confusion across different functions/classes", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1261/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-03-02T01:52:39Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1260, "html_url": "https://github.com/python/mypy/issues/1260", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1260", "id": 137740722, "events_url": "https://api.github.com/repos/python/mypy/issues/1260/events", "updated_at": "2016-03-17T19:16:13Z", "body": "This may need to be disentangled from the build system, and we may need to get `typing` before running integration tests.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1260/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove Python 2 `lib-typing`", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1260/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2016-03-02T01:08:12Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1259, "html_url": "https://github.com/python/mypy/issues/1259", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1259", "id": 137740626, "events_url": "https://api.github.com/repos/python/mypy/issues/1259/events", "updated_at": "2016-03-17T19:16:34Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1259/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename lib-python/ to reflect that it's test data", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1259/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2016-03-02T01:07:23Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1258, "html_url": "https://github.com/python/mypy/pull/1258", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1258", "id": 137728483, "events_url": "https://api.github.com/repos/python/mypy/issues/1258/events", "updated_at": "2016-03-02T18:03:55Z", "body": "PyPI now has 0.3.1 which supports Python 3.5.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1258/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update README regarding installing for Python 3.5", "assignee": null, "closed_at": "2016-03-02T18:03:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1258/comments", "labels": [], "created_at": "2016-03-02T00:05:38Z", "user": {"followers_url": "https://api.github.com/users/brettcannon/followers", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "html_url": "https://github.com/brettcannon", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/54418?v=3", "url": "https://api.github.com/users/brettcannon", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "login": "brettcannon", "repos_url": "https://api.github.com/users/brettcannon/repos", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "id": 54418, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1258.patch", "html_url": "https://github.com/python/mypy/pull/1258", "diff_url": "https://github.com/python/mypy/pull/1258.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1258"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1257, "html_url": "https://github.com/python/mypy/issues/1257", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1257", "id": 137726245, "events_url": "https://api.github.com/repos/python/mypy/issues/1257/events", "updated_at": "2016-03-17T19:03:46Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1257/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "switch to argparse for argument parsing", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": "2016-03-17T19:03:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1257/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2016-03-01T23:54:58Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1256, "html_url": "https://github.com/python/mypy/pull/1256", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1256", "id": 137461460, "events_url": "https://api.github.com/repos/python/mypy/issues/1256/events", "updated_at": "2016-03-02T19:21:43Z", "body": "follow up to\r\nhttps://github.com/python/mypy/pull/1250\r\n\r\nremove typeshed change; fixes merge conflict.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1256/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Code Cleanup", "assignee": null, "closed_at": "2016-03-01T04:49:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1256/comments", "labels": [], "created_at": "2016-03-01T03:59:41Z", "user": {"followers_url": "https://api.github.com/users/keithasaurus/followers", "gists_url": "https://api.github.com/users/keithasaurus/gists{/gist_id}", "html_url": "https://github.com/keithasaurus", "following_url": "https://api.github.com/users/keithasaurus/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/592217?v=3", "url": "https://api.github.com/users/keithasaurus", "organizations_url": "https://api.github.com/users/keithasaurus/orgs", "starred_url": "https://api.github.com/users/keithasaurus/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/keithasaurus/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/keithasaurus/subscriptions", "login": "keithasaurus", "repos_url": "https://api.github.com/users/keithasaurus/repos", "received_events_url": "https://api.github.com/users/keithasaurus/received_events", "id": 592217, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1256.patch", "html_url": "https://github.com/python/mypy/pull/1256", "diff_url": "https://github.com/python/mypy/pull/1256.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1256"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1255, "html_url": "https://github.com/python/mypy/issues/1255", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1255", "id": 137339826, "events_url": "https://api.github.com/repos/python/mypy/issues/1255/events", "updated_at": "2016-03-17T19:16:58Z", "body": "See for example this failed test run: https://travis-ci.org/python/typeshed/builds/112160905\r\n\r\nThere are several errors of the form\r\n```\r\nstdlib/2and3/fractions.pyi: error: Signatures of \"__radd__\" of \"Fraction\" and \"__add__\" of \"Rational\" are unsafely overlapping\r\n```\r\nThe errors somehow don't have a line number. (I believe the error is correct, I just would like to know the line number.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1255/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error message without line number: Signatures of \"__rxxx__\" of \"Class\" and \"__xxx__\" of \"Base\" are unsafely overlapping", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1255/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-29T19:00:30Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1254, "html_url": "https://github.com/python/mypy/issues/1254", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1254", "id": 137332020, "events_url": "https://api.github.com/repos/python/mypy/issues/1254/events", "updated_at": "2016-03-03T18:18:44Z", "body": "Example: https://travis-ci.org/python/typeshed/builds/112511679\r\n\r\nThe specific error is:\r\n```\r\nstdlib/3/builtins.pyi: note: In class \"list\":\r\nstdlib/3/builtins.pyi:476: error: Signatures of \"__iadd__\" and \"__add__\" are incompatible\r\n```\r\nI cannot repro this locally and the Travis CI tests pass when the PR is merged: https://travis-ci.org/python/typeshed/builds/112653577\r\n\r\nI've seen this error before but only in my \"incremental\" branch. It's pretty shy -- sometimes I get it consistently, sometimes it's irreproducible (in fact I haven't seen it in a while). I think the cause of the error is a subtlety in the order in which the import cycle (builtins, typing, abc) is type-checked. My theory is that in my branch the processing order is dependent on Python's hash seed; but I've also made some subtle changes to the processing of cycles in that branch.\r\n\r\nI have two hypotheses about why this is now happening in the Travis CI tests for typeshed:\r\n- either somehow my branch leaked into some Travis CI test machine and pip install doesn't properly overwrite this\r\n- or this has always been a problem, depending on the hash seed, and we've somehow never caught it in master", "labels_url": "https://api.github.com/repos/python/mypy/issues/1254/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Typeshed CI tests fail with error about __add__ vs. __iadd__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1254/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-29T18:27:01Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1253, "html_url": "https://github.com/python/mypy/pull/1253", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1253", "id": 137261546, "events_url": "https://api.github.com/repos/python/mypy/issues/1253/events", "updated_at": "2016-03-01T21:28:46Z", "body": "An attempt to fix https://github.com/python/mypy/issues/1252.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1253/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix for issue #1252.", "assignee": null, "closed_at": "2016-03-01T21:28:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1253/comments", "labels": [], "created_at": "2016-02-29T13:53:27Z", "user": {"followers_url": "https://api.github.com/users/vakaras/followers", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "html_url": "https://github.com/vakaras", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=3", "url": "https://api.github.com/users/vakaras", "organizations_url": "https://api.github.com/users/vakaras/orgs", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "login": "vakaras", "repos_url": "https://api.github.com/users/vakaras/repos", "received_events_url": "https://api.github.com/users/vakaras/received_events", "id": 75347, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1253.patch", "html_url": "https://github.com/python/mypy/pull/1253", "diff_url": "https://github.com/python/mypy/pull/1253.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1253"}, "locked": false}, {"milestone": null, "number": 1252, "html_url": "https://github.com/python/mypy/issues/1252", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1252", "id": 137260815, "events_url": "https://api.github.com/repos/python/mypy/issues/1252/events", "updated_at": "2016-03-01T21:28:46Z", "body": "Not sure if this is a problem with `buildout` or with `mypy`, but function `build.default_data_dir` returns `~/.buildout/eggs/mypy_lang-0.3.1-py3.4.egg` when it should return `~/.buildout/eggs/mypy_lang-0.3.1-py3.4.egg/lib/mypy`. As a result, I get an error: `mypy.errors.CompileError: tests/test_loop.py:1: error: Could not find builtins`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1252/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot find builtins when installed via buildout", "assignee": null, "closed_at": "2016-03-01T21:28:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1252/comments", "labels": [], "created_at": "2016-02-29T13:51:33Z", "user": {"followers_url": "https://api.github.com/users/vakaras/followers", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "html_url": "https://github.com/vakaras", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=3", "url": "https://api.github.com/users/vakaras", "organizations_url": "https://api.github.com/users/vakaras/orgs", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "login": "vakaras", "repos_url": "https://api.github.com/users/vakaras/repos", "received_events_url": "https://api.github.com/users/vakaras/received_events", "id": 75347, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1251, "html_url": "https://github.com/python/mypy/pull/1251", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1251", "id": 137079357, "events_url": "https://api.github.com/repos/python/mypy/issues/1251/events", "updated_at": "2016-03-13T05:06:15Z", "body": "* As described and requested in #1202, this commit makes errors on\r\n  command line syntax and files not found to go to stderr rather than\r\n  stdout.\r\n\r\nSigned-off-by: mr.Shu <mr@shu.io>", "labels_url": "https://api.github.com/repos/python/mypy/issues/1251/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "update: Write certain errors to stderr", "assignee": null, "closed_at": "2016-03-03T22:33:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1251/comments", "labels": [], "created_at": "2016-02-28T18:18:39Z", "user": {"followers_url": "https://api.github.com/users/mrshu/followers", "gists_url": "https://api.github.com/users/mrshu/gists{/gist_id}", "html_url": "https://github.com/mrshu", "following_url": "https://api.github.com/users/mrshu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/461491?v=3", "url": "https://api.github.com/users/mrshu", "organizations_url": "https://api.github.com/users/mrshu/orgs", "starred_url": "https://api.github.com/users/mrshu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mrshu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mrshu/subscriptions", "login": "mrshu", "repos_url": "https://api.github.com/users/mrshu/repos", "received_events_url": "https://api.github.com/users/mrshu/received_events", "id": 461491, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1251.patch", "html_url": "https://github.com/python/mypy/pull/1251", "diff_url": "https://github.com/python/mypy/pull/1251.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1251"}, "locked": false}, {"milestone": null, "number": 1250, "html_url": "https://github.com/python/mypy/pull/1250", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1250", "id": 136948652, "events_url": "https://api.github.com/repos/python/mypy/issues/1250/events", "updated_at": "2016-03-01T21:03:57Z", "body": "Follow up to https://github.com/python/mypy/pull/1244\r\n\r\nNow only removing dead code and two small code changes: 78309b1 and 8905b54, no mangling of import order.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1250/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Kp code cleanup", "assignee": null, "closed_at": "2016-03-01T03:58:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1250/comments", "labels": [], "created_at": "2016-02-27T18:03:35Z", "user": {"followers_url": "https://api.github.com/users/keithasaurus/followers", "gists_url": "https://api.github.com/users/keithasaurus/gists{/gist_id}", "html_url": "https://github.com/keithasaurus", "following_url": "https://api.github.com/users/keithasaurus/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/592217?v=3", "url": "https://api.github.com/users/keithasaurus", "organizations_url": "https://api.github.com/users/keithasaurus/orgs", "starred_url": "https://api.github.com/users/keithasaurus/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/keithasaurus/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/keithasaurus/subscriptions", "login": "keithasaurus", "repos_url": "https://api.github.com/users/keithasaurus/repos", "received_events_url": "https://api.github.com/users/keithasaurus/received_events", "id": 592217, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1250.patch", "html_url": "https://github.com/python/mypy/pull/1250", "diff_url": "https://github.com/python/mypy/pull/1250.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1250"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1249, "html_url": "https://github.com/python/mypy/issues/1249", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1249", "id": 136869256, "events_url": "https://api.github.com/repos/python/mypy/issues/1249/events", "updated_at": "2016-03-17T19:17:14Z", "body": "We have a couple of different ad-hoc scripts for invoking mypy developing in different repositories where people are using it, which generally\r\n * pass flags like `--py2` and `--silent-imports`, and\r\n * work out through various logic what files mypy should process.\r\n\r\nHaving bits of shell script grow is never fun, and the logic to find what files to run on isn't totally trivial -- it ends up something like \"files with `*.py` names that match `# type:` with grep.\" Even as I write that it's actually more subtle as `# type:` is both slightly too strict (`#type:`, no space, is a perfectly good start to a type comment) and too loose (string literals.)\r\n\r\nMoreover, when there's a complicated script and the arguments to the underlying `mypy` become hard to identify, then when people are debugging an issue and need to vary the `mypy` invocation at the command line they can end up reconstructing versions that miss some of the details, which leads to a super frustrating debugging session -- @gvanrossum saw this happen yesterday.\r\n\r\nSo I think it'd be really helpful to get to a point where a user can sit anywhere inside the source tree of a codebase that uses Mypy, and type just the command\r\n```\r\nmypy\r\n```\r\nto have the typechecker run in the normal way over that codebase. Plus arguments as desired to modify what it does, but starting from that normal configuration.\r\n\r\nThe basic tactic that a lot of development tools take to make that kind of interface possible (including Hack, `git`, `arc`, and many others) is to have\r\n * a file (or subdirectory) sitting at the root directory of the project, which\r\n * doubles as a configuration file (or directory with room for config files.)\r\n\r\nSo e.g. a file `.mypy`, and when the `mypy` command is run, it looks up in the filesystem to find such a file. If there, then (a) the default operation is on all annotated files in the tree (by some specified definition), and (b) it's read as a `configparser` config file, which could be empty or could specify the equivalent of `--py2`, `--silent-imports`, etc.\r\n\r\nPossible variations include\r\n* different filenames; or perhaps it's a directory, which could double as the home for cache files\r\n* maybe instead of `mypy` as the command to get this behavior, we start giving ourselves room for subcommands:\r\n  * e.g., `mypy check` means \"run the typechecker on this project, requiring a `.mypy` file\"\r\n  * then `mypy ls` could mean \"list what files you would typecheck\", which will be very helpful in some debugging situations especially in the presence of `--silent-imports`\r\n  * the clash with e.g. `mypy check.py` is awkward, but we could say something like \"if it ends in `.py` or `/` it's a file, otherwise it can only be a subcommand\" -- just existing invocations like `mypy myscript` would break\r\n  * alternatively we could avoid that clash by using some command name other than `mypy`\r\n\r\n/cc @ddfisher who was also discussing this today.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1249/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support a project/repo-wide config file", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1249/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-27T02:52:20Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1248, "html_url": "https://github.com/python/mypy/pull/1248", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1248", "id": 136866441, "events_url": "https://api.github.com/repos/python/mypy/issues/1248/events", "updated_at": "2016-02-27T06:15:45Z", "body": "As per Guido's suggestion on #1218.  This is a lot less verbose and slightly faster.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1248/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use dicts instead of long elif chains for fastparse operator conversion", "assignee": null, "closed_at": "2016-02-27T06:15:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1248/comments", "labels": [], "created_at": "2016-02-27T02:22:06Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1248.patch", "html_url": "https://github.com/python/mypy/pull/1248", "diff_url": "https://github.com/python/mypy/pull/1248.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1248"}, "locked": false}, {"milestone": null, "number": 1247, "html_url": "https://github.com/python/mypy/pull/1247", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1247", "id": 136628520, "events_url": "https://api.github.com/repos/python/mypy/issues/1247/events", "updated_at": "2016-02-29T19:54:00Z", "body": "Implemented #1234 ( support `# type: (...) -> Rtype` ) and happened to throw in a more verbose TypeParseError as well.\r\n\r\nThink I should change `TypeParseError().message` to `.reason`? Or strip out the verbose-parse-error entirely?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1247/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added support for Python 2 ellipsis shortcut for untyped arguments", "assignee": null, "closed_at": "2016-02-29T19:54:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1247/comments", "labels": [], "created_at": "2016-02-26T08:28:24Z", "user": {"followers_url": "https://api.github.com/users/wittekm/followers", "gists_url": "https://api.github.com/users/wittekm/gists{/gist_id}", "html_url": "https://github.com/wittekm", "following_url": "https://api.github.com/users/wittekm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/578530?v=3", "url": "https://api.github.com/users/wittekm", "organizations_url": "https://api.github.com/users/wittekm/orgs", "starred_url": "https://api.github.com/users/wittekm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/wittekm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/wittekm/subscriptions", "login": "wittekm", "repos_url": "https://api.github.com/users/wittekm/repos", "received_events_url": "https://api.github.com/users/wittekm/received_events", "id": 578530, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1247.patch", "html_url": "https://github.com/python/mypy/pull/1247", "diff_url": "https://github.com/python/mypy/pull/1247.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1247"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1246, "html_url": "https://github.com/python/mypy/issues/1246", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1246", "id": 136569270, "events_url": "https://api.github.com/repos/python/mypy/issues/1246/events", "updated_at": "2016-04-14T11:39:04Z", "body": "Code to repro:\r\n\r\n```\r\n#!/usr/bin/env python\r\nfrom typing import Generic, TypeVar\r\n\r\nT = TypeVar(\"T\")\r\n\r\nclass Test(Generic[T]):\r\n\r\n    def __init__(self, a):\r\n        # type: (T) -> None\r\n        self.a = a\r\n\r\nclass StrTest(Test[str]):\r\n    pass\r\n\r\ns = StrTest(\"str1\")\r\n```\r\n\r\nI would expect there to be no error here, but mypy outputs the following:\r\n\r\n```\r\ntest.py:15: error: Argument 1 to \"StrTest\" has incompatible type \"str\"; expected \"T\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1246/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "__init__ of subclass of a Generic class uses the generic type instead of the specified one", "assignee": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "closed_at": "2016-04-14T11:39:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1246/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-26T01:34:23Z", "user": {"followers_url": "https://api.github.com/users/alexsydell/followers", "gists_url": "https://api.github.com/users/alexsydell/gists{/gist_id}", "html_url": "https://github.com/alexsydell", "following_url": "https://api.github.com/users/alexsydell/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3269831?v=3", "url": "https://api.github.com/users/alexsydell", "organizations_url": "https://api.github.com/users/alexsydell/orgs", "starred_url": "https://api.github.com/users/alexsydell/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/alexsydell/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/alexsydell/subscriptions", "login": "alexsydell", "repos_url": "https://api.github.com/users/alexsydell/repos", "received_events_url": "https://api.github.com/users/alexsydell/received_events", "id": 3269831, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1245, "html_url": "https://github.com/python/mypy/issues/1245", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1245", "id": 136555238, "events_url": "https://api.github.com/repos/python/mypy/issues/1245/events", "updated_at": "2016-03-17T20:46:35Z", "body": "Python 3.5.1, mypy e360dae.\r\n\r\nInput file:\r\n\r\n```python\r\n__builtins__['asd'] = 'qwe'\r\n```\r\n\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/runpy.py\", line 170, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/me/projects/mypy/mypy/__main__.py\", line 5, in <module>\r\n    main(None)\r\n  File \"/Users/me/projects/mypy/mypy/main.py\", line 54, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Users/me/projects/mypy/mypy/main.py\", line 98, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/me/projects/mypy/mypy/build.py\", line 208, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Users/me/projects/mypy/mypy/build.py\", line 408, in process\r\n    next.process()\r\n  File \"/Users/me/projects/mypy/mypy/build.py\", line 912, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Users/me/projects/mypy/mypy/checker.py\", line 410, in visit_file\r\n    self.accept(d)\r\n  File \"/Users/me/projects/mypy/mypy/checker.py\", line 451, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/me/projects/mypy/mypy/nodes.py\", line 564, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/Users/me/projects/mypy/mypy/checker.py\", line 1125, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/Users/me/projects/mypy/mypy/checker.py\", line 1170, in check_assignment\r\n    self.check_indexed_assignment(index_lvalue, rvalue, rvalue)\r\n  File \"/Users/me/projects/mypy/mypy/checker.py\", line 1505, in check_indexed_assignment\r\n    self.try_infer_partial_type_from_indexed_assignment(lvalue, rvalue)\r\n  File \"/Users/me/projects/mypy/mypy/checker.py\", line 1519, in try_infer_partial_type_from_indexed_assignment\r\n    if var is not None and isinstance(var.type, PartialType):\r\nAttributeError: 'MypyFile' object has no attribute 'type'\r\n\r\n*** INTERNAL ERROR ***\r\n\r\na.py:1: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1245/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "AttributeError: 'MypyFile' object has no attribute 'type'", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1245/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-26T00:20:37Z", "user": {"followers_url": "https://api.github.com/users/jstasiak/followers", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "html_url": "https://github.com/jstasiak", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/36209?v=3", "url": "https://api.github.com/users/jstasiak", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "login": "jstasiak", "repos_url": "https://api.github.com/users/jstasiak/repos", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "id": 36209, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1244, "html_url": "https://github.com/python/mypy/pull/1244", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1244", "id": 136516085, "events_url": "https://api.github.com/repos/python/mypy/issues/1244/events", "updated_at": "2016-03-01T21:03:59Z", "body": "Just cleaned up a bunch of imports in the mypy package and did a tiny bit of code housekeeping. All tests pass.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1244/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Kp unused imports", "assignee": null, "closed_at": "2016-02-26T23:54:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1244/comments", "labels": [], "created_at": "2016-02-25T21:21:32Z", "user": {"followers_url": "https://api.github.com/users/keithasaurus/followers", "gists_url": "https://api.github.com/users/keithasaurus/gists{/gist_id}", "html_url": "https://github.com/keithasaurus", "following_url": "https://api.github.com/users/keithasaurus/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/592217?v=3", "url": "https://api.github.com/users/keithasaurus", "organizations_url": "https://api.github.com/users/keithasaurus/orgs", "starred_url": "https://api.github.com/users/keithasaurus/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/keithasaurus/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/keithasaurus/subscriptions", "login": "keithasaurus", "repos_url": "https://api.github.com/users/keithasaurus/repos", "received_events_url": "https://api.github.com/users/keithasaurus/received_events", "id": 592217, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1244.patch", "html_url": "https://github.com/python/mypy/pull/1244", "diff_url": "https://github.com/python/mypy/pull/1244.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1244"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1243, "html_url": "https://github.com/python/mypy/issues/1243", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1243", "id": 136495097, "events_url": "https://api.github.com/repos/python/mypy/issues/1243/events", "updated_at": "2016-03-01T23:26:57Z", "body": "We use manually rolled enum equivalents in a number of places instead of just using the 3.4 enum module.  Using real enums would make debugging a lot nicer in some cases.\r\n\r\nThe main downside to this change is that it'll add an additional dependency when running on 3.3 and below.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1243/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "use enums instead of manually assigning small integers", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1243/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2016-02-25T20:04:19Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1242, "html_url": "https://github.com/python/mypy/pull/1242", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1242", "id": 136472028, "events_url": "https://api.github.com/repos/python/mypy/issues/1242/events", "updated_at": "2016-02-25T18:45:52Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1242/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fix typos", "assignee": null, "closed_at": "2016-02-25T18:45:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1242/comments", "labels": [], "created_at": "2016-02-25T18:33:04Z", "user": {"followers_url": "https://api.github.com/users/olshevskiy87/followers", "gists_url": "https://api.github.com/users/olshevskiy87/gists{/gist_id}", "html_url": "https://github.com/olshevskiy87", "following_url": "https://api.github.com/users/olshevskiy87/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1443953?v=3", "url": "https://api.github.com/users/olshevskiy87", "organizations_url": "https://api.github.com/users/olshevskiy87/orgs", "starred_url": "https://api.github.com/users/olshevskiy87/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/olshevskiy87/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/olshevskiy87/subscriptions", "login": "olshevskiy87", "repos_url": "https://api.github.com/users/olshevskiy87/repos", "received_events_url": "https://api.github.com/users/olshevskiy87/received_events", "id": 1443953, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1242.patch", "html_url": "https://github.com/python/mypy/pull/1242", "diff_url": "https://github.com/python/mypy/pull/1242.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1242"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1241, "html_url": "https://github.com/python/mypy/issues/1241", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1241", "id": 136243332, "events_url": "https://api.github.com/repos/python/mypy/issues/1241/events", "updated_at": "2016-03-01T23:27:03Z", "body": "I'm trying to stub a function that takes different types for a base argument and then a bunch of AnyStrs. It seems that neither Union nor overload works correctly for stubbing it:\r\n```\r\nfrom typing import overload, AnyStr, Union\r\n\r\ndef f(x: Union[AnyStr, int], *a: AnyStr) -> None: ...\r\n\r\n@overload\r\ndef g(x: AnyStr, *a: AnyStr) -> None: ...\r\n@overload\r\ndef g(x: int, *a: AnyStr) -> None: ...\r\n\r\nf('foo')\r\nf('foo', 'bar')\r\nf('foo', b'bar')  # correctly fails: Type argument 1 of \"f\" has incompatible value \"object\"\r\nf(1)  # erroneously fails: error: Type argument 1 of \"f\" has incompatible value \"int\"\r\nf(1, 'foo')  # erroneously fails: error: Type argument 1 of \"f\" has incompatible value \"object\"\r\nf(1, 'foo', b'bar')  # correctly fails: error: Type argument 1 of \"f\" has incompatible value \"object\"\r\n\r\ng('foo')\r\ng('foo', 'bar')\r\ng('foo', b'bar')  # correctly fails: error: Type argument 1 of \"g\" has incompatible value \"object\"\r\ng(1)\r\ng(1, 'foo')  # erroneously fails: error: Type argument 1 of \"g\" has incompatible value \"object\"\r\ng(1, 'foo', b'bar')  # correctly fails: Type argument 1 of \"g\" has incompatible value \"object\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1241/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Incorrect errors with TypeVar + Union/overload", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1241/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-25T01:20:25Z", "user": {"followers_url": "https://api.github.com/users/ahaven/followers", "gists_url": "https://api.github.com/users/ahaven/gists{/gist_id}", "html_url": "https://github.com/ahaven", "following_url": "https://api.github.com/users/ahaven/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1711285?v=3", "url": "https://api.github.com/users/ahaven", "organizations_url": "https://api.github.com/users/ahaven/orgs", "starred_url": "https://api.github.com/users/ahaven/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ahaven/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ahaven/subscriptions", "login": "ahaven", "repos_url": "https://api.github.com/users/ahaven/repos", "received_events_url": "https://api.github.com/users/ahaven/received_events", "id": 1711285, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1240, "html_url": "https://github.com/python/mypy/issues/1240", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1240", "id": 136205445, "events_url": "https://api.github.com/repos/python/mypy/issues/1240/events", "updated_at": "2016-03-01T23:27:17Z", "body": "One area where this comes up is SQLAlchemy table definitions.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1240/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Design and build a plugin architecture", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1240/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-24T22:23:55Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1239, "html_url": "https://github.com/python/mypy/pull/1239", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1239", "id": 136189260, "events_url": "https://api.github.com/repos/python/mypy/issues/1239/events", "updated_at": "2016-02-25T21:52:06Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1239/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update typeshed", "assignee": null, "closed_at": "2016-02-25T21:52:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1239/comments", "labels": [], "created_at": "2016-02-24T21:18:58Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1239.patch", "html_url": "https://github.com/python/mypy/pull/1239", "diff_url": "https://github.com/python/mypy/pull/1239.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1239"}, "locked": false}, {"milestone": null, "number": 1238, "html_url": "https://github.com/python/mypy/pull/1238", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1238", "id": 136168424, "events_url": "https://api.github.com/repos/python/mypy/issues/1238/events", "updated_at": "2016-02-24T21:06:34Z", "body": "This should fix typeshed's CI.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1238/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make mypy tolerant of True/False/__debug__ not being defined in typeshed", "assignee": null, "closed_at": "2016-02-24T21:06:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1238/comments", "labels": [], "created_at": "2016-02-24T19:50:11Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1238.patch", "html_url": "https://github.com/python/mypy/pull/1238", "diff_url": "https://github.com/python/mypy/pull/1238.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1238"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 2, "number": 1, "html_url": "https://github.com/python/mypy/milestones/Questions", "state": "open", "id": 1616623, "url": "https://api.github.com/repos/python/mypy/milestones/1", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/1/labels", "description": "", "closed_at": null, "title": "Questions", "updated_at": "2016-04-07T18:39:32Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:12:38Z"}, "number": 1237, "html_url": "https://github.com/python/mypy/issues/1237", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1237", "id": 136162181, "events_url": "https://api.github.com/repos/python/mypy/issues/1237/events", "updated_at": "2016-03-01T23:27:22Z", "body": "Why does mypy consider...\r\n```\r\nclass Foo:\r\n    def factory(self) -> str:\r\n        return 'Hello'\r\n\r\nclass Bar(Foo):\r\n    def factory(self) -> int:\r\n        return 10\r\n```\r\nto be an error? While it may be poor design, it isn't wrong.\r\n\r\nThanks,\r\nPhil", "labels_url": "https://api.github.com/repos/python/mypy/issues/1237/labels{/name}", "comments": 14, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Why is \"incompatible with supertype\" an error?", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1237/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-24T19:27:43Z", "user": {"followers_url": "https://api.github.com/users/philthompson10/followers", "gists_url": "https://api.github.com/users/philthompson10/gists{/gist_id}", "html_url": "https://github.com/philthompson10", "following_url": "https://api.github.com/users/philthompson10/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/17459808?v=3", "url": "https://api.github.com/users/philthompson10", "organizations_url": "https://api.github.com/users/philthompson10/orgs", "starred_url": "https://api.github.com/users/philthompson10/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/philthompson10/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/philthompson10/subscriptions", "login": "philthompson10", "repos_url": "https://api.github.com/users/philthompson10/repos", "received_events_url": "https://api.github.com/users/philthompson10/received_events", "id": 17459808, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1236, "html_url": "https://github.com/python/mypy/issues/1236", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1236", "id": 136159472, "events_url": "https://api.github.com/repos/python/mypy/issues/1236/events", "updated_at": "2016-04-06T22:11:58Z", "body": "```python\r\nfrom typing import TypeVar\r\nT = TypeVar('T')\r\nV = TypeVar('V')\r\n\r\ndef identity(x: T) -> T: ...\r\ndef type_var_using_fn(x: V) -> None: ...\r\nidentity(type_var_using_fn)\r\n```\r\nhas the confusing error:\r\n```\r\ntest.py:10: error: Argument 1 to \"identity\" has incompatible type Callable[[V], None]; expected Callable[[V], None]\r\n```\r\n\r\nThis is most commonly seen when decorating functions with TypeVars.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1236/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "typevars becoming types with typevars doesn't work", "assignee": null, "closed_at": "2016-04-06T22:11:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1236/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-24T19:18:29Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1235, "html_url": "https://github.com/python/mypy/issues/1235", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1235", "id": 135680854, "events_url": "https://api.github.com/repos/python/mypy/issues/1235/events", "updated_at": "2016-03-01T23:43:05Z", "body": "Currently the `--implicit-any` mode flag is global, as it uniformly affects how mypy processes every file in a mypy run. Other global flags are being considered or implemented, including `--strict` and the \"weak mode\". Similarly, we could have options to disable/enable individual errors/warnings. These kinds of mode flags have some inconvenient properties, and I elaborate on this below.\r\n\r\n**A. Combining type checked programs is hard**\r\n\r\nIt's hard to combine two independently developed codebases into a single type checked program, as it may be necessary to use the least common denominator options to type check the combined program without spurious warnings. Global flags effectively introduce multiple mypy dialects that aren't quite compatible. Using the least common denominator options is clearly not desirable as programmers likely chose to enable some options for their code for a good reason.\r\n\r\nIntegrating multiple pieces of code without loosening type checking may involve a lot of refactoring or adding `# type: ignore` comments.\r\n\r\n**B. Migrating to stricter type checking mode is hard**\r\n\r\nMigrating from the default mode to `--strict`, for example, would have to be performed for the whole code base to avoid generating warnings. If there is, say, millions of lines code, this can be a huge undertaking, and may require the co-operation of owners of every part of the codebase. It would be much nicer to migrate to stricter options gradually, similar to how mypy supports migration from dynamic to static typing in small increments. This would also give more flexibility to owners of particular modules.\r\n\r\n**C. Options aren't self-documenting**\r\n\r\nWhen just looking at a source file, it's not obvious under which options it's supposed to type checked. This is less of a problem within a single, uniform codebase, but it becomes more important when combining code from multiple sources. It's easy to \"forget\" that some files should be checked in the strict mode when copying or moving source code, for example, since the knowledge lives in external configuration such as build scripts instead of being close to the physical code.\r\n\r\n---\r\n\r\nHere are some ways to overcome some of these problems:\r\n\r\n1. We type check code bases with different global options using separate mypy runs, stubbing out dependencies. So if codebases A and B have different global options, and A depends on B, we first type check B using the desired options and generate a set of stub files. We then separately type check A using a different set of options, and using stubs for B. This increases complexity and requires additional tooling to automatically generate stubs. Additionally, this doesn't significantly simplify the migration to stricter options within a single codebase.\r\n\r\n2. Provide fine grained configuration outside source files. For example, perhaps mypy will accept options such as `--strict=package1,package2` that will enforce some options for particular packages only. Alternatively, we could have a configuration file with rules such as `strict=package/**,module`, or perhaps even a hierarchy of such configuration files. This provides more flexibility but it makes it easy to forget to modify the configuration when adding new files or moving files around.\r\n\r\n3. Provide per-file option flags. We always default to some well-defined mode, and we support comments such as `# mypy: strict` near the top of the file that change mode options _for that file only_. This is very flexible and it makes files self-contained, but it's easy to forget to add the desired options to new files. We could also have a tool that enforces that certain options are always used in certain packages, similar to (2) above, in addition to per-file comments.\r\n\r\n4. Don't provide any options. Make the default mode \"good enough\" for most people.\r\n\r\nMy proposal is to choose some variant of option 3.\r\n\r\n---\r\n\r\nNote that I don't consider `--silent-import` a global option because it only affects files _not being processed_, so it's not really problematic in the same sense as the other options I discussed above.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1235/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Controlling scope of build options", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1235/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-23T09:20:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1234, "html_url": "https://github.com/python/mypy/issues/1234", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1234", "id": 135592573, "events_url": "https://api.github.com/repos/python/mypy/issues/1234/events", "updated_at": "2016-03-02T22:42:24Z", "body": "Hi all,\r\n\r\nIt would be nice if MyPy supported a similar ellipsis notation to `typing.Callable`. \r\n\r\nFrom the typing [docs](https://docs.python.org/3/library/typing.html), \r\n> It is possible to declare the return type of a callable without specifying the call signature by substituting a literal ellipsis for the list of arguments in the type hint: `Callable[..., ReturnType]`.\r\n\r\nIt would be nice if MyPy supported something similar - i.e. \r\n`# type: ... -> ReturnType`\r\nor\r\n`# type: (...) -> ReturnType`\r\n\r\nWhich would basically evaluate the same way as `# type: (Any, Any, Any, Any) -> ConcreteType` for a 4-argument function.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1234/labels{/name}", "comments": 11, "repository_url": "https://api.github.com/repos/python/mypy", "title": "[feature request] Support ellipsis (...) like Callable when we want untyped arguments", "assignee": null, "closed_at": "2016-02-29T20:02:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1234/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-02-23T00:52:35Z", "user": {"followers_url": "https://api.github.com/users/wittekm/followers", "gists_url": "https://api.github.com/users/wittekm/gists{/gist_id}", "html_url": "https://github.com/wittekm", "following_url": "https://api.github.com/users/wittekm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/578530?v=3", "url": "https://api.github.com/users/wittekm", "organizations_url": "https://api.github.com/users/wittekm/orgs", "starred_url": "https://api.github.com/users/wittekm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/wittekm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/wittekm/subscriptions", "login": "wittekm", "repos_url": "https://api.github.com/users/wittekm/repos", "received_events_url": "https://api.github.com/users/wittekm/received_events", "id": 578530, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1233, "html_url": "https://github.com/python/mypy/issues/1233", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1233", "id": 135562677, "events_url": "https://api.github.com/repos/python/mypy/issues/1233/events", "updated_at": "2016-03-17T22:35:14Z", "body": "The `--implicit-any` flag is named for its implementation details (adding `Any`s to all unannotated functions) rather than for its desired effect (to typecheck functions unannotated functions).\r\n\r\nI think something along the lines of `--check-untyped-functions`, `--check-all`, `--check-all-functions`, or similar would suit it better.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1233/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "`--implicit-any` is poorly named", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": "2016-03-17T22:35:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1233/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-22T22:17:11Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1232, "html_url": "https://github.com/python/mypy/issues/1232", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1232", "id": 135328174, "events_url": "https://api.github.com/repos/python/mypy/issues/1232/events", "updated_at": "2016-02-22T20:18:36Z", "body": "Currently the GitHub repository contains the following tags:\r\n- v0.1.0\r\n- v0.2.0\r\n- v1.3.1\r\n\r\nThere's no tag for the 0.3.0 release, and `v1.3.1` looks like a typo for `v0.3.1`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1232/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Tags not right in the repository", "assignee": null, "closed_at": "2016-02-22T20:18:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1232/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2016-02-22T06:19:23Z", "user": {"followers_url": "https://api.github.com/users/akaihola/followers", "gists_url": "https://api.github.com/users/akaihola/gists{/gist_id}", "html_url": "https://github.com/akaihola", "following_url": "https://api.github.com/users/akaihola/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/13725?v=3", "url": "https://api.github.com/users/akaihola", "organizations_url": "https://api.github.com/users/akaihola/orgs", "starred_url": "https://api.github.com/users/akaihola/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/akaihola/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/akaihola/subscriptions", "login": "akaihola", "repos_url": "https://api.github.com/users/akaihola/repos", "received_events_url": "https://api.github.com/users/akaihola/received_events", "id": 13725, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1231, "html_url": "https://github.com/python/mypy/issues/1231", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1231", "id": 135295614, "events_url": "https://api.github.com/repos/python/mypy/issues/1231/events", "updated_at": "2016-04-12T19:40:28Z", "body": "MyPy does not show an error for the following code:\r\n```python\r\nimport typing\r\n\r\ndef foo(s: set[int]) -> int:\r\n  return len(s)\r\n\r\ndef goo(l: list[int]) -> int:\r\n  return len(l)\r\n```\r\n\r\nHowever, this code is not actually valid: it throws the following error at runtime:\r\n```\r\nTraceback (most recent call last):\r\n  File \"error.py\", line 3, in <module>\r\n    def foo(s: set[int]) -> int:\r\nTypeError: 'type' object is not subscriptable\r\n```\r\n\r\nThe first step to fixing this code is to change `set` to `Set` and `list` to `List`. This, however, leads to another runtime error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"error.py\", line 3, in <module>\r\n    def foo(s: Set[int]) -> int:\r\nNameError: name 'Set' is not defined\r\n```\r\n\r\nFinally, we need to add the following imports:\r\n```python\r\nfrom typing import Set, List\r\n```\r\nand the program finally runs without an error.\r\n\r\nSo there are two issues here:\r\n1) mypy should catch when a \"not subscriptable\" thing (whatever that means) is written instead of an actual type\r\n2) mypy should detect when types are used without being imported ", "labels_url": "https://api.github.com/repos/python/mypy/issues/1231/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Typechecker does not check that \"types\" are actually types", "assignee": null, "closed_at": "2016-04-12T19:40:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1231/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}], "created_at": "2016-02-22T02:29:48Z", "user": {"followers_url": "https://api.github.com/users/sid-kap/followers", "gists_url": "https://api.github.com/users/sid-kap/gists{/gist_id}", "html_url": "https://github.com/sid-kap", "following_url": "https://api.github.com/users/sid-kap/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/6425077?v=3", "url": "https://api.github.com/users/sid-kap", "organizations_url": "https://api.github.com/users/sid-kap/orgs", "starred_url": "https://api.github.com/users/sid-kap/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/sid-kap/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/sid-kap/subscriptions", "login": "sid-kap", "repos_url": "https://api.github.com/users/sid-kap/repos", "received_events_url": "https://api.github.com/users/sid-kap/received_events", "id": 6425077, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1230, "html_url": "https://github.com/python/mypy/pull/1230", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1230", "id": 135178993, "events_url": "https://api.github.com/repos/python/mypy/issues/1230/events", "updated_at": "2016-02-24T09:44:39Z", "body": "Strict mode disallows calling untyped functions from typed ones.  Fixes #936.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1230/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add strict mode", "assignee": null, "closed_at": "2016-02-24T01:56:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1230/comments", "labels": [], "created_at": "2016-02-21T08:41:33Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1230.patch", "html_url": "https://github.com/python/mypy/pull/1230", "diff_url": "https://github.com/python/mypy/pull/1230.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1230"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1229, "html_url": "https://github.com/python/mypy/issues/1229", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1229", "id": 135153836, "events_url": "https://api.github.com/repos/python/mypy/issues/1229/events", "updated_at": "2016-04-08T16:19:09Z", "body": "I noticed that for a function that should return a value, for example:\r\n```python\r\ndef foo() -> int:\r\n  pass\r\n```\r\nmypy doesn't report an error if there is a pass (and no return statement) in the function. Is this intentional?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1229/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "function body of `pass` doesn't cause error", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1229/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-21T03:31:21Z", "user": {"followers_url": "https://api.github.com/users/sid-kap/followers", "gists_url": "https://api.github.com/users/sid-kap/gists{/gist_id}", "html_url": "https://github.com/sid-kap", "following_url": "https://api.github.com/users/sid-kap/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/6425077?v=3", "url": "https://api.github.com/users/sid-kap", "organizations_url": "https://api.github.com/users/sid-kap/orgs", "starred_url": "https://api.github.com/users/sid-kap/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/sid-kap/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/sid-kap/subscriptions", "login": "sid-kap", "repos_url": "https://api.github.com/users/sid-kap/repos", "received_events_url": "https://api.github.com/users/sid-kap/received_events", "id": 6425077, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1228, "html_url": "https://github.com/python/mypy/issues/1228", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1228", "id": 135148421, "events_url": "https://api.github.com/repos/python/mypy/issues/1228/events", "updated_at": "2016-03-17T20:50:14Z", "body": "The mypy website refers to \"mypy programs\" in a number of places, which I think is potentially confusing for new users.  For example, the Examples page calls half the example programs \"Mypy with dynamic typing\", which made sense historically, but now is a bit strange -- they're all standard Python 3.\r\n\r\nI think it could be worthwhile to come up with some standard language for a Python program that mypy can typecheck and then using that consistently on the website.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1228/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy website talks about mypy as if it were it's own language", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1228/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2016-02-21T02:30:39Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1227, "html_url": "https://github.com/python/mypy/issues/1227", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1227", "id": 135135859, "events_url": "https://api.github.com/repos/python/mypy/issues/1227/events", "updated_at": "2016-03-17T22:19:03Z", "body": "On the [examples page](http://www.mypy-lang.org/examples.html), the very last example is a prime number sieve. Unfortunately, the code does not work with Python 3 (I tested it with 3.5.1 on Linux):\r\n```\r\n$ python3 mypy_static_typing.py \r\nTraceback (most recent call last):\r\n  File \"mypy_static_typing.py\", line 12, in <module>\r\n    for p in iter_primes():\r\n  File \"mypy_static_typing.py\", line 7, in iter_primes\r\n    prime = numbers.next()\r\nAttributeError: 'itertools.count' object has no attribute 'next'\r\n```\r\nwhereas it works fine with 2.7.11 (I commented out the `typing` import and usage). If the offending code is replaced with `next(numbers)` (or `numbers.__next__()` if you wish), there's another error:\r\n```\r\nAttributeError: module 'itertools' has no attribute 'ifilter'\r\n```\r\nIn Python 3, `itertools.ifilter()` became the built-in function `filter()`. So, the code should be as follows:\r\n```python\r\nimport itertools\r\nfrom typing import Iterator\r\n\r\ndef iter_primes() -> Iterator[int]:\r\n    numbers = itertools.count(2)\r\n    while True:\r\n        prime = next(numbers)\r\n        yield prime\r\n\r\n        numbers = filter(prime.__rmod__, numbers)\r\n\r\nfor p in iter_primes():\r\n    if p > 1000:\r\n        break\r\n    print(p)\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1227/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Prime number sieve with generators example doesn't work with Python 3", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": "2016-03-17T22:18:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1227/comments", "labels": [], "created_at": "2016-02-20T23:53:53Z", "user": {"followers_url": "https://api.github.com/users/MattDMo/followers", "gists_url": "https://api.github.com/users/MattDMo/gists{/gist_id}", "html_url": "https://github.com/MattDMo", "following_url": "https://api.github.com/users/MattDMo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1776358?v=3", "url": "https://api.github.com/users/MattDMo", "organizations_url": "https://api.github.com/users/MattDMo/orgs", "starred_url": "https://api.github.com/users/MattDMo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MattDMo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MattDMo/subscriptions", "login": "MattDMo", "repos_url": "https://api.github.com/users/MattDMo/repos", "received_events_url": "https://api.github.com/users/MattDMo/received_events", "id": 1776358, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1226, "html_url": "https://github.com/python/mypy/issues/1226", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1226", "id": 135113081, "events_url": "https://api.github.com/repos/python/mypy/issues/1226/events", "updated_at": "2016-04-08T20:06:17Z", "body": "On Windows 10 x64 using Python 3.5.1:\r\n\r\n```bat\r\n>pip -V\r\npip 8.0.2\r\n>pip install mypy-lang\r\n>pip list\r\n...\r\nmypy-lang (0.3.1)\r\n...\r\n>mypy\r\n'mypy' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n```\r\n\r\nI think what would be helpful for Windows users would be a `console_scripts` [`entry_point`](https://pythonhosted.org/setuptools/setuptools.html#new-and-changed-setup-keywords):\r\n```python\r\nsetuptools.setup(\r\n    ...\r\n    entry_points={\r\n            'console_scripts': [\r\n                'mypy = (INSERT MAIN MODULE):main',\r\n            ],\r\n```\r\n\r\nThis will work on Linux and Windows.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1226/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "No console entry point for Windows", "assignee": null, "closed_at": "2016-04-08T20:06:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1226/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2016-02-20T19:38:44Z", "user": {"followers_url": "https://api.github.com/users/johnthagen/followers", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "html_url": "https://github.com/johnthagen", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10340167?v=3", "url": "https://api.github.com/users/johnthagen", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "login": "johnthagen", "repos_url": "https://api.github.com/users/johnthagen/repos", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "id": 10340167, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1225, "html_url": "https://github.com/python/mypy/issues/1225", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1225", "id": 135039294, "events_url": "https://api.github.com/repos/python/mypy/issues/1225/events", "updated_at": "2016-03-03T17:24:38Z", "body": "I ran into issues with mypy on a simple example. Running Windows 8.1, Python 3.5 using Anaconda. Installed mypy using `pip install git+https://github.com/python/mypy.git`\r\nSaved the following as `a.py`:\r\n```python\r\nimport typing\r\n\r\ndef f():\r\n    1 + 'x'  # No static type error (dynamically typed)\r\n\r\ndef g() -> None:\r\n    1 + 'x'  # Type check error (statically typed)\r\n```\r\n\r\nRan the following in the command prompt: `python -m mypy a.py` and got the following:\r\n```\r\na.py:1: error: Could not find builtins\r\na.py:1: error: No library stub file for standard library module 'typing'\r\na.py:1: note: (Stub files are from https://github.com/python/typeshed)\r\n```\r\n\r\nI found that the files were installed in the following locations:\r\n- The `.py` files are in `C:/Users/MyUserName/Anaconda3/Lib/site-packages/mypy`\r\n- The `typeshed` and `xml` directories are in `C:/Users/MyUserName/Anaconda3/Lib/mypy`\r\n- The mypy script is `C:/Users/MyUserName/Anaconda3/Scripts/mypy` (Running mypy in the command prompt doesn't work in Windows, which is why I had to run it as a module.)\r\n\r\nI ran pdb and found that when I call mypy as a module:\r\n1. ` __init__.py` calls mypy.main.main(None)\r\n2. `build.build` is called with `bin_dir=None`\r\n3. `build.default_data_dir` is called with `bin_dir=None`\r\n4. `build.default_data_dir` returns `C:/Users/MyUserName/Anaconda3/Lib/site-packages` when it should return `C:/Users/MyUserName/Anaconda3/Lib/mypy`\r\n\r\nIn `build.default_data_dir`, for the case of `not bin_dir` I changed the line `lib = os.path.dirname(os.path.dirname(parent))` to `lib = os.path.dirname(parent)` and now I can run mypy as a module. Not sure if it's the best solution but it works.\r\n\r\nPossibly related issue: https://github.com/python/mypy/issues/653. Later realized that I can run the mypy script within git bash if I change `#!/usr/bin/env python3` to `#!/usr/bin/env python`, and then I don't have to worry about the module stuff. But Windows users installing from pip may not have a bash shell.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1225/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "problem finding data_dir on Windows when run using \"python -m mypy\"", "assignee": null, "closed_at": "2016-03-03T17:24:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1225/comments", "labels": [], "created_at": "2016-02-20T06:31:28Z", "user": {"followers_url": "https://api.github.com/users/allthedata/followers", "gists_url": "https://api.github.com/users/allthedata/gists{/gist_id}", "html_url": "https://github.com/allthedata", "following_url": "https://api.github.com/users/allthedata/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/6295582?v=3", "url": "https://api.github.com/users/allthedata", "organizations_url": "https://api.github.com/users/allthedata/orgs", "starred_url": "https://api.github.com/users/allthedata/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/allthedata/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/allthedata/subscriptions", "login": "allthedata", "repos_url": "https://api.github.com/users/allthedata/repos", "received_events_url": "https://api.github.com/users/allthedata/received_events", "id": 6295582, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1224, "html_url": "https://github.com/python/mypy/issues/1224", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1224", "id": 135013842, "events_url": "https://api.github.com/repos/python/mypy/issues/1224/events", "updated_at": "2016-03-17T20:53:25Z", "body": "This gives an error:\r\n```\r\ndef foo(a: bool) -> Dict[str, Union[str, int]]:\r\n    return {'a': 'b'} if a else {}  # E: Incompatible return value type: expected builtins.dict[builtins.str, Union[builtins.str, builtins.int]], got builtins.dict[builtins.str, builtins.str]\r\n```\r\nHowever this rewrite is fine:\r\n```\r\ndef foo(a: bool) -> Dict[str, Union[str, int]]:\r\n    if a:\r\n        return {'a': 'b'}\r\n    else:\r\n        return {}\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1224/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Return conditional expr incorrectly complains about union", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1224/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-20T00:58:21Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1223, "html_url": "https://github.com/python/mypy/pull/1223", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1223", "id": 134995274, "events_url": "https://api.github.com/repos/python/mypy/issues/1223/events", "updated_at": "2016-02-19T23:41:52Z", "body": "They were already redirecting to the correct one, so it's just a cosmetic change.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1223/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update links in README since repo has moved", "assignee": null, "closed_at": "2016-02-19T23:41:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1223/comments", "labels": [], "created_at": "2016-02-19T22:52:44Z", "user": {"followers_url": "https://api.github.com/users/zapu/followers", "gists_url": "https://api.github.com/users/zapu/gists{/gist_id}", "html_url": "https://github.com/zapu", "following_url": "https://api.github.com/users/zapu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/451974?v=3", "url": "https://api.github.com/users/zapu", "organizations_url": "https://api.github.com/users/zapu/orgs", "starred_url": "https://api.github.com/users/zapu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zapu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zapu/subscriptions", "login": "zapu", "repos_url": "https://api.github.com/users/zapu/repos", "received_events_url": "https://api.github.com/users/zapu/received_events", "id": 451974, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1223.patch", "html_url": "https://github.com/python/mypy/pull/1223", "diff_url": "https://github.com/python/mypy/pull/1223.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1223"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1222, "html_url": "https://github.com/python/mypy/issues/1222", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1222", "id": 134985275, "events_url": "https://api.github.com/repos/python/mypy/issues/1222/events", "updated_at": "2016-03-17T20:54:05Z", "body": "This doesn't give any error:\r\n```\r\nclass C:\r\n    def foo(self: int) -> None:\r\n        pass\r\n\r\nC().foo()\r\n```\r\nWe ran into this in PY2 mode: Benjamin removed an argument from a method but forgot to remove it from the `# type` signature, and then realized that mypy didn't catch that. The PY2 form of signatures in `# type` comments doesn't require a type corresponding to self but it allows it, so his mistake effectively boiled down to the above example. Why isn't this an error?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1222/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Specifying int as type for self doesn't get flagged", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1222/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-19T21:53:53Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1221, "html_url": "https://github.com/python/mypy/issues/1221", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1221", "id": 134956100, "events_url": "https://api.github.com/repos/python/mypy/issues/1221/events", "updated_at": "2016-02-19T23:43:05Z", "body": "The build status indicator in the README got broken during the repo switch.  I think there's potential for PR builds to be broken as well.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1221/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "the build status indicator is broken", "assignee": null, "closed_at": "2016-02-19T23:43:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1221/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-19T19:47:34Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1220, "html_url": "https://github.com/python/mypy/issues/1220", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1220", "id": 134899759, "events_url": "https://api.github.com/repos/python/mypy/issues/1220/events", "updated_at": "2016-02-19T15:57:22Z", "body": "Cut a release and update documentation on readthedocs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1220/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Release 0.3 (PyPI)", "assignee": null, "closed_at": "2016-02-19T15:57:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1220/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2016-02-19T15:56:24Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1219, "html_url": "https://github.com/python/mypy/issues/1219", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1219", "id": 134748028, "events_url": "https://api.github.com/repos/python/mypy/issues/1219/events", "updated_at": "2016-03-01T23:43:04Z", "body": "git subtree is vastly nicer than git submodule.  Let's use git subtrees instead for including typeshed.\r\n\r\nBenefits:\r\n- users won't have to run `git submodule init` or `git submodule update`\r\n- generally much nicer to work with\r\n- mypy experimental PRs can easily include typeshed changes before they're included in typeshed proper\r\n- easy to extract work on typeshed made as part of working on mypy\r\n\r\nSee this [blog post](http://blogs.atlassian.com/2013/05/alternatives-to-git-submodule-git-subtree/) and [the man page](https://github.com/git/git/blob/master/contrib/subtree/git-subtree.txt) for more info on git subtree.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1219/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "switch to git subtree for typeshed", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1219/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-19T01:41:32Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1218, "html_url": "https://github.com/python/mypy/pull/1218", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1218", "id": 134742433, "events_url": "https://api.github.com/repos/python/mypy/issues/1218/events", "updated_at": "2016-02-27T02:06:00Z", "body": "To use the new fast parser, you install [typed_ast](https://github.com/ddfisher/typed_ast) and make [these changes](https://github.com/ddfisher/typeshed/commit/48b3b260d1daf2c674f325110c30bcdf7ac483f3) to your local typeshed, then run mypy with `--fast-parser`.  Keep in mind that it currently only works on Python 3 code.\r\n\r\nThis is not yet ready to be merged, as the typeshed being discussed [here](https://github.com/python/typeshed/issues/83) need to be resolved first.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1218/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add typed_ast fast parser to mypy", "assignee": null, "closed_at": "2016-02-26T18:51:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1218/comments", "labels": [], "created_at": "2016-02-19T00:58:32Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1218.patch", "html_url": "https://github.com/python/mypy/pull/1218", "diff_url": "https://github.com/python/mypy/pull/1218.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1218"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1217, "html_url": "https://github.com/python/mypy/issues/1217", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1217", "id": 134709233, "events_url": "https://api.github.com/repos/python/mypy/issues/1217/events", "updated_at": "2016-03-06T01:45:19Z", "body": "There was spam again. I think as a wiki administrator you can lock a page.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1217/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Please lock the wiki front page", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2016-03-06T01:45:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1217/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2016-02-18T22:02:22Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1216, "html_url": "https://github.com/python/mypy/issues/1216", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1216", "id": 133486686, "events_url": "https://api.github.com/repos/python/mypy/issues/1216/events", "updated_at": "2016-03-01T23:35:21Z", "body": "Currently it seems that only line number is included, and confusion will be introduced when there's multiple errors in the same line. Is there any plans to improve this?\r\n\r\n```\r\ntypecheck_error.py: note: In function \"f\":\r\ntypecheck_error.py:2: error: Unsupported operand types for * (\"str\" and \"complex\")\r\ntypecheck_error.py:2: error: Incompatible return value type: expected builtins.int, got builtins.complex\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1216/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy error reporting should include column position", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1216/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-02-14T00:18:18Z", "user": {"followers_url": "https://api.github.com/users/shivawu/followers", "gists_url": "https://api.github.com/users/shivawu/gists{/gist_id}", "html_url": "https://github.com/shivawu", "following_url": "https://api.github.com/users/shivawu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/292364?v=3", "url": "https://api.github.com/users/shivawu", "organizations_url": "https://api.github.com/users/shivawu/orgs", "starred_url": "https://api.github.com/users/shivawu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/shivawu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/shivawu/subscriptions", "login": "shivawu", "repos_url": "https://api.github.com/users/shivawu/repos", "received_events_url": "https://api.github.com/users/shivawu/received_events", "id": 292364, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1215, "html_url": "https://github.com/python/mypy/issues/1215", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1215", "id": 133436224, "events_url": "https://api.github.com/repos/python/mypy/issues/1215/events", "updated_at": "2016-02-13T17:11:44Z", "body": "mypy: 0.2.0\r\npython: 3.4.3\r\n\r\n\r\nsample.py:\r\n```python\r\nimport urllib.request\r\n\r\n\r\nURL = \"http://httpbin.org/image/png\"\r\n\r\n\r\nurllib.request.urlretrieve(URL, \"1.png\")\r\n\r\n```\r\n\r\n```\r\n\u03bb mypy sample.py\r\nsample.py, line 7: \"module\" has no attribute \"urlretrieve\"\r\n```\r\nHow to fix this? \r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1215/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "\"module\" has no attribute \"urlretrieve\"", "assignee": null, "closed_at": "2016-02-13T17:11:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1215/comments", "labels": [], "created_at": "2016-02-13T14:12:14Z", "user": {"followers_url": "https://api.github.com/users/OwenChia/followers", "gists_url": "https://api.github.com/users/OwenChia/gists{/gist_id}", "html_url": "https://github.com/OwenChia", "following_url": "https://api.github.com/users/OwenChia/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2796153?v=3", "url": "https://api.github.com/users/OwenChia", "organizations_url": "https://api.github.com/users/OwenChia/orgs", "starred_url": "https://api.github.com/users/OwenChia/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/OwenChia/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/OwenChia/subscriptions", "login": "OwenChia", "repos_url": "https://api.github.com/users/OwenChia/repos", "received_events_url": "https://api.github.com/users/OwenChia/received_events", "id": 2796153, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1214, "html_url": "https://github.com/python/mypy/issues/1214", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1214", "id": 133086376, "events_url": "https://api.github.com/repos/python/mypy/issues/1214/events", "updated_at": "2016-03-01T23:37:14Z", "body": "As a Python developer, I would like a *Const* type so that I can indicate that a variable or attribute may not be rebound to another value. This would be especially useful for module and class constants, but could also be helpful for instance attributes that really shouldn't be modified. Not only does it help prevent accidentally overwriting constants, it would hopefully reduce the need to use `@property` on non-critical attributes. Here is a contrived example:\r\n\r\n```python\r\nGRUNT = 0   # type: Const\r\nMANAGER = 1   # type: Const\r\n\r\n\r\nclass Employee:\r\n    kind = GRUNT   # type: Const\r\n\r\n    def __init__(self, idnum: int, name: str):\r\n        self.id = idnum   # type: Const\r\n        self.name = name\r\n\r\n\r\nclass Manager(Employee):\r\n    kind = MANAGER   # type: Const\r\n```\r\n\r\n`kind = MANAGER   # type: Const` reqiures the *Const* type to rebind *kind* without an error just as a const variable in C requires a cast during reassignment to quiet compiler warnings/errors.\r\n\r\nI'm not sure if it makes sense to allow *Const* to take parameters as the type can be inferred in most cases. One might want other variables, such as those passed into functions, to be const, in which case it makes sense to allow *Const* to take parameters. Here is an example:\r\n\r\n```python\r\ndef frobnicate(kind: Const[int]) -> None:\r\n    kind = 5   # Error\r\n    kind = 6   # type: Const  # Okay\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1214/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement Const type to indicate non-rebindable variables/attributes", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1214/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "needs pep change", "color": "fbca04", "url": "https://api.github.com/repos/python/mypy/labels/needs%20pep%20change"}], "created_at": "2016-02-11T20:59:41Z", "user": {"followers_url": "https://api.github.com/users/hashstat/followers", "gists_url": "https://api.github.com/users/hashstat/gists{/gist_id}", "html_url": "https://github.com/hashstat", "following_url": "https://api.github.com/users/hashstat/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1288789?v=3", "url": "https://api.github.com/users/hashstat", "organizations_url": "https://api.github.com/users/hashstat/orgs", "starred_url": "https://api.github.com/users/hashstat/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/hashstat/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/hashstat/subscriptions", "login": "hashstat", "repos_url": "https://api.github.com/users/hashstat/repos", "received_events_url": "https://api.github.com/users/hashstat/received_events", "id": 1288789, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1213, "html_url": "https://github.com/python/mypy/pull/1213", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1213", "id": 132961087, "events_url": "https://api.github.com/repos/python/mypy/issues/1213/events", "updated_at": "2016-02-13T06:03:27Z", "body": "Print an error when given one or more .pyc files as input.  This is intended to fix #1204.  \r\n\r\nThis seems like a simple enough fix, but I'm new to this project so please let me know if there are subtleties I'm missing here.  ", "labels_url": "https://api.github.com/repos/python/mypy/issues/1213/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error out on .pyc files.  Fixes #1204", "assignee": null, "closed_at": "2016-02-13T06:03:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1213/comments", "labels": [], "created_at": "2016-02-11T12:33:56Z", "user": {"followers_url": "https://api.github.com/users/ctcutler/followers", "gists_url": "https://api.github.com/users/ctcutler/gists{/gist_id}", "html_url": "https://github.com/ctcutler", "following_url": "https://api.github.com/users/ctcutler/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1834936?v=3", "url": "https://api.github.com/users/ctcutler", "organizations_url": "https://api.github.com/users/ctcutler/orgs", "starred_url": "https://api.github.com/users/ctcutler/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ctcutler/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ctcutler/subscriptions", "login": "ctcutler", "repos_url": "https://api.github.com/users/ctcutler/repos", "received_events_url": "https://api.github.com/users/ctcutler/received_events", "id": 1834936, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1213.patch", "html_url": "https://github.com/python/mypy/pull/1213", "diff_url": "https://github.com/python/mypy/pull/1213.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1213"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1212, "html_url": "https://github.com/python/mypy/issues/1212", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1212", "id": 132599978, "events_url": "https://api.github.com/repos/python/mypy/issues/1212/events", "updated_at": "2016-03-01T23:43:04Z", "body": "A colleague and I were wondering how to define a copy() method in a base class so that when called on an instance of a subclass it is known that it returns an instance of that subclass. We found the following solution:\r\n```\r\nT = TypeVar('T')\r\nclass Copyable:\r\n    def copy(self: T) -> T:\r\n        return self.__class__()  # type: ignore\r\nclass X(Copyable):\r\n    def foo(self):\r\n        pass\r\nx = X()\r\nx.foo()\r\nxx = x.copy()\r\nxx.foo()  # OK\r\n```\r\nNote that the `# type: ignore` is required for two reasons: you can't call `self.__class__()`, *and* it doesn't like the return type. Try e.g. `return self` and you get\r\n```\r\nx.py:5: error: Incompatible return value type: expected T`-1, got x.Copyable\r\n```\r\n\r\nIt works in `--py2` mode too:\r\n```\r\n    def copy(self):\r\n        # type: (T) -> T\r\n        return self.__class__()  # type: ignore\r\n````\r\n\r\n**UPDATE: This doesn't actually work. :-( See next comment.**", "labels_url": "https://api.github.com/repos/python/mypy/issues/1212/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "How to define a copy() function", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1212/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "needs pep change", "color": "fbca04", "url": "https://api.github.com/repos/python/mypy/labels/needs%20pep%20change"}], "created_at": "2016-02-10T03:44:23Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1211, "html_url": "https://github.com/python/mypy/issues/1211", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1211", "id": 132310519, "events_url": "https://api.github.com/repos/python/mypy/issues/1211/events", "updated_at": "2016-03-01T23:37:28Z", "body": "We found an internal use case where we want to combine NamedTuple with another base class. The idea is that the other base class implements some functionality on top of NamedTuple. But since NamedTuple is a type-factory function you can't subclass it, and mypy doesn't support other functions that wrap it either (let alone a metaclass to do so). Maybe it would be possible to arrange things so that this:\r\n```\r\nclass C(B):\r\n    __slots__ = {'a': int, 'b': str}\r\n    ...\r\n```\r\nis more or less equivalent to this?\r\n```\r\nC1 = NamedTuple('C1', [('a': int, 'b': str)])\r\nclass C(B, C1):\r\n    ...\r\n```\r\nI realize this doesn't quite work because the dict doesn't have ordering, but maybe there's still something we could do here.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1211/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use __slots__ as a shorthand for NamedTuple?", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1211/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-09T01:59:35Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1210, "html_url": "https://github.com/python/mypy/issues/1210", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1210", "id": 132251574, "events_url": "https://api.github.com/repos/python/mypy/issues/1210/events", "updated_at": "2016-03-06T01:52:26Z", "body": "There are four very old, stale branches in the repo. @JukkaL, are you still interested in keeping these around? See https://github.com/JukkaL/mypy/branches", "labels_url": "https://api.github.com/repos/python/mypy/issues/1210/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Clean up stale branches", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2016-03-06T01:52:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1210/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2016-02-08T20:43:13Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1209, "html_url": "https://github.com/python/mypy/issues/1209", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1209", "id": 132200183, "events_url": "https://api.github.com/repos/python/mypy/issues/1209/events", "updated_at": "2016-02-19T13:41:32Z", "body": "I'm planning to move the mypy repo to the Python github organization (https://github.com/python). The motivation is that mypy has been gradually moving to a more collaborative development model with multiple active core developers, and this move would reflect the maturing of mypy in this sense (and others). This will not affect my involvement in the development of mypy at all.\r\n\r\nLet me know what you think! I've pretty much decided to do this but I'm glad to hear any comments. All existing links should automatically redirect to the new location and otherwise there should be minimal distraction.\r\n\r\n[I'd like to thank Dropbox for contributing resources to the development of mypy and for letting me work on mypy!]", "labels_url": "https://api.github.com/repos/python/mypy/issues/1209/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move mypy github repository to the Python organization", "assignee": null, "closed_at": "2016-02-19T13:41:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1209/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2016-02-08T17:05:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1208, "html_url": "https://github.com/python/mypy/pull/1208", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1208", "id": 131732461, "events_url": "https://api.github.com/repos/python/mypy/issues/1208/events", "updated_at": "2016-02-06T00:57:55Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1208/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Verify arg count of separate type signature earlier. Fixes #1207", "assignee": null, "closed_at": "2016-02-06T00:53:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1208/comments", "labels": [], "created_at": "2016-02-05T19:28:42Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1208.patch", "html_url": "https://github.com/python/mypy/pull/1208", "diff_url": "https://github.com/python/mypy/pull/1208.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1208"}, "locked": false}, {"milestone": null, "number": 1207, "html_url": "https://github.com/python/mypy/issues/1207", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1207", "id": 131505326, "events_url": "https://api.github.com/repos/python/mypy/issues/1207/events", "updated_at": "2016-02-06T00:54:34Z", "body": "Code fails with internal error:\r\n```\r\nfrom typing import Any, Dict, Tuple, Union, cast\r\n\r\ndef foo(a, b):\r\n    # type: (Any) -> None\r\n    pass\r\n\r\nfoo(0, 1)  # internal error here\r\n```\r\nerror\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/main.py\", line 54, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/main.py\", line 98, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 208, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 393, in process\r\n    next.process()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 893, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 405, in visit_file\r\n    self.accept(d)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 446, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 540, in accept\r\n    return visitor.visit_expression_stmt(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1533, in visit_expression_stmt\r\n    self.accept(s.expr)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 446, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 965, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1931, in visit_call_expr\r\n    return self.expr_checker.visit_call_expr(e)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checkexpr.py\", line 142, in visit_call_expr\r\n    return self.check_call_expr_with_callee_type(callee_type, e)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checkexpr.py\", line 193, in check_call_expr_with_callee_type\r\n    e.arg_names, callable_node=e.callee)[0]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checkexpr.py\", line 236, in check_call\r\n    callee, args, arg_kinds, formal_to_actual)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checkexpr.py\", line 328, in infer_arg_types_in_context2\r\n    res[ai] = self.accept(args[ai], callee.arg_types[i])\r\nIndexError: list index out of range\r\n\r\n*** INTERNAL ERROR ***\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1207/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal error when incorrect type annotation", "assignee": null, "closed_at": "2016-02-06T00:53:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1207/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-04T23:27:55Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1206, "html_url": "https://github.com/python/mypy/issues/1206", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1206", "id": 131196829, "events_url": "https://api.github.com/repos/python/mypy/issues/1206/events", "updated_at": "2016-02-04T12:04:53Z", "body": "Code with mypy error inline\r\n```\r\nfrom typing import Any, Dict, Tuple, Union, cast\r\n\r\ny = 3.1\r\ny = int(y)\r\nx = y % 180  # mypy error: Function does not return a value\r\n```\r\n\r\nAlso, using `cast` does not fix the problem, but adds a new error:\r\n```\r\nfrom typing import Any, Dict, Tuple, Union, cast\r\n\r\ny = 3.1\r\ny = int(y)\r\ny = cast(int, y)  # mypy error: Function does not return a value\r\nx = y % 180  # mypy error: Function does not return a value\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1206/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ambiguous error / bug around modulo usage", "assignee": null, "closed_at": "2016-02-04T12:04:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1206/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-04T00:10:45Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1205, "html_url": "https://github.com/python/mypy/issues/1205", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1205", "id": 131195428, "events_url": "https://api.github.com/repos/python/mypy/issues/1205/events", "updated_at": "2016-03-01T23:38:48Z", "body": "On this code:\r\n```\r\nfrom collections import defaultdict\r\n\r\nfrom typing import Any, Dict, Tuple, Union\r\n\r\nclass Point(object):\r\n    def __init__(self, x, y):\r\n        # type: (int, int) -> None\r\n        self.x = x\r\n        self.y = y\r\n\r\nx = defaultdict(lambda: Point(0, 0))\r\n```\r\nmypy complains with:\r\n```\r\nsandbox.py:12: error: Need type annotation for variable\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1205/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Better support for defaultdict(lambda)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1205/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-02-04T00:02:43Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1204, "html_url": "https://github.com/python/mypy/issues/1204", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1204", "id": 131163773, "events_url": "https://api.github.com/repos/python/mypy/issues/1204/events", "updated_at": "2016-02-13T06:03:22Z", "body": "I accidentally ran mypy on a .pyc file and got this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/main.py\", line 54, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/main.py\", line 98, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 200, in build\r\n    content = source.load(lib_path, pyversion)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 110, in load\r\n    return read_program(self.path, pyversion)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 292, in read_program\r\n    text = read_with_python_encoding(path, pyversion)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 1094, in read_with_python_encoding\r\n    return source_bytearray.decode(encoding)\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xf3 in position 1: ordinal not in range(128)\r\n```\r\nWhile clearly this is my fault, it's probably the case this should give a friendly error rather than throwing a traceback while parsing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1204/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy crashes when run on a .pyc file", "assignee": null, "closed_at": "2016-02-13T06:03:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1204/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-02-03T21:43:57Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1203, "html_url": "https://github.com/python/mypy/issues/1203", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1203", "id": 130820733, "events_url": "https://api.github.com/repos/python/mypy/issues/1203/events", "updated_at": "2016-03-01T23:38:54Z", "body": "Currently we special case `isinstance` checks for determining the local type of a variable, but we could potentially give user-defined functions the same capability.  See: https://github.com/Microsoft/TypeScript/issues/1007", "labels_url": "https://api.github.com/repos/python/mypy/issues/1203/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support user-defined type guard functions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1203/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-02-02T21:21:19Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1202, "html_url": "https://github.com/python/mypy/issues/1202", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1202", "id": 130777347, "events_url": "https://api.github.com/repos/python/mypy/issues/1202/events", "updated_at": "2016-03-03T22:34:20Z", "body": "Errors about command line syntax and files not found should go to stderr.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1202/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Write certain errors to stderr", "assignee": null, "closed_at": "2016-03-03T22:34:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1202/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-02-02T18:44:21Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1201, "html_url": "https://github.com/python/mypy/pull/1201", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1201", "id": 130232875, "events_url": "https://api.github.com/repos/python/mypy/issues/1201/events", "updated_at": "2016-02-06T01:02:28Z", "body": "fix #1200\r\n\r\n-- \r\nI'm joining with `\\n` because I guess when there are many error messages they are ment to be one by line. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/1201/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give `CompileError` a message.", "assignee": null, "closed_at": "2016-02-02T19:51:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1201/comments", "labels": [], "created_at": "2016-02-01T02:15:00Z", "user": {"followers_url": "https://api.github.com/users/Carreau/followers", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "html_url": "https://github.com/Carreau", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=3", "url": "https://api.github.com/users/Carreau", "organizations_url": "https://api.github.com/users/Carreau/orgs", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "login": "Carreau", "repos_url": "https://api.github.com/users/Carreau/repos", "received_events_url": "https://api.github.com/users/Carreau/received_events", "id": 335567, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1201.patch", "html_url": "https://github.com/python/mypy/pull/1201", "diff_url": "https://github.com/python/mypy/pull/1201.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1201"}, "locked": false}, {"milestone": null, "number": 1200, "html_url": "https://github.com/python/mypy/issues/1200", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1200", "id": 130232173, "events_url": "https://api.github.com/repos/python/mypy/issues/1200/events", "updated_at": "2016-02-02T19:51:08Z", "body": "```\r\n$ python\r\n>>> from mypy.errors import CompileError\r\n>>> raise CompileError([\"Y\", \"U\", \"No\", \"Show\", \"Message\"])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nmypy.errors.CompileError\r\n```\r\n\r\n(PR on its way, `message` is not passed to `super().__init__()` in  class declaration)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1200/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "`CompileError` never have message.", "assignee": null, "closed_at": "2016-02-02T19:51:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1200/comments", "labels": [], "created_at": "2016-02-01T02:10:51Z", "user": {"followers_url": "https://api.github.com/users/Carreau/followers", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "html_url": "https://github.com/Carreau", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=3", "url": "https://api.github.com/users/Carreau", "organizations_url": "https://api.github.com/users/Carreau/orgs", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "login": "Carreau", "repos_url": "https://api.github.com/users/Carreau/repos", "received_events_url": "https://api.github.com/users/Carreau/received_events", "id": 335567, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1199, "html_url": "https://github.com/python/mypy/issues/1199", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1199", "id": 130227460, "events_url": "https://api.github.com/repos/python/mypy/issues/1199/events", "updated_at": "2016-03-01T23:39:35Z", "body": "Hi there, \r\n\r\nI would be interested in trying to check snippets of code that are not on a file, \r\nI'm trying to figure out how to do that simply, but constructing `mypy.main.build.BuildSource` with empty `path` and manually setting `bin_dir`. But that seem over-engineered.\r\n\r\nAm I missing something ? \r\n\r\nI would prefer not to shell out to the `mypy` executable as in the end the goal would be to integrate in a REPL to get warnings, so most fonction class definition would not have files.\r\n\r\nThanks. \r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1199/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "[question] Check typing of in memory string.", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1199/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2016-02-01T01:47:01Z", "user": {"followers_url": "https://api.github.com/users/Carreau/followers", "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}", "html_url": "https://github.com/Carreau", "following_url": "https://api.github.com/users/Carreau/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=3", "url": "https://api.github.com/users/Carreau", "organizations_url": "https://api.github.com/users/Carreau/orgs", "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Carreau/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions", "login": "Carreau", "repos_url": "https://api.github.com/users/Carreau/repos", "received_events_url": "https://api.github.com/users/Carreau/received_events", "id": 335567, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1198, "html_url": "https://github.com/python/mypy/issues/1198", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1198", "id": 129958541, "events_url": "https://api.github.com/repos/python/mypy/issues/1198/events", "updated_at": "2016-01-30T14:21:12Z", "body": "Add an option to warn when mypy implicitly infers the `Any` type (like the `--noImplicitAny` option of the TypeScript compiler). This should help in avoiding issues like:\r\n\r\n```python\r\nclass C:\r\n    def f(self) -> float:\r\n        return 5.0\r\n\r\n\r\nclass D(C):\r\n    def f(self): # mypy will not emit an error because it inferred the return type as Any\r\n        return 'x'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1198/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Proposal: warn about implicit Any", "assignee": null, "closed_at": "2016-01-30T14:21:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1198/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-30T08:41:33Z", "user": {"followers_url": "https://api.github.com/users/migel/followers", "gists_url": "https://api.github.com/users/migel/gists{/gist_id}", "html_url": "https://github.com/migel", "following_url": "https://api.github.com/users/migel/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3897227?v=3", "url": "https://api.github.com/users/migel", "organizations_url": "https://api.github.com/users/migel/orgs", "starred_url": "https://api.github.com/users/migel/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/migel/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/migel/subscriptions", "login": "migel", "repos_url": "https://api.github.com/users/migel/repos", "received_events_url": "https://api.github.com/users/migel/received_events", "id": 3897227, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1197, "html_url": "https://github.com/python/mypy/issues/1197", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1197", "id": 129938749, "events_url": "https://api.github.com/repos/python/mypy/issues/1197/events", "updated_at": "2016-01-30T05:35:22Z", "body": "mypy doesn't complain about the following code. I expected to get an error on `B.f` because it returns `str` instead of `float`:\r\n\r\n```python\r\n\r\nimport abc\r\nfrom typing import Generic, TypeVar\r\n\r\nTA = TypeVar('TA')\r\nTB = TypeVar('TB')\r\n\r\n\r\nclass A(Generic[TA, TB],\r\n        metaclass=abc.ABCMeta):\r\n\r\n    @abc.abstractmethod\r\n    def f(self, a: TA) -> TB:\r\n        pass\r\n\r\n\r\nclass B(A[TA, float], Generic[TA]):\r\n\r\n    def f(self, a: TA):\r\n        return 'xyz'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1197/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check for derived method of generic type", "assignee": null, "closed_at": "2016-01-30T05:35:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1197/comments", "labels": [], "created_at": "2016-01-30T04:37:11Z", "user": {"followers_url": "https://api.github.com/users/migel/followers", "gists_url": "https://api.github.com/users/migel/gists{/gist_id}", "html_url": "https://github.com/migel", "following_url": "https://api.github.com/users/migel/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3897227?v=3", "url": "https://api.github.com/users/migel", "organizations_url": "https://api.github.com/users/migel/orgs", "starred_url": "https://api.github.com/users/migel/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/migel/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/migel/subscriptions", "login": "migel", "repos_url": "https://api.github.com/users/migel/repos", "received_events_url": "https://api.github.com/users/migel/received_events", "id": 3897227, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1196, "html_url": "https://github.com/python/mypy/issues/1196", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1196", "id": 129839216, "events_url": "https://api.github.com/repos/python/mypy/issues/1196/events", "updated_at": "2016-03-08T15:33:30Z", "body": "It seems to default to 2 CPUs on OS X which can waste resources.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1196/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix CPU count detection in test runner on OS X", "assignee": null, "closed_at": "2016-03-08T15:33:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1196/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-29T17:57:25Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1195, "html_url": "https://github.com/python/mypy/issues/1195", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1195", "id": 129682115, "events_url": "https://api.github.com/repos/python/mypy/issues/1195/events", "updated_at": "2016-03-01T23:43:22Z", "body": "Mypy is OK with accessing `self.__class__` but not `self.__class__(...)`\r\n\r\nReproducer:\r\n```\r\nclass S(object):\r\n    def foo(self):\r\n        return self.__class__()\r\n```\r\nError:\r\n```\r\n/home/tabbott/foo.py: note: In member \"foo\" of class \"S\":\r\n/home/tabbott/foo.py:4: error: \"type\" not callable\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1195/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "self.__class__() not supported", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1195/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "needs pep change", "color": "fbca04", "url": "https://api.github.com/repos/python/mypy/labels/needs%20pep%20change"}], "created_at": "2016-01-29T06:44:12Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1194, "html_url": "https://github.com/python/mypy/issues/1194", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1194", "id": 129681006, "events_url": "https://api.github.com/repos/python/mypy/issues/1194/events", "updated_at": "2016-02-05T01:12:36Z", "body": "This is I think another variant of #1151 but reporting since the fix may be different.\r\n```\r\n$ mypy --py2 --silent --implicit-any ~/foo.py\r\n/home/tabbott/foo.py: note: In member \"foo\" of class \"S\":\r\n/home/tabbott/foo.py:5: error: Cannot determine type of 'X'\r\n```\r\nFor this code:\r\n```\r\nclass S(object):\r\n    def foo(self):\r\n        return R.X\r\n\r\nclass R(object):\r\n    X = 2\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1194/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ordering issue with processing class definitions", "assignee": null, "closed_at": "2016-02-05T01:12:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1194/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-29T06:37:00Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1193, "html_url": "https://github.com/python/mypy/issues/1193", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1193", "id": 129680312, "events_url": "https://api.github.com/repos/python/mypy/issues/1193/events", "updated_at": "2016-03-01T23:43:51Z", "body": "mypy complains with:\r\n`/home/tabbott/foo.py:4: error: Unsupported operand types for + (\"int\" and \"float\")` with the following code:\r\n```\r\nfoo = 0\r\nfoo += 0.5\r\n```\r\n\r\nWhile one can work around this by initializing to 0.0, it seems worth thinking about if mypy should accept this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1193/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unsupported operand types using += with floats initialized to 0 (not 0.0)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1193/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-29T06:31:15Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1192, "html_url": "https://github.com/python/mypy/issues/1192", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1192", "id": 129679340, "events_url": "https://api.github.com/repos/python/mypy/issues/1192/events", "updated_at": "2016-01-29T17:37:09Z", "body": "```\r\n$ (cd ~/ && git clone git@github.com:dropbox/changes.git)\r\ntabbott@tabbox:~/mypy$ mypy --py2 --silent --implicit-any /home/tabbott/changes/changes/ \r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/main.py\", line 54, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/main.py\", line 98, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 206, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 392, in process\r\n    next.process()\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 897, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 385, in visit_file\r\n    self.accept(d)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 485, in accept\r\n    return visitor.visit_class_def(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 963, in visit_class_def\r\n    self.accept(defn.defs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 382, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 509, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 567, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 663, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 409, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 707, in accept\r\n    return visitor.visit_try_stmt(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1667, in visit_try_stmt\r\n    self.accept(s.body)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 594, in accept\r\n    return visitor.visit_while_stmt(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1606, in visit_while_stmt\r\n    repeat_till_fixed=True)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 409, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 673, in accept\r\n    return visitor.visit_if_stmt(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1561, in visit_if_stmt\r\n    self.accept(b)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 673, in accept\r\n    return visitor.visit_if_stmt(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1561, in visit_if_stmt\r\n    self.accept(b)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 673, in accept\r\n    return visitor.visit_if_stmt(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1561, in visit_if_stmt\r\n    self.accept(b)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 564, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1067, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1109, in check_assignment\r\n    self.check_indexed_assignment(index_lvalue, rvalue, rvalue)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1444, in check_indexed_assignment\r\n    self.try_infer_partial_type_from_indexed_assignment(lvalue, rvalue)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mypy/checker.py\", line 1460, in try_infer_partial_type_from_indexed_assignment\r\n    typename = cast(Instance, var.type).type.fullname()\r\nAttributeError: 'NoneType' object has no attribute 'fullname'\r\n\r\n*** INTERNAL ERROR ***\r\n\r\n/home/tabbott/changes/changes/utils/diff_parser.py:71: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n\r\nNOTE: you can use \"mypy --pdb ...\" to drop into the debugger when this happens.\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1192/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy crash running on dropbox/changes.git", "assignee": null, "closed_at": "2016-01-29T17:37:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1192/comments", "labels": [], "created_at": "2016-01-29T06:23:55Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1191, "html_url": "https://github.com/python/mypy/issues/1191", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1191", "id": 129678557, "events_url": "https://api.github.com/repos/python/mypy/issues/1191/events", "updated_at": "2016-02-04T15:55:54Z", "body": "While trying to debug something, I ended up adding type annotations for the definitions of an object in both code paths, and got a `/home/tabbott/foo.py:10: error: Name 'child_pid' already defined` with this (simplified) code:\r\n```\r\nif True:\r\n    child_pid = os.fork() # type: int\r\n    # Do stuff\r\nelse:\r\n    child_pid = None # type: int\r\n```\r\nSince the types are the same, it seems like this shouldn't be an error.\r\n\r\nThis may be a variant of #1153.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1191/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "\"already defined\" errors when adding type annotations in multiple code paths", "assignee": null, "closed_at": "2016-02-04T15:55:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1191/comments", "labels": [], "created_at": "2016-01-29T06:18:39Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1190, "html_url": "https://github.com/python/mypy/issues/1190", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1190", "id": 129669703, "events_url": "https://api.github.com/repos/python/mypy/issues/1190/events", "updated_at": "2016-03-02T17:58:05Z", "body": "(moved from python/typeshed#52)\r\n\r\nCurrently mypy (AFAICT) looks for type information in the current directory/location of file being checked, directories on MYPYPATH, and typeshed, in that order, and takes the first file it finds. This will become problematic as more libraries adopt inline type annotations: the user will need to maintain a MYPYPATH that includes all such libraries. The easiest way to do that is to `pip install -r requirements.txt` and use that environment's `site-packages` as mypy's path, but this will include packages that do not have type annotations and these source files may mask stubs for those libraries in typeshed.\r\n\r\nI propose that rather than stopping the search at the first file that exists, mypy examine source files to see whether they have usable type annotations, and if not, continue the search. If the search concludes without any usable type information but it did find some source files, then the first one can be used (to at least get the list of top-level function names, etc)\r\n\r\nCompletely:\r\n1. Construct a search path, mimicking python's sys.path initialization: an initial element based on the command line (the current directory in `-m` mode, the directory containing the given file if a file is given), `$MYPYPATH`, `$PYTHONPATH`, typeshed. I think it would be convenient if there were a shortcut to add the `site-packages` of a given virtualenv (perhaps defaulting to the environment in which mypy is running); this would come in between `$PYTHONPATH` and typeshed.\r\n2. For each directory in this search path:\r\n2a. Look for a `.pyi` stub file. If one is found, we're done.\r\n2b. If no `.pyi` file, look for a `.py` source file. If it can be parsed and contains type information, we're done. If it can be parsed but does not contain types, and it's the first one we've seen, remember it.\r\n3. If no type information was found but we remembered a file in 2b, use whatever we can squeeze out of it.\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1190/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Search procedure for inline annotations", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1190/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-29T05:19:42Z", "user": {"followers_url": "https://api.github.com/users/bdarnell/followers", "gists_url": "https://api.github.com/users/bdarnell/gists{/gist_id}", "html_url": "https://github.com/bdarnell", "following_url": "https://api.github.com/users/bdarnell/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/160562?v=3", "url": "https://api.github.com/users/bdarnell", "organizations_url": "https://api.github.com/users/bdarnell/orgs", "starred_url": "https://api.github.com/users/bdarnell/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bdarnell/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bdarnell/subscriptions", "login": "bdarnell", "repos_url": "https://api.github.com/users/bdarnell/repos", "received_events_url": "https://api.github.com/users/bdarnell/received_events", "id": 160562, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1189, "html_url": "https://github.com/python/mypy/pull/1189", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1189", "id": 129624474, "events_url": "https://api.github.com/repos/python/mypy/issues/1189/events", "updated_at": "2016-01-29T01:00:40Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1189/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow empty returns and yields in Any typed functions", "assignee": null, "closed_at": "2016-01-29T01:00:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1189/comments", "labels": [], "created_at": "2016-01-29T00:14:11Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1189.patch", "html_url": "https://github.com/python/mypy/pull/1189", "diff_url": "https://github.com/python/mypy/pull/1189.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1189"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1188, "html_url": "https://github.com/python/mypy/issues/1188", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1188", "id": 129616102, "events_url": "https://api.github.com/repos/python/mypy/issues/1188/events", "updated_at": "2016-03-01T23:44:38Z", "body": "Example test case code here:\r\n```\r\nif True:\r\n    from pycurl import Curl, version_info\r\nelse:\r\n    from mock import Mock\r\n    Curl = Mock()\r\n    version_info = Mock()\r\n```\r\n\r\nPosting this in mypy, since I don't think it's possible to specify a typeshed type for mock.Mock that won't throw an error; e.g. if stubs say `mock.Mock` is an `Any`, you get `/home/tabbott/foo.py:7: error: Invalid assignment target`\r\n\r\nReporting as separate from #1152 since this might be worth solving even if that is not, since most every use of mock.Mock() will have this problem.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1188/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Need a way to specify types for mock objects (e.g. mock.Mock())", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1188/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-28T23:24:41Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1187, "html_url": "https://github.com/python/mypy/pull/1187", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1187", "id": 129595276, "events_url": "https://api.github.com/repos/python/mypy/issues/1187/events", "updated_at": "2016-01-29T20:22:19Z", "body": "These three commits take the time we spend in find_module on an example codebase from 10% of mypy's total time down to 1.4%. At this point I think I'm done optimizing this for a while. :-)\r\n\r\nThe main improvement is the middle commit, which caches a lot of work that is otherwise repeated between find_module calls.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1187/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Further optimize find_module", "assignee": null, "closed_at": "2016-01-29T20:06:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1187/comments", "labels": [], "created_at": "2016-01-28T22:01:07Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1187.patch", "html_url": "https://github.com/python/mypy/pull/1187", "diff_url": "https://github.com/python/mypy/pull/1187.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1187"}, "locked": false}, {"milestone": null, "number": 1186, "html_url": "https://github.com/python/mypy/issues/1186", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1186", "id": 129584138, "events_url": "https://api.github.com/repos/python/mypy/issues/1186/events", "updated_at": "2016-01-28T21:39:45Z", "body": "I get the following exception:\r\n```\r\nzerver/decorator.py: note: In function \"rate_limit_user\":\r\nzerver/decorator.py:572: error: Exception must be derived from BaseException\r\n```\r\nthe line of code is:        `raise RateLimited()`; RateLimited is defined as follows:\r\n```\r\nfrom django.core.exceptions import PermissionDenied\r\nclass RateLimited(PermissionDenied):\r\n```\r\nSo we're getting this error because we don't have stubs for Django that make clear PermissionDenied inherits from BaseException.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1186/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy complains about exceptions where an intermediate class has no stubs", "assignee": null, "closed_at": "2016-01-28T21:39:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1186/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-28T21:14:48Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1185, "html_url": "https://github.com/python/mypy/issues/1185", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1185", "id": 129560520, "events_url": "https://api.github.com/repos/python/mypy/issues/1185/events", "updated_at": "2016-02-04T16:15:47Z", "body": "I ran into this trying to get the sqlalchemy stubs working.  The error is:\r\n\r\n```\r\n<string>:1: note: In module imported here:\r\ntypeshed/third_party/2.7/stest/__init__.pyi:4: error: Cannot determine type of 'Constraint'\r\n```\r\n\r\nHere's a reproducer zipped tar archive:\r\n[foo.zip](https://github.com/JukkaL/mypy/files/108780/foo.zip)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1185/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot determine type Issue with near import loops", "assignee": null, "closed_at": "2016-02-04T16:15:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1185/comments", "labels": [], "created_at": "2016-01-28T19:51:10Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1184, "html_url": "https://github.com/python/mypy/issues/1184", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1184", "id": 129527577, "events_url": "https://api.github.com/repos/python/mypy/issues/1184/events", "updated_at": "2016-03-01T23:44:58Z", "body": "There are a lot of different patterns in the mypy codebase where some stack is maintained by a pair of functions that push something onto the stack (or bump a counter or something) and pop it off again. So you'll see code like this:\r\n```python\r\n            self.msg.disable_errors()\r\n            arg_types = self.infer_arg_types_in_context(None, args)\r\n            self.msg.enable_errors()\r\n```\r\nI wonder if this pattern couldn't be made clearer in the code by using context managers. In this case, we would write e.g.\r\n```python\r\n            with self.msg.disable_errors():\r\n                arg_types = self.infer_arg_types_in_context(None, args)\r\n```\r\nThe implementation would be very simple:\r\n```python\r\n@contextmanager\r\ndef disable_errors(self) -> None:\r\n    self.disable_count += 1\r\n    yield\r\n    self.disable_count -= 1\r\n```\r\n(I'm picking on this example because it came up recently, but there are a lot of function pairs like this; e.g. check_func_item() (https://github.com/JukkaL/mypy/blob/master/mypy/checker.py#L542) has four different stacks it manipulates.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1184/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Coding style suggestion about nesting constructs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1184/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2016-01-28T18:02:00Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1183, "html_url": "https://github.com/python/mypy/issues/1183", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1183", "id": 129484066, "events_url": "https://api.github.com/repos/python/mypy/issues/1183/events", "updated_at": "2016-03-01T23:45:25Z", "body": "Dictionary literals with incompatible keys/values result in weird error message, because mypy translate the expression internally to something quite different before type checking.\r\n\r\n```\r\nfrom typing import Dict\r\nd = {1 : ''} # type: Dict[int, int]\r\n```\r\n\r\nThis gives a confusing error message:\r\n\r\n```\r\nt2.py:2: error: List item 0 has incompatible type \"Tuple[int, str]\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1183/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Incompatible dictionary results in confusing error message", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1183/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-28T15:28:06Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1182, "html_url": "https://github.com/python/mypy/issues/1182", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1182", "id": 129428403, "events_url": "https://api.github.com/repos/python/mypy/issues/1182/events", "updated_at": "2016-03-01T23:45:47Z", "body": "## Steps to reproduce\r\n1. Create a file called abc.py or abc.pyi. The file may be empty or contain any valid code.\r\n1. Run `mypy abc.py` or `mypy abc.pyi`\r\n\r\n## Result\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 386, in process\r\n    next.process()\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 846, in process\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 386, in process\r\n    next.process()\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 846, in process\r\n    self.semantic_analyzer().visit_file(self.tree, self.tree.path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/semanal.py\", line 213, in visit_file\r\n    remove_imported_names_from_symtable(self.globals, 'builtins')\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/semanal.py\", line 2445, in remove_imported_names_from_symtable\r\n    fullname = node.node.fullname()\r\nAttributeError: 'NoneType' object has no attribute 'fullname'\r\n```\r\n\r\n## Additional Notes\r\n- Passing the --pdb option doesn't cause pdb to be run when this error is encountered.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1182/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy fails to run on files named abc.py or abc.pyi", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1182/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-28T11:47:54Z", "user": {"followers_url": "https://api.github.com/users/ismail-s/followers", "gists_url": "https://api.github.com/users/ismail-s/gists{/gist_id}", "html_url": "https://github.com/ismail-s", "following_url": "https://api.github.com/users/ismail-s/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3778413?v=3", "url": "https://api.github.com/users/ismail-s", "organizations_url": "https://api.github.com/users/ismail-s/orgs", "starred_url": "https://api.github.com/users/ismail-s/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ismail-s/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ismail-s/subscriptions", "login": "ismail-s", "repos_url": "https://api.github.com/users/ismail-s/repos", "received_events_url": "https://api.github.com/users/ismail-s/received_events", "id": 3778413, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1181, "html_url": "https://github.com/python/mypy/pull/1181", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1181", "id": 129420049, "events_url": "https://api.github.com/repos/python/mypy/issues/1181/events", "updated_at": "2016-01-28T17:44:09Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1181/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix typo", "assignee": null, "closed_at": "2016-01-28T17:44:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1181/comments", "labels": [], "created_at": "2016-01-28T11:11:55Z", "user": {"followers_url": "https://api.github.com/users/ismail-s/followers", "gists_url": "https://api.github.com/users/ismail-s/gists{/gist_id}", "html_url": "https://github.com/ismail-s", "following_url": "https://api.github.com/users/ismail-s/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3778413?v=3", "url": "https://api.github.com/users/ismail-s", "organizations_url": "https://api.github.com/users/ismail-s/orgs", "starred_url": "https://api.github.com/users/ismail-s/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ismail-s/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ismail-s/subscriptions", "login": "ismail-s", "repos_url": "https://api.github.com/users/ismail-s/repos", "received_events_url": "https://api.github.com/users/ismail-s/received_events", "id": 3778413, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1181.patch", "html_url": "https://github.com/python/mypy/pull/1181", "diff_url": "https://github.com/python/mypy/pull/1181.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1181"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1180, "html_url": "https://github.com/python/mypy/issues/1180", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1180", "id": 129346765, "events_url": "https://api.github.com/repos/python/mypy/issues/1180/events", "updated_at": "2016-03-01T23:46:14Z", "body": "```\r\nclass A:\r\n\tIntType = int\r\n\r\n\t@classmethod\r\n\tdef m(cls, i):\r\n\t\t# type: (A.IntType) -> None\r\n\t\tpass\r\n```\r\n\r\n```\r\n$ mypy --py2 testclass.py\r\ntestclass.py: note: In function \"m\":\r\ntestclass.py:5: error: Invalid type \"IntType\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1180/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Types aliased to class variables are not recognized", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1180/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-28T05:52:34Z", "user": {"followers_url": "https://api.github.com/users/howardzlee/followers", "gists_url": "https://api.github.com/users/howardzlee/gists{/gist_id}", "html_url": "https://github.com/howardzlee", "following_url": "https://api.github.com/users/howardzlee/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4174060?v=3", "url": "https://api.github.com/users/howardzlee", "organizations_url": "https://api.github.com/users/howardzlee/orgs", "starred_url": "https://api.github.com/users/howardzlee/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/howardzlee/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/howardzlee/subscriptions", "login": "howardzlee", "repos_url": "https://api.github.com/users/howardzlee/repos", "received_events_url": "https://api.github.com/users/howardzlee/received_events", "id": 4174060, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1179, "html_url": "https://github.com/python/mypy/pull/1179", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1179", "id": 129323876, "events_url": "https://api.github.com/repos/python/mypy/issues/1179/events", "updated_at": "2016-01-28T20:39:09Z", "body": "In type-checking one codebase of about 50 files and 150 direct\r\ndependencies with --silent, we were spending 4.0s out of 8.2s\r\nin find_module, of which 3.8s was in is_module, and the bulk of\r\nthose were duplicate calls.\r\n\r\nAdding this cache cut out 89% of the total time spent in\r\nfind_module, and 44% of all the time spent in the whole program.\r\nNow find_module is just under 10% of the time.\r\n\r\nWe could probably gain another few percent by caching other\r\ncalls to find_module too.  This is more complicated because\r\nwe don't necessarily always use the same lib_path -- leave\r\nit for a subsequent diff.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1179/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cache most searches for modules through the path", "assignee": null, "closed_at": "2016-01-28T20:06:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1179/comments", "labels": [], "created_at": "2016-01-28T03:40:51Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1179.patch", "html_url": "https://github.com/python/mypy/pull/1179", "diff_url": "https://github.com/python/mypy/pull/1179.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1179"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1178, "html_url": "https://github.com/python/mypy/issues/1178", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1178", "id": 129308661, "events_url": "https://api.github.com/repos/python/mypy/issues/1178/events", "updated_at": "2016-03-01T23:48:10Z", "body": "Given the following code:\r\n```\r\nfrom typing import Any, Dict, Tuple, Union\r\n\r\nVarTuple = Union[Tuple[int, int], Tuple[int, int, int]]\r\n\r\ndef make_tuple():\r\n    # type: () -> VarTuple\r\n    return None\r\n\r\nx = make_tuple()\r\na = b = c = 0\r\nif len(x) == 3:\r\n    a, b, c = x\r\nelse:\r\n    a, b = x\r\n    c = 0\r\n```\r\nmypy complains about the following error:\r\n```\r\nsandbox.py:12: error: 'Union[Tuple[builtins.int, builtins.int], Tuple[builtins.int, builtins.int, builtins.int]]' object is not iterable\r\nsandbox.py:14: error: 'Union[Tuple[builtins.int, builtins.int], Tuple[builtins.int, builtins.int, builtins.int]]' object is not iterable\r\n```\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1178/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unpacking tuples of variable length", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1178/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-28T00:09:25Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1177, "html_url": "https://github.com/python/mypy/issues/1177", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1177", "id": 129305492, "events_url": "https://api.github.com/repos/python/mypy/issues/1177/events", "updated_at": "2016-01-28T15:52:18Z", "body": "Using `type: ignore` on the reproducer from #1160 doesn't work:\r\n\r\n`sorted([dict(name='foo')], key=lambda x: x['name']) # type: ignore`\r\nError is `/home/tabbott/foo.py:2: error: Value of type object is not indexable`", "labels_url": "https://api.github.com/repos/python/mypy/issues/1177/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "type: ignore doesn't always suppress errors", "assignee": null, "closed_at": "2016-01-28T15:52:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1177/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-27T23:51:21Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1176, "html_url": "https://github.com/python/mypy/issues/1176", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1176", "id": 129292735, "events_url": "https://api.github.com/repos/python/mypy/issues/1176/events", "updated_at": "2016-01-27T23:26:19Z", "body": "False positive:\r\n```\r\nfrom typing import Any, Dict\r\n\r\nd = dict.fromkeys([1, 2], 3)\r\n```\r\nError:\r\n```\r\nerror: Dict[_KT, _VT] has no attribute \"fromkeys\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1176/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dict[_KT, _VT] has no attribute \"fromkeys\"", "assignee": null, "closed_at": "2016-01-27T23:26:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1176/comments", "labels": [], "created_at": "2016-01-27T22:37:33Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1175, "html_url": "https://github.com/python/mypy/pull/1175", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1175", "id": 129268934, "events_url": "https://api.github.com/repos/python/mypy/issues/1175/events", "updated_at": "2016-02-04T01:48:06Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1175/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Avoid crash on \"x in y\" where y has a partial type. Fix #1173.", "assignee": null, "closed_at": "2016-01-27T21:27:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1175/comments", "labels": [], "created_at": "2016-01-27T21:08:39Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1175.patch", "html_url": "https://github.com/python/mypy/pull/1175", "diff_url": "https://github.com/python/mypy/pull/1175.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1175"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1174, "html_url": "https://github.com/python/mypy/issues/1174", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1174", "id": 129268674, "events_url": "https://api.github.com/repos/python/mypy/issues/1174/events", "updated_at": "2016-04-13T14:14:22Z", "body": "```\r\nfrom typing import *\r\n\r\nclass Test(object):\r\n    x = 1\r\n    y = 2\r\n\r\nfor sub in [(1, 2)]:\r\n    pass\r\n\r\nsubs = {} # type: Dict[Tuple[int, int], Test]                                                                                 \r\nfor sub in [Test()]:\r\n    subs[(sub.x, sub.y)] = sub\r\n```\r\ngives\r\n```\r\n/home/tabbott/foo.py:11: error: Incompatible types in assignment (expression has type \"Test\", variable has type \"Tuple[int, int]\")\r\n/home/tabbott/foo.py:12: error: Tuple[int, ...] has no attribute \"x\"\r\n/home/tabbott/foo.py:12: error: Tuple[int, ...] has no attribute \"y\"\r\n/home/tabbott/foo.py:12: error: Incompatible types in assignment\r\n```\r\n\r\nArguably this is not perfect code, but probably this shouldn't be a mypy error?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1174/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy errors with variable reuse with different types", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1174/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-27T21:07:54Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1173, "html_url": "https://github.com/python/mypy/issues/1173", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1173", "id": 129263622, "events_url": "https://api.github.com/repos/python/mypy/issues/1173/events", "updated_at": "2016-01-27T21:27:47Z", "body": "The following code breaks mypy:\r\n```\r\nfrom typing import Any\r\n\r\nclass FooBar(object):\r\n\r\n    # Mapping from dual mc name to a DualClient instance.\r\n    _dual_mc = {}\r\n\r\n    @staticmethod\r\n    def foo():\r\n        # type: () -> Any\r\n        \"x\" in FooBar._dual_mc\r\n```\r\n\r\nStacktrace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 386, in process\r\n    next.process()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 885, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 385, in visit_file\r\n    self.accept(d)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 485, in accept\r\n    return visitor.visit_class_def(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 963, in visit_class_def\r\n    self.accept(defn.defs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 413, in accept\r\n    return visitor.visit_decorator(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1815, in visit_decorator\r\n    e.func.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 382, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 509, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 567, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 663, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 409, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 540, in accept\r\n    return visitor.visit_expression_stmt(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1470, in visit_expression_stmt\r\n    self.accept(s.expr)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 1125, in accept\r\n    return visitor.visit_comparison_expr(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1940, in visit_comparison_expr\r\n    return self.expr_checker.visit_comparison_expr(e)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checkexpr.py\", line 842, in visit_comparison_expr\r\n    self.is_valid_var_arg(right_type)):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checkexpr.py\", line 1405, in is_valid_var_arg\r\n    [AnyType()])) or\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/subtypes.py\", line 49, in is_subtype\r\n    return left.accept(SubtypeVisitor(right, type_parameter_checker))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/types.py\", line 544, in accept\r\n    return visitor.visit_partial_type(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/subtypes.py\", line 195, in visit_partial_type\r\n    raise RuntimeError\r\nRuntimeError:\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1173/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "RuntimeError when accessing class attribute", "assignee": null, "closed_at": "2016-01-27T21:27:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1173/comments", "labels": [], "created_at": "2016-01-27T20:45:17Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1172, "html_url": "https://github.com/python/mypy/issues/1172", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1172", "id": 129257321, "events_url": "https://api.github.com/repos/python/mypy/issues/1172/events", "updated_at": "2016-03-01T23:48:57Z", "body": "Using enum34's IntEnum, mypy treats its members as type int rather than the containing enum.\r\n\r\n```\r\nfrom enum import IntEnum\r\n\r\nclass AnIntEnum(IntEnum):\r\n\tA = 1\r\n\tB = 2\r\n\r\ndef foo(e):\r\n\t# type: (AnIntEnum) -> None\r\n\tassert type(e) == AnIntEnum\r\n\tprint 'type = %s' % type(e)\r\n\r\nfoo(AnIntEnum.A)\r\n\r\ndef bar(e):\r\n\t# type: (int) -> None\r\n\tpass\r\n\r\nbar(AnIntEnum.A)\r\n```\r\n\r\n```\r\nhlee-mbp:server hlee$ mypy --py2 testintenum.py \r\n[...]\r\ntestintenum.py:12: error: Argument 1 to \"foo\" has incompatible type \"int\"; expected \"AnIntEnum\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1172/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "IntEnum members are treated as ints", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1172/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-27T20:18:53Z", "user": {"followers_url": "https://api.github.com/users/howardzlee/followers", "gists_url": "https://api.github.com/users/howardzlee/gists{/gist_id}", "html_url": "https://github.com/howardzlee", "following_url": "https://api.github.com/users/howardzlee/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4174060?v=3", "url": "https://api.github.com/users/howardzlee", "organizations_url": "https://api.github.com/users/howardzlee/orgs", "starred_url": "https://api.github.com/users/howardzlee/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/howardzlee/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/howardzlee/subscriptions", "login": "howardzlee", "repos_url": "https://api.github.com/users/howardzlee/repos", "received_events_url": "https://api.github.com/users/howardzlee/received_events", "id": 4174060, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1171, "html_url": "https://github.com/python/mypy/issues/1171", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1171", "id": 129249146, "events_url": "https://api.github.com/repos/python/mypy/issues/1171/events", "updated_at": "2016-01-28T16:29:08Z", "body": "Repro:\r\n```\r\nfor x in [1, 2]:\r\n    class C(object):\r\n        pass\r\nC\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1171/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Issues with class defined inside toplevel for-loop", "assignee": null, "closed_at": "2016-01-28T16:29:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1171/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-27T19:47:48Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1170, "html_url": "https://github.com/python/mypy/issues/1170", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1170", "id": 129246437, "events_url": "https://api.github.com/repos/python/mypy/issues/1170/events", "updated_at": "2016-03-01T23:49:22Z", "body": "Here's example code:\r\n```\r\ndef foo():\r\n    pass\r\n\r\nfoo.csrf_exempt = True\r\n```\r\nIdeally there'd be something other than a type: ignored to do here.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1170/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "type: ignore required when storing attribute to a function", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1170/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-27T19:38:13Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1169, "html_url": "https://github.com/python/mypy/issues/1169", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1169", "id": 129244708, "events_url": "https://api.github.com/repos/python/mypy/issues/1169/events", "updated_at": "2016-03-02T00:03:02Z", "body": "This code:\r\n```\r\ntry:\r\n    from cStringIO import StringIO\r\nexcept ImportError:\r\n    from StringIO import StringIO\r\n```\r\ndoesn't work: it complains `error: Name 'StringIO' already defined` on the second import. I think this is because in cStringIO, the function StringIO is an overloaded function (returning different types with and without argument) while in StringIO.py there is a class StringIO.\r\n\r\nI'm not sure how to fix this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1169/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditional import of StringIO from StringIO or cStringIO doesn't work", "assignee": null, "closed_at": "2016-03-02T00:02:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1169/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-27T19:30:57Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1168, "html_url": "https://github.com/python/mypy/issues/1168", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1168", "id": 129243892, "events_url": "https://api.github.com/repos/python/mypy/issues/1168/events", "updated_at": "2016-01-27T21:14:50Z", "body": "This is one of the followups on #649. Example code:\r\n```\r\ntry:\r\n    from zlip import decompress\r\nexcept ImportError:\r\n    def decompress(val):\r\n        raise RuntimeError\r\n```\r\nThis produces \"error: All conditional function variants must have identical signatures\" on the `def` line. It would be nice if this were more lenient (e.g. computing the intersection of the imported definition and the given def).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1168/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Be less strict about \"All conditional function variants must have identical signatures\"", "assignee": null, "closed_at": "2016-01-27T21:14:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1168/comments", "labels": [], "created_at": "2016-01-27T19:27:15Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1167, "html_url": "https://github.com/python/mypy/issues/1167", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1167", "id": 129001528, "events_url": "https://api.github.com/repos/python/mypy/issues/1167/events", "updated_at": "2016-03-01T23:50:41Z", "body": "mypy throws:\r\n```\r\n/home/tabbott/foo.py: note: In function \"foo\":\r\n/home/tabbott/foo.py:10: error: \"super\" used outside class\r\n/home/tabbott/foo.py: note: At top level:\r\n/home/tabbott/foo.py:13: error: Cannot assign to a method\r\n```\r\nwith the following code monkey-patching a class with inheritance:\r\n```\r\nclass Base(object):\r\n    def test(self):\r\n        return self.val\r\n\r\nclass Test(Base):\r\n    val = \"yay\"\r\n\r\ndef foo(self):\r\n    print(super(Test, self).test())\r\n\r\nTest.test = foo\r\n\r\nx = Test()\r\nx.test()\r\n```\r\n\r\nExample real code with the issue is here:\r\nhttps://github.com/zulip/zulip/blob/master/zerver/lib/test_helpers.py#L104\r\n\r\nI think we could fix the super() issue by allowing super inside a non-class method when it's first argument is self (could imagine having an annotation tag along the lines of SelfType that auto-any uses for such a function?); a similar approach might work for the other one too (you can only assign functions with a SelfType tag to class methods?)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1167/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Errors monkey-patching a class method using super()", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1167/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-27T01:51:35Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1166, "html_url": "https://github.com/python/mypy/issues/1166", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1166", "id": 128996553, "events_url": "https://api.github.com/repos/python/mypy/issues/1166/events", "updated_at": "2016-01-28T18:06:06Z", "body": "Reproducer:\r\n`result = dict(x=[], y=[]) # type: Dict[str, List[str]]                                        `\r\nError:\r\n`/home/tabbott/foo.py:3: error: Incompatible types in assignment (expression has type Dict[str, List[None]], variable has type Dict[str, List[str]])`", "labels_url": "https://api.github.com/repos/python/mypy/issues/1166/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy error trying to annotate initialization of Dict[str, List[str]]", "assignee": null, "closed_at": "2016-01-28T15:24:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1166/comments", "labels": [], "created_at": "2016-01-27T01:21:37Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1165, "html_url": "https://github.com/python/mypy/issues/1165", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1165", "id": 128991490, "events_url": "https://api.github.com/repos/python/mypy/issues/1165/events", "updated_at": "2016-03-01T23:51:06Z", "body": "Mypy complains like this:\r\n```\r\n/home/tabbott/foo.py:2: error: Unsupported left operand type for >= (\"LooseVersion\")\r\n```\r\n```\r\nfrom distutils.version import LooseVersion\r\nLooseVersion(\"1\") >= LooseVersion(\"2\")\r\n```\r\n\r\nI think this is a mypy bug, not a stub issue, since the stub does define a __cmp__ function:\r\n```\r\nclass LooseVersion(Version):\r\n    component_re = ... # type: Any\r\n    def __init__(self, vstring=...) -> None: ...\r\n    vstring = ... # type: Any\r\n    version = ... # type: Any\r\n    def parse(self, vstring): ...\r\n    def __cmp__(self, other): ...\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1165/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error using distutils.version.LooseVersion comparison", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1165/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-27T00:58:47Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1164, "html_url": "https://github.com/python/mypy/issues/1164", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1164", "id": 128990344, "events_url": "https://api.github.com/repos/python/mypy/issues/1164/events", "updated_at": "2016-03-01T23:51:41Z", "body": "                                                                               \r\nReproducer:\r\n````\r\nif foo():\r\n    x = []\r\nelse:\r\n    x = [\"liststr\"]\r\n\r\nprint x\r\n```\r\nError: `foo.py:12: error: Need type annotation for variable`\r\n\r\nIt seems like this is a case where mypy can be 100% confident that a type annotation is pointless, and so it should probably not throw an error.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1164/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy requires type annotations for empty lists even if they're never added", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1164/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-27T00:51:29Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1163, "html_url": "https://github.com/python/mypy/issues/1163", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1163", "id": 128913114, "events_url": "https://api.github.com/repos/python/mypy/issues/1163/events", "updated_at": "2016-01-26T20:12:44Z", "body": "When running mypy on directories in the Zulip open source project that contain shell scripts in addition to python scripts, I got two tracebacks from mypy.  Reproducers below:\r\n```\r\ntabbott@tabbox:/tmp$ git clone git@github.com:zulip/zulip.git\r\nCloning into 'zulip'...\r\nremote: Counting objects: 69938, done.\r\nremote: Total 69938 (delta 0), reused 0 (delta 0), pack-reused 69938\r\nReceiving objects: 100% (69938/69938), 104.71 MiB | 5.82 MiB/s, done.\r\nResolving deltas: 100% (48285/48285), done.\r\nChecking connectivity... done.\r\n\r\n# First one involves running on a directory\r\ntabbott@tabbox:/tmp$ mypy --py2 --silent zulip/scripts/lib/\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 179, in build\r\n    reports = Reports(sources[0].effective_path, data_dir, report_dirs)\r\nIndexError: list index out of range\r\n\r\n# Second one involved running mypy explicitly against the 3 files in the directory\r\ntabbott@tabbox:/tmp$ mypy --py2 --silent zulip/bin/write-rabbitmq-consumers-state-file zulip/bin/log-management-command zulip/bin/get-django-setting \r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 386, in process\r\n    next.process()\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 714, in process\r\n    'Module %s processed twice' % self.id)\r\nAssertionError: Module __main__ processed twice\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1163/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy crashes running on a directory with shell scripts in it", "assignee": null, "closed_at": "2016-01-26T20:12:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1163/comments", "labels": [], "created_at": "2016-01-26T19:06:48Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1162, "html_url": "https://github.com/python/mypy/pull/1162", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1162", "id": 128884547, "events_url": "https://api.github.com/repos/python/mypy/issues/1162/events", "updated_at": "2016-02-04T01:48:18Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1162/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix \"except (E1, E2):\" parsing in PY2. Fixes #1159.", "assignee": null, "closed_at": "2016-01-26T19:15:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1162/comments", "labels": [], "created_at": "2016-01-26T17:20:48Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1162.patch", "html_url": "https://github.com/python/mypy/pull/1162", "diff_url": "https://github.com/python/mypy/pull/1162.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1162"}, "locked": false}, {"milestone": null, "number": 1161, "html_url": "https://github.com/python/mypy/pull/1161", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1161", "id": 128740886, "events_url": "https://api.github.com/repos/python/mypy/issues/1161/events", "updated_at": "2016-01-29T20:07:53Z", "body": "This flag makes mypy behave as though all functions had their types and return type annotated with `Any`.  Oddly, argument/return types annotated with `Any` actually have type `UnboundType` here, so I preserved that behavior.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1161/labels{/name}", "comments": 11, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add --implicit-any", "assignee": null, "closed_at": "2016-01-29T16:31:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1161/comments", "labels": [], "created_at": "2016-01-26T06:56:37Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1161.patch", "html_url": "https://github.com/python/mypy/pull/1161", "diff_url": "https://github.com/python/mypy/pull/1161.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1161"}, "locked": false}, {"milestone": null, "number": 1160, "html_url": "https://github.com/python/mypy/issues/1160", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1160", "id": 128723501, "events_url": "https://api.github.com/repos/python/mypy/issues/1160/events", "updated_at": "2016-01-28T17:52:58Z", "body": "Reproducer: `sorted([{'name': 'test'}], key=lambda x: x['name'])`\r\n\r\nMoved from #1150.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1160/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy throws error using sorted with a key function specified", "assignee": null, "closed_at": "2016-01-28T15:52:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1160/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-26T04:45:21Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1159, "html_url": "https://github.com/python/mypy/issues/1159", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1159", "id": 128723196, "events_url": "https://api.github.com/repos/python/mypy/issues/1159/events", "updated_at": "2016-01-26T19:15:25Z", "body": "I don't really understand what's going on here but this seems to be a fairly minimal reproducer:\r\n```\r\nfrom typing import Any\r\n\r\ntry:\r\n    pass\r\nexcept (AttributeError, KeyError):\r\n    pass\r\n\r\ndef test(payload, keys, default=''):\r\n    # type: (Any, Any, str) -> Any\r\n    try:\r\n        for key in keys:\r\n            payload = payload[key]\r\n    except (AttributeError, KeyError, TypeError):\r\n        return default\r\n    return payload\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1159/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "\"Exception type must be derived from BaseException\" for standard exceptions", "assignee": null, "closed_at": "2016-01-26T19:15:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1159/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-26T04:41:55Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1158, "html_url": "https://github.com/python/mypy/issues/1158", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1158", "id": 128718365, "events_url": "https://api.github.com/repos/python/mypy/issues/1158/events", "updated_at": "2016-03-01T23:52:38Z", "body": "Reproducer:\r\n```\r\nfrom typing import *\r\n\r\ndef foo():\r\n    # type: () -> Any\r\n    yield\r\n```\r\nthrows:\r\n```\r\n/home/tabbott/foo.py: note: In function \"foo\":\r\n/home/tabbott/foo.py:5: error: Yield value expected\r\n```\r\nIt seems like this should be OK.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1158/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generator[None, None, None] doesn't count as Any", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": "2016-03-01T23:52:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1158/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-26T04:10:27Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1157, "html_url": "https://github.com/python/mypy/issues/1157", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1157", "id": 128678372, "events_url": "https://api.github.com/repos/python/mypy/issues/1157/events", "updated_at": "2016-03-13T05:06:36Z", "body": "Mypy fails on on this example:\r\n```\r\nimport itertools\r\n\r\ndef chunk(iterable, chunk_size):\r\n    key = lambda (i, elem): i  # type: ignore\r\n```\r\n(note that type: ignore doens't help)\r\n\r\nStacktrace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 386, in process\r\n    next.process()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 883, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 385, in visit_file\r\n    self.accept(d)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 382, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 509, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 567, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 663, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 409, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 526, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1058, in visit_block\r\n    self.accept(s)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 564, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1067, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1112, in check_assignment\r\n    self.infer_variable_type(inferred, lvalue, self.accept(rvalue),\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 1193, in accept\r\n    return visitor.visit_func_expr(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checker.py\", line 1984, in visit_func_expr\r\n    return self.expr_checker.visit_func_expr(e)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/checkexpr.py\", line 1200, in visit_func_expr\r\n    ret_type = e.expr().accept(self.chk)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 1190, in expr\r\n    return ret.expr\r\nAttributeError: 'AssignmentStmt' object has no attribute 'expr'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1157/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal error - AttributeError: 'AssignmentStmt' object has no attribute 'expr'", "assignee": null, "closed_at": "2016-03-13T05:06:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1157/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-26T00:01:54Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1156, "html_url": "https://github.com/python/mypy/issues/1156", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1156", "id": 128667684, "events_url": "https://api.github.com/repos/python/mypy/issues/1156/events", "updated_at": "2016-01-28T16:27:39Z", "body": "Running mypy on this example fails with an internal error:\r\n```\r\nif __name__ == '__main__':\r\n    serversList = []\r\n    for i in serversList:\r\n        def to_s(val):\r\n            if not isinstance(val, basestring):\r\n                return \"%s (%s)\" % (val, type(val))\r\n            return \"%s\" % val\r\n        to_s(\"s\")\r\n```\r\n\r\nStacktrace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 386, in process\r\n    next.process()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/build.py\", line 844, in process\r\n    self.semantic_analyzer().visit_file(self.tree, self.tree.path)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 210, in visit_file\r\n    self.accept(d)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 2126, in accept\r\n    node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 673, in accept\r\n    return visitor.visit_if_stmt(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 1551, in visit_if_stmt\r\n    self.visit_block(s.body[i])\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 931, in visit_block\r\n    self.accept(s)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 2126, in accept\r\n    node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 613, in accept\r\n    return visitor.visit_for_stmt(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 1534, in visit_for_stmt\r\n    self.visit_block(s.body)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 931, in visit_block\r\n    self.accept(s)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 2126, in accept\r\n    node.accept(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/nodes.py\", line 382, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/mypy/semanal.py\", line 264, in visit_func_def\r\n    if isinstance(symbol.node, FuncDef) and symbol.node != defn:\r\nAttributeError: 'NoneType' object has no attribute 'node'\r\n```\r\n\r\nMoving the function def outside of the for loop seems to work.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1156/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal error - AttributeError: 'NoneType' object has no attribute 'node'", "assignee": null, "closed_at": "2016-01-28T16:27:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1156/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-25T23:03:49Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1155, "html_url": "https://github.com/python/mypy/issues/1155", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1155", "id": 128660013, "events_url": "https://api.github.com/repos/python/mypy/issues/1155/events", "updated_at": "2016-03-01T23:54:23Z", "body": "I can imagine the following scenario becoming confusing & potentially common\r\n```\r\ndef correctly_annotated(x):\r\n  # type: (int) -> int\r\n  \"\"\"docs...\"\"\"\r\n  ...\r\n\r\ndef incorrectly_annotated(x):\r\n  \"\"\"docs...\"\"\"\r\n  # type: (int) -> int\r\n  ...\r\n```\r\n\r\nIt might be useful for mypy to at least print a warning about the 2nd case?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1155/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Potential warning about mis-placed type annotation?", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1155/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-25T22:34:21Z", "user": {"followers_url": "https://api.github.com/users/mihneagiurgea/followers", "gists_url": "https://api.github.com/users/mihneagiurgea/gists{/gist_id}", "html_url": "https://github.com/mihneagiurgea", "following_url": "https://api.github.com/users/mihneagiurgea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/49309?v=3", "url": "https://api.github.com/users/mihneagiurgea", "organizations_url": "https://api.github.com/users/mihneagiurgea/orgs", "starred_url": "https://api.github.com/users/mihneagiurgea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mihneagiurgea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mihneagiurgea/subscriptions", "login": "mihneagiurgea", "repos_url": "https://api.github.com/users/mihneagiurgea/repos", "received_events_url": "https://api.github.com/users/mihneagiurgea/received_events", "id": 49309, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1154, "html_url": "https://github.com/python/mypy/issues/1154", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1154", "id": 128655562, "events_url": "https://api.github.com/repos/python/mypy/issues/1154/events", "updated_at": "2016-01-29T17:45:20Z", "body": "Mypy still can't infer the type of a decorated function reliably if the function is called above the function definition in the same file. Some decorators work okay, but those that change the signature fail, and also if the decorator is a call expressions things don't work.\r\n\r\nThis is a sketch of the kind of code that doesn't work:\r\n\r\n```\r\n# define mydecorator suitably\r\n\r\ndef f() -> None:\r\n    g(1)\r\n\r\n@mydecorator(1)\r\ndef g(x: int) -> None:\r\n    ...\r\n```\r\n\r\nThere are at least two alternative ways of approaching this:\r\n\r\n* Implement some sort of multi-pass type checking\r\n* Infer more decorated function signatures before type checking\r\n\r\nThe first option is probably the better as it also addresses a similar issue with attributes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1154/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Location of decorated functions affects type checking results", "assignee": null, "closed_at": "2016-01-29T17:44:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1154/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-25T22:16:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1153, "html_url": "https://github.com/python/mypy/issues/1153", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1153", "id": 128654343, "events_url": "https://api.github.com/repos/python/mypy/issues/1153/events", "updated_at": "2016-03-01T23:56:04Z", "body": "```\r\ntry:\r\n    import simplejson\r\nexcept ImportError:\r\n    import json as simplejson\r\n```\r\nresulst in the error `error: Name 'simplejson' already defined`", "labels_url": "https://api.github.com/repos/python/mypy/issues/1153/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy bug with try/except conditional imports", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1153/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-25T22:11:52Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1152, "html_url": "https://github.com/python/mypy/issues/1152", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1152", "id": 128653834, "events_url": "https://api.github.com/repos/python/mypy/issues/1152/events", "updated_at": "2016-01-26T19:25:07Z", "body": "This issue affects unannotated code.  Here's some example code from https://github.com/zulip/zulip/blob/master/zerver/lib/test_helpers.py#L47:\r\n\r\n```\r\n@contextmanager\r\ndef simulated_queue_client(client):\r\n    real_SimpleQueueClient = queue_processors.SimpleQueueClient\r\n    queue_processors.SimpleQueueClient = client\r\n    yield\r\n    queue_processors.SimpleQueueClient = real_SimpleQueueClient\r\n```\r\n(There's a similar issue with replacing a function rather than a class; and an example a few lines down in the Zulip codebase)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1152/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy complains about monkey-patching classes in another module", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1152/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-25T22:09:32Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1151, "html_url": "https://github.com/python/mypy/issues/1151", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1151", "id": 128636766, "events_url": "https://api.github.com/repos/python/mypy/issues/1151/events", "updated_at": "2016-01-29T19:54:09Z", "body": "This:\r\n```\r\ndef test():\r\n    def foo():\r\n        return bar()\r\n\r\n    def bar():\r\n        return \"bar\"\r\n```\r\nThrows:\r\n```\r\n/home/tabbott/foo.py: note: In function \"foo\":\r\n/home/tabbott/foo.py:6: error: Name 'bar' is not defined\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1151/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Name not defined errors accessing functions defined later in a function", "assignee": null, "closed_at": "2016-01-29T19:54:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1151/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-25T20:59:21Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1150, "html_url": "https://github.com/python/mypy/issues/1150", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1150", "id": 128634063, "events_url": "https://api.github.com/repos/python/mypy/issues/1150/events", "updated_at": "2016-01-28T19:47:11Z", "body": "Reproducer: `min([1, 2], key = lambda x: -x)`", "labels_url": "https://api.github.com/repos/python/mypy/issues/1150/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy throws error using min with a key function specified", "assignee": null, "closed_at": "2016-01-28T19:47:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1150/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-25T20:45:25Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1149, "html_url": "https://github.com/python/mypy/issues/1149", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1149", "id": 128632951, "events_url": "https://api.github.com/repos/python/mypy/issues/1149/events", "updated_at": "2016-01-25T22:47:15Z", "body": "Reproducer:\r\n```\r\ndef foo():\r\n    yield\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1149/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "yield with no arguments throws an error", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": "2016-01-25T22:47:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1149/comments", "labels": [], "created_at": "2016-01-25T20:39:30Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1148, "html_url": "https://github.com/python/mypy/pull/1148", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1148", "id": 128632753, "events_url": "https://api.github.com/repos/python/mypy/issues/1148/events", "updated_at": "2016-01-25T21:46:25Z", "body": "Unannotated functions still get typechecked, so we need to explicitly check for that case.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1148/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix empty yield error in unannotated functions", "assignee": null, "closed_at": "2016-01-25T21:46:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1148/comments", "labels": [], "created_at": "2016-01-25T20:38:22Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1148.patch", "html_url": "https://github.com/python/mypy/pull/1148", "diff_url": "https://github.com/python/mypy/pull/1148.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1148"}, "locked": false}, {"milestone": null, "number": 1147, "html_url": "https://github.com/python/mypy/issues/1147", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1147", "id": 128632652, "events_url": "https://api.github.com/repos/python/mypy/issues/1147/events", "updated_at": "2016-01-25T23:05:42Z", "body": "Reproducer is e.g.\r\n\r\nwith file(\"foo\"):\r\n    # do stuff\r\n\r\nIt's gone in python  3, but still somewhat common in Python 2 code.  \r\n\r\nAt the very least, the error should be changed from \r\n```\r\nfoo:15: error: Cannot instantiate abstract class 'file' with abstract methods '__enter__', '__exit__', '__iter__', 'close' and 'fileno'\r\nfoo.py:15: error: Too many arguments for \"file\"\r\n```\r\nto a single error telling you to use open(), but probably we can fix this properly to have an override to work like `open()`", "labels_url": "https://api.github.com/repos/python/mypy/issues/1147/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy python 2 support doesn't handle file()", "assignee": null, "closed_at": "2016-01-25T20:43:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1147/comments", "labels": [], "created_at": "2016-01-25T20:37:50Z", "user": {"followers_url": "https://api.github.com/users/timabbott/followers", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "html_url": "https://github.com/timabbott", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2746074?v=3", "url": "https://api.github.com/users/timabbott", "organizations_url": "https://api.github.com/users/timabbott/orgs", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "login": "timabbott", "repos_url": "https://api.github.com/users/timabbott/repos", "received_events_url": "https://api.github.com/users/timabbott/received_events", "id": 2746074, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1146, "html_url": "https://github.com/python/mypy/issues/1146", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1146", "id": 128421170, "events_url": "https://api.github.com/repos/python/mypy/issues/1146/events", "updated_at": "2016-01-25T04:45:34Z", "body": "Please consider migrating to setuptools (http://pythonhosted.org/setuptools/)\r\n\r\nThere is kind of a mess with libraries used for packaging:\r\nhttp://stackoverflow.com/questions/6344076/differences-between-distribute-distutils-setuptools-and-distutils2\r\n\r\nOverall it looks like setuptools is where everyone is heading, and it's even encouraged in python documentation:\r\nhttps://docs.python.org/3/library/distutils.html\r\n\r\nTwo biggest features that distutils is missing are:\r\n- it can automatically pull dependencies\r\n- the setup.py has develop argument, which allows package to be installed in such way that you can continue editing source code without having to reinstall it every time to test it\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1146/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "setup.py does not support develop argument", "assignee": null, "closed_at": "2016-01-25T04:45:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1146/comments", "labels": [], "created_at": "2016-01-24T20:04:54Z", "user": {"followers_url": "https://api.github.com/users/takeda/followers", "gists_url": "https://api.github.com/users/takeda/gists{/gist_id}", "html_url": "https://github.com/takeda", "following_url": "https://api.github.com/users/takeda/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/411978?v=3", "url": "https://api.github.com/users/takeda", "organizations_url": "https://api.github.com/users/takeda/orgs", "starred_url": "https://api.github.com/users/takeda/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/takeda/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/takeda/subscriptions", "login": "takeda", "repos_url": "https://api.github.com/users/takeda/repos", "received_events_url": "https://api.github.com/users/takeda/received_events", "id": 411978, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1145, "html_url": "https://github.com/python/mypy/issues/1145", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1145", "id": 128419671, "events_url": "https://api.github.com/repos/python/mypy/issues/1145/events", "updated_at": "2016-01-25T19:00:20Z", "body": "When trying to check the code that was indented with tabs it spews errors like this:\r\n\r\ntest.py:8: error: Parse error before \"def\"\r\ntest.py:8: error: Parse error before :\r\ntest.py:9: error: Inconsistent indentation\r\ntest.py:10: error: Parse error before \"p\"\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1145/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "No support for async/await (updated title)", "assignee": null, "closed_at": "2016-01-25T05:44:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1145/comments", "labels": [], "created_at": "2016-01-24T19:40:34Z", "user": {"followers_url": "https://api.github.com/users/takeda/followers", "gists_url": "https://api.github.com/users/takeda/gists{/gist_id}", "html_url": "https://github.com/takeda", "following_url": "https://api.github.com/users/takeda/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/411978?v=3", "url": "https://api.github.com/users/takeda", "organizations_url": "https://api.github.com/users/takeda/orgs", "starred_url": "https://api.github.com/users/takeda/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/takeda/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/takeda/subscriptions", "login": "takeda", "repos_url": "https://api.github.com/users/takeda/repos", "received_events_url": "https://api.github.com/users/takeda/received_events", "id": 411978, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1144, "html_url": "https://github.com/python/mypy/issues/1144", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1144", "id": 128408264, "events_url": "https://api.github.com/repos/python/mypy/issues/1144/events", "updated_at": "2016-01-24T17:12:28Z", "body": "I did:\r\n$ pip install mypy-lang\r\n\r\nSaw this:\r\nCollecting mypy-lang\r\n  Downloading mypy-lang-0.2.0.tar.gz (250kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 253kB 597kB/s\r\nBuilding wheels for collected packages: mypy-lang\r\n  Running setup.py bdist_wheel for mypy-lang\r\n  Stored in directory: /Users/stefan/Library/Caches/pip/wheels/0f/83/7e/e0fdc8a0c1fc9fc8443fb0124cb227be00702745d79a0a4a22\r\nSuccessfully built mypy-lang\r\nInstalling collected packages: mypy-lang\r\nSuccessfully installed mypy-lang-0.2.0\r\n\r\nTried this:\r\n$ mypy pong2.py\r\n\r\nand saw this:\r\ntraceback (most recent call last):\r\n  File \"/Users/stefan/anaconda/bin/mypy\", line 14, in <module>\r\n    from mypy import build\r\n  File \"/Users/stefan/anaconda/lib/python3.5/site-packages/mypy/build.py\", line 19, in <module>\r\n    from typing import Undefined, Dict, List, Tuple, cast, Set, Union\r\nImportError: cannot import name 'Undefined'\r\n\r\n\r\nhelp?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1144/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "install into anaconda 3.5.1 fails", "assignee": null, "closed_at": "2016-01-24T16:48:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1144/comments", "labels": [], "created_at": "2016-01-24T16:36:47Z", "user": {"followers_url": "https://api.github.com/users/bwanaaa/followers", "gists_url": "https://api.github.com/users/bwanaaa/gists{/gist_id}", "html_url": "https://github.com/bwanaaa", "following_url": "https://api.github.com/users/bwanaaa/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4876720?v=3", "url": "https://api.github.com/users/bwanaaa", "organizations_url": "https://api.github.com/users/bwanaaa/orgs", "starred_url": "https://api.github.com/users/bwanaaa/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bwanaaa/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bwanaaa/subscriptions", "login": "bwanaaa", "repos_url": "https://api.github.com/users/bwanaaa/repos", "received_events_url": "https://api.github.com/users/bwanaaa/received_events", "id": 4876720, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1143, "html_url": "https://github.com/python/mypy/issues/1143", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1143", "id": 128302290, "events_url": "https://api.github.com/repos/python/mypy/issues/1143/events", "updated_at": "2016-03-01T23:57:42Z", "body": "This is minor, but it's a little confusing (especially when you build a web UI on top of it :-) that errors about the `# type` comment form of a signature are attributed to the line before. Found by @ddfisher .", "labels_url": "https://api.github.com/repos/python/mypy/issues/1143/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Errors in '# type: (args) -> type' are attributed to the preceding 'def' line", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1143/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-23T05:01:41Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1142, "html_url": "https://github.com/python/mypy/pull/1142", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1142", "id": 128278296, "events_url": "https://api.github.com/repos/python/mypy/issues/1142/events", "updated_at": "2016-01-24T01:22:57Z", "body": "This is only a problem in Python 2, so it wasn't caught by the unit tests.  This PR associates the line number with the type when parsing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1142/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add line number to \"__init__ must return None\" error", "assignee": null, "closed_at": "2016-01-24T01:22:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1142/comments", "labels": [], "created_at": "2016-01-23T00:41:48Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1142.patch", "html_url": "https://github.com/python/mypy/pull/1142", "diff_url": "https://github.com/python/mypy/pull/1142.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1142"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1141, "html_url": "https://github.com/python/mypy/issues/1141", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1141", "id": 127963713, "events_url": "https://api.github.com/repos/python/mypy/issues/1141/events", "updated_at": "2016-03-26T12:28:07Z", "body": "We should agree on how we expect the string types to be used in Python 2 code.\r\n\r\nThere are at least four ways we can approach this:\r\n\r\n1.    Make `str` usually valid when `unicode` is expected. This is how mypy currently works, and this is similar to how PEP 484 defines `bytearray` / `bytes` compatibility. This will correspond to runtime semantics, but it's not safe as non-ascii characters in `str` objects will result in programs sometimes blowing up. A 7-bit `str` instance is almost always valid at runtime when `unicode` is expected.\r\n2.    Get rid of the `str -> unicode` promotion and use `Union[str, unicode]` everywhere (or create an alias for it). This is almost like approach 1, except that we have a different name for `unicode` and more complex error messages and a complex programming model due to the proliferation of union types. There is potential for some additional type safety by using just `unicode` in user code.\r\n3.    Enforce explicit `str` / `unicode` distinction in Python 2 code, similar to Python 3 (`str` would behave more or less like Python 3 `bytes`), and discourage union types. This will make it harder to annotate existing Python 2 programs which often use the two types almost interchangeably, but it will make programs safer.\r\n4.    Have three different string types: `bytes` (distinct from from `str`) means 8-bit `str` instances -- these aren't compatible with `unicode`. `str` means ascii `str` instances. These are compatible with `bytes` and `unicode`, but not the other way around. `unicode` means `unicode` instances and isn't special. A string literal will have implicit type `str` or `bytes` depending on whether it only has ascii characters. This approach should be pretty safe and potentially also makes it fairly easy to adapt existing code, but harder than with approach 1.\r\n\r\nThese also affect how stubs should be written and thus it would be best if every tool using typeshed could use the same approach:\r\n\r\n*    For approach 1, stubs should usually use `str`, `unicode` or `AnyStr`. This is how many stubs are written already.\r\n*    For approach 2, stubs should use `str`, `Uniont[str, unicode]` or `AnyStr` for attributes and function arguments, and return types could additionally use plain `unicode`. Return types would in general be hard to specify precisely, as it may be difficult to predict whether a function called with `str` or combination of `str` and `unicode` returns `str`, `unicode` or `Union[str, unicode]`. In approach 1 we can safely fall back to `unicode` if unsure. `AnyStr` would be less useful as we could have mixed function arguments like `(str, unicode)` easily (see the typeshed issues mentioned below for more about this).\r\n*    For approach 3, stubs would usually use either `str`, `unicode` or `AnyStr`, but `unicode` wouldn't accept plain `str` objects.\r\n*    For approach 4, stubs could use three different types (`bytes`, `str`, `unicode`) in addition to `AnyStr`, and these would all behave differently. Unlike the first three approaches, `AnyStr` would range over `str`, `unicode` and `bytes` in Python 2 mode.\r\n\r\nNote that mypy currently assumes approach 1 and I don't know how well the other approaches would work in practice.\r\n\r\n[This was adapted from a comment on #1135; see the original issue for more discussion. Also, https://github.com/python/typeshed/issues/50 is relevant.]", "labels_url": "https://api.github.com/repos/python/mypy/issues/1141/labels{/name}", "comments": 20, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Decide how to deal with str/unicode", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1141/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-21T16:30:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1140, "html_url": "https://github.com/python/mypy/issues/1140", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1140", "id": 127535280, "events_url": "https://api.github.com/repos/python/mypy/issues/1140/events", "updated_at": "2016-03-01T23:59:08Z", "body": "This came up in https://github.com/JukkaL/mypy/pull/1137#issuecomment-172484133. We should eventually know exactly how to declare the type of various coroutine-like things, whether they use `@asyncio.coroutine`, `async def, or merely `yield from`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1140/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Reason through Future, Generator, Coroutine, Awaitable", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1140/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-19T20:49:28Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1139, "html_url": "https://github.com/python/mypy/issues/1139", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1139", "id": 127172509, "events_url": "https://api.github.com/repos/python/mypy/issues/1139/events", "updated_at": "2016-01-18T09:55:57Z", "body": "[PEP 492](https://www.python.org/dev/peps/pep-0492/) adds `async def`, `await`, and `Awaitable` objects.  mypy doesn't support these yet, but should eventually.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1139/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Awaitable support", "assignee": null, "closed_at": "2016-01-18T09:55:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1139/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-18T07:57:20Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1138, "html_url": "https://github.com/python/mypy/issues/1138", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1138", "id": 127135258, "events_url": "https://api.github.com/repos/python/mypy/issues/1138/events", "updated_at": "2016-03-01T23:58:49Z", "body": "mypy incorrectly parses this program with no errors:\r\n\r\n```python\r\nfrom typing import Generator\r\n\r\ndef g() -> Generator[None, int, None]:\r\n    f(yield)\r\n\r\ndef f(x: int) -> None:\r\n    print(x)\r\n```\r\n\r\nHowever, `f(yield)` is not valid Python syntax.  It needs another set of parens, i.e. `f((yield))`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1138/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "overly permissive parsing: f(yield) should be syntax error", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1138/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-18T00:26:05Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1137, "html_url": "https://github.com/python/mypy/pull/1137", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1137", "id": 127133119, "events_url": "https://api.github.com/repos/python/mypy/issues/1137/events", "updated_at": "2016-01-20T23:23:39Z", "body": "This commit fixes up the handling of Generators in several ways:\r\n- it removes YieldStmt and YieldFromStmt, because they unnecessarily\r\n  duplicate ExpressionStmt of YieldExpr/YieldFromExpr\r\n- it ensures functions are properly marked as is_generator when\r\n  appropriate\r\n- it fixes a parsing bug where empty yield expressions would cause a parse\r\n  error\r\n- it checks Generator functions for the appropriate type signature at\r\n  the function level, rather than at the yield statement level\r\n- it adds support for return statements in Generator functions\r\n\r\nfixes #20, fixes #836, fixes #695, fixes #633, fixes #498 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/1137/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generator fixup", "assignee": null, "closed_at": "2016-01-20T23:23:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1137/comments", "labels": [], "created_at": "2016-01-17T23:48:51Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1137.patch", "html_url": "https://github.com/python/mypy/pull/1137", "diff_url": "https://github.com/python/mypy/pull/1137.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1137"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1136, "html_url": "https://github.com/python/mypy/issues/1136", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1136", "id": 127110730, "events_url": "https://api.github.com/repos/python/mypy/issues/1136/events", "updated_at": "2016-04-07T18:41:09Z", "body": "Mypy does not consider the stub file for the module it is currently type-checking (and doing so was apparently [considered and rejected](https://mail.python.org/pipermail/python-ideas/2016-January/037704.html) recently). However, `@overload` as defined in the PEP is only allowed to appear in stubs, which implies a requirement for type checkers to consider a module's own stubs when type checking it. Otherwise, the ability to type check a module which defines an overloaded function is limited.\r\n\r\nMy motivating example:\r\n```\r\n@overload\r\ndef utf8(s: None) -> None: ...\r\n@overload\r\ndef utf8(s: AnyStr) -> bytes: ...\r\n```\r\n\r\nThis could be expressed as `def utf8(s: Optional[AnyStr]) -> Optional[bytes]`, but I'm trying to capture the fact that if the argument is not None then the result is also guaranteed not to be None, so it doesn't introduce unnecessary `Optional`-ness. (Is there a way to express this with a `TypeVar`? I don't see one). I can put the overloads in a stub for the benefit of external callers of this module, but then I need to put *all* the type information for this module in the stub and can't type check it internally (I could duplicate all the non-overload type info in the module itself and get partial coverage). I could also put overloaded functions in their own tiny modules to minimize the impact, but that just feels silly.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1136/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow @overload outside stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1136/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2016-01-17T17:37:22Z", "user": {"followers_url": "https://api.github.com/users/bdarnell/followers", "gists_url": "https://api.github.com/users/bdarnell/gists{/gist_id}", "html_url": "https://github.com/bdarnell", "following_url": "https://api.github.com/users/bdarnell/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/160562?v=3", "url": "https://api.github.com/users/bdarnell", "organizations_url": "https://api.github.com/users/bdarnell/orgs", "starred_url": "https://api.github.com/users/bdarnell/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bdarnell/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bdarnell/subscriptions", "login": "bdarnell", "repos_url": "https://api.github.com/users/bdarnell/repos", "received_events_url": "https://api.github.com/users/bdarnell/received_events", "id": 160562, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1135, "html_url": "https://github.com/python/mypy/issues/1135", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1135", "id": 127066723, "events_url": "https://api.github.com/repos/python/mypy/issues/1135/events", "updated_at": "2016-01-21T16:31:54Z", "body": "Mypy incorrectly reports two errors in this (python 2) snippet. \r\n\r\n```\r\n$ nl -ba /tmp/foo.py\r\n     1\timport typing\r\n     2\t\r\n     3\tdef foo(value):\r\n     4\t    # type: (typing.Union[unicode, bytes]) -> None\r\n     5\t    if isinstance(value, unicode):\r\n     6\t        return\r\n     7\t    if not isinstance(value, bytes):\r\n     8\t        raise TypeError(\"Expected bytes or unicode; got %r\" % type(value))\r\n$ PYTHONPATH=.  scripts/mypy --py2 /tmp/foo.py\r\n/tmp/foo.py: note: In function \"foo\":\r\n/tmp/foo.py:7: error: Argument 1 to \"isinstance\" has incompatible type \"Union[object, object]\"; expected \"object\"\r\n/tmp/foo.py:8: error: No overload variant of \"type\" matches argument types [Union[<ERROR>, <ERROR>, <ERROR>, <ERROR>]]\r\n```\r\n\r\nIf lines 5 and 6 are removed, the errors disappear. If line 7 is replaced with `if True:`, the error on line 8 remains. Replacing `unicode` with `str` and running mypy in py3 mode also makes the errors disappear.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1135/labels{/name}", "comments": 14, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unions break with `isinstance()`", "assignee": null, "closed_at": "2016-01-18T20:29:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1135/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-17T00:55:40Z", "user": {"followers_url": "https://api.github.com/users/bdarnell/followers", "gists_url": "https://api.github.com/users/bdarnell/gists{/gist_id}", "html_url": "https://github.com/bdarnell", "following_url": "https://api.github.com/users/bdarnell/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/160562?v=3", "url": "https://api.github.com/users/bdarnell", "organizations_url": "https://api.github.com/users/bdarnell/orgs", "starred_url": "https://api.github.com/users/bdarnell/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bdarnell/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bdarnell/subscriptions", "login": "bdarnell", "repos_url": "https://api.github.com/users/bdarnell/repos", "received_events_url": "https://api.github.com/users/bdarnell/received_events", "id": 160562, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1134, "html_url": "https://github.com/python/mypy/issues/1134", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1134", "id": 126989807, "events_url": "https://api.github.com/repos/python/mypy/issues/1134/events", "updated_at": "2016-01-16T01:22:10Z", "body": "I just installed `mypy`:\r\n\r\n    $ mypy\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/bin/mypy\", line 14, in <module>\r\n        from mypy import build\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/build.py\", line 19, in <module>\r\n        from typing import Undefined, Dict, List, Tuple, cast, Set, Union\r\n    ImportError: cannot import name 'Undefined'\r\n\r\nThere's no `Undefined` in the typing module. Removing its name from the list makes it crop up again:\r\n\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/types.py\", line 4, in <module>\r\n        from typing import Undefined, Any, TypeVar, List, Tuple, cast, Generic, Set\r\n    ImportError: cannot import name 'Undefined'\r\n\r\nAnd again:\r\n\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/nodes.py\", line 7, in <module>\r\n        from typing import (\r\n    ImportError: cannot import name 'Undefined'\r\n\r\nAfter eliminating it a few more times, we see it's actually necessary:\r\n\r\n      File \"/usr/local/lib/python3.5/dist-packages/mypy/lex.py\", line 281, in Lexer\r\n        tok = Undefined(List[Token])\r\n    NameError: name 'Undefined' is not defined\r\n\r\nPerhaps `Undefined` isn't exported from `typing`?\r\n\r\n---\r\n\r\nThis is the Ubuntu and Debian repositories' version of Python 3.5+ on Ubuntu Linux 15.10.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1134/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Can't import \"Undefined\" from typing module", "assignee": null, "closed_at": "2016-01-16T01:18:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1134/comments", "labels": [], "created_at": "2016-01-16T01:09:53Z", "user": {"followers_url": "https://api.github.com/users/catb0t/followers", "gists_url": "https://api.github.com/users/catb0t/gists{/gist_id}", "html_url": "https://github.com/catb0t", "following_url": "https://api.github.com/users/catb0t/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3238748?v=3", "url": "https://api.github.com/users/catb0t", "organizations_url": "https://api.github.com/users/catb0t/orgs", "starred_url": "https://api.github.com/users/catb0t/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/catb0t/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/catb0t/subscriptions", "login": "catb0t", "repos_url": "https://api.github.com/users/catb0t/repos", "received_events_url": "https://api.github.com/users/catb0t/received_events", "id": 3238748, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1133, "html_url": "https://github.com/python/mypy/pull/1133", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1133", "id": 126983819, "events_url": "https://api.github.com/repos/python/mypy/issues/1133/events", "updated_at": "2016-02-04T01:48:18Z", "body": "This isn't very principled -- I ran the test case under the debugger until I found the two (!) places where object is inserted into the MRO, and skipped them if fallback_to_any is set.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1133/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "If a base class is Any, don't get default constructor signature from object. Fixes #1049.", "assignee": null, "closed_at": "2016-01-18T17:06:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1133/comments", "labels": [], "created_at": "2016-01-16T00:04:54Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1133.patch", "html_url": "https://github.com/python/mypy/pull/1133", "diff_url": "https://github.com/python/mypy/pull/1133.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1133"}, "locked": false}, {"milestone": null, "number": 1132, "html_url": "https://github.com/python/mypy/issues/1132", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1132", "id": 126980573, "events_url": "https://api.github.com/repos/python/mypy/issues/1132/events", "updated_at": "2016-01-19T20:50:59Z", "body": "The following code gives errors:\r\n\r\n```python\r\nfrom types import SimpleNamespace\r\nns = SimpleNamespace()\r\nns.a = 5\r\nprint(ns.a/2)\r\n```\r\n\r\nThere are two ways to make this work:\r\n* Treat it like a `Dict[str, Any]`. Allow all assignments and treat all reads as if they return `Any`.\r\n* Track the first assignment and then treat it as that type. Reading before assignment is an error.\r\n\r\nI haven't seen any of mypy's code, but the first sounds simpler. Although there should already be something similar to the second option for module level variables.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1132/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add support for SimpleNamespace", "assignee": null, "closed_at": "2016-01-19T20:50:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1132/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2016-01-15T23:37:50Z", "user": {"followers_url": "https://api.github.com/users/DanielShaulov/followers", "gists_url": "https://api.github.com/users/DanielShaulov/gists{/gist_id}", "html_url": "https://github.com/DanielShaulov", "following_url": "https://api.github.com/users/DanielShaulov/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3260178?v=3", "url": "https://api.github.com/users/DanielShaulov", "organizations_url": "https://api.github.com/users/DanielShaulov/orgs", "starred_url": "https://api.github.com/users/DanielShaulov/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/DanielShaulov/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/DanielShaulov/subscriptions", "login": "DanielShaulov", "repos_url": "https://api.github.com/users/DanielShaulov/repos", "received_events_url": "https://api.github.com/users/DanielShaulov/received_events", "id": 3260178, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1131, "html_url": "https://github.com/python/mypy/pull/1131", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1131", "id": 126808639, "events_url": "https://api.github.com/repos/python/mypy/issues/1131/events", "updated_at": "2016-01-15T05:32:32Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1131/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Avoid crash on outrageous non-ASCII characters. Fixes #1127.", "assignee": null, "closed_at": "2016-01-15T05:31:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1131/comments", "labels": [], "created_at": "2016-01-15T05:06:35Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1131.patch", "html_url": "https://github.com/python/mypy/pull/1131", "diff_url": "https://github.com/python/mypy/pull/1131.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1131"}, "locked": false}, {"milestone": null, "number": 1130, "html_url": "https://github.com/python/mypy/pull/1130", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1130", "id": 126795805, "events_url": "https://api.github.com/repos/python/mypy/issues/1130/events", "updated_at": "2016-01-15T18:40:20Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1130/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Find partial types anywhere in the stack. Fixes #1126.", "assignee": null, "closed_at": "2016-01-15T18:39:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1130/comments", "labels": [], "created_at": "2016-01-15T02:45:10Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1130.patch", "html_url": "https://github.com/python/mypy/pull/1130", "diff_url": "https://github.com/python/mypy/pull/1130.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1130"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1129, "html_url": "https://github.com/python/mypy/issues/1129", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1129", "id": 126781515, "events_url": "https://api.github.com/repos/python/mypy/issues/1129/events", "updated_at": "2016-03-17T19:18:51Z", "body": "Having the tests in a subpackage of mypy causes unwanted hits when grepping for e.g. call sites or error messages. (Spun off #1074.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1129/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move test code out of mypy package", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1129/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2016-01-15T00:36:35Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1128, "html_url": "https://github.com/python/mypy/pull/1128", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1128", "id": 126746068, "events_url": "https://api.github.com/repos/python/mypy/issues/1128/events", "updated_at": "2016-01-15T00:44:34Z", "body": "Functions containing yield statements can now return any supertype\r\nof generator. This fixes #1011.\r\n\r\nIn making this pull request, I noticed that the allowed return types of functions containing `yield`s are different depending on whether or not the `yield` is a statement, expression, or a `yield from`.  I'll make a PR to make them all behave consistently next.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1128/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generalize yield statement function type", "assignee": null, "closed_at": "2016-01-15T00:44:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1128/comments", "labels": [], "created_at": "2016-01-14T20:55:07Z", "user": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1128.patch", "html_url": "https://github.com/python/mypy/pull/1128", "diff_url": "https://github.com/python/mypy/pull/1128.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1128"}, "locked": false}, {"milestone": null, "number": 1127, "html_url": "https://github.com/python/mypy/issues/1127", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1127", "id": 126708040, "events_url": "https://api.github.com/repos/python/mypy/issues/1127/events", "updated_at": "2016-01-15T05:31:39Z", "body": "I had copied-pasted some code from a website that used Word-style matching quotes. I got a crash in lex.py:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/runpy.py\", line 184, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/local/lib/python3.5/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/Users/guido/src/mypy/mypy/__main__.py\", line 5, in <module>\r\n    main(None)\r\n  File \"/Users/guido/src/mypy/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Users/guido/src/mypy/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 386, in process\r\n    next.process()\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 710, in process\r\n    tree = self.parse(self.program_text, self.path)\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 807, in parse\r\n    custom_typing_module=self.manager.custom_typing_module)\r\n  File \"/Users/guido/src/mypy/mypy/parse.py\", line 83, in parse\r\n    tree = parser.parse(source)\r\n  File \"/Users/guido/src/mypy/mypy/parse.py\", line 130, in parse\r\n    is_stub_file=self.is_stub_file)\r\n  File \"/Users/guido/src/mypy/mypy/lex.py\", line 170, in lex\r\n    l.lex(string, first_line)\r\n  File \"/Users/guido/src/mypy/mypy/lex.py\", line 377, in lex\r\n    map[c]()\r\nIndexError: list index out of range\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1127/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash in lexer when source contains funny quotes", "assignee": null, "closed_at": "2016-01-15T05:31:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1127/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-14T17:39:01Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1126, "html_url": "https://github.com/python/mypy/issues/1126", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1126", "id": 126695585, "events_url": "https://api.github.com/repos/python/mypy/issues/1126/events", "updated_at": "2016-01-15T18:36:51Z", "body": "I hit this attempting to check (with --use-python-path) code that imports mimetypes, probably by way of requests.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./scripts/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/home/dshea/src/mypy/mypy/main.py\", line 53, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/home/dshea/src/mypy/mypy/main.py\", line 96, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/home/dshea/src/mypy/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/home/dshea/src/mypy/mypy/build.py\", line 386, in process\r\n    next.process()\r\n  File \"/home/dshea/src/mypy/mypy/build.py\", line 883, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 385, in visit_file\r\n    self.accept(d)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/home/dshea/src/mypy/mypy/nodes.py\", line 383, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 449, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 505, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 588, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 409, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/home/dshea/src/mypy/mypy/nodes.py\", line 527, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 983, in visit_block\r\n    self.accept(s)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/home/dshea/src/mypy/mypy/nodes.py\", line 565, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 992, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/home/dshea/src/mypy/mypy/checker.py\", line 1021, in check_assignment\r\n    del partial_types[lvalue_type.var]\r\nKeyError: <mypy.nodes.Var object at 0x7ffbeee8f6d8>\r\n\r\n*** INTERNAL ERROR ***\r\n\r\n/usr/lib64/python3.5/mimetypes.py:359: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n\r\nNOTE: you can use \"mypy --pdb ...\" to drop into the debugger when this happens.\r\n```\r\n\r\n`import mimetypes` is enough to trigger it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1126/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "internal error deleting from partial_types", "assignee": null, "closed_at": "2016-01-15T18:36:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1126/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-14T16:47:07Z", "user": {"followers_url": "https://api.github.com/users/dashea/followers", "gists_url": "https://api.github.com/users/dashea/gists{/gist_id}", "html_url": "https://github.com/dashea", "following_url": "https://api.github.com/users/dashea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4419868?v=3", "url": "https://api.github.com/users/dashea", "organizations_url": "https://api.github.com/users/dashea/orgs", "starred_url": "https://api.github.com/users/dashea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/dashea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/dashea/subscriptions", "login": "dashea", "repos_url": "https://api.github.com/users/dashea/repos", "received_events_url": "https://api.github.com/users/dashea/received_events", "id": 4419868, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1125, "html_url": "https://github.com/python/mypy/issues/1125", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1125", "id": 126620294, "events_url": "https://api.github.com/repos/python/mypy/issues/1125/events", "updated_at": "2016-01-14T11:33:55Z", "body": "In Python 3.5.1, deque should be a MutableSequence (https://bugs.python.org/issue23704)\r\nBy mypy does not recognise it as such\r\n\r\n    import typing\r\n    from collections import deque\r\n\r\n\r\n    dq = deque() # type: typing.MutableSequence\r\n\r\nerror: Incompatible types in assignment (expression has type deque[None], variable has type MutableSequence[Any])", "labels_url": "https://api.github.com/repos/python/mypy/issues/1125/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "collections.deque is not recognised as MutableSequence", "assignee": null, "closed_at": "2016-01-14T11:33:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1125/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2016-01-14T10:07:33Z", "user": {"followers_url": "https://api.github.com/users/timrichardson/followers", "gists_url": "https://api.github.com/users/timrichardson/gists{/gist_id}", "html_url": "https://github.com/timrichardson", "following_url": "https://api.github.com/users/timrichardson/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/927458?v=3", "url": "https://api.github.com/users/timrichardson", "organizations_url": "https://api.github.com/users/timrichardson/orgs", "starred_url": "https://api.github.com/users/timrichardson/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/timrichardson/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/timrichardson/subscriptions", "login": "timrichardson", "repos_url": "https://api.github.com/users/timrichardson/repos", "received_events_url": "https://api.github.com/users/timrichardson/received_events", "id": 927458, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1124, "html_url": "https://github.com/python/mypy/pull/1124", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1124", "id": 126558481, "events_url": "https://api.github.com/repos/python/mypy/issues/1124/events", "updated_at": "2016-02-04T02:56:07Z", "body": "I don't think they serve a purpose any more.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1124/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Get rid of lib-typing and lib-python.", "assignee": null, "closed_at": "2016-01-27T20:23:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1124/comments", "labels": [], "created_at": "2016-01-14T01:48:21Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1124.patch", "html_url": "https://github.com/python/mypy/pull/1124", "diff_url": "https://github.com/python/mypy/pull/1124.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1124"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1123, "html_url": "https://github.com/python/mypy/issues/1123", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1123", "id": 126486059, "events_url": "https://api.github.com/repos/python/mypy/issues/1123/events", "updated_at": "2016-03-01T23:59:56Z", "body": "The report generating code (using command-line flags like `--html-report` _dir_ or `--xml-report` _dir_) has some issues.\r\n\r\n- There are no tests\r\n- No report is generated for files not under the current directory\r\n- When errors are reported, the top level index.html is not generated\r\n- There's an undeclared dependency on lxml (#1001)\r\n- The use of XSLT is dubious (#909)\r\n- It needs docs (#912)\r\n- Feature request to add hover text to html reports: #313", "labels_url": "https://api.github.com/repos/python/mypy/issues/1123/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check coverage reports need more love", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1123/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-13T18:46:02Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1122, "html_url": "https://github.com/python/mypy/pull/1122", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1122", "id": 126317486, "events_url": "https://api.github.com/repos/python/mypy/issues/1122/events", "updated_at": "2016-01-13T23:14:17Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1122/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix crash in check_overlapping_op_methods(). Fix #1121.", "assignee": null, "closed_at": "2016-01-13T04:42:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1122/comments", "labels": [], "created_at": "2016-01-13T01:18:31Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1122.patch", "html_url": "https://github.com/python/mypy/pull/1122", "diff_url": "https://github.com/python/mypy/pull/1122.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1122"}, "locked": false}, {"milestone": null, "number": 1121, "html_url": "https://github.com/python/mypy/issues/1121", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1121", "id": 126304812, "events_url": "https://api.github.com/repos/python/mypy/issues/1121/events", "updated_at": "2016-01-13T17:37:04Z", "body": "Example:\r\n```python\r\nfrom typing import *\r\n\r\ndef deco(f: Any) -> Any:\r\n    return f\r\n\r\nclass C:\r\n\r\n    @deco\r\n    def __lt__(self, other):\r\n        return False\r\n\r\n    def __gt__(self, other: C) -> bool:\r\n        return True\r\n```\r\nThis produces an internal error with a traceback ending in:\r\n```\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 449, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 505, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 545, in check_func_def\r\n    self.check_reverse_op_method(item, typ, name)\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 639, in check_reverse_op_method\r\n    defn)\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 716, in check_overlapping_op_methods\r\n    assert False, 'Forward operator method type is not CallableType'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1121/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash in check_overlapping_op_methods() when other method is decorated", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": "2016-01-13T04:42:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1121/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-12T23:41:04Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1120, "html_url": "https://github.com/python/mypy/pull/1120", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1120", "id": 126301085, "events_url": "https://api.github.com/repos/python/mypy/issues/1120/events", "updated_at": "2016-01-13T23:14:21Z", "body": "This prevents the stated error with lxml version 3.5.0. But the generated XML files don't contain `<?xml version=\"1.0\" encoding=\"UTF-8\" ?` -- is that a problem?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1120/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Hopeful fix for #1002 (lxml trouble).", "assignee": null, "closed_at": "2016-01-13T18:36:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1120/comments", "labels": [], "created_at": "2016-01-12T23:15:38Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1120.patch", "html_url": "https://github.com/python/mypy/pull/1120", "diff_url": "https://github.com/python/mypy/pull/1120.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1120"}, "locked": false}, {"milestone": null, "number": 1119, "html_url": "https://github.com/python/mypy/issues/1119", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1119", "id": 126278908, "events_url": "https://api.github.com/repos/python/mypy/issues/1119/events", "updated_at": "2016-01-12T21:29:36Z", "body": "All travis runs are now failing with a variety of lint errors. I believe it's because a new version of pep8 was installed. I'll see if I can fix this by disabling some specific pep8 warnings.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1119/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Travis runs are failing", "assignee": null, "closed_at": "2016-01-12T21:29:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1119/comments", "labels": [], "created_at": "2016-01-12T21:23:07Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1118, "html_url": "https://github.com/python/mypy/pull/1118", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1118", "id": 126255882, "events_url": "https://api.github.com/repos/python/mypy/issues/1118/events", "updated_at": "2016-01-12T22:16:12Z", "body": "Hopefully this will pass the travis tests. If it does I'll commit it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1118/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #1095 (crash on undefined variable actual_types in check_argument_count())", "assignee": null, "closed_at": "2016-01-12T22:16:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1118/comments", "labels": [], "created_at": "2016-01-12T19:27:58Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1118.patch", "html_url": "https://github.com/python/mypy/pull/1118", "diff_url": "https://github.com/python/mypy/pull/1118.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1118"}, "locked": false}, {"milestone": null, "number": 1117, "html_url": "https://github.com/python/mypy/pull/1117", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1117", "id": 126227293, "events_url": "https://api.github.com/repos/python/mypy/issues/1117/events", "updated_at": "2016-01-12T21:16:32Z", "body": "Removing the extra check showed no noticeable regressions, and it fixed the bug. I'm guessing it had something to do with Python 2 mode and:\r\n\r\n```python\r\ndef f((a, b)): pass\r\n```\r\n\r\nor something?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1117/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #1095", "assignee": null, "closed_at": "2016-01-12T21:16:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1117/comments", "labels": [], "created_at": "2016-01-12T17:14:04Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1117.patch", "html_url": "https://github.com/python/mypy/pull/1117", "diff_url": "https://github.com/python/mypy/pull/1117.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1117"}, "locked": false}, {"milestone": null, "number": 1116, "html_url": "https://github.com/python/mypy/pull/1116", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1116", "id": 126029704, "events_url": "https://api.github.com/repos/python/mypy/issues/1116/events", "updated_at": "2016-01-12T23:42:20Z", "body": "Make it possible to overload a generic definition e.g. in\r\n2and3/ (or 2/ or 3/) with a more specialized one in e.g. 3.5/.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1116/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix the order in which builtins are loaded.", "assignee": null, "closed_at": "2016-01-11T22:11:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1116/comments", "labels": [], "created_at": "2016-01-11T20:28:48Z", "user": {"followers_url": "https://api.github.com/users/matthiaskramm/followers", "gists_url": "https://api.github.com/users/matthiaskramm/gists{/gist_id}", "html_url": "https://github.com/matthiaskramm", "following_url": "https://api.github.com/users/matthiaskramm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/306087?v=3", "url": "https://api.github.com/users/matthiaskramm", "organizations_url": "https://api.github.com/users/matthiaskramm/orgs", "starred_url": "https://api.github.com/users/matthiaskramm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/matthiaskramm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/matthiaskramm/subscriptions", "login": "matthiaskramm", "repos_url": "https://api.github.com/users/matthiaskramm/repos", "received_events_url": "https://api.github.com/users/matthiaskramm/received_events", "id": 306087, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1116.patch", "html_url": "https://github.com/python/mypy/pull/1116", "diff_url": "https://github.com/python/mypy/pull/1116.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1116"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1115, "html_url": "https://github.com/python/mypy/issues/1115", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1115", "id": 125995192, "events_url": "https://api.github.com/repos/python/mypy/issues/1115/events", "updated_at": "2016-03-02T00:00:41Z", "body": "[The following is adapted from discussion at #1113. Go there for more context.]\r\n\r\nWe should give output like this for some invariance violations, as many programmers expect everything to be covariant and it may not be obvious why mypy is complaining:\r\n\r\n```\r\n$ mypy file.py\r\nfile.py:7: error: Argument 1 to \"f\" has incompatible type Dict[str, List[int]]; expected Dict[str, Sequence[int]]\r\nfile.py:8: note: The second type parameter of \"Dict\" is invariant; consider using \"Mapping\" instead, which is covariant\r\n```\r\n\r\nThis would give more context even for somebody who doesn't understand covariance/invariance -- these terms are easy to google.\r\n\r\nEven better, we could give a pointer to relevant documentation.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1115/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give better error messages when there are covariance/invariance related errors", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1115/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-11T17:26:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1114, "html_url": "https://github.com/python/mypy/issues/1114", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1114", "id": 125994437, "events_url": "https://api.github.com/repos/python/mypy/issues/1114/events", "updated_at": "2016-03-02T00:01:20Z", "body": "Mapping should be covariant. See discussion at #1113.\r\n\r\nNote that the key type is used as an argument type to `__getitem__` and `get`, so mypy may complain about a covariant key type variable, but we can just ignore that error in the stub, as covariance is safe in this case. `Mapping` doesn't support mutation operations and `__getitem__` can fail even in fully type safe code.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1114/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make Mapping covariant", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1114/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2016-01-11T17:22:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1113, "html_url": "https://github.com/python/mypy/issues/1113", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1113", "id": 125927689, "events_url": "https://api.github.com/repos/python/mypy/issues/1113/events", "updated_at": "2016-01-12T00:08:06Z", "body": "This is from the latest master (`pip install git+git://github.com/JukkaL/mypy.git`).\r\n```\r\n$ cat file.py\r\nfrom typing import Dict, Sequence\r\ndef f(data: Dict[str, Sequence[int]]) -> None:\r\n    pass\r\ndata = {\"a\": [1, 2]}\r\nf(data)\r\n\r\n$ mypy file.py\r\nfile.py:7: error: Argument 1 to \"f\" has incompatible type Dict[str, List[int]]; expected Dict[str, Sequence[int]]\r\n```\r\n\r\nIf I replace the function call with `f({\"a\": [1, 2]})`, instead of defining the dict on a separate line, then it works.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1113/labels{/name}", "comments": 11, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Bug (?) with Sequence / List", "assignee": null, "closed_at": "2016-01-12T00:08:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1113/comments", "labels": [], "created_at": "2016-01-11T11:56:42Z", "user": {"followers_url": "https://api.github.com/users/rmcgibbo/followers", "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}", "html_url": "https://github.com/rmcgibbo", "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/641278?v=3", "url": "https://api.github.com/users/rmcgibbo", "organizations_url": "https://api.github.com/users/rmcgibbo/orgs", "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions", "login": "rmcgibbo", "repos_url": "https://api.github.com/users/rmcgibbo/repos", "received_events_url": "https://api.github.com/users/rmcgibbo/received_events", "id": 641278, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1112, "html_url": "https://github.com/python/mypy/issues/1112", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1112", "id": 125904768, "events_url": "https://api.github.com/repos/python/mypy/issues/1112/events", "updated_at": "2016-01-11T11:23:21Z", "body": "The following example crashes mypy.\r\n\r\n```\r\nfrom typing import TypeVar, Callable\r\n\r\nS = TypeVar('S')\r\nT = TypeVar('T')\r\n\r\ndef id(f: Callable[[S], T]) -> None:\r\n    pass\r\n\r\n@id\r\ndef g() -> int:\r\n    return 0\r\n```\r\n\r\nThe traceback is\r\n```\r\n[snip]\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/site-packages/mypy/constraints.py\", line 221, in visit_callable_type\r\n    template.arg_types[i], cactual.arg_types[i],\r\nIndexError: list index out of range\r\n```\r\n\r\nIf I replace `g` with something else that should fail to typecheck, like\r\n```\r\n@id\r\ndef g(x: int, y: int) -> int:\r\n    return 0\r\n```\r\n\r\nthen I get the expected type checking error\r\n```\r\nexample.py:9: error: Argument 1 to \"id\" has incompatible type Callable[[int, int], int]; expected Callable[[int], int]\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1112/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash with checking Callable with zero arguments", "assignee": null, "closed_at": "2016-01-11T11:23:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1112/comments", "labels": [], "created_at": "2016-01-11T09:31:45Z", "user": {"followers_url": "https://api.github.com/users/rmcgibbo/followers", "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}", "html_url": "https://github.com/rmcgibbo", "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/641278?v=3", "url": "https://api.github.com/users/rmcgibbo", "organizations_url": "https://api.github.com/users/rmcgibbo/orgs", "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions", "login": "rmcgibbo", "repos_url": "https://api.github.com/users/rmcgibbo/repos", "received_events_url": "https://api.github.com/users/rmcgibbo/received_events", "id": 641278, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1111, "html_url": "https://github.com/python/mypy/issues/1111", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1111", "id": 125875406, "events_url": "https://api.github.com/repos/python/mypy/issues/1111/events", "updated_at": "2016-01-13T23:18:34Z", "body": "This is specified in PEP 484. This came up in https://github.com/python/typeshed/issues/36", "labels_url": "https://api.github.com/repos/python/mypy/issues/1111/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "When using [from ...] import ... as ..., the name should be considered exported", "assignee": null, "closed_at": "2016-01-13T23:18:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1111/comments", "labels": [{"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2016-01-11T05:19:48Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1110, "html_url": "https://github.com/python/mypy/pull/1110", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1110", "id": 125800720, "events_url": "https://api.github.com/repos/python/mypy/issues/1110/events", "updated_at": "2016-01-11T03:55:49Z", "body": "The current package on pypi is incompatible with Python 3.5. The solution until pypi is updated is to install directly from github (see https://github.com/JukkaL/mypy/issues/975). However, the README.md file doesn't mention it. I spent 30 minutes updating and reinstalling everything until I found the issue. This little change can save a lot of time for other people until the next release.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1110/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update README.md to fix installation instructions for Python 3.5", "assignee": null, "closed_at": "2016-01-11T03:55:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1110/comments", "labels": [], "created_at": "2016-01-10T05:06:04Z", "user": {"followers_url": "https://api.github.com/users/the-gigi/followers", "gists_url": "https://api.github.com/users/the-gigi/gists{/gist_id}", "html_url": "https://github.com/the-gigi", "following_url": "https://api.github.com/users/the-gigi/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1409590?v=3", "url": "https://api.github.com/users/the-gigi", "organizations_url": "https://api.github.com/users/the-gigi/orgs", "starred_url": "https://api.github.com/users/the-gigi/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/the-gigi/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/the-gigi/subscriptions", "login": "the-gigi", "repos_url": "https://api.github.com/users/the-gigi/repos", "received_events_url": "https://api.github.com/users/the-gigi/received_events", "id": 1409590, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1110.patch", "html_url": "https://github.com/python/mypy/pull/1110", "diff_url": "https://github.com/python/mypy/pull/1110.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1110"}, "locked": false}, {"milestone": null, "number": 1109, "html_url": "https://github.com/python/mypy/pull/1109", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1109", "id": 125708018, "events_url": "https://api.github.com/repos/python/mypy/issues/1109/events", "updated_at": "2016-02-25T05:32:08Z", "body": "This is not entirely finished -- I just commented out the lines that report the errors while leaving the rest of the flow in.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1109/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "WIP: Rip out offending error messages for issue #1101.", "assignee": null, "closed_at": "2016-01-12T22:37:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1109/comments", "labels": [], "created_at": "2016-01-08T22:30:43Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1109.patch", "html_url": "https://github.com/python/mypy/pull/1109", "diff_url": "https://github.com/python/mypy/pull/1109.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1109"}, "locked": false}, {"milestone": null, "number": 1108, "html_url": "https://github.com/python/mypy/pull/1108", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1108", "id": 125683681, "events_url": "https://api.github.com/repos/python/mypy/issues/1108/events", "updated_at": "2016-01-11T18:12:56Z", "body": "I need this so I can declare generators that return an instance of typing.Generator (which was added somewhat recently).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1108/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generators should be allowed to return a subclass of Iterator.", "assignee": null, "closed_at": "2016-01-11T18:12:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1108/comments", "labels": [], "created_at": "2016-01-08T20:08:11Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1108.patch", "html_url": "https://github.com/python/mypy/pull/1108", "diff_url": "https://github.com/python/mypy/pull/1108.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1108"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1107, "html_url": "https://github.com/python/mypy/issues/1107", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1107", "id": 125669872, "events_url": "https://api.github.com/repos/python/mypy/issues/1107/events", "updated_at": "2016-03-02T00:02:13Z", "body": "It's pretty common to conditionally import a class. Here is a synthetic example:\r\n\r\n```\r\ntry:\r\n    from m1 import C\r\nexcept ImportError:\r\n    from m2 import CC as C\r\n```\r\n\r\nIt's not quite obvious how code like the above should be type checked, as `m1.C` and `m2.CC` generally don't have identical interfaces.\r\n\r\nSee also #649.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1107/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditional class import", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1107/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2016-01-08T18:51:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1106, "html_url": "https://github.com/python/mypy/issues/1106", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1106", "id": 125669076, "events_url": "https://api.github.com/repos/python/mypy/issues/1106/events", "updated_at": "2016-03-02T00:03:27Z", "body": "Mypy complains about this code, even though it's valid Python:\r\n\r\n```\r\nif x:\r\n    m = None\r\nelse:\r\n    import m\r\n```\r\n\r\nThe most obvious way to fix this would be to add support for \"module types\" for specific modules. In the above example, `m` would be a variable with a partial `None` type initially. The import statement would switch the partial type to the type of module `m`.\r\n\r\n(This is derived from discussion in #649.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1106/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditonally define module after initialization to None", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1106/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-08T18:46:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1105, "html_url": "https://github.com/python/mypy/issues/1105", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1105", "id": 125668504, "events_url": "https://api.github.com/repos/python/mypy/issues/1105/events", "updated_at": "2016-03-02T00:04:33Z", "body": "Mypy complains about the type of `next` in the following example where we define a builtin if it doesn't exist:\r\n\r\n```\r\ntry:\r\n    next   # Error: Cannot determine type of next\r\nexcept NameError:\r\n    next = lambda x: x.next()\r\n```\r\n\r\nMypy could fall back to the builtins module namespace during semantic analysis if it can't determine the type of a module-level name. This way the name would refer to the built-in definition until the first redefinition in the file.\r\n\r\n(This is derived from #649, originally reported by @rbtcollins).\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1105/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditional redefinition of builtin doesn't work", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1105/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2016-01-08T18:43:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1104, "html_url": "https://github.com/python/mypy/issues/1104", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1104", "id": 125666051, "events_url": "https://api.github.com/repos/python/mypy/issues/1104/events", "updated_at": "2016-01-08T20:01:11Z", "body": "The 2.7 stub for functools contains this elaborate definition for `functools.partial`:\r\n```python\r\nclass partial(Generic[_T]):\r\n    func = ...  # Callable[..., _T]\r\n    args = ...  # type: Tuple[Any, ...]\r\n    keywords = ...  # type: Dict[str, Any]\r\n    def __init__(self, func: Callable[..., _T], *args: Any, **kwargs: Any) -> None: ...\r\n    def __call__(self, *args: Any, **kwargs: Any) -> _T: ...\r\n```\r\nHowever, despite the presence of a `__call__` method, this isn't compatible with Callable -- e.g. this gives an error:\r\n```python\r\nfrom typing import *\r\nfrom functools import partial\r\ndef foo(a: int) -> int:\r\n    return a\r\nbar = partial(foo, 42)  # type: Callable[[], int]\r\n```\r\nThe error is on the last line:\r\n```\r\nt.py:5: error: Incompatible types in assignment (expression has type partial[int], variable has type Callable[[], int])\r\n```\r\nI can shut it up with a cast but that's ugly. I'd like the checker to at least understand that class partial as given is callable.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1104/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "How can the stub for functools.partial be made to work?", "assignee": null, "closed_at": "2016-01-08T20:01:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1104/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-08T18:29:03Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1103, "html_url": "https://github.com/python/mypy/issues/1103", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1103", "id": 125600412, "events_url": "https://api.github.com/repos/python/mypy/issues/1103/events", "updated_at": "2016-01-08T20:32:55Z", "body": "First of all, I've recently started to annotate my code, and mypy is very helpful in many cases. But I have also found a case where it is not very helpful. Below is a minimal example.\r\n\r\nLet's say I have a file `foo_module.py`:\r\n\r\n```python\r\n\"\"\"\r\n    Module for class Foo.\r\n\"\"\"\r\n\r\nimport typing\r\n\r\nclass Foo:\r\n    \"\"\" Class Foo. \"\"\"\r\n    def __init__(self):\r\n        \"\"\" Constructs fooo. \"\"\"\r\n        self.bars = [] # type: typing.MutableSequence[str]\r\n    def append_bar(self):\r\n        \"\"\" Appends bar to bars. \"\"\"\r\n        self.bars.append('bar')\r\n    def clear_bars(self):\r\n        \"\"\" Clears bars. \"\"\"\r\n        self.bars.clear()\r\n\r\nif __name__ == '__main__':\r\n    FOO = Foo()\r\n    FOO.bars.append(0) # mypy should detect this\r\n```\r\n\r\nIn the above code, I either get \"unused import\" warning from most static analysis tools (e.g. `pylint`), or if I actually comment out the first line, to fix the issue, then, in `mypy` I get \"error: Name 'typing' is not defined\". I cannot say I want to please everyone, but I just want to avoid being mislead by my code analysis tools.\r\n\r\nSpecifically:\r\n\r\n(1) With `import typing` intact:\r\n\r\nPart of output of `pylint foo_module.py`, misleading:\r\n```\r\n************* Module foo_module\r\nW:  5, 0: Unused import typing (unused-import)\r\n```\r\n\r\nOutput from `mypy foo_module.py`, helpful:\r\n```\r\nfoo_module.py:21: error: Argument 1 to \"append\" of \"MutableSequence\" has incompatible type \"int\"; expected \"str\"\r\n```\r\n\r\n(2) With `import typing` as comment:\r\n\r\nNo errors/warnings/etc. from `pylint foo_module.py`, rating 10/10.\r\n\r\nOutput of `mypy foo_module.py`, not very helpful:\r\n```\r\nfoo_module.py: note: In function \"__init__\":\r\nfoo_module.py:11: error: Name 'typing' is not defined\r\n```\r\n... and no information about this bad behaviour in line 21\r\n\r\nIs there any good solution for this?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1103/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy claims that typed code is always still perfectly good ordinary python, but that is not always the case", "assignee": null, "closed_at": "2016-01-08T20:32:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1103/comments", "labels": [], "created_at": "2016-01-08T12:11:59Z", "user": {"followers_url": "https://api.github.com/users/mbdevpl/followers", "gists_url": "https://api.github.com/users/mbdevpl/gists{/gist_id}", "html_url": "https://github.com/mbdevpl", "following_url": "https://api.github.com/users/mbdevpl/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1270332?v=3", "url": "https://api.github.com/users/mbdevpl", "organizations_url": "https://api.github.com/users/mbdevpl/orgs", "starred_url": "https://api.github.com/users/mbdevpl/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mbdevpl/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mbdevpl/subscriptions", "login": "mbdevpl", "repos_url": "https://api.github.com/users/mbdevpl/repos", "received_events_url": "https://api.github.com/users/mbdevpl/received_events", "id": 1270332, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1102, "html_url": "https://github.com/python/mypy/issues/1102", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1102", "id": 125518967, "events_url": "https://api.github.com/repos/python/mypy/issues/1102/events", "updated_at": "2016-04-08T18:59:59Z", "body": "Some linters get mad about long lines, even comments, so we would like to be able to break long `# type:` comments into multiple lines. This is especially desirable for function annotations if the function has lots of arguments, since you can't shorten those using type aliases. (And claiming that's just bad code doesn't do anyone any good -- I know, but sometimes I can't afford to fix it.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1102/labels{/name}", "comments": 22, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support multi-line # type: comments for functions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1102/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2016-01-08T00:56:02Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1101, "html_url": "https://github.com/python/mypy/issues/1101", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1101", "id": 125516728, "events_url": "https://api.github.com/repos/python/mypy/issues/1101/events", "updated_at": "2016-01-12T23:23:08Z", "body": "When the argument to `__lt__` or `__gt__` (or probably others) has type `Any`, mypy insists that the return type is also `Any`.  (This is hardcoded: https://github.com/JukkaL/mypy/blob/master/mypy/checker.py#L621-L622 )\r\n\r\nWhy is this? Is it related to #363?\r\n\r\nIt's inconvenient.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1101/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "__lt__ and __gt__ should always be allowed to have return type bool", "assignee": null, "closed_at": "2016-01-12T23:23:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1101/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2016-01-08T00:36:23Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1100, "html_url": "https://github.com/python/mypy/pull/1100", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1100", "id": 124630404, "events_url": "https://api.github.com/repos/python/mypy/issues/1100/events", "updated_at": "2016-01-04T15:57:16Z", "body": "(In two places: in the usage message and as a PS when a fatal error actually happens.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1100/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document --pdb option.", "assignee": null, "closed_at": "2016-01-04T12:02:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1100/comments", "labels": [], "created_at": "2016-01-03T05:42:09Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1100.patch", "html_url": "https://github.com/python/mypy/pull/1100", "diff_url": "https://github.com/python/mypy/pull/1100.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1100"}, "locked": false}, {"milestone": null, "number": 1099, "html_url": "https://github.com/python/mypy/issues/1099", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1099", "id": 124470965, "events_url": "https://api.github.com/repos/python/mypy/issues/1099/events", "updated_at": "2015-12-31T13:27:36Z", "body": "Mypy should infer the type of a variable if the first initializer is `None`:\r\n\r\n```\r\ndef f() -> None:\r\n    x = None\r\n    if foo:\r\n        x = ''\r\n    # type of x should be str here\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1099/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Infer variable type if initializer is None", "assignee": null, "closed_at": "2015-12-31T13:27:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1099/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-31T13:27:06Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1098, "html_url": "https://github.com/python/mypy/issues/1098", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1098", "id": 124242025, "events_url": "https://api.github.com/repos/python/mypy/issues/1098/events", "updated_at": "2016-03-02T00:07:27Z", "body": "`visit_callable_type` in `mypy/constraints.py` should look at argument kinds and use them to match arguments. Currently it assumes that the kinds of arguments are the same in both callables.\r\n\r\nWe may be able to reuse or adapt similar code from call expression type checker (`map_actuals_to_formals`).\r\n\r\nSee also discussion in #1085.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1098/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Callable constraint inference doesn't consider argument kinds", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1098/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-29T17:27:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1097, "html_url": "https://github.com/python/mypy/issues/1097", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1097", "id": 123743042, "events_url": "https://api.github.com/repos/python/mypy/issues/1097/events", "updated_at": "2016-03-02T00:08:20Z", "body": "The following typechecks:\r\n```\r\nclass A(object):\r\n    def __init__(self):\r\n        # type: () -> None\r\n        self.X = 0 # type: int\r\n\r\nx = A.X\r\n```\r\neven though `X` is not an attribute of the class `A`, just an attribute of its instances, and the `x = A.X` line causes an `AttributeError` when executed.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1097/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "MyPy doesn't seem to distinguish between attributes of a class and attributes of its instances", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1097/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-12-24T01:17:02Z", "user": {"followers_url": "https://api.github.com/users/mrwright/followers", "gists_url": "https://api.github.com/users/mrwright/gists{/gist_id}", "html_url": "https://github.com/mrwright", "following_url": "https://api.github.com/users/mrwright/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/327157?v=3", "url": "https://api.github.com/users/mrwright", "organizations_url": "https://api.github.com/users/mrwright/orgs", "starred_url": "https://api.github.com/users/mrwright/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mrwright/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mrwright/subscriptions", "login": "mrwright", "repos_url": "https://api.github.com/users/mrwright/repos", "received_events_url": "https://api.github.com/users/mrwright/received_events", "id": 327157, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1096, "html_url": "https://github.com/python/mypy/pull/1096", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1096", "id": 123572129, "events_url": "https://api.github.com/repos/python/mypy/issues/1096/events", "updated_at": "2015-12-22T23:22:49Z", "body": "Especially when doing \"runtests.py --dirty-stubs\", the various subprocesses started by runtests shouldn't bug you about a dirty submodule, either. However, it's never a good idea to do this check in a subprocess.\r\n\r\nHence, assume the parent process did all the git integrity checking needed, and stop subprocesses from calling the code in git.py by passing the \"-f\" option.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1096/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't check git submodule in subprocesses.", "assignee": null, "closed_at": "2015-12-22T23:22:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1096/comments", "labels": [], "created_at": "2015-12-22T22:56:15Z", "user": {"followers_url": "https://api.github.com/users/matthiaskramm/followers", "gists_url": "https://api.github.com/users/matthiaskramm/gists{/gist_id}", "html_url": "https://github.com/matthiaskramm", "following_url": "https://api.github.com/users/matthiaskramm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/306087?v=3", "url": "https://api.github.com/users/matthiaskramm", "organizations_url": "https://api.github.com/users/matthiaskramm/orgs", "starred_url": "https://api.github.com/users/matthiaskramm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/matthiaskramm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/matthiaskramm/subscriptions", "login": "matthiaskramm", "repos_url": "https://api.github.com/users/matthiaskramm/repos", "received_events_url": "https://api.github.com/users/matthiaskramm/received_events", "id": 306087, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1096.patch", "html_url": "https://github.com/python/mypy/pull/1096", "diff_url": "https://github.com/python/mypy/pull/1096.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1096"}, "locked": false}, {"milestone": null, "number": 1095, "html_url": "https://github.com/python/mypy/issues/1095", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1095", "id": 123511584, "events_url": "https://api.github.com/repos/python/mypy/issues/1095/events", "updated_at": "2016-01-12T22:16:05Z", "body": "Encountered while running mypy on something using polib. Here's a reproducer:\r\n\r\n```\r\nimport textwrap\r\ndef wrap(text, width=70, **kwargs):\r\n    return textwrap.wrap(text, width=width, **kwargs)\r\n```\r\n\r\nand here's the traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/main.py\", line 50, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/main.py\", line 93, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/build.py\", line 385, in process\r\n    next.process()\r\n  File \"/usr/lib/python3.5/site-packages/mypy/build.py\", line 882, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 385, in visit_file\r\n    self.accept(d)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/nodes.py\", line 381, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 449, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 484, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 567, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 409, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/nodes.py\", line 525, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 984, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/nodes.py\", line 622, in accept\r\n    return visitor.visit_return_stmt(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 1386, in visit_return_stmt\r\n    typ = self.accept(s.expr, self.return_types[-1])\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/nodes.py\", line 984, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 1841, in visit_call_expr\r\n    return self.expr_checker.visit_call_expr(e)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checkexpr.py\", line 126, in visit_call_expr\r\n    return self.check_call_expr_with_callee_type(callee_type, e)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checkexpr.py\", line 177, in check_call_expr_with_callee_type\r\n    e.arg_names, callable_node=e.callee)[0]\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checkexpr.py\", line 224, in check_call\r\n    arg_names, formal_to_actual, context)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checkexpr.py\", line 535, in check_argument_count\r\n    isinstance(actual_type, TupleType)):\r\nUnboundLocalError: local variable 'actual_type' referenced before assignment\r\n\r\n*** INTERNAL ERROR ***\r\n\r\ntmp.py:3: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n```\r\n\r\nThe problem seems to be in the conditional added in 06753e7c696b254d173a0abf4e61bc443cb3b6b5 but I'm not sure how actual_type should be set in this case or what should be used in its place.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1095/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "internal error with kwargs", "assignee": null, "closed_at": "2016-01-12T22:16:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1095/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-22T16:19:29Z", "user": {"followers_url": "https://api.github.com/users/dashea/followers", "gists_url": "https://api.github.com/users/dashea/gists{/gist_id}", "html_url": "https://github.com/dashea", "following_url": "https://api.github.com/users/dashea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4419868?v=3", "url": "https://api.github.com/users/dashea", "organizations_url": "https://api.github.com/users/dashea/orgs", "starred_url": "https://api.github.com/users/dashea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/dashea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/dashea/subscriptions", "login": "dashea", "repos_url": "https://api.github.com/users/dashea/repos", "received_events_url": "https://api.github.com/users/dashea/received_events", "id": 4419868, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 1094, "html_url": "https://github.com/python/mypy/issues/1094", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1094", "id": 123487497, "events_url": "https://api.github.com/repos/python/mypy/issues/1094/events", "updated_at": "2016-03-08T03:05:15Z", "body": "I have this snippet of code\r\n\r\n```python\r\nfrom typing import Any,List\r\n\r\nclass Node:\r\n    def __init__(self, value:Any, *, children:List['Node']=None) -> None:\r\n        self.value = value\r\n        self.children = [] if children is None else children # type: List[Node]\r\n```\r\n\r\nif I use mypy I get\r\n\r\n```bash\r\nTree.py: note: In member \"__init__\" of class \"Node\":\r\nTree.py:10: error: Incompatible types in assignment (expression has type \"object\", variable has type List[Node])\r\n```\r\n\r\nI *think* it's something related to the children parameter setted to None, but the problem is... how do I specify that yes, maybe the children parameter can be None, but self.children, by construction is always a List of Nodes?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1094/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Incompatible types in assignment (handling optional parameters)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1094/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-22T14:09:32Z", "user": {"followers_url": "https://api.github.com/users/ZeeD/followers", "gists_url": "https://api.github.com/users/ZeeD/gists{/gist_id}", "html_url": "https://github.com/ZeeD", "following_url": "https://api.github.com/users/ZeeD/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/69095?v=3", "url": "https://api.github.com/users/ZeeD", "organizations_url": "https://api.github.com/users/ZeeD/orgs", "starred_url": "https://api.github.com/users/ZeeD/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ZeeD/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ZeeD/subscriptions", "login": "ZeeD", "repos_url": "https://api.github.com/users/ZeeD/repos", "received_events_url": "https://api.github.com/users/ZeeD/received_events", "id": 69095, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1093, "html_url": "https://github.com/python/mypy/pull/1093", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1093", "id": 123398940, "events_url": "https://api.github.com/repos/python/mypy/issues/1093/events", "updated_at": "2016-02-04T01:40:26Z", "body": "Inevitably we will sometimes be analyzing one piece of code while\r\na class it refers to has not yet been analyzed.  Let's do what\r\nwe can to avoid accidentally relying on the `mro` attribute in\r\nthat situation.\r\n\r\nThis has two parts:\r\n * initialize `self.mro` on a TypeInfo to None, so that any\r\n   attempt to iterate through it will blow up loudly\r\n * when we do get around to computing the MRO, be sure to\r\n   set it to [] in the event of an error so that code that\r\n   legitimately runs after that point doesn't fail.\r\n\r\nThen there was just one place we were actually iterating\r\nthrough a not-yet-initialized MRO, in `lookup_qualified`,\r\nand that already has logic to work around that situation.\r\nSo just tweak that logic to be a bit more proactive.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1093/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Avoid ever relying on a not-yet-initialized MRO", "assignee": null, "closed_at": "2015-12-28T16:18:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1093/comments", "labels": [], "created_at": "2015-12-22T02:22:23Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1093.patch", "html_url": "https://github.com/python/mypy/pull/1093", "diff_url": "https://github.com/python/mypy/pull/1093.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1093"}, "locked": false}, {"milestone": null, "number": 1092, "html_url": "https://github.com/python/mypy/pull/1092", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1092", "id": 123183742, "events_url": "https://api.github.com/repos/python/mypy/issues/1092/events", "updated_at": "2016-01-03T05:44:54Z", "body": "This one was fun to debug and simple to fix. The check for whether we're looking at `# type: ignore` was too simplistic -- it just checked whether the string after `# type:` was equal to `'ignore'`, but this ignored (!) the possibility of a trailing comment.\r\n\r\nIn most cases the parser would then end up parsing everything as the expression `ignore` which somehow ends up being ignored later (I didn't figure out why). But if we're looking at an indent, the parser expects a type signature, e.g. `(int, int) -> int`, and complains at seeing just a name.\r\n\r\nWhat added to the confusion is that *any* `# type:` comment at the start of an indented block gets parsed this way -- not only after a `def` line. (I guess the parser doesn't know yet whether it's looking at a `def` or not when that choice needs to be made.)\r\n\r\nAnyway, the fix was to widen the definition of when to ignore (!) `# type: ignore`. (Note that the code that actually looks for `# type: ignore` runs at some other stage.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1092/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #1008. Improve check for \"# type: ignore\".", "assignee": null, "closed_at": "2015-12-28T15:31:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1092/comments", "labels": [], "created_at": "2015-12-20T21:11:43Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1092.patch", "html_url": "https://github.com/python/mypy/pull/1092", "diff_url": "https://github.com/python/mypy/pull/1092.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1092"}, "locked": false}, {"milestone": null, "number": 1091, "html_url": "https://github.com/python/mypy/pull/1091", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1091", "id": 123179900, "events_url": "https://api.github.com/repos/python/mypy/issues/1091/events", "updated_at": "2016-01-03T05:43:24Z", "body": "Also fixed SymbolTableNode.__str__() by adding some missing cases to node_kinds.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1091/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #1033. Don't report internal error when using a name that could not be imported.", "assignee": null, "closed_at": "2015-12-28T15:39:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1091/comments", "labels": [], "created_at": "2015-12-20T19:55:27Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1091.patch", "html_url": "https://github.com/python/mypy/pull/1091", "diff_url": "https://github.com/python/mypy/pull/1091.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1091"}, "locked": false}, {"milestone": null, "number": 1090, "html_url": "https://github.com/python/mypy/pull/1090", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1090", "id": 123178168, "events_url": "https://api.github.com/repos/python/mypy/issues/1090/events", "updated_at": "2016-01-03T05:45:31Z", "body": "Alternatively, I could rewrite the command-line parser using argparse. But this was easiest.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1090/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #1051. Write type-checking errors to stdout. Make usage() more complete.", "assignee": null, "closed_at": "2015-12-28T15:45:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1090/comments", "labels": [], "created_at": "2015-12-20T19:12:25Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1090.patch", "html_url": "https://github.com/python/mypy/pull/1090", "diff_url": "https://github.com/python/mypy/pull/1090.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1090"}, "locked": false}, {"milestone": null, "number": 1089, "html_url": "https://github.com/python/mypy/pull/1089", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1089", "id": 123131270, "events_url": "https://api.github.com/repos/python/mypy/issues/1089/events", "updated_at": "2016-01-27T20:23:16Z", "body": "This is a checkpoint of our pair programming session Wednesday. I figured we might as well have it up for review. I'm sure tests are going to bomb.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1089/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "DO NOT MERGE -- rename typevars to avoid certain problems.", "assignee": null, "closed_at": "2016-01-27T20:23:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1089/comments", "labels": [], "created_at": "2015-12-20T04:11:15Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1089.patch", "html_url": "https://github.com/python/mypy/pull/1089", "diff_url": "https://github.com/python/mypy/pull/1089.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1089"}, "locked": false}, {"milestone": null, "number": 1088, "html_url": "https://github.com/python/mypy/pull/1088", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1088", "id": 123131220, "events_url": "https://api.github.com/repos/python/mypy/issues/1088/events", "updated_at": "2016-02-25T05:33:10Z", "body": "I traced through a minimal example until I found that somewhere we're asking for equivalence between a type variable and an erased type variable ('None'), IIRC for the return value of the callable. But all I know is that adding this silences the example and doesn't break any other tests. There may well be a deeper cause (it reminds me of our pair programming session Wednesday where we tried renumbering type variables in various places).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1088/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #815 -- defaultdict(list).", "assignee": null, "closed_at": "2016-01-26T20:22:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1088/comments", "labels": [], "created_at": "2015-12-20T04:09:56Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1088.patch", "html_url": "https://github.com/python/mypy/pull/1088", "diff_url": "https://github.com/python/mypy/pull/1088.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1088"}, "locked": false}, {"milestone": null, "number": 1087, "html_url": "https://github.com/python/mypy/pull/1087", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1087", "id": 123129532, "events_url": "https://api.github.com/repos/python/mypy/issues/1087/events", "updated_at": "2015-12-20T04:16:17Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1087/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Import all names necessary for the example", "assignee": null, "closed_at": "2015-12-20T04:16:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1087/comments", "labels": [], "created_at": "2015-12-20T03:23:31Z", "user": {"followers_url": "https://api.github.com/users/yuvallanger/followers", "gists_url": "https://api.github.com/users/yuvallanger/gists{/gist_id}", "html_url": "https://github.com/yuvallanger", "following_url": "https://api.github.com/users/yuvallanger/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/536362?v=3", "url": "https://api.github.com/users/yuvallanger", "organizations_url": "https://api.github.com/users/yuvallanger/orgs", "starred_url": "https://api.github.com/users/yuvallanger/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yuvallanger/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yuvallanger/subscriptions", "login": "yuvallanger", "repos_url": "https://api.github.com/users/yuvallanger/repos", "received_events_url": "https://api.github.com/users/yuvallanger/received_events", "id": 536362, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1087.patch", "html_url": "https://github.com/python/mypy/pull/1087", "diff_url": "https://github.com/python/mypy/pull/1087.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1087"}, "locked": false}, {"milestone": null, "number": 1086, "html_url": "https://github.com/python/mypy/pull/1086", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1086", "id": 123128434, "events_url": "https://api.github.com/repos/python/mypy/issues/1086/events", "updated_at": "2016-01-03T05:46:21Z", "body": "This one seems simple to judge.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1086/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add --pdb flag to drop into pdb upon fatal error. Fixes #1080.", "assignee": null, "closed_at": "2015-12-28T15:35:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1086/comments", "labels": [], "created_at": "2015-12-20T02:40:53Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1086.patch", "html_url": "https://github.com/python/mypy/pull/1086", "diff_url": "https://github.com/python/mypy/pull/1086.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1086"}, "locked": false}, {"milestone": null, "number": 1085, "html_url": "https://github.com/python/mypy/pull/1085", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1085", "id": 123127364, "events_url": "https://api.github.com/repos/python/mypy/issues/1085/events", "updated_at": "2016-01-03T05:46:47Z", "body": "Another crash fix. (I'm not sure if I put the test in the right place or if this is even the right fix, but it does stop the crash and return a reasonable error.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1085/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #1081. When comparing template to actual arg types, stop at shortest.", "assignee": null, "closed_at": "2015-12-29T17:17:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1085/comments", "labels": [], "created_at": "2015-12-20T02:22:07Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1085.patch", "html_url": "https://github.com/python/mypy/pull/1085", "diff_url": "https://github.com/python/mypy/pull/1085.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1085"}, "locked": false}, {"milestone": null, "number": 1084, "html_url": "https://github.com/python/mypy/pull/1084", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1084", "id": 123123554, "events_url": "https://api.github.com/repos/python/mypy/issues/1084/events", "updated_at": "2015-12-20T21:31:17Z", "body": "It seems we get another error from the outer scope, so I am just suppressing the error here. An alternative would be to walk down the list of contexts. That's the version I posted in the issue. But it bothers me that it produces two errors:\r\n```\r\nthings = {}\r\ndef add():\r\n    things[1] = 2\r\n```\r\nProduces\r\n```\r\nmain: note: In function \"add\":\r\nmain:1: error: Need type annotation for variable\r\nmain: note: At top level:\r\nmain:1: error: Need type annotation for variable\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1084/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #1082 -- internal error when updating partial type from outer scope.", "assignee": null, "closed_at": "2015-12-20T21:16:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1084/comments", "labels": [], "created_at": "2015-12-20T01:12:48Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1084.patch", "html_url": "https://github.com/python/mypy/pull/1084", "diff_url": "https://github.com/python/mypy/pull/1084.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1084"}, "locked": false}, {"milestone": null, "number": 1083, "html_url": "https://github.com/python/mypy/pull/1083", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1083", "id": 123094670, "events_url": "https://api.github.com/repos/python/mypy/issues/1083/events", "updated_at": "2015-12-19T19:37:21Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1083/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refer to example with clearer wording.", "assignee": null, "closed_at": "2015-12-19T19:37:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1083/comments", "labels": [], "created_at": "2015-12-19T16:04:16Z", "user": {"followers_url": "https://api.github.com/users/yuvallanger/followers", "gists_url": "https://api.github.com/users/yuvallanger/gists{/gist_id}", "html_url": "https://github.com/yuvallanger", "following_url": "https://api.github.com/users/yuvallanger/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/536362?v=3", "url": "https://api.github.com/users/yuvallanger", "organizations_url": "https://api.github.com/users/yuvallanger/orgs", "starred_url": "https://api.github.com/users/yuvallanger/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yuvallanger/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yuvallanger/subscriptions", "login": "yuvallanger", "repos_url": "https://api.github.com/users/yuvallanger/repos", "received_events_url": "https://api.github.com/users/yuvallanger/received_events", "id": 536362, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1083.patch", "html_url": "https://github.com/python/mypy/pull/1083", "diff_url": "https://github.com/python/mypy/pull/1083.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1083"}, "locked": false}, {"milestone": null, "number": 1082, "html_url": "https://github.com/python/mypy/issues/1082", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1082", "id": 123089087, "events_url": "https://api.github.com/repos/python/mypy/issues/1082/events", "updated_at": "2015-12-20T21:15:58Z", "body": "I hit an internal error running on https://github.com/rhinstaller/anaconda/blob/master/pyanaconda/iutil.py, the problem code is:\r\n\r\n```\r\n_child_env = {}\r\ndef setenv(name, value):\r\n    _child_env[name] = value\r\n```\r\n\r\nHere's the traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/main.py\", line 50, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/main.py\", line 93, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/build.py\", line 203, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/build.py\", line 385, in process\r\n    next.process()\r\n  File \"/usr/lib/python3.5/site-packages/mypy/build.py\", line 882, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 385, in visit_file\r\n    self.accept(d)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/nodes.py\", line 381, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 449, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 484, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 567, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 409, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/nodes.py\", line 525, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 984, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/nodes.py\", line 563, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 993, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 1018, in check_assignment\r\n    self.check_indexed_assignment(index_lvalue, rvalue, rvalue)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 1349, in check_indexed_assignment\r\n    basetype = self.accept(lvalue.base)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 396, in accept\r\n    report_internal_error(err, self.errors.file, node.line)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 394, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/nodes.py\", line 922, in accept\r\n    return visitor.visit_name_expr(self)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checker.py\", line 1838, in visit_name_expr\r\n    return self.expr_checker.visit_name_expr(e)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checkexpr.py\", line 67, in visit_name_expr\r\n    result = self.analyze_ref_expr(e)\r\n  File \"/usr/lib/python3.5/site-packages/mypy/checkexpr.py\", line 78, in analyze_ref_expr\r\n    context = partial_types[node]\r\nKeyError: <mypy.nodes.Var object at 0x7f8377835240>\r\n\r\n*** INTERNAL ERROR ***\r\n```\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1082/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "internal error on setting a value in a dictionary", "assignee": null, "closed_at": "2015-12-20T21:15:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1082/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-19T14:40:05Z", "user": {"followers_url": "https://api.github.com/users/dashea/followers", "gists_url": "https://api.github.com/users/dashea/gists{/gist_id}", "html_url": "https://github.com/dashea", "following_url": "https://api.github.com/users/dashea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4419868?v=3", "url": "https://api.github.com/users/dashea", "organizations_url": "https://api.github.com/users/dashea/orgs", "starred_url": "https://api.github.com/users/dashea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/dashea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/dashea/subscriptions", "login": "dashea", "repos_url": "https://api.github.com/users/dashea/repos", "received_events_url": "https://api.github.com/users/dashea/received_events", "id": 4419868, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1081, "html_url": "https://github.com/python/mypy/issues/1081", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1081", "id": 122790486, "events_url": "https://api.github.com/repos/python/mypy/issues/1081/events", "updated_at": "2015-12-29T17:14:11Z", "body": "Making a list of types looks weird, but this was originally used to construct a `typing.NamedTuple`.\r\n\r\n```\r\nimport typing\r\nfrom typing import Tuple, Callable, Any, List\r\nfrom enum import Enum\r\n\r\nclass MyEnum(Enum):\r\n    def __new__(cls): pass\r\n\r\ndef F(fields: List[Callable[[Any], Any]]): pass\r\n\r\nclass SomeEnum(MyEnum):\r\n    x = 1\r\n\r\nF([SomeEnum])\r\n```\r\n\r\nproduces:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  ...\r\n  File \"/home/bdarwin/.local/lib/python3.5/site-packages/mypy/types.py\", line 346, in accept\r\n    return visitor.visit_callable_type(self)\r\n  File \"/home/bdarwin/.local/lib/python3.5/site-packages/mypy/constraints.py\", line 231, in visit_callable_type\r\n    template.arg_types[i], cactual.arg_types[i],\r\nIndexError: list index out of range\r\n\r\n*** INTERNAL ERROR ***\r\n\r\nfoo.py:13: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\nThe program exited via sys.exit(). Exit status: 1\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1081/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "internal error using Enum and __new__", "assignee": null, "closed_at": "2015-12-29T17:14:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1081/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-17T18:04:30Z", "user": {"followers_url": "https://api.github.com/users/bcdarwin/followers", "gists_url": "https://api.github.com/users/bcdarwin/gists{/gist_id}", "html_url": "https://github.com/bcdarwin", "following_url": "https://api.github.com/users/bcdarwin/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/164148?v=3", "url": "https://api.github.com/users/bcdarwin", "organizations_url": "https://api.github.com/users/bcdarwin/orgs", "starred_url": "https://api.github.com/users/bcdarwin/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bcdarwin/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bcdarwin/subscriptions", "login": "bcdarwin", "repos_url": "https://api.github.com/users/bcdarwin/repos", "received_events_url": "https://api.github.com/users/bcdarwin/received_events", "id": 164148, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1080, "html_url": "https://github.com/python/mypy/issues/1080", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1080", "id": 122781327, "events_url": "https://api.github.com/repos/python/mypy/issues/1080/events", "updated_at": "2015-12-28T15:34:54Z", "body": "I'm getting an internal error.  The new `report_internal_error` gives me line numbers, but it's still a bit hard to figure out what's actually going on.  Before this procedure was introduced, I could load pdb and walk up the call stack to find some interesting variables and reduce to a minimal test case.  Now that doesn't work because the program terminates.  Probably better to just rethrow as InternalError(\"please report\") or something?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1080/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "don't call `exit` in report_internal_error", "assignee": null, "closed_at": "2015-12-28T15:34:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1080/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2015-12-17T17:18:05Z", "user": {"followers_url": "https://api.github.com/users/bcdarwin/followers", "gists_url": "https://api.github.com/users/bcdarwin/gists{/gist_id}", "html_url": "https://github.com/bcdarwin", "following_url": "https://api.github.com/users/bcdarwin/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/164148?v=3", "url": "https://api.github.com/users/bcdarwin", "organizations_url": "https://api.github.com/users/bcdarwin/orgs", "starred_url": "https://api.github.com/users/bcdarwin/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bcdarwin/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bcdarwin/subscriptions", "login": "bcdarwin", "repos_url": "https://api.github.com/users/bcdarwin/repos", "received_events_url": "https://api.github.com/users/bcdarwin/received_events", "id": 164148, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1079, "html_url": "https://github.com/python/mypy/pull/1079", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1079", "id": 122775109, "events_url": "https://api.github.com/repos/python/mypy/issues/1079/events", "updated_at": "2015-12-17T18:41:53Z", "body": "This way stubgen --help can be run without \"out\" needing to exist.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1079/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parse stubgen options before checking for the \"out\" directory.", "assignee": null, "closed_at": "2015-12-17T18:41:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1079/comments", "labels": [], "created_at": "2015-12-17T16:52:27Z", "user": {"followers_url": "https://api.github.com/users/dashea/followers", "gists_url": "https://api.github.com/users/dashea/gists{/gist_id}", "html_url": "https://github.com/dashea", "following_url": "https://api.github.com/users/dashea/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4419868?v=3", "url": "https://api.github.com/users/dashea", "organizations_url": "https://api.github.com/users/dashea/orgs", "starred_url": "https://api.github.com/users/dashea/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/dashea/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/dashea/subscriptions", "login": "dashea", "repos_url": "https://api.github.com/users/dashea/repos", "received_events_url": "https://api.github.com/users/dashea/received_events", "id": 4419868, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1079.patch", "html_url": "https://github.com/python/mypy/pull/1079", "diff_url": "https://github.com/python/mypy/pull/1079.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1079"}, "locked": false}, {"milestone": null, "number": 1078, "html_url": "https://github.com/python/mypy/pull/1078", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1078", "id": 122406283, "events_url": "https://api.github.com/repos/python/mypy/issues/1078/events", "updated_at": "2015-12-20T21:16:42Z", "body": "Namely: set.discard, list.extend, {set,dict}.update.\r\n\r\nIt's getting a little ugly -- not sure how best to refactor this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1078/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add a few more special cases to try_infer_partial_type()", "assignee": null, "closed_at": "2015-12-16T20:31:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1078/comments", "labels": [], "created_at": "2015-12-16T01:25:50Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1078.patch", "html_url": "https://github.com/python/mypy/pull/1078", "diff_url": "https://github.com/python/mypy/pull/1078.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1078"}, "locked": false}, {"milestone": null, "number": 1077, "html_url": "https://github.com/python/mypy/pull/1077", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1077", "id": 122121726, "events_url": "https://api.github.com/repos/python/mypy/issues/1077/events", "updated_at": "2015-12-15T05:23:34Z", "body": "Maybe this closes #671 ?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1077/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Understand that a tuple is also a Container. With test.", "assignee": null, "closed_at": "2015-12-15T03:49:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1077/comments", "labels": [], "created_at": "2015-12-14T20:14:30Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1077.patch", "html_url": "https://github.com/python/mypy/pull/1077", "diff_url": "https://github.com/python/mypy/pull/1077.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1077"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1076, "html_url": "https://github.com/python/mypy/issues/1076", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1076", "id": 121959129, "events_url": "https://api.github.com/repos/python/mypy/issues/1076/events", "updated_at": "2016-03-02T00:10:28Z", "body": "There are some  attributes of named tuples that mypy doesn't recognize, such as `_fields`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1076/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Recognize additional attributes of named tuples", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1076/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-14T01:37:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1075, "html_url": "https://github.com/python/mypy/issues/1075", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1075", "id": 121951220, "events_url": "https://api.github.com/repos/python/mypy/issues/1075/events", "updated_at": "2016-03-02T00:10:41Z", "body": "Now we catch many cases where code tries to use a deleted variable, but this is still not caught:\r\n\r\n```\r\nx = 1\r\ndel x\r\nif x: ...   # no error\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1075/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Can use deleted variable as a condition", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1075/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-13T23:09:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 1074, "html_url": "https://github.com/python/mypy/issues/1074", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1074", "id": 121941866, "events_url": "https://api.github.com/repos/python/mypy/issues/1074/events", "updated_at": "2016-03-02T00:11:48Z", "body": "The current command line UI for running unit tests is clunky. We could improve it by a lot. Some ideas:\r\n\r\n* Have a separate runner for unit tests only, such as `unittests.py` or `tests.py`.\r\n* Have it accept regexps instead of glob patterns, and perform a search instead of a full string match.\r\n\r\nWith these changes, running all test cases with `foobar` in their name would be like this:\r\n\r\n```\r\n$ ./tests.py foobar\r\n```\r\n\r\nCurrently this is needed:\r\n\r\n```\r\n$ ./runtests.py unit-test -a \"*foobar*\"\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1074/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Better command line interface for running unit tests", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1074/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-12-13T20:31:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1073, "html_url": "https://github.com/python/mypy/issues/1073", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1073", "id": 121941619, "events_url": "https://api.github.com/repos/python/mypy/issues/1073/events", "updated_at": "2016-03-02T00:11:06Z", "body": "Currently we create a new Python process for each unit test suite, which is wasteful when running just a small number of test cases, as the interpreter startup overhead has to be paid many times. Instead, we could use long-running processes that run multiple unit test tasks that get passed via a pipe or something from the main test runner process.\r\n\r\nThe goal is to make something like this run faster:\r\n\r\n```\r\n$ time ./runtests.py unit-test -a \"missingtestname\"\r\nPARALLEL 8\r\nSUMMARY  13 tasks selected\r\nSUMMARY  all 13 tasks and 0 tests passed                                        \r\n*** OK ***\r\n\r\nreal\t0m0.584s\r\nuser\t0m2.556s\r\nsys\t0m0.187s\r\n```\r\n\r\nIf we can get this to ~0.3s on typical hardware I'd be happy. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/1073/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make short test runs faster", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1073/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-13T20:26:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 1072, "html_url": "https://github.com/python/mypy/issues/1072", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1072", "id": 121941294, "events_url": "https://api.github.com/repos/python/mypy/issues/1072/events", "updated_at": "2016-03-02T00:12:02Z", "body": "Currently if using parallelism of 4 or more, for a good chunk of `./runtests.py unit-test` only 1-2 tasks are running. We could split some of the longer test suites automatically to multiple tasks to speed things up. On the other hand, this could slow down things when we run only a small number of test cases, so we  may want to address that first.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1072/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Increase unit test parallelism", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1072/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-13T20:21:25Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1071, "html_url": "https://github.com/python/mypy/issues/1071", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1071", "id": 121816148, "events_url": "https://api.github.com/repos/python/mypy/issues/1071/events", "updated_at": "2015-12-20T18:48:50Z", "body": "When @gnprice added the -j flag, I tried `runtests.py lint` with a few different -j settings and found that the more parallellism, the more CPU it used (also less real time, but that was more expected ;-). I wrote down some timings in https://github.com/JukkaL/mypy/pull/1066#issuecomment-163818632, repeated here:\r\n\r\n-j4\r\n```\r\nreal  0m13.783s\r\nuser  0m38.849s\r\nsys   0m5.867s\r\n```\r\n-j2 (default)\r\n```\r\nreal  0m16.646s\r\nuser  0m28.247s\r\nsys   0m4.880s\r\n```\r\n-j1\r\n```\r\nreal  0m25.990s\r\nuser  0m22.901s\r\nsys   0m4.261s\r\n```\r\nIs there some busy-waiting going on somewhere?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1071/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "CPU usage of runtests.py", "assignee": null, "closed_at": "2015-12-20T18:48:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1071/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2015-12-11T23:59:10Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1070, "html_url": "https://github.com/python/mypy/issues/1070", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1070", "id": 121815784, "events_url": "https://api.github.com/repos/python/mypy/issues/1070/events", "updated_at": "2015-12-13T00:00:56Z", "body": "I propose the following policy for code review, to unload Jukka a bit: either one of Jukka, Greg and Guido can merge PRs by others if they feel confident. (@JukkaL: you may have to add @gnprice to the project.) Jukka (being the BDFL) can commit whatever he wants but is free to request reviews.\r\n\r\n(This came up in a comment on https://github.com/JukkaL/mypy/pull/1066#issuecomment-164002155)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1070/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Code review policy", "assignee": null, "closed_at": "2015-12-13T00:00:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1070/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-12-11T23:55:56Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1069, "html_url": "https://github.com/python/mypy/issues/1069", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1069", "id": 121808310, "events_url": "https://api.github.com/repos/python/mypy/issues/1069/events", "updated_at": "2015-12-13T18:47:09Z", "body": "Forking this issue from #1067. Example:\r\n```python\r\ndef outer(cls):\r\n    class C(cls):  # E: Invalid type \"cls\"\r\n        def meth(self):\r\n            super(C, self).meth()  # E: \"meth\" undefined in superclass\r\n```\r\nNeither error goes away when I annotate the 'cls' argument as having type 'Any'. Also interesting: this gives the same two errors:\r\n```python\r\ncls = ...\r\nclass C(cls):  # E: Invalid type \"cls\"\r\n    def meth(self):\r\n        super(C, self).meth()  # E: \"meth\" undefined in superclass\r\n```\r\nbut here annotating 'cls' as type 'Any' *does* make the errors disappear.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1069/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Strange behavior when superclass is an unknown argument", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1069/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-11T22:57:06Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1068, "html_url": "https://github.com/python/mypy/pull/1068", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1068", "id": 121806908, "events_url": "https://api.github.com/repos/python/mypy/issues/1068/events", "updated_at": "2015-12-15T05:23:36Z", "body": "Fixes #1047. This indeed prefers .pyi over .py always. To type-check x.py in the presence of x.pyi, pass it explicitly on the command line -- but then you have to also pass all the other files in the package on the command line to get the same effect. Anyway, that's less important.\r\n\r\nI have two questions:\r\n\r\n- I feel there should be a unit test for this. But I can't find any unittests for this section of the code.\r\n\r\n- Instead of adding a long block comment for such a minor issue, I could also write a helper function that lists the directory and removes those *.py items that have a matching *.pyi. The total number of lines might be the same, though perhaps it might be easier to grasp. That solution won't catch the issue of having both x/ and x.py[i], but that's pretty theoretical.\r\n\r\nThoughts?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1068/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Avoid adding x.pyi twice when x.py and x.pyi are both present.", "assignee": null, "closed_at": "2015-12-11T23:16:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1068/comments", "labels": [], "created_at": "2015-12-11T22:46:10Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1068.patch", "html_url": "https://github.com/python/mypy/pull/1068", "diff_url": "https://github.com/python/mypy/pull/1068.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1068"}, "locked": false}, {"milestone": null, "number": 1067, "html_url": "https://github.com/python/mypy/issues/1067", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1067", "id": 121798382, "events_url": "https://api.github.com/repos/python/mypy/issues/1067/events", "updated_at": "2016-01-18T16:57:02Z", "body": "Demo:\r\n```python\r\nfrom typing import Any\r\nA = ...  # type: Any\r\nclass C(A):\r\n    def __init__(self):\r\n        super(C, self).__init__(1, 2, 3)  # E: Too many arguments for \"__init__\" of \"object\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1067/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "When base class has type 'Any', super().__init__() args should be unconstrained", "assignee": null, "closed_at": "2016-01-18T16:57:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1067/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-11T21:50:19Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1066, "html_url": "https://github.com/python/mypy/pull/1066", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1066", "id": 121618151, "events_url": "https://api.github.com/repos/python/mypy/issues/1066/events", "updated_at": "2015-12-15T05:06:56Z", "body": "The list of job numbers isn't very interesting, and it's\r\nlong -- which tends to overflow the width of the terminal and\r\ncause the '\\r' trick to fail to reuse the line, so the\r\noutput becomes long.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1066/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "runtests: add -j option, and better handle parallelism in display", "assignee": null, "closed_at": "2015-12-11T17:49:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1066/comments", "labels": [], "created_at": "2015-12-11T01:52:22Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1066.patch", "html_url": "https://github.com/python/mypy/pull/1066", "diff_url": "https://github.com/python/mypy/pull/1066.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1066"}, "locked": false}, {"milestone": null, "number": 1065, "html_url": "https://github.com/python/mypy/issues/1065", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1065", "id": 121616032, "events_url": "https://api.github.com/repos/python/mypy/issues/1065/events", "updated_at": "2015-12-22T02:14:40Z", "body": "In `mypy/maptype.py`, we have a function `class_derivation_paths` that finds all the paths up the hierarchy from a derived class to a given ancestor class. The code implicitly assumes that this function will only ever return a single path, for example by silently taking the first element of a list derived from its result and dropping the rest:\r\n```\r\n    return map_instance_to_supertypes(instance, superclass)[0]\r\n```\r\nAnd indeed there are a couple of assertions in comments in the code that this function should only ever find a single path:\r\n```\r\n    # FIX: Currently we should only have one supertype per interface, so no\r\n    #      need to return an array\r\n[...]\r\n    # FIX: Currently we might only ever have a single path, so this could be\r\n    #      simplified\r\n```\r\n\r\nBut this doesn't seem to be true! In fact, if we set up the classic diamond inheritance pattern:\r\n```\r\n  A\r\n / \\\r\nB   C\r\n \\ /\r\n  D\r\n```\r\nthen we do in fact get two paths, one through `B` and one through `C`. Demonstrated by adding an assert and a triggering test case here: https://github.com/gnprice/mypy/commit/a85876521\r\nwhich produces this exception:\r\n```\r\nAssertionError: [[<TypeInfo __main__.B>, <TypeInfo __main__.A>], [<TypeInfo __main__.C>, <TypeInfo __main__.A>]]\r\n```\r\n\r\nWhat should our approach to this situation be?\r\n\r\nIn roughly increasing order of semantic and implementation complexity, some options include\r\n* forbid this situation -- require that there's only a single inheritance path from a given derived class to a given ancestor, and say that code that uses diamond inheritance can't be typed\r\n* allow diamond inheritance only if the ancestor is not generic\r\n* allow diamond inheritance only if all the inheritance paths can be verified, just from the class definitions, to always result in the same instance of the ancestor for any instance of the derived\r\n* allow diamond inheritance only if the *actual* instances of the derived class that we encounter each result in a single instance of the ancestor across all inheritance paths (this is uncomfortably reminiscent of C++ templates)\r\n* something even more complicated that allows inheriting from several different instances of the same ancestor\r\n\r\nI'm inclined to start with option 1, as it's super simple to understand and to implement, and see if that ever poses a problem. Maybe nobody actually uses diamond inheritance in code they want to try to type; it's a pretty tricky pattern in the first place. If we want to do this, we should detect the situation up front (like in `verify_base_classes` in semanal.py) and give an appropriate error.\r\n\r\nOption 2 is also super simple to implement, if people use diamond inheritance but they don't need generics with it. Somewhat less satisfying as a rule for the user.\r\n\r\nI'd be kind of concerned if we find ourselves starting to think we need one of the more complex options.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1065/labels{/name}", "comments": 14, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Figure out story about diamond inheritance", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1065/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-11T01:30:00Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1064, "html_url": "https://github.com/python/mypy/pull/1064", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1064", "id": 121614463, "events_url": "https://api.github.com/repos/python/mypy/issues/1064/events", "updated_at": "2015-12-15T05:23:37Z", "body": "See issue #1043. The name of the flag is debatable. I've found this very useful for our current beta customer.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1064/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add --silent-imports flag which prevents importing non-stub modules not listed on the command line", "assignee": null, "closed_at": "2015-12-11T17:44:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1064/comments", "labels": [], "created_at": "2015-12-11T01:20:11Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1064.patch", "html_url": "https://github.com/python/mypy/pull/1064", "diff_url": "https://github.com/python/mypy/pull/1064.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1064"}, "locked": false}, {"milestone": null, "number": 1063, "html_url": "https://github.com/python/mypy/pull/1063", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1063", "id": 121612965, "events_url": "https://api.github.com/repos/python/mypy/issues/1063/events", "updated_at": "2015-12-15T05:06:56Z", "body": "This is based on discussion of this code yesterday with Jukka.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1063/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "maptype: Small refactors and new docstring", "assignee": null, "closed_at": "2015-12-13T22:11:48Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1063/comments", "labels": [], "created_at": "2015-12-11T01:06:12Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1063.patch", "html_url": "https://github.com/python/mypy/pull/1063", "diff_url": "https://github.com/python/mypy/pull/1063.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1063"}, "locked": false}, {"milestone": null, "number": 1062, "html_url": "https://github.com/python/mypy/pull/1062", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1062", "id": 121612940, "events_url": "https://api.github.com/repos/python/mypy/issues/1062/events", "updated_at": "2015-12-15T05:06:56Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1062/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Expand comment explaining _promote", "assignee": null, "closed_at": "2015-12-11T03:59:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1062/comments", "labels": [], "created_at": "2015-12-11T01:05:56Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1062.patch", "html_url": "https://github.com/python/mypy/pull/1062", "diff_url": "https://github.com/python/mypy/pull/1062.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1062"}, "locked": false}, {"milestone": null, "number": 1061, "html_url": "https://github.com/python/mypy/pull/1061", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1061", "id": 121612721, "events_url": "https://api.github.com/repos/python/mypy/issues/1061/events", "updated_at": "2015-12-15T05:07:47Z", "body": "These come from a very useful discussion with Jukka yesterday.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1061/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Expand some comments/docstrings on TypeInfo vs. Instance", "assignee": null, "closed_at": "2015-12-11T03:57:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1061/comments", "labels": [], "created_at": "2015-12-11T01:04:01Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1061.patch", "html_url": "https://github.com/python/mypy/pull/1061", "diff_url": "https://github.com/python/mypy/pull/1061.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1061"}, "locked": false}, {"milestone": null, "number": 1060, "html_url": "https://github.com/python/mypy/pull/1060", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1060", "id": 121403458, "events_url": "https://api.github.com/repos/python/mypy/issues/1060/events", "updated_at": "2015-12-10T23:00:55Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1060/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Test overriding with contravariant argument type", "assignee": null, "closed_at": "2015-12-10T06:06:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1060/comments", "labels": [], "created_at": "2015-12-10T05:11:42Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1060.patch", "html_url": "https://github.com/python/mypy/pull/1060", "diff_url": "https://github.com/python/mypy/pull/1060.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1060"}, "locked": false}, {"milestone": null, "number": 1059, "html_url": "https://github.com/python/mypy/issues/1059", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1059", "id": 120902036, "events_url": "https://api.github.com/repos/python/mypy/issues/1059/events", "updated_at": "2015-12-13T20:37:46Z", "body": "Minimal example:\r\n```\r\ndef foo(blocks: Any):\r\n    to_process = []\r\n    to_process = list(blocks)\r\n```\r\nNote that there is no import of Any from typing. If I add the import, the crash disappears. All three lines apparently contribute to the crash. Traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/main.py\", line 50, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/main.py\", line 93, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/build.py\", line 200, in build\r\n    result = manager.process(initial_states)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/build.py\", line 383, in process\r\n    next.process()\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/build.py\", line 870, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/checker.py\", line 375, in visit_file\r\n    self.accept(d)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/checker.py\", line 384, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/nodes.py\", line 380, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/checker.py\", line 439, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/checker.py\", line 474, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/checker.py\", line 557, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/checker.py\", line 400, in accept_in_frame\r\n    changed, _ = self.binder.pop_frame(True, True)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/checker.py\", line 202, in pop_frame\r\n    changed = self.update_from_options(options)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/checker.py\", line 153, in update_from_options\r\n    type = join_simple(self.frames[0][key], type, other)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/join.py\", line 26, in join_simple\r\n    if is_subtype(s, t):\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/subtypes.py\", line 49, in is_subtype\r\n    return left.accept(SubtypeVisitor(right, type_parameter_checker))\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/types.py\", line 521, in accept\r\n    return visitor.visit_partial_type(self)\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/subtypes.py\", line 189, in visit_partial_type\r\n    raise RuntimeError\r\nRuntimeError: \r\n\r\n*** INTERNAL ERROR ***\r\n\r\n/Users/guido/mypy_tests/mypy_crash.py:1: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1059/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash in list type inference", "assignee": null, "closed_at": "2015-12-13T20:37:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1059/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-08T00:32:15Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1058, "html_url": "https://github.com/python/mypy/pull/1058", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1058", "id": 120901217, "events_url": "https://api.github.com/repos/python/mypy/issues/1058/events", "updated_at": "2015-12-10T06:09:43Z", "body": "@gvanrossum Does this work?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1058/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #1057", "assignee": null, "closed_at": "2015-12-10T06:09:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1058/comments", "labels": [], "created_at": "2015-12-08T00:24:50Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1058.patch", "html_url": "https://github.com/python/mypy/pull/1058", "diff_url": "https://github.com/python/mypy/pull/1058.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1058"}, "locked": false}, {"milestone": null, "number": 1057, "html_url": "https://github.com/python/mypy/issues/1057", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1057", "id": 120894957, "events_url": "https://api.github.com/repos/python/mypy/issues/1057/events", "updated_at": "2015-12-10T06:09:12Z", "body": "A somewhat common pattern is to use `\"...%d...\" % (var,)` . It's arguably not as useful here as for %s, but I've encountered it in the wild, and it's valid. Mypy complains. Example/comparison:\r\n```\r\n\"[%d]\" % 42  # OK\r\n\"[%d]\" % (42,)  # Expected: OK; actually: error\r\n```\r\nThe error is:\r\n```\r\n/Users/guido/mypy_tests/mypy_strpol.py:2: error: Incompatible types in string interpolation (expression has type \"Tuple[int]\", placeholder has type \"Union[int, float]\")\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1057/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "%-format checking doesn't understand singleton tuples", "assignee": null, "closed_at": "2015-12-10T06:09:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1057/comments", "labels": [], "created_at": "2015-12-07T23:37:14Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1056, "html_url": "https://github.com/python/mypy/issues/1056", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1056", "id": 120851653, "events_url": "https://api.github.com/repos/python/mypy/issues/1056/events", "updated_at": "2015-12-13T19:17:58Z", "body": "There's a default global variable in all modules named `__package__`. It's always a string. We should not complain when this is used.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1056/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Special-case __package__ variable", "assignee": null, "closed_at": "2015-12-13T19:17:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1056/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-07T19:44:36Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1055, "html_url": "https://github.com/python/mypy/issues/1055", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1055", "id": 120653952, "events_url": "https://api.github.com/repos/python/mypy/issues/1055/events", "updated_at": "2015-12-31T14:41:04Z", "body": "Code like this is one of the most common cases where we need a variable annotation (**DONE**):\r\n\r\n```\r\ndef f() -> None:\r\n    x = []   # mypy insists on annotation (such as List[int]) here\r\n    for i in range(5):\r\n        x.append(i * 2)\r\n```\r\n\r\nMypy could do a better job of inferring types in cases like these:\r\n\r\n* Variable is initialized with an empty collection (or more generally, a generic type where the type argument values are indeterminate using only local statement context).\r\n* The first reference to the variable after initialization (in the same scope) mutates the collection and allows us to infer the item types.\r\n\r\nThese cases would still require an annotation:\r\n\r\n* Collection is read after initialization and before mutation (this happens sometimes but not too often).\r\n* The variable is not mutated in the scope that initializes it. For example, an attribute is initialized in `__init__` and mutated in another method.\r\n\r\nThis is related to #254.\r\n\r\nMore common examples where this should work:\r\n\r\n(1) **DONE**\r\n\r\n```\r\nx = {}\r\nx['key'] = 2\r\n```\r\n\r\n(2) **DONE**\r\n\r\n```\r\nx = set()\r\nx.add(2)\r\n```\r\n\r\nAdditional, less common examples (not done):\r\n\r\n(3)\r\n\r\n```\r\nx = {}\r\nx.setdefault('key', []).append(1)   # this is harder than most examples\r\n```\r\n\r\n(4) **DONE**\r\n\r\n```\r\nx = {}\r\nx.update({'x': 1})\r\n```\r\n\r\n\r\n(5)\r\n\r\n```\r\nx = set()\r\nx |= {1, 2}\r\n```\r\n\r\n(6)\r\n\r\n```\r\nif cond():\r\n    x = []\r\nelse:\r\n    x = [1]\r\n```\r\n\r\n(7)\r\n\r\nSimilar to above but with a user-defined generic type or a standard library generic type that is not list, dict or set.\r\n\r\nNot sure about this:\r\n\r\n(8)\r\n\r\n```\r\nx = []\r\nfoo(x)  # Should we infer type of x from the argument type? Probably not.\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1055/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Infer variable type if initializer is an empty collection", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1055/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-06T19:29:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1054, "html_url": "https://github.com/python/mypy/pull/1054", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1054", "id": 120629522, "events_url": "https://api.github.com/repos/python/mypy/issues/1054/events", "updated_at": "2015-12-14T04:30:56Z", "body": "Support deleted variables and independent try/except scopes (addressing #1045).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1054/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Deleted variables", "assignee": null, "closed_at": "2015-12-13T23:08:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1054/comments", "labels": [], "created_at": "2015-12-06T11:52:52Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1054.patch", "html_url": "https://github.com/python/mypy/pull/1054", "diff_url": "https://github.com/python/mypy/pull/1054.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1054"}, "locked": false}, {"milestone": null, "number": 1053, "html_url": "https://github.com/python/mypy/issues/1053", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1053", "id": 120596941, "events_url": "https://api.github.com/repos/python/mypy/issues/1053/events", "updated_at": "2015-12-06T00:37:50Z", "body": "Mypy complains about this code, even though it's okay:\r\n\r\n```\r\nclass A:\r\n    def __new__(cls, x: int) -> 'A':\r\n        return object.__new__(cls)\r\n\r\nclass B(A):\r\n    def __new__(cls, x: str) -> 'B':\r\n        return super().__new__(cls, int(x))  # Too many arguments for \"__new__\" of \"A\"\r\n\r\nprint(B('3'))\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1053/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Calling __new__ via super()", "assignee": null, "closed_at": "2015-12-06T00:37:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1053/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-06T00:01:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1052, "html_url": "https://github.com/python/mypy/issues/1052", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1052", "id": 120595372, "events_url": "https://api.github.com/repos/python/mypy/issues/1052/events", "updated_at": "2015-12-05T23:26:53Z", "body": "Consider this class:\r\n\r\n```\r\nclass A:\r\n    def __setattr__(self, x, y):\r\n        raise RuntimeError\r\n```\r\n\r\nThe above implementation should be considered special and all attribute assignments via `A`, including via `self` should be rejected.\r\n\r\nThis is related to #521 (general `__setattr__` support).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1052/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "__setattr__ method that just raises an exception", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1052/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-05T23:26:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1051, "html_url": "https://github.com/python/mypy/issues/1051", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1051", "id": 120580710, "events_url": "https://api.github.com/repos/python/mypy/issues/1051/events", "updated_at": "2016-03-13T01:04:25Z", "body": "I often want to grep mypy's output for certain messages (or to strip certain messages) and this is a little tricky because the messages are written to stderr. So I have to do e.g.\r\n```\r\nmypy file.py 2>&1 | grep -v note\r\n```\r\ninstead of\r\n```\r\nmypy file.py | grep -v note\r\n```\r\nI think the only things that should be written to stderr are command line syntax errors (where it refuses to run) or fatal errors like tracebacks. Syntax errors in the modules to be analyzed should probably go to stdout (though since these abort processing it might be okay to send these to stderr).\r\n\r\nAlso -h output should go to stdout IMO (this is how argparse does things -- it would also be nice to rewrite the argument parsing using argparse).", "labels_url": "https://api.github.com/repos/python/mypy/issues/1051/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Suggestion: write messages to stdout instead of stderr", "assignee": null, "closed_at": "2015-12-28T15:45:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1051/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-12-05T19:11:56Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1050, "html_url": "https://github.com/python/mypy/issues/1050", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1050", "id": 120580445, "events_url": "https://api.github.com/repos/python/mypy/issues/1050/events", "updated_at": "2015-12-05T22:38:07Z", "body": "When running mypy over the stand-alone asyncio package (https://github.com/python/asyncio) using `mypy asyncio` I get some unexpected errors about uses of AnyStr in the stub for struct.pyi. I can't repro this easily in a smaller context, and in fact it doesn't repro of I point mypy at just asyncio/windows_events.py either. @JukkaL, do you have any idea what might be going on here?\r\n```\r\n$ mypy asyncio\r\nasyncio/__init__.py:11: error: No library stub file for standard library module 'selectors'\r\nasyncio/__init__.py:11: note: (Stub files are from https://github.com/python/typeshed)\r\nasyncio/__init__.py:18: error: Cannot find module named '_overlapped'\r\nasyncio/__init__.py:18: note: (Perhaps setting MYPYPATH would help)\r\nasyncio/windows_utils.py:10: error: Cannot find module named '_winapi'\r\nasyncio/windows_utils.py:37: error: Name 'socketpair' already defined\r\nasyncio/windows_events.py:3: error: Cannot find module named '_winapi'\r\nasyncio/windows_events.py:7: note: In module imported here:\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi: note: In function \"pack\":\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi:9: error: Invalid type \"typing.AnyStr\"\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi: note: In function \"pack_into\":\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi:11: error: Invalid type \"typing.AnyStr\"\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi: note: In function \"unpack\":\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi:14: error: Invalid type \"typing.AnyStr\"\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi: note: In function \"unpack_from\":\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi:15: error: Invalid type \"typing.AnyStr\"\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi: note: In function \"calcsize\":\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi:17: error: Invalid type \"typing.AnyStr\"\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi: note: In function \"__init__\":\r\n/Users/guido/v3/lib/mypy/typeshed/stdlib/3/struct.pyi:23: error: Invalid type \"typing.AnyStr\"\r\n[the rest is not relevant to this issue]\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1050/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Strange errors when trying to type-check asyncio", "assignee": null, "closed_at": "2015-12-05T22:22:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1050/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-05T19:05:42Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1049, "html_url": "https://github.com/python/mypy/issues/1049", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1049", "id": 120528659, "events_url": "https://api.github.com/repos/python/mypy/issues/1049/events", "updated_at": "2016-01-18T16:57:02Z", "body": "Consider this code:\r\n\r\n```\r\nfrom typing import Any\r\nA = None # type: Any\r\nclass B(A): pass\r\nB(1)  # Too many arguments for \"B\"\r\n```\r\n\r\nMypy complains about `B(1)` even though we should implicitly treat `B` as having signature `(*Any, **Any)` since there is an unknown base class `A` and `B` doesn't override `__init__` or `__new__`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1049/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Calling class that inherits __init__ from an Any base class", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": "2016-01-18T16:57:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1049/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-05T04:39:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1048, "html_url": "https://github.com/python/mypy/pull/1048", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1048", "id": 120516136, "events_url": "https://api.github.com/repos/python/mypy/issues/1048/events", "updated_at": "2015-12-15T05:23:38Z", "body": "Previously this would generate\r\n```\r\nfrom .x import X as X\r\nfrom .x import X\r\n```\r\nand then the stub would get a complaint from a later mypy run saying\r\n```\r\nName 'X' already defined\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1048/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Avoid generating duplicate imports and definitions", "assignee": null, "closed_at": "2015-12-05T03:07:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1048/comments", "labels": [], "created_at": "2015-12-05T00:54:32Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1048.patch", "html_url": "https://github.com/python/mypy/pull/1048", "diff_url": "https://github.com/python/mypy/pull/1048.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1048"}, "locked": false}, {"milestone": null, "number": 1047, "html_url": "https://github.com/python/mypy/issues/1047", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1047", "id": 120457290, "events_url": "https://api.github.com/repos/python/mypy/issues/1047/events", "updated_at": "2015-12-11T23:16:32Z", "body": "I have both p/x.py and p/x.pyi, as well as p/__init.py. When I start mypy as `mypy p/x.py`, things work fine. However when I start it as `mypy p` (using the folder support I added recently) or as `mypy --package p` (which Jukka added last month) I get a complaint about `Module p.x processed twice`.\r\n\r\nApparently it still tries to find p.x using module search, even though it found the file already when traversing the folder/package. It then adds the stub p/x.pyi to its list of things to do, even though the non-stub p/x.py is already in that list.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1047/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error when a .py file is implied by a package but a .pyi file also exists", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": "2015-12-11T23:16:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1047/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-04T18:21:57Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1046, "html_url": "https://github.com/python/mypy/issues/1046", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1046", "id": 120341698, "events_url": "https://api.github.com/repos/python/mypy/issues/1046/events", "updated_at": "2015-12-04T06:26:58Z", "body": "Mypy gives bogus complaints about missing attributes when using `super()` in a class with multiple bases.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1046/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "super() and multiple inheritance", "assignee": null, "closed_at": "2015-12-04T06:26:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1046/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-04T06:25:06Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1045, "html_url": "https://github.com/python/mypy/issues/1045", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1045", "id": 120338236, "events_url": "https://api.github.com/repos/python/mypy/issues/1045/events", "updated_at": "2015-12-13T23:10:39Z", "body": "Mypy complains about this code:\r\n\r\n```\r\ntry:\r\n    pass\r\nexcept IOError as e:\r\n    pass\r\nexcept RuntimeError as e:\r\n    pass\r\n```\r\n\r\nIt doesn't like the second except block:\r\n\r\n```\r\nt.py:5: error: Incompatible types in assignment (expression has type \"RuntimeError\", variable has type \"IOError\")\r\n```\r\n\r\nHowever, the variable `e` is in scope after the try statement, which is wrong.\r\n\r\nThe workaround is to rename the second exception variable, but mypy should allow the code as such.  Each except block should define a new local variable.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1045/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Each except variable should have an independent type and scope", "assignee": null, "closed_at": "2015-12-13T23:10:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1045/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-04T05:53:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1044, "html_url": "https://github.com/python/mypy/issues/1044", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1044", "id": 120333339, "events_url": "https://api.github.com/repos/python/mypy/issues/1044/events", "updated_at": "2015-12-04T04:56:53Z", "body": "This code doesn't generate errors:\r\n\r\n```\r\nclass A:\r\n    y = False\r\na = None # type: object\r\n(a.y for a in [A()])\r\n```\r\n\r\nHowever, this generates (just added `isinstance`):\r\n\r\n```\r\nclass A:\r\n    y = False\r\na = None # type: object\r\nif isinstance(a, int): pass   # only difference\r\n(a.y for a in [A()])\r\n```\r\n\r\nOutput is like this:\r\n\r\n```\r\nprogram.py:7: error: \"object\" has no attribute \"y\"\r\n```\r\n\r\nThe latter program shouldn't generate any error. There seems to be some weird interaction between `isinstance` and generator scoping.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1044/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "isinstance + generator results in unexpected error", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1044/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-04T04:55:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1043, "html_url": "https://github.com/python/mypy/issues/1043", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1043", "id": 120301212, "events_url": "https://api.github.com/repos/python/mypy/issues/1043/events", "updated_at": "2015-12-11T20:51:23Z", "body": "Currently mypy follows all imports when type checking a file. For a large program not originally written with mypy in mind this can make it pretty hard to adopt mypy, as the a mypy run may generate hundreds or thousands of messages. Instead, mypy could initially treat every program file (also library modules without stubs) as 'ignored' (all imports targeting that file would get type `Any`), and only files with an annotation such as `# mypy: check`, `# mypy: weak` or `# mypy: strict` would be parsed and type checked, or modules that have a stub file. (Maybe this should be a special mode of running mypy instead of being the default.)\r\n\r\nA large program would be migrated to mypy like this:\r\n\r\n* Enable one extra file at a time using an annotation such as mentioned above, starting with a single file. Fix any issues until there is clean mypy output.\r\n* For library modules, generate stubs as we encounter them (or just point mypy to them without adding any annotations, and mypy will treat the modules as having `Any` types).\r\n* Generally follow imports when picking the next file to migrate. Either continue to files imported by one of the already processed files, or files that import one of the already processed files.\r\n\r\nThis could also work for a 'top-down' mypy migration, where many of the 'leaf' modules initially don't get processed by mypy at all. The current workflow only really supports a 'bottom-up' migration well, where we start with modules that depend on few modules and gradually follow the imports to modules that depend on these modules.\r\n\r\nThis was inspired by a discussion about Facebook's Hack yesterday. I understood that Hack enables this workflow (if you have experience with Hack, please correct me if I didn't understand this correctly.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1043/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Only type checking files that explicitly opt in", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1043/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-12-04T00:04:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1042, "html_url": "https://github.com/python/mypy/pull/1042", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1042", "id": 120212011, "events_url": "https://api.github.com/repos/python/mypy/issues/1042/events", "updated_at": "2015-12-03T23:46:54Z", "body": "Previously, foo.Bar and baz.Bar would both be formatted as \"Bar\" in\r\nerror messages, which causes confusing errors like the following:\r\n\r\nerror: Argument 2 to \"quux\" has incompatible type \"Bar\"; expected \"Bar\"", "labels_url": "https://api.github.com/repos/python/mypy/issues/1042/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Improve verbose formatting to disambiguate types of the same name.", "assignee": null, "closed_at": "2015-12-03T23:46:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1042/comments", "labels": [], "created_at": "2015-12-03T16:20:51Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1042.patch", "html_url": "https://github.com/python/mypy/pull/1042", "diff_url": "https://github.com/python/mypy/pull/1042.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1042"}, "locked": false}, {"milestone": null, "number": 1041, "html_url": "https://github.com/python/mypy/pull/1041", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1041", "id": 120102735, "events_url": "https://api.github.com/repos/python/mypy/issues/1041/events", "updated_at": "2015-12-04T05:01:28Z", "body": "We failed to set breaking_out to false in try/except, causing us to\r\nnot typecheck the rest of the function if the code raises an exception\r\nor returns in the middle of one of the parts (#1040).\r\n\r\nThis commit also stops us from checking else_body twice.\r\n\r\nUnlike in if/elif/else chains, we do not keep track of which parts of\r\nthe code path break out and which continue.  finally: blocks make this\r\ntricky, and the main benefit was isinstance checks which don't happen\r\nhere.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1041/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Set breaking_out to False in try/except", "assignee": null, "closed_at": "2015-12-04T05:01:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1041/comments", "labels": [], "created_at": "2015-12-03T06:22:01Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1041.patch", "html_url": "https://github.com/python/mypy/pull/1041", "diff_url": "https://github.com/python/mypy/pull/1041.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1041"}, "locked": false}, {"milestone": null, "number": 1040, "html_url": "https://github.com/python/mypy/issues/1040", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1040", "id": 120095450, "events_url": "https://api.github.com/repos/python/mypy/issues/1040/events", "updated_at": "2015-12-04T05:02:24Z", "body": "Not sure how to say this. Example code:\r\n```\r\nclass C:\r\n    def foo(self) -> None:\r\n        try:\r\n            pass\r\n        except:\r\n            raise\r\n        self.x = 42\r\n    def bar(self) -> int:\r\n        return self.x\r\n```\r\nIn bar() we get a complaint about the type of self.x:\r\n```\r\n/Users/guido/mypy_tests/mypy_raise.py: note: In member \"bar\" of class \"C\":\r\n/Users/guido/mypy_tests/mypy_raise.py:9: error: Cannot determine type of 'x'\r\n```\r\nIf we remove the try/except in foo() the error goes away. Apparently any reachable occurrence of `raise` before `self.x` is assigned causes mypy to skip/ignore the definition. But the presence of other statements that *could* fail does not. (In the real-world example where I hit this, the definition was in an `__init__()` that had an `except` clause with `raise` in it before the definition.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1040/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Potential of raise causes variables to be undefined", "assignee": null, "closed_at": "2015-12-04T05:02:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1040/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-03T05:14:20Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1039, "html_url": "https://github.com/python/mypy/pull/1039", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1039", "id": 120064001, "events_url": "https://api.github.com/repos/python/mypy/issues/1039/events", "updated_at": "2015-12-15T05:23:48Z", "body": "Fixes issue #1009.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1039/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix scope for with statement defining multiple variables", "assignee": null, "closed_at": "2015-12-03T07:20:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1039/comments", "labels": [], "created_at": "2015-12-03T00:03:53Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1039.patch", "html_url": "https://github.com/python/mypy/pull/1039", "diff_url": "https://github.com/python/mypy/pull/1039.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1039"}, "locked": false}, {"milestone": null, "number": 1038, "html_url": "https://github.com/python/mypy/issues/1038", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1038", "id": 120050015, "events_url": "https://api.github.com/repos/python/mypy/issues/1038/events", "updated_at": "2015-12-04T01:24:28Z", "body": "This is place-holder issue for a 'weak' type checking mode where mypy would do some useful type checking within functions that have no annotations.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1038/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Weak type checking mode", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1038/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-12-02T22:26:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1037, "html_url": "https://github.com/python/mypy/issues/1037", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1037", "id": 120046016, "events_url": "https://api.github.com/repos/python/mypy/issues/1037/events", "updated_at": "2015-12-03T07:31:46Z", "body": "Not sure if this is `Question` or `Issue`. Is the `IterFunc` alias below allowed? There is no other way to alias a complex generic types. \r\n```\r\nfrom typing import TypeVar, Callable, Iterator, Iterable\r\n\r\nT = TypeVar(\"T\")\r\n\r\nIterFunc = Callable[[], Iterator[T]]\r\n\r\ndef s_map(f: Callable[[T], T], l: Iterable[T]) -> IterFunc:\r\n    return lambda: map(f, l)\r\n```\r\n\r\nMypy rejects it with:\r\n\r\n```\r\n Invalid type \"__main__.T\"\r\n```\r\nThanks.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1037/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generic type alias?", "assignee": null, "closed_at": "2015-12-03T07:31:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1037/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-02T22:03:42Z", "user": {"followers_url": "https://api.github.com/users/desmond-dsouza/followers", "gists_url": "https://api.github.com/users/desmond-dsouza/gists{/gist_id}", "html_url": "https://github.com/desmond-dsouza", "following_url": "https://api.github.com/users/desmond-dsouza/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4407158?v=3", "url": "https://api.github.com/users/desmond-dsouza", "organizations_url": "https://api.github.com/users/desmond-dsouza/orgs", "starred_url": "https://api.github.com/users/desmond-dsouza/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/desmond-dsouza/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/desmond-dsouza/subscriptions", "login": "desmond-dsouza", "repos_url": "https://api.github.com/users/desmond-dsouza/repos", "received_events_url": "https://api.github.com/users/desmond-dsouza/received_events", "id": 4407158, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1036, "html_url": "https://github.com/python/mypy/issues/1036", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1036", "id": 120025533, "events_url": "https://api.github.com/repos/python/mypy/issues/1036/events", "updated_at": "2015-12-02T22:27:51Z", "body": "Here is the code, the type error in `s_cross` (`for y in l:` should be `for y in l():`) is not caught by mypy, resulting in a run-time TypeError:\r\n\r\n```\r\nfrom typing import TypeVar, Callable, Iterable\r\n\r\nT = TypeVar(\"T\")\r\n\r\ndef identity(x: T) -> T:\r\n    return x\r\n\r\ndef s_map(f: Callable[[T], T], l: Iterable[T]) -> Callable[[], Iterable[T]]:\r\n    return lambda: map(f, l)\r\n\r\ndef s_cross(l1):\r\n    l = s_map(identity, l1)\r\n    for x in l():\r\n        for y in l:\r\n            yield x, y\r\n\r\nL = [1, 2, 3, 4]\r\n\r\nprint(list(s_cross(L)))\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1036/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Iterable type error not caught", "assignee": null, "closed_at": "2015-12-02T22:27:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1036/comments", "labels": [], "created_at": "2015-12-02T20:10:17Z", "user": {"followers_url": "https://api.github.com/users/desmond-dsouza/followers", "gists_url": "https://api.github.com/users/desmond-dsouza/gists{/gist_id}", "html_url": "https://github.com/desmond-dsouza", "following_url": "https://api.github.com/users/desmond-dsouza/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4407158?v=3", "url": "https://api.github.com/users/desmond-dsouza", "organizations_url": "https://api.github.com/users/desmond-dsouza/orgs", "starred_url": "https://api.github.com/users/desmond-dsouza/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/desmond-dsouza/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/desmond-dsouza/subscriptions", "login": "desmond-dsouza", "repos_url": "https://api.github.com/users/desmond-dsouza/repos", "received_events_url": "https://api.github.com/users/desmond-dsouza/received_events", "id": 4407158, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1035, "html_url": "https://github.com/python/mypy/pull/1035", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1035", "id": 119981811, "events_url": "https://api.github.com/repos/python/mypy/issues/1035/events", "updated_at": "2015-12-15T05:23:42Z", "body": "The module name is computed by crawling up the path until no `__init__.py` is found. For legacy entry scripts (anything not ending in .py) the module name is `__main__`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1035/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Accept multiple files on command line", "assignee": null, "closed_at": "2015-12-03T07:25:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1035/comments", "labels": [], "created_at": "2015-12-02T16:31:32Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1035.patch", "html_url": "https://github.com/python/mypy/pull/1035", "diff_url": "https://github.com/python/mypy/pull/1035.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1035"}, "locked": false}, {"milestone": null, "number": 1034, "html_url": "https://github.com/python/mypy/pull/1034", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1034", "id": 119839862, "events_url": "https://api.github.com/repos/python/mypy/issues/1034/events", "updated_at": "2015-12-03T17:14:05Z", "body": "This used to be the opposite.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1034/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Change lib_path: insert MYPYPATH in front; append pwd to end", "assignee": null, "closed_at": "2015-12-03T17:14:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1034/comments", "labels": [], "created_at": "2015-12-02T00:26:26Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1034.patch", "html_url": "https://github.com/python/mypy/pull/1034", "diff_url": "https://github.com/python/mypy/pull/1034.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1034"}, "locked": false}, {"milestone": null, "number": 1033, "html_url": "https://github.com/python/mypy/issues/1033", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1033", "id": 119837660, "events_url": "https://api.github.com/repos/python/mypy/issues/1033/events", "updated_at": "2015-12-28T15:38:16Z", "body": "File foo.py is empty. File bar.py has:\r\n```\r\nfrom foo import B\r\nclass C(B):\r\n    def __init__(self):\r\n        pass\r\n```\r\nI get an error about the import (understandably) but then an internal error on the class statement:\r\n```\r\nbar.py:1: error: Module has no attribute 'B'\r\nbar.py:2: error: Internal error (node is None, kind=7)\r\n```\r\n(This is not a priority item, the work-around is obvious. :-)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1033/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal error", "assignee": null, "closed_at": "2015-12-28T15:38:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1033/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-02T00:07:18Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1032, "html_url": "https://github.com/python/mypy/issues/1032", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1032", "id": 119786998, "events_url": "https://api.github.com/repos/python/mypy/issues/1032/events", "updated_at": "2015-12-02T20:20:43Z", "body": "Consider (this stands in for a longer example :-):\r\n```\r\nvars = {\"table\": \"Users\"}\r\nsql = dict(vars,\r\n           cols=\"username\")\r\n```\r\nThis currently gives an error due to #984. So I want to add `# type: ignore`. Unfortunately this doesn't work:\r\n```\r\nsql = dict(vars,\r\n           cols=\"username\")  # type: ignore\r\n```\r\nInstead I must use this:\r\n```\r\nsql = dict(vars,  # type: ignore\r\n           cols=\"username\")\r\n```\r\nwhich is a little unintuitive.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1032/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Placement of # type: ignore on multi-line expression is iffy", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1032/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-01T19:17:12Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1031, "html_url": "https://github.com/python/mypy/issues/1031", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1031", "id": 119775414, "events_url": "https://api.github.com/repos/python/mypy/issues/1031/events", "updated_at": "2015-12-01T18:48:35Z", "body": "Example:\r\n```\r\na = dict(foo=42)\r\na.update(foo=0)\r\n```\r\nError:\r\n```\r\n/Users/guido/mypy_tests/mypy_update.py:2: error: Unexpected keyword argument \"foo\" for \"update\" of \"dict\"\r\n```\r\nThe work-around is pretty simple: `a.update(dict(foo=0))`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1031/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "dict.update() with keyword args is not supported", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1031/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-12-01T18:10:39Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1030, "html_url": "https://github.com/python/mypy/issues/1030", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1030", "id": 119774941, "events_url": "https://api.github.com/repos/python/mypy/issues/1030/events", "updated_at": "2015-12-01T19:44:34Z", "body": "Current we print the current file and line number when there is a crash in the type checker, but we don't do it for semantic analysis crashes.\r\n\r\nSee also #1029 for context.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1030/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Print file context when we have a crash in semantic analysis", "assignee": null, "closed_at": "2015-12-01T19:44:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1030/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-01T18:08:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1029, "html_url": "https://github.com/python/mypy/issues/1029", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1029", "id": 119764403, "events_url": "https://api.github.com/repos/python/mypy/issues/1029/events", "updated_at": "2015-12-20T20:05:49Z", "body": "Full traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/guido/src/mypy/scripts/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Users/guido/src/mypy/mypy/main.py\", line 49, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Users/guido/src/mypy/mypy/main.py\", line 92, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 197, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 383, in process\r\n    next.process()\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 823, in process\r\n    self.semantic_analyzer().visit_file(self.tree, self.tree.path)\r\n  File \"/Users/guido/src/mypy/mypy/semanal.py\", line 210, in visit_file\r\n    d.accept(self)\r\n  File \"/Users/guido/src/mypy/mypy/nodes.py\", line 483, in accept\r\n    return visitor.visit_class_def(self)\r\n  File \"/Users/guido/src/mypy/mypy/semanal.py\", line 460, in visit_class_def\r\n    self.clean_up_bases_and_infer_type_variables(defn)\r\n  File \"/Users/guido/src/mypy/mypy/semanal.py\", line 593, in clean_up_bases_and_infer_type_variables\r\n    tvars = self.analyze_typevar_declaration(base)\r\n  File \"/Users/guido/src/mypy/mypy/semanal.py\", line 615, in analyze_typevar_declaration\r\n    if sym.node.fullname() == 'typing.Generic':\r\nAttributeError: 'NoneType' object has no attribute 'fullname'\r\n```\r\nIt did not print the name of the file it was analyzing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1029/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "AttributeError: 'NoneType' object has no attribute 'fullname'", "assignee": null, "closed_at": "2015-12-20T20:05:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1029/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-12-01T17:12:04Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1028, "html_url": "https://github.com/python/mypy/issues/1028", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1028", "id": 119644274, "events_url": "https://api.github.com/repos/python/mypy/issues/1028/events", "updated_at": "2015-12-01T18:13:44Z", "body": "I found some code that calls `foo(*args, bar=baz)`, where f has a bunch of arguments including foo and args is itself a varargs argument. The code (apparently) carefully ensures that args is shorter than the number of arguments before foo; but I always get an error from mypy. Code:\r\n```\r\ndef bar(x, y=0, z=1, blah=2):\r\n    # type: (int, int, int, int) -> None\r\n    print(x, y, z, blah)\r\ndef foo(*args):\r\n    # type: (*int) -> None\r\n    bar(*args, blah=1)\r\n```\r\nError:\r\n```\r\nx.py:6: error: \"bar\" gets multiple values for keyword argument \"blah\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1028/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "f(*args, foo=bar) always leads to an error", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1028/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-01T05:17:15Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1027, "html_url": "https://github.com/python/mypy/issues/1027", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1027", "id": 119642298, "events_url": "https://api.github.com/repos/python/mypy/issues/1027/events", "updated_at": "2015-12-01T05:00:19Z", "body": "Fix this TODO in `checkmember.py` (in `analyze_class_attribute_access`):\r\n\r\n```python\r\n    if is_decorated:\r\n        # TODO: Return type of decorated function. This is quick hack to work around #998.\r\n        return AnyType()\r\n    else:\r\n        return function_type(cast(FuncBase, node.node), builtin_type('builtins.function'))\r\n```\r\n\r\nThe whole function looks suspect to me and should potentially be rethought.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1027/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix type of decorated class attribute", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1027/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-12-01T05:00:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1026, "html_url": "https://github.com/python/mypy/issues/1026", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1026", "id": 119603850, "events_url": "https://api.github.com/repos/python/mypy/issues/1026/events", "updated_at": "2015-12-01T04:46:21Z", "body": "Test code:\r\n```\r\ntry:\r\n    from itertools import izip\r\nexcept ImportError:\r\n    izip = zip\r\n```\r\nIn Python 3 mode, this complains that itertools doesn't define izip. This is correct but maybe inside `try/except ImportError` this should not be an error.\r\n\r\nIn Python 2 mode, this gives the dreaded \"Incompatible types\" errror:\r\n```\r\n/Users/guido/mypy_tests/mypy_izip.py:4: error: Incompatible types in assignment (expression has type overloaded function, variable has type overloaded function)\r\n```\r\nI guess this is another case of #649 that isn't handled yet.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1026/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditional import of izip is problematic", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1026/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-30T23:18:29Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1025, "html_url": "https://github.com/python/mypy/issues/1025", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1025", "id": 119545597, "events_url": "https://api.github.com/repos/python/mypy/issues/1025/events", "updated_at": "2015-12-01T04:21:19Z", "body": "The following code passes through mypy no problem:\r\n\r\n```py\r\nclass Foo:\r\n    def __init__(self):\r\n        self.foo = 123\r\n\r\n    def get_me(self) -> Foo:\r\n        return self\r\n```\r\n\r\nAccording to https://www.python.org/dev/peps/pep-0484/#forward-references, this should be written as:\r\n\r\n```py\r\nclass Foo:\r\n    def __init__(self):\r\n        self.foo = 123\r\n\r\n    def get_me(self) -> 'Foo':\r\n        return self\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1025/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy doesn't complain about Forward References", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1025/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-30T17:56:19Z", "user": {"followers_url": "https://api.github.com/users/rowillia/followers", "gists_url": "https://api.github.com/users/rowillia/gists{/gist_id}", "html_url": "https://github.com/rowillia", "following_url": "https://api.github.com/users/rowillia/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/808798?v=3", "url": "https://api.github.com/users/rowillia", "organizations_url": "https://api.github.com/users/rowillia/orgs", "starred_url": "https://api.github.com/users/rowillia/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rowillia/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rowillia/subscriptions", "login": "rowillia", "repos_url": "https://api.github.com/users/rowillia/repos", "received_events_url": "https://api.github.com/users/rowillia/received_events", "id": 808798, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1024, "html_url": "https://github.com/python/mypy/issues/1024", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1024", "id": 119407756, "events_url": "https://api.github.com/repos/python/mypy/issues/1024/events", "updated_at": "2015-11-30T02:28:59Z", "body": "Add the script `scripts/stubgen` that is the new entry point for stubgen. Install it in `setup.py`. This makes it possible to run stubgen as just `stubgen module`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1024/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add script for running stubgen", "assignee": null, "closed_at": "2015-11-30T02:28:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1024/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-30T02:28:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1023, "html_url": "https://github.com/python/mypy/issues/1023", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1023", "id": 119407586, "events_url": "https://api.github.com/repos/python/mypy/issues/1023/events", "updated_at": "2015-11-30T02:28:59Z", "body": "Allow using `stubgen -p .../python2` to use custom Python 2 interpreters.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1023/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support specifying Python 2 interpreter to use with stubgen", "assignee": null, "closed_at": "2015-11-30T02:28:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1023/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-30T02:26:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1022, "html_url": "https://github.com/python/mypy/issues/1022", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1022", "id": 119407511, "events_url": "https://api.github.com/repos/python/mypy/issues/1022/events", "updated_at": "2015-11-30T02:28:59Z", "body": "Support stubgen options `--no-import` and `--search-path PATH` to generate stubs without having to be able to import a module.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1022/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generate stubs without importing a module", "assignee": null, "closed_at": "2015-11-30T02:28:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1022/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-30T02:26:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1021, "html_url": "https://github.com/python/mypy/issues/1021", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1021", "id": 119387016, "events_url": "https://api.github.com/repos/python/mypy/issues/1021/events", "updated_at": "2015-11-29T20:44:54Z", "body": "In this example (from #982) we define an attribute via assignment in `__new__`:\r\n \r\n```\r\nclass C(object):\r\n    def __new__(cls, foo=None):\r\n        obj = object.__new__(cls)\r\n        obj.foo = foo\r\n        return obj\r\n\r\nx = C(foo=12)\r\nprint(x.foo)\r\n```\r\n\r\nCurrently mypy doesn't recognize attribute `foo` and complains about `x.foo`. To implement this, we could do these things:\r\n\r\n* Infer the fact that `obj` is something similar to `self` because of the way is created via `object.__new__`. This should happen during semantic analysis so that this will work in unannotated method as well.\r\n* Infer attributes from assignments via `obj` because it is classified as similar to `self`.\r\n* Also recognize `object.__new__` calls via `super(...)`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1021/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Infer attributes from __new__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1021/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-29T20:44:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1020, "html_url": "https://github.com/python/mypy/issues/1020", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1020", "id": 119386509, "events_url": "https://api.github.com/repos/python/mypy/issues/1020/events", "updated_at": "2015-11-30T03:58:42Z", "body": "Currently the return type of `A(...)` is implicitly `A` even if `A.__new__` return something else. If the return type is `Any`, maybe `A(...)` should have type `Any`, and if it's a subclass, we should also use that. Currently this is a little difficult to implement due to implementation limitations (we derive the type object identity from the return type of a type object). Maybe we should introduce a new attribute to `Callable` for this purpose.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1020/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Honor return type of `__new__`", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1020/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-29T20:39:10Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1019, "html_url": "https://github.com/python/mypy/issues/1019", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1019", "id": 119386165, "events_url": "https://api.github.com/repos/python/mypy/issues/1019/events", "updated_at": "2015-11-29T23:48:48Z", "body": "We should verify that the signature of `__new__` is compatible with the signature of `__init__`, and that the return type is not arbitrary.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1019/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check signature of __new__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1019/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-29T20:35:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1018, "html_url": "https://github.com/python/mypy/issues/1018", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1018", "id": 119305104, "events_url": "https://api.github.com/repos/python/mypy/issues/1018/events", "updated_at": "2015-11-28T16:45:08Z", "body": "Just started testing the waters with mypy. \r\nIn this first test I did, it appears that mypy catches the type errors at global scope, but not when they occur in function scope. Here's the test case:\r\n\r\n    $ cat common.py\r\n    import typing\r\n    import itertools, math\r\n    from typing import Iterator\r\n    \r\n    # I deliberately add an unused str param to test the typechecking...\r\n    def primeSpiralPixels(s: str) -> Iterator[int]:\r\n        yield 255  # 1 is not prime (white)\r\n        yield 0    # 2 is prime     (black)\r\n        primesSoFar = [2]\r\n        for candidate in itertools.count(3):\r\n            for prime in (\r\n                    p for p in primesSoFar if p <= int(math.sqrt(candidate))):\r\n                if 0 == candidate % prime:\r\n                    yield 255  # non-prime: white\r\n                    break\r\n            else:\r\n                primesSoFar.append(candidate)\r\n                yield 0  # prime: black\r\n\r\n    $ cat test.py\r\n    #!/usr/bin/env python3\r\n    import typing\r\n    \r\n    from common import primeSpiralPixels\r\n    \r\n    print(\"Ole\")\r\n    print(primeSpiralPixels(dict()))\r\n    print(\"asda\" + primeSpiralPixels(\"foo\"))\r\n    \r\n    #def main():\r\n    #    print(\"Ole\")\r\n    #    print(primeSpiralPixels(dict()))\r\n    #    print(\"asda\" + primeSpiralPixels(\"foo\"))\r\n    #if __name__ == \"__main__\":\r\n    #    main()\r\n    \r\nThis works:\r\n\r\n    $ mypy test.py\r\n    test.py:6: error: Argument 1 to \"primeSpiralPixels\" has incompatible type Dict[None, None]; expected \"str\"\r\n    test.py:7: error: Unsupported operand types for + (\"str\" and Iterator[int])\r\n    \r\nBut when I uncomment the `main` function...\r\n\r\n    $ cat test.py\r\n    #!/usr/bin/env python3\r\n    import typing\r\n    \r\n    from common import primeSpiralPixels\r\n    \r\n    def main():\r\n        print(\"Ole\")\r\n        print(primeSpiralPixels(dict()))\r\n        print(\"asda\" + primeSpiralPixels(\"foo\"))\r\n    \r\n    if __name__ == \"__main__\":\r\n        main()\r\n\r\nI get no errors with this:\r\n\r\n    $ mypy test.py\r\n    $ \r\n\r\nWhy?", "labels_url": "https://api.github.com/repos/python/mypy/issues/1018/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type checks applied only on global scope?", "assignee": null, "closed_at": "2015-11-28T16:36:48Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1018/comments", "labels": [], "created_at": "2015-11-28T16:26:51Z", "user": {"followers_url": "https://api.github.com/users/ttsiodras/followers", "gists_url": "https://api.github.com/users/ttsiodras/gists{/gist_id}", "html_url": "https://github.com/ttsiodras", "following_url": "https://api.github.com/users/ttsiodras/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/181293?v=3", "url": "https://api.github.com/users/ttsiodras", "organizations_url": "https://api.github.com/users/ttsiodras/orgs", "starred_url": "https://api.github.com/users/ttsiodras/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ttsiodras/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ttsiodras/subscriptions", "login": "ttsiodras", "repos_url": "https://api.github.com/users/ttsiodras/repos", "received_events_url": "https://api.github.com/users/ttsiodras/received_events", "id": 181293, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1017, "html_url": "https://github.com/python/mypy/issues/1017", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1017", "id": 119278275, "events_url": "https://api.github.com/repos/python/mypy/issues/1017/events", "updated_at": "2015-11-28T10:22:20Z", "body": "I got the following error on import. The offending file that triggers the error is a valid python3 file encoded in utf-8 (it has ``# -*- coding: utf-8 -*-`` at the top), but not ascii).\r\n\r\n```\r\n$ mypy --use-python-path myfile.py\r\nTraceback (most recent call last):\r\n  File \"/Users/rmcgibbo/miniconda/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/site-packages/mypy/main.py\", line 49, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/site-packages/mypy/main.py\", line 92, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/site-packages/mypy/build.py\", line 197, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/site-packages/mypy/build.py\", line 383, in process\r\n    next.process()\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/site-packages/mypy/build.py\", line 725, in process\r\n    res = self.import_module(id)\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/site-packages/mypy/build.py\", line 766, in import_module\r\n    path, text = read_module_source_from_file(file_id, self.manager.lib_path)\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/site-packages/mypy/build.py\", line 911, in read_module_source_from_file\r\n    text = f.read()\r\n  File \"/Users/rmcgibbo/miniconda/lib/python3.5/encodings/ascii.py\", line 26, in decode\r\n    return codecs.ascii_decode(input, self.errors)[0]\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 3037: ordinal not in range(128)\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1017/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "UnicodeDecodeError on startup", "assignee": null, "closed_at": "2015-11-28T10:22:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1017/comments", "labels": [], "created_at": "2015-11-28T07:46:46Z", "user": {"followers_url": "https://api.github.com/users/rmcgibbo/followers", "gists_url": "https://api.github.com/users/rmcgibbo/gists{/gist_id}", "html_url": "https://github.com/rmcgibbo", "following_url": "https://api.github.com/users/rmcgibbo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/641278?v=3", "url": "https://api.github.com/users/rmcgibbo", "organizations_url": "https://api.github.com/users/rmcgibbo/orgs", "starred_url": "https://api.github.com/users/rmcgibbo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rmcgibbo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rmcgibbo/subscriptions", "login": "rmcgibbo", "repos_url": "https://api.github.com/users/rmcgibbo/repos", "received_events_url": "https://api.github.com/users/rmcgibbo/received_events", "id": 641278, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1016, "html_url": "https://github.com/python/mypy/issues/1016", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1016", "id": 119242253, "events_url": "https://api.github.com/repos/python/mypy/issues/1016/events", "updated_at": "2016-02-01T13:47:45Z", "body": "Consider:\r\n```\r\nclass C(object):\r\n    def foo(self) -> None:\r\n        self.bar()\r\n        print(self.x)\r\n    def bar(self) -> None:\r\n        self.x = 42\r\n```\r\nThis fails:\r\n```\r\n/Users/guido/mypy_tests/mypy_gen.py: note: In member \"foo\" of class \"C\":\r\n/Users/guido/mypy_tests/mypy_gen.py:4: error: Cannot determine type of 'x'\r\n```\r\nThis is apparently because bar() hasn't been analyzed yet when foo() is being analyzed. If we swap the definitions the program is clean.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1016/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Order of methods affects validity of instance variables", "assignee": null, "closed_at": "2016-02-01T13:47:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1016/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-27T20:07:13Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1015, "html_url": "https://github.com/python/mypy/issues/1015", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1015", "id": 119228953, "events_url": "https://api.github.com/repos/python/mypy/issues/1015/events", "updated_at": "2016-02-23T17:19:51Z", "body": "So I've been able to gather that mypy has a python 2 mode, triggered via --py2, and that the way to annotate types in this mode was via comments.\r\n\r\nI've been using pycharm on one side, and jedi for completion in vim on the other side for quite a while. Both of those tools can use sphinx doc annotations to infer types in python 2 mode.\r\n\r\nI was wondering if that had been considered for mypy ? It would be tremendously useful for us for those programs that we can't migrate to python 3.\r\n\r\nNote that if this is considered a good idea but has not been done because nobody had time/desire to do it, I'm completely ready to get my hand dirty !\r\n\r\nRegards,", "labels_url": "https://api.github.com/repos/python/mypy/issues/1015/labels{/name}", "comments": 12, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Using sphinx documentation annotations for type checking in py2 mode", "assignee": null, "closed_at": "2016-02-22T19:51:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1015/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-11-27T17:33:48Z", "user": {"followers_url": "https://api.github.com/users/raph-amiard/followers", "gists_url": "https://api.github.com/users/raph-amiard/gists{/gist_id}", "html_url": "https://github.com/raph-amiard", "following_url": "https://api.github.com/users/raph-amiard/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/478727?v=3", "url": "https://api.github.com/users/raph-amiard", "organizations_url": "https://api.github.com/users/raph-amiard/orgs", "starred_url": "https://api.github.com/users/raph-amiard/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/raph-amiard/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/raph-amiard/subscriptions", "login": "raph-amiard", "repos_url": "https://api.github.com/users/raph-amiard/repos", "received_events_url": "https://api.github.com/users/raph-amiard/received_events", "id": 478727, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1014, "html_url": "https://github.com/python/mypy/issues/1014", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1014", "id": 119228148, "events_url": "https://api.github.com/repos/python/mypy/issues/1014/events", "updated_at": "2015-11-27T17:28:50Z", "body": "This is more a question than an issue. While browsing the code of mypy to figure out how to contribute, and what to contribute, I stumbled upon the fact that it seems to have its own complete python parser.\r\n\r\nWhile python is admittedly not a terribly complicated language to parse, I was wondering about why does it have a custom parser, since it uses regular python syntax (except maybe in python2 mode).\r\n\r\nIs it a legacy thing ? or is there a stronger rationale behind this ?\r\n\r\nSorry if this is a redundant question, couldn't find any reference to that in the docs/issue tracker.\r\n\r\nRegards,", "labels_url": "https://api.github.com/repos/python/mypy/issues/1014/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Why a custom parser ?", "assignee": null, "closed_at": "2015-11-27T17:27:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1014/comments", "labels": [], "created_at": "2015-11-27T17:25:15Z", "user": {"followers_url": "https://api.github.com/users/raph-amiard/followers", "gists_url": "https://api.github.com/users/raph-amiard/gists{/gist_id}", "html_url": "https://github.com/raph-amiard", "following_url": "https://api.github.com/users/raph-amiard/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/478727?v=3", "url": "https://api.github.com/users/raph-amiard", "organizations_url": "https://api.github.com/users/raph-amiard/orgs", "starred_url": "https://api.github.com/users/raph-amiard/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/raph-amiard/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/raph-amiard/subscriptions", "login": "raph-amiard", "repos_url": "https://api.github.com/users/raph-amiard/repos", "received_events_url": "https://api.github.com/users/raph-amiard/received_events", "id": 478727, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1013, "html_url": "https://github.com/python/mypy/issues/1013", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1013", "id": 119111108, "events_url": "https://api.github.com/repos/python/mypy/issues/1013/events", "updated_at": "2015-11-26T23:42:12Z", "body": "Currently mypy doesn't check that a method override has keyword argument names that are compatible with the overridden method. The reason is that a lot of code doesn't define these names consistently, and mypy would generate a ton of useless errors if it insisted on compatibility here. So mypy doesn't complain about this:\r\n\r\n```\r\nclass A:\r\n    def f(self, x): ...\r\nclass B(A):\r\n    def f(self, xx): ...\r\n```\r\n\r\nHowever, this means that calls via keyword arguments can fail at runtime:\r\n\r\n```\r\ndef f(a: A) -> None:\r\n    a.f(x=1)  # Failure if a is an instance of B\r\n\r\nf(B())\r\n```\r\n\r\nWe could do better than this: if we call a method `m` of `A` using a keyword argument `x`, we could verify that all methods `m` in the class hierarchy below `A` define the keyword argument `x`. So we'd only enforce this if some code actually depends on the keyword argument name. Mypy would then give a list of all classes that have an incompatible definition of `m` and explain why the code could go wrong. If a method is always called using positional arguments only, no errors would be reported.\r\n\r\nWe might want to give a warning instead of an error for this, as it could generate false positives.\r\n\r\nImplementing this would be fairly complicated as it would require access to *all* subclasses of a given class. In practice, this could happen in a separate type checking pass that happens after the entire program has been type checked, but I'm not really sure what's the best way to implement this and whether this is useful enough to implement at all.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1013/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Check keyword argument compatibility across class hierarchies", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1013/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-11-26T23:42:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1012, "html_url": "https://github.com/python/mypy/issues/1012", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1012", "id": 118980648, "events_url": "https://api.github.com/repos/python/mypy/issues/1012/events", "updated_at": "2015-12-02T08:44:51Z", "body": "Some code uses dicts with a fixed set of keys a lot as a poor-man's struct or record type. If the value types are heterogeneous this is hard to type-check, as code often assumes a given type for a given key. (Namedtuple doesn't really replace this, since it's immutable.)\r\n\r\nThis is a placeholder issue so I can refer to it -- Jukka has a bit of a design in his head already.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1012/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement type-checking dict-used-as-record", "assignee": null, "closed_at": "2015-12-02T08:44:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1012/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-11-26T06:30:23Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1011, "html_url": "https://github.com/python/mypy/issues/1011", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1011", "id": 118950915, "events_url": "https://api.github.com/repos/python/mypy/issues/1011/events", "updated_at": "2016-01-15T00:44:34Z", "body": "PEP 484 defines a Generator class, a subclass of Iterator that also specifies the types of send() and the return value (for `yield from`). I'm not 100% sure that this doesn't require changes to mypy.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1011/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Need to add Generator support", "assignee": null, "closed_at": "2016-01-15T00:44:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1011/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-11-26T01:08:29Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 1010, "html_url": "https://github.com/python/mypy/issues/1010", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1010", "id": 118938408, "events_url": "https://api.github.com/repos/python/mypy/issues/1010/events", "updated_at": "2016-03-02T18:09:27Z", "body": "Consider:\r\n```\r\nclass C(dict):\r\n    pass\r\nx = C(a=1, b=2)\r\n```\r\nPython accepts this, but mypy complains:\r\n```\r\n/Users/guido/mypy_tests/mypy_dict_subclass.py:3: error: No overload variant of \"C\" matches argument types [builtins.int, builtins.int]\r\n```\r\nBut `dict(a=1, b=2)` works.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1010/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Subclass of dict doesn't inherit special signature", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1010/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-25T22:59:53Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1009, "html_url": "https://github.com/python/mypy/issues/1009", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1009", "id": 118936308, "events_url": "https://api.github.com/repos/python/mypy/issues/1009/events", "updated_at": "2015-12-14T01:22:55Z", "body": "This code works in Python:\r\n```\r\nimport contextlib\r\n\r\n@contextlib.contextmanager\r\ndef f():\r\n    yield 42\r\n\r\n@contextlib.contextmanager\r\ndef g(x):\r\n    yield x+1\r\n\r\ndef main():\r\n    with f() as a, g(a) as b:\r\n        print(a, b)\r\n\r\nmain()\r\n```\r\nNote that in main(), the return of f() (a) is used as the argument for g(a). Mypy doesn't understand that the scope of a extends into the next context manager call:\r\n```\r\n/Users/guido/mypy_tests/mypy_repro.py: note: In function \"main\":\r\n/Users/guido/mypy_tests/mypy_repro.py:12: error: Name 'a' is not defined\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1009/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Scope management of with-statement is wrong", "assignee": null, "closed_at": "2015-12-14T01:22:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1009/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-25T22:42:17Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1008, "html_url": "https://github.com/python/mypy/issues/1008", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1008", "id": 118932276, "events_url": "https://api.github.com/repos/python/mypy/issues/1008/events", "updated_at": "2015-12-28T15:31:03Z", "body": "Found this code:\r\n```\r\ndef foobar(cls):\r\n    class C(cls):  # type: ignore\r\n        # another comment\r\n        pass\r\n```\r\nThis causes a parse error on the `# type: ignore` comment:\r\n```\r\n/Users/guido/mypy_tests/mypy_class.py:2: error: Parse error before \"ignore\"\r\n```\r\nRemoving `# another comment` makes the problem disappear.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1008/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parse error when # type: ignore is followed by another comment on the next line", "assignee": null, "closed_at": "2015-12-28T15:31:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1008/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-11-25T22:09:06Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1007, "html_url": "https://github.com/python/mypy/issues/1007", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1007", "id": 118929930, "events_url": "https://api.github.com/repos/python/mypy/issues/1007/events", "updated_at": "2015-11-25T22:06:14Z", "body": "Example code:\r\n```\r\ndef foobar(cls):\r\n    class C(cls):\r\n        ...\r\n```\r\nError message (on the `class` line):\r\n```\r\nerror: Invalid type \"cls\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1007/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dynamic class definition spurned", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1007/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-25T21:52:36Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1006, "html_url": "https://github.com/python/mypy/issues/1006", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1006", "id": 118929642, "events_url": "https://api.github.com/repos/python/mypy/issues/1006/events", "updated_at": "2016-04-08T16:56:41Z", "body": "I found code like this:\r\n```\r\ndef foo():\r\n    @staticmethod\r\n    def bar():\r\n        pass\r\n```\r\nThis gets an error:\r\n```\r\n/Users/guido/mypy_tests/mypy_static.py: note: In function \"foo\":\r\n/Users/guido/mypy_tests/mypy_static.py:2: error: 'staticmethod' used with a non-method\r\n```\r\nIt can be silenced by putting `# type: ignore` on the `@staticmethod` line.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1006/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Complaint about @staticmethod outside a class", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1006/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-25T21:50:07Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1005, "html_url": "https://github.com/python/mypy/pull/1005", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1005", "id": 118922505, "events_url": "https://api.github.com/repos/python/mypy/issues/1005/events", "updated_at": "2015-11-26T22:44:55Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/1005/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Improve `.gitignore` to filter out venvs, eggs, and PyCharm files.", "assignee": null, "closed_at": "2015-11-26T22:44:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1005/comments", "labels": [], "created_at": "2015-11-25T20:55:14Z", "user": {"followers_url": "https://api.github.com/users/rowillia/followers", "gists_url": "https://api.github.com/users/rowillia/gists{/gist_id}", "html_url": "https://github.com/rowillia", "following_url": "https://api.github.com/users/rowillia/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/808798?v=3", "url": "https://api.github.com/users/rowillia", "organizations_url": "https://api.github.com/users/rowillia/orgs", "starred_url": "https://api.github.com/users/rowillia/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rowillia/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rowillia/subscriptions", "login": "rowillia", "repos_url": "https://api.github.com/users/rowillia/repos", "received_events_url": "https://api.github.com/users/rowillia/received_events", "id": 808798, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1005.patch", "html_url": "https://github.com/python/mypy/pull/1005", "diff_url": "https://github.com/python/mypy/pull/1005.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1005"}, "locked": false}, {"milestone": null, "number": 1004, "html_url": "https://github.com/python/mypy/issues/1004", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1004", "id": 118836244, "events_url": "https://api.github.com/repos/python/mypy/issues/1004/events", "updated_at": "2016-04-08T16:26:57Z", "body": "I was playing around with Mypy and I thought I'd implement flatten with type checks.\r\n```\r\nfrom typing import List               \r\n                                      \r\ndef flatten(lst: List) -> List:       \r\n    if len(lst) == 1:                 \r\n        return lst                    \r\n    if len(lst) > 1:                  \r\n        h, *t = lst                   \r\n        return flatten(h) + flatten(t)\r\n    return lst                        \r\n                                      \r\nprint(flatten([1,2,[3,4]]))           \r\n```\r\nPython will raise a TypeError:\r\n```\r\nType:  [1, 2, [3, 4]]                                                                \u2502\r\nType:  1                                                                             \u2502\r\nTraceback (most recent call last):                                                   \u2502\r\n  File \"typecheck.py\", line 13, in <module>                                          \u2502\r\n    print(flatten([1,2,[3,4]]))                                                      \u2502\r\n  File \"typecheck.py\", line 10, in flatten                                           \u2502\r\n    return flatten(h) + flatten(t)                                                   \u2502\r\n  File \"typecheck.py\", line 6, in flatten                                            \u2502\r\n    if len(lst) == 1:                                                                \u2502\r\nTypeError: object of type 'int' has no len()\r\n```\r\nBut Mypy doesn't warn me about it.\r\n\r\nIs this a bug? Should it have inferred that h, *t will destructure a list and h will be possibly a non-list value?\r\n\r\ntks!", "labels_url": "https://api.github.com/repos/python/mypy/issues/1004/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type error not detected by Mypy in flatten implementation", "assignee": null, "closed_at": "2016-04-08T16:26:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1004/comments", "labels": [], "created_at": "2015-11-25T13:26:45Z", "user": {"followers_url": "https://api.github.com/users/rs86/followers", "gists_url": "https://api.github.com/users/rs86/gists{/gist_id}", "html_url": "https://github.com/rs86", "following_url": "https://api.github.com/users/rs86/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11961376?v=3", "url": "https://api.github.com/users/rs86", "organizations_url": "https://api.github.com/users/rs86/orgs", "starred_url": "https://api.github.com/users/rs86/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rs86/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rs86/subscriptions", "login": "rs86", "repos_url": "https://api.github.com/users/rs86/repos", "received_events_url": "https://api.github.com/users/rs86/received_events", "id": 11961376, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1003, "html_url": "https://github.com/python/mypy/issues/1003", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1003", "id": 118751189, "events_url": "https://api.github.com/repos/python/mypy/issues/1003/events", "updated_at": "2015-11-25T18:55:58Z", "body": "mypy is expecting me to explicitly `return None` instead of `return`, but I'd expect that to be inferred as there's little point in me telling it i return None\r\n\r\n    def f(i: int) -> Optional[int]:\r\n        if i > 3:\r\n            return  # fails but return None works\r\n        return i * 3\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1003/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Return value expected on def f() -> Optional[Type]: with plain return", "assignee": null, "closed_at": "2015-11-25T04:57:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1003/comments", "labels": [], "created_at": "2015-11-25T03:14:38Z", "user": {"followers_url": "https://api.github.com/users/darjus/followers", "gists_url": "https://api.github.com/users/darjus/gists{/gist_id}", "html_url": "https://github.com/darjus", "following_url": "https://api.github.com/users/darjus/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/177063?v=3", "url": "https://api.github.com/users/darjus", "organizations_url": "https://api.github.com/users/darjus/orgs", "starred_url": "https://api.github.com/users/darjus/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/darjus/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/darjus/subscriptions", "login": "darjus", "repos_url": "https://api.github.com/users/darjus/repos", "received_events_url": "https://api.github.com/users/darjus/received_events", "id": 177063, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1002, "html_url": "https://github.com/python/mypy/issues/1002", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1002", "id": 118741183, "events_url": "https://api.github.com/repos/python/mypy/issues/1002/events", "updated_at": "2016-01-13T18:37:26Z", "body": "Using mypy reports with the latest release of lxml results in the following stack trace:\r\n\r\n```\r\n$ mypy --html-report mypy_dir defaultdict_example.py\r\nTraceback (most recent call last):\r\n  File \"/Users/rwilliams/src/oss/mypy/.venv/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Users/rwilliams/src/oss/mypy/.venv/lib/python3.5/site-packages/mypy_lang-0.2.0.dev0-py3.5.egg/mypy/main.py\", line 91, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Users/rwilliams/src/oss/mypy/.venv/lib/python3.5/site-packages/mypy_lang-0.2.0.dev0-py3.5.egg/mypy/main.py\", line 134, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/rwilliams/src/oss/mypy/.venv/lib/python3.5/site-packages/mypy_lang-0.2.0.dev0-py3.5.egg/mypy/build.py\", line 197, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Users/rwilliams/src/oss/mypy/.venv/lib/python3.5/site-packages/mypy_lang-0.2.0.dev0-py3.5.egg/mypy/build.py\", line 383, in process\r\n    next.process()\r\n  File \"/Users/rwilliams/src/oss/mypy/.venv/lib/python3.5/site-packages/mypy_lang-0.2.0.dev0-py3.5.egg/mypy/build.py\", line 857, in process\r\n    self.manager.reports.file(self.tree, type_map=self.manager.type_checker.type_map)\r\n  File \"/Users/rwilliams/src/oss/mypy/.venv/lib/python3.5/site-packages/mypy_lang-0.2.0.dev0-py3.5.egg/mypy/report.py\", line 41, in file\r\n    reporter.on_file(tree, type_map)\r\n  File \"/Users/rwilliams/src/oss/mypy/.venv/lib/python3.5/site-packages/mypy_lang-0.2.0.dev0-py3.5.egg/mypy/report.py\", line 138, in on_file\r\n    xml_pi = etree.ProcessingInstruction('xml', 'version=\"1.0\" encoding=\"utf-8\"')\r\n  File \"src/lxml/lxml.etree.pyx\", line 3039, in lxml.etree.ProcessingInstruction (src/lxml/lxml.etree.c:81073)\r\nValueError: Invalid PI name 'b'xml''\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/1002/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy doesn't work with the latest release of lxml", "assignee": null, "closed_at": "2016-01-13T18:37:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1002/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-25T01:41:33Z", "user": {"followers_url": "https://api.github.com/users/rowillia/followers", "gists_url": "https://api.github.com/users/rowillia/gists{/gist_id}", "html_url": "https://github.com/rowillia", "following_url": "https://api.github.com/users/rowillia/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/808798?v=3", "url": "https://api.github.com/users/rowillia", "organizations_url": "https://api.github.com/users/rowillia/orgs", "starred_url": "https://api.github.com/users/rowillia/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rowillia/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rowillia/subscriptions", "login": "rowillia", "repos_url": "https://api.github.com/users/rowillia/repos", "received_events_url": "https://api.github.com/users/rowillia/received_events", "id": 808798, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1001, "html_url": "https://github.com/python/mypy/pull/1001", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1001", "id": 118741014, "events_url": "https://api.github.com/repos/python/mypy/issues/1001/events", "updated_at": "2016-01-27T20:03:18Z", "body": "Mypy depends on lxml for reports but doesn't declare it as a dependency\r\nso it doesn't get installed alongside of mypy.  Also, mypy no longer\r\nworks with latest release of lxml so I had to pin to the previous release.", "labels_url": "https://api.github.com/repos/python/mypy/issues/1001/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Declare dependency on lxml", "assignee": null, "closed_at": "2016-01-27T20:03:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1001/comments", "labels": [], "created_at": "2015-11-25T01:40:31Z", "user": {"followers_url": "https://api.github.com/users/rowillia/followers", "gists_url": "https://api.github.com/users/rowillia/gists{/gist_id}", "html_url": "https://github.com/rowillia", "following_url": "https://api.github.com/users/rowillia/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/808798?v=3", "url": "https://api.github.com/users/rowillia", "organizations_url": "https://api.github.com/users/rowillia/orgs", "starred_url": "https://api.github.com/users/rowillia/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rowillia/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rowillia/subscriptions", "login": "rowillia", "repos_url": "https://api.github.com/users/rowillia/repos", "received_events_url": "https://api.github.com/users/rowillia/received_events", "id": 808798, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/1001.patch", "html_url": "https://github.com/python/mypy/pull/1001", "diff_url": "https://github.com/python/mypy/pull/1001.diff", "url": "https://api.github.com/repos/python/mypy/pulls/1001"}, "locked": false}, {"milestone": null, "number": 1000, "html_url": "https://github.com/python/mypy/issues/1000", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/1000", "id": 118739887, "events_url": "https://api.github.com/repos/python/mypy/issues/1000/events", "updated_at": "2015-11-26T03:09:38Z", "body": "Example:\r\n```\r\nclass C:\r\n    A = 'abc'\r\n    B = [c for c in A]\r\n```\r\nThis is valid Python code, but mypy doesn't believe that A exists. (Note that it's specific to comprehensions and generator expressions -- if I put a plain `C = A.lower()` there it works fine.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/1000/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Comprehension in class scope should see class variables", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/1000/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-25T01:30:51Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 999, "html_url": "https://github.com/python/mypy/issues/999", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/999", "id": 118736366, "events_url": "https://api.github.com/repos/python/mypy/issues/999/events", "updated_at": "2016-03-15T00:09:01Z", "body": "This code (no import from typing) complains, as expected:\r\n```\r\na = None  # type: Any\r\n```\r\nHowever, this code passes:\r\n```\r\na = None  # type: Dict\r\n```\r\nSimilar with List, Set.", "labels_url": "https://api.github.com/repos/python/mypy/issues/999/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dict, List and Set are imported by default", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/999/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-25T01:00:45Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 998, "html_url": "https://github.com/python/mypy/issues/998", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/998", "id": 118706171, "events_url": "https://api.github.com/repos/python/mypy/issues/998/events", "updated_at": "2015-11-26T21:01:58Z", "body": "The source has:\r\n```\r\n# Make the decorator available to all.\r\non_ui_thread = MainMessageQueue.on_queue\r\n```\r\nThe crash log is:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/guido/src/mypy/scripts/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Users/guido/src/mypy/mypy/main.py\", line 49, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Users/guido/src/mypy/mypy/main.py\", line 92, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 197, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 379, in process\r\n    next.process()\r\n  File \"/Users/guido/src/mypy/mypy/build.py\", line 849, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 371, in visit_file\r\n    self.accept(d)\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 379, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/src/mypy/mypy/nodes.py\", line 552, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 953, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 981, in check_assignment\r\n    self.infer_variable_type(inferred, lvalue, self.accept(rvalue),\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 379, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/src/mypy/mypy/nodes.py\", line 929, in accept\r\n    return visitor.visit_member_expr(self)\r\n  File \"/Users/guido/src/mypy/mypy/checker.py\", line 1770, in visit_member_expr\r\n    return self.expr_checker.visit_member_expr(e)\r\n  File \"/Users/guido/src/mypy/mypy/checkexpr.py\", line 680, in visit_member_expr\r\n    result = self.analyze_ordinary_member_access(e, False)\r\n  File \"/Users/guido/src/mypy/mypy/checkexpr.py\", line 693, in analyze_ordinary_member_access\r\n    self.named_type, self.msg)\r\n  File \"/Users/guido/src/mypy/mypy/checkmember.py\", line 84, in analyze_member_access\r\n    result = analyze_class_attribute_access(itype, name, node, is_lvalue, builtin_type, msg)\r\n  File \"/Users/guido/src/mypy/mypy/checkmember.py\", line 240, in analyze_class_attribute_access\r\n    return function_type(cast(FuncBase, node.node), builtin_type('builtins.function'))\r\n  File \"/Users/guido/src/mypy/mypy/nodes.py\", line 1733, in function_type\r\n    if func.type:\r\nAttributeError: 'Decorator' object has no attribute 'type'\r\n\r\n*** INTERNAL ERROR ***\r\n\r\nui/common/uikit.py:64: error: Internal error -- please report a bug at https://github.com/JukkaL/mypy/issues\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/998/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash in function_type()", "assignee": null, "closed_at": "2015-11-26T21:01:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/998/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-11-24T21:25:54Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 997, "html_url": "https://github.com/python/mypy/pull/997", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/997", "id": 118675962, "events_url": "https://api.github.com/repos/python/mypy/issues/997/events", "updated_at": "2015-12-14T01:14:00Z", "body": "@bcdarwin @gvanrossum Please try and let me know if it works!", "labels_url": "https://api.github.com/repos/python/mypy/issues/997/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #996", "assignee": null, "closed_at": "2015-12-14T01:14:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/997/comments", "labels": [], "created_at": "2015-11-24T18:38:18Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/997.patch", "html_url": "https://github.com/python/mypy/pull/997", "diff_url": "https://github.com/python/mypy/pull/997.diff", "url": "https://api.github.com/repos/python/mypy/pulls/997"}, "locked": false}, {"milestone": null, "number": 996, "html_url": "https://github.com/python/mypy/issues/996", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/996", "id": 118666633, "events_url": "https://api.github.com/repos/python/mypy/issues/996/events", "updated_at": "2015-12-14T01:13:08Z", "body": "```\r\nfrom typing import TypeVar\r\n\r\nT = TypeVar('T')\r\n\r\nclass C(object):  # forgot to add type params here\r\n    def __init__(self, t : T) -> None:\r\n        self.t   = t\r\n\r\nc = C(t = 3)  # type: C[int]  # this will crash\r\n```\r\n\r\ncauses:\r\n\r\n```\r\nTraceback (most recent call last):\r\n    ...\r\n    cb = infer_constraints(mapped.args[i], instance.args[i],\r\nIndexError: list index out of range\r\n```\r\n\r\nI guess this generalizes #981 and provides an additional example, here with an (accidentally) non-generic type (though the same happens if too few type arguments are supplied).  I'm not sure if it overlaps with #300.", "labels_url": "https://api.github.com/repos/python/mypy/issues/996/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Incorrect number of type arguments causes internal error", "assignee": null, "closed_at": "2015-12-14T01:13:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/996/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-24T17:46:30Z", "user": {"followers_url": "https://api.github.com/users/bcdarwin/followers", "gists_url": "https://api.github.com/users/bcdarwin/gists{/gist_id}", "html_url": "https://github.com/bcdarwin", "following_url": "https://api.github.com/users/bcdarwin/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/164148?v=3", "url": "https://api.github.com/users/bcdarwin", "organizations_url": "https://api.github.com/users/bcdarwin/orgs", "starred_url": "https://api.github.com/users/bcdarwin/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bcdarwin/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bcdarwin/subscriptions", "login": "bcdarwin", "repos_url": "https://api.github.com/users/bcdarwin/repos", "received_events_url": "https://api.github.com/users/bcdarwin/received_events", "id": 164148, "site_admin": false}, "locked": false}, {"milestone": null, "number": 995, "html_url": "https://github.com/python/mypy/issues/995", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/995", "id": 118556428, "events_url": "https://api.github.com/repos/python/mypy/issues/995/events", "updated_at": "2015-11-25T05:58:20Z", "body": "defaultdict's documentation suggests passing `list` as an argument to defaultdict - https://docs.python.org/2/library/collections.html#defaultdict-examples\r\n\r\nmypy complains when I do this however\r\n\r\n```py\r\nfrom collections import defaultdict\r\n\r\nfoo = defaultdict(list)\r\nbar = defaultdict(dict)\r\n```\r\n\r\nResults in:\r\n\r\n```\r\ndefault_dict_example.py, line 3: Argument 1 to \"defaultdict\" has incompatible type List[_T]; expected Callable[[], List[_T]]\r\ndefault_dict_example.py, line 3: Need type annotation for variable\r\ndefault_dict_example.py, line 4: Argument 1 to \"defaultdict\" has incompatible type Dict[_KT, _VT]; expected Callable[[], Dict[_KT, _VT]]\r\ndefault_dict_example.py, line 4: Need type annotation for variable\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/995/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Errors when using defaultdict", "assignee": null, "closed_at": "2015-11-25T05:58:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/995/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-11-24T08:26:18Z", "user": {"followers_url": "https://api.github.com/users/rowillia/followers", "gists_url": "https://api.github.com/users/rowillia/gists{/gist_id}", "html_url": "https://github.com/rowillia", "following_url": "https://api.github.com/users/rowillia/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/808798?v=3", "url": "https://api.github.com/users/rowillia", "organizations_url": "https://api.github.com/users/rowillia/orgs", "starred_url": "https://api.github.com/users/rowillia/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rowillia/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rowillia/subscriptions", "login": "rowillia", "repos_url": "https://api.github.com/users/rowillia/repos", "received_events_url": "https://api.github.com/users/rowillia/received_events", "id": 808798, "site_admin": false}, "locked": false}, {"milestone": null, "number": 994, "html_url": "https://github.com/python/mypy/pull/994", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/994", "id": 118554353, "events_url": "https://api.github.com/repos/python/mypy/issues/994/events", "updated_at": "2015-12-02T02:32:47Z", "body": "By default, this will typecheck all of the package modules.\r\nWe still need to figure out how to handle third-party modules.\r\nPassing in `--mypy-args=\"--use-python-path\"` will also include\r\nany dependent modules, but nearly all of them fail to typecheck.\r\n\r\nThis will fix https://github.com/JukkaL/mypy/issues/992", "labels_url": "https://api.github.com/repos/python/mypy/issues/994/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support invoking mypy from setuptools", "assignee": null, "closed_at": "2015-12-01T04:20:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/994/comments", "labels": [], "created_at": "2015-11-24T08:07:03Z", "user": {"followers_url": "https://api.github.com/users/rowillia/followers", "gists_url": "https://api.github.com/users/rowillia/gists{/gist_id}", "html_url": "https://github.com/rowillia", "following_url": "https://api.github.com/users/rowillia/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/808798?v=3", "url": "https://api.github.com/users/rowillia", "organizations_url": "https://api.github.com/users/rowillia/orgs", "starred_url": "https://api.github.com/users/rowillia/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rowillia/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rowillia/subscriptions", "login": "rowillia", "repos_url": "https://api.github.com/users/rowillia/repos", "received_events_url": "https://api.github.com/users/rowillia/received_events", "id": 808798, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/994.patch", "html_url": "https://github.com/python/mypy/pull/994", "diff_url": "https://github.com/python/mypy/pull/994.diff", "url": "https://api.github.com/repos/python/mypy/pulls/994"}, "locked": false}, {"milestone": null, "number": 993, "html_url": "https://github.com/python/mypy/issues/993", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/993", "id": 118519541, "events_url": "https://api.github.com/repos/python/mypy/issues/993/events", "updated_at": "2015-12-03T07:25:50Z", "body": "Currently the CLI with `mypy foo/bar.py` follows the semantics of `python foo/bar.py` in adding `foo/` to the Python module search path.\r\n\r\nThis is the right thing to do when imitating `python` as a Python or Python-like interpreter, but in the context of type-checking some piece of a codebase it can get pretty confusing. In particular if there's a module inside `foo/` that has the same name as, say, a stdlib module, then we end up finding that when the stdlib module was intended. That's likely to produce super confusing error messages thereafter.\r\n\r\nInstead, only add the target file's directory to the search path if there isn't an `__init__.py` present there. In this case, if the user's application was ever going to import that file, it must be by including that directory in the search path, so this isn't likely to cause confusion.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/993/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't guess at adding to MYPYPATH unless there's no __init__.py present", "assignee": null, "closed_at": "2015-12-03T07:25:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/993/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-11-24T02:31:46Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 992, "html_url": "https://github.com/python/mypy/issues/992", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/992", "id": 118510066, "events_url": "https://api.github.com/repos/python/mypy/issues/992/events", "updated_at": "2015-12-01T04:18:49Z", "body": "Like `python setup.py flake8`. This would be a nice and convenient way for many people to use `mypy` without worrying about the details of our CLI.\r\n\r\nThe API for making this happen is undocumented:\r\nhttp://pythonhosted.org/setuptools/setuptools.html#subclassing-command\r\nbut `flake8` makes a nice example:\r\nhttps://gitlab.com/pycqa/flake8/blob/master/flake8/main.py#L82\r\nhttps://gitlab.com/pycqa/flake8/blob/master/setup.py#L57\r\nthat suggests it shouldn't be too complicated.\r\n\r\nBlocks on #935.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/992/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add a setup.py command as a way to invoke mypy", "assignee": null, "closed_at": "2015-12-01T04:18:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/992/comments", "labels": [], "created_at": "2015-11-24T01:11:27Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 991, "html_url": "https://github.com/python/mypy/issues/991", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/991", "id": 118507148, "events_url": "https://api.github.com/repos/python/mypy/issues/991/events", "updated_at": "2015-11-24T05:28:00Z", "body": "I don't know what the source was, this happened a minute into analyzing 600+ files. How to debug this further?\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/guido/v3/bin/mypy\", line 6, in <module>\r\n    main(__file__)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/main.py\", line 49, in main\r\n    type_check_only(sources, bin_dir, options)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/main.py\", line 92, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/build.py\", line 197, in build\r\n    result = manager.process(initial_states)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/build.py\", line 379, in process\r\n    next.process()\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/build.py\", line 849, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 371, in visit_file\r\n    self.accept(d)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/nodes.py\", line 473, in accept\r\n    return visitor.visit_class_def(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 866, in visit_class_def\r\n    self.accept(defn.defs)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/nodes.py\", line 514, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 939, in visit_block\r\n    self.accept(s)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/nodes.py\", line 370, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 431, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 464, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 545, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 391, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/nodes.py\", line 514, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 939, in visit_block\r\n    self.accept(s)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/nodes.py\", line 528, in accept\r\n    return visitor.visit_expression_stmt(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 1305, in visit_expression_stmt\r\n    self.accept(s.expr)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/nodes.py\", line 973, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 1741, in visit_call_expr\r\n    return self.expr_checker.visit_call_expr(e)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checkexpr.py\", line 113, in visit_call_expr\r\n    self.accept(e.callee)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checkexpr.py\", line 1324, in accept\r\n    return self.chk.accept(node, context)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/nodes.py\", line 1180, in accept\r\n    return visitor.visit_super_expr(self)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checker.py\", line 1816, in visit_super_expr\r\n    return self.expr_checker.visit_super_expr(e)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checkexpr.py\", line 1194, in visit_super_expr\r\n    t = self.analyze_super(e, False)\r\n  File \"/Users/guido/v3/lib/python3.5/site-packages/mypy/checkexpr.py\", line 1204, in analyze_super\r\n    e.info.mro[1])\r\nIndexError: list index out of range\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/991/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "IndexError in analyze_super", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/991/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-24T00:44:57Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 990, "html_url": "https://github.com/python/mypy/pull/990", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/990", "id": 118502168, "events_url": "https://api.github.com/repos/python/mypy/issues/990/events", "updated_at": "2015-11-24T06:06:57Z", "body": "(Meant more to ask a question than to be merged, for now.)\r\n\r\nThis fixes the following type error when mypy is run against its\r\nown implementation:\r\n\r\n```\r\nmypy/checker.py:10: note: In module imported here:\r\nmypy/nodes.py: note: In member \"set_line\" of class \"Node\":\r\nmypy/nodes.py:95: error: Cannot determine type of 'line'\r\n```\r\n\r\nI don't actually understand why this is necessary, though!\r\nBased on http://mypy.readthedocs.org/en/latest/class_basics.html ,\r\nit seems like the initialization `self.line = 0` in the class's\r\n`__init__` ought to do the job.  What am I missing?", "labels_url": "https://api.github.com/repos/python/mypy/issues/990/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix missing type (but puzzled why)", "assignee": null, "closed_at": "2015-11-24T03:23:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/990/comments", "labels": [], "created_at": "2015-11-24T00:01:10Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/990.patch", "html_url": "https://github.com/python/mypy/pull/990", "diff_url": "https://github.com/python/mypy/pull/990.diff", "url": "https://api.github.com/repos/python/mypy/pulls/990"}, "locked": false}, {"milestone": null, "number": 989, "html_url": "https://github.com/python/mypy/issues/989", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/989", "id": 118500729, "events_url": "https://api.github.com/repos/python/mypy/issues/989/events", "updated_at": "2015-11-24T02:37:25Z", "body": "This would set a good example of how other people can do this. :-) Someone was asking for such an example today in `#python-mypy`.\r\n\r\nAlso we seem to have type errors creeping in. Eep! This would help prevent that.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/989/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Check our own types in Travis CI build", "assignee": null, "closed_at": "2015-11-24T02:37:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/989/comments", "labels": [], "created_at": "2015-11-23T23:50:04Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 988, "html_url": "https://github.com/python/mypy/pull/988", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/988", "id": 118367187, "events_url": "https://api.github.com/repos/python/mypy/issues/988/events", "updated_at": "2015-12-14T02:32:04Z", "body": "And tested against dateutil itself.", "labels_url": "https://api.github.com/repos/python/mypy/issues/988/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Load sources while detecting coding according to PEP-263 and should fix #709.", "assignee": null, "closed_at": "2015-12-14T02:31:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/988/comments", "labels": [], "created_at": "2015-11-23T12:01:33Z", "user": {"followers_url": "https://api.github.com/users/darjus/followers", "gists_url": "https://api.github.com/users/darjus/gists{/gist_id}", "html_url": "https://github.com/darjus", "following_url": "https://api.github.com/users/darjus/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/177063?v=3", "url": "https://api.github.com/users/darjus", "organizations_url": "https://api.github.com/users/darjus/orgs", "starred_url": "https://api.github.com/users/darjus/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/darjus/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/darjus/subscriptions", "login": "darjus", "repos_url": "https://api.github.com/users/darjus/repos", "received_events_url": "https://api.github.com/users/darjus/received_events", "id": 177063, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/988.patch", "html_url": "https://github.com/python/mypy/pull/988", "diff_url": "https://github.com/python/mypy/pull/988.diff", "url": "https://api.github.com/repos/python/mypy/pulls/988"}, "locked": false}, {"milestone": null, "number": 987, "html_url": "https://github.com/python/mypy/issues/987", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/987", "id": 118305560, "events_url": "https://api.github.com/repos/python/mypy/issues/987/events", "updated_at": "2015-11-28T01:06:14Z", "body": "This is a little painful to change as we refer to `builtins` all over the place.", "labels_url": "https://api.github.com/repos/python/mypy/issues/987/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename builtins to __builtin__ in Python 2", "assignee": null, "closed_at": "2015-11-28T01:06:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/987/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-11-23T01:53:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 986, "html_url": "https://github.com/python/mypy/issues/986", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/986", "id": 118300816, "events_url": "https://api.github.com/repos/python/mypy/issues/986/events", "updated_at": "2016-03-02T00:52:50Z", "body": "Only give a warning in cases where we know that a stub is missing, instead of failing the build.\r\n\r\nContinuation of #952.", "labels_url": "https://api.github.com/repos/python/mypy/issues/986/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give a warning if a stub for a known library module is missing", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/986/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-11-23T00:23:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 985, "html_url": "https://github.com/python/mypy/issues/985", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/985", "id": 118277802, "events_url": "https://api.github.com/repos/python/mypy/issues/985/events", "updated_at": "2015-11-24T08:16:51Z", "body": "We should probably support precise types for heterogeneous dictionaries used like structures, such as `{'name': 'Mary', 'age': 5}`. Potential example:\r\n\r\n```python\r\nperson = {'name': 'Mary', 'age': 5}\r\nperson['name'] + ''  # ok\r\nperson['age'] + 1  # ok\r\nperson['x']  # error: no key x\r\n```\r\n\r\n\r\nThis is just a placeholder issue for now and doesn't actually propose how to implement this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/985/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dictionaries as structs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/985/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-11-22T18:02:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 984, "html_url": "https://github.com/python/mypy/issues/984", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/984", "id": 118277568, "events_url": "https://api.github.com/repos/python/mypy/issues/984/events", "updated_at": "2016-04-06T22:09:38Z", "body": "This is a follow-up to #239.", "labels_url": "https://api.github.com/repos/python/mypy/issues/984/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support dict with combination of positional arguments, keyword arguments and **args", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/984/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-22T17:56:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 983, "html_url": "https://github.com/python/mypy/issues/983", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/983", "id": 118275615, "events_url": "https://api.github.com/repos/python/mypy/issues/983/events", "updated_at": "2015-11-22T17:16:18Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/983/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support almost all Python 2 syntax", "assignee": null, "closed_at": "2015-11-22T17:16:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/983/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-22T17:15:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 982, "html_url": "https://github.com/python/mypy/issues/982", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/982", "id": 118240761, "events_url": "https://api.github.com/repos/python/mypy/issues/982/events", "updated_at": "2015-11-29T20:46:10Z", "body": "I have this code:\r\n```\r\nclass C(object):\r\n    def __new__(cls, foo=None):\r\n        obj = object.__new__(cls)\r\n        obj.foo = foo\r\n        return obj\r\n\r\nx = C(foo=12)\r\nprint(x.foo)\r\ny = C(12)\r\n```\r\nThis elicits an error complaining about the `foo` keyword to C, another about the `foo` attribute, and then one about the positional argument:\r\n```\r\nmypy_new.py:7: error: Unexpected keyword argument \"foo\" for \"C\"\r\nmypy_new.py:8: error: \"C\" has no attribute \"foo\"\r\nmypy_new.py:9: error: Too many arguments for \"C\"\r\n```\r\nThis may be related to #794 -- feel free to close as a dupe if fixing that would automatically fix this. (There seem to be two separate issues here -- it doesn't turn the `__new__` signature into the class signature, and it doesn't believe attributes set by `__new__` become attributes of the object.)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/982/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Args to __new__ not recognized", "assignee": null, "closed_at": "2015-11-29T20:46:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/982/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-11-22T05:14:24Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 981, "html_url": "https://github.com/python/mypy/issues/981", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/981", "id": 117692065, "events_url": "https://api.github.com/repos/python/mypy/issues/981/events", "updated_at": "2015-12-14T01:54:07Z", "body": "    mypy -c \"l = [(1, True), (3, False)] # type: List[int, bool] # whoops ... should be List[Tuple[int, bool]]\"\r\n\r\n    Traceback (most recent call last):\r\n    ....\r\n        cb = infer_constraints(mapped.args[i], instance.args[i],\r\n    IndexError: list index out of range", "labels_url": "https://api.github.com/repos/python/mypy/issues/981/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "incorrect use of List constructor causes internal error", "assignee": null, "closed_at": "2015-12-14T01:24:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/981/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-18T22:02:12Z", "user": {"followers_url": "https://api.github.com/users/bcdarwin/followers", "gists_url": "https://api.github.com/users/bcdarwin/gists{/gist_id}", "html_url": "https://github.com/bcdarwin", "following_url": "https://api.github.com/users/bcdarwin/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/164148?v=3", "url": "https://api.github.com/users/bcdarwin", "organizations_url": "https://api.github.com/users/bcdarwin/orgs", "starred_url": "https://api.github.com/users/bcdarwin/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bcdarwin/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bcdarwin/subscriptions", "login": "bcdarwin", "repos_url": "https://api.github.com/users/bcdarwin/repos", "received_events_url": "https://api.github.com/users/bcdarwin/received_events", "id": 164148, "site_admin": false}, "locked": false}, {"milestone": null, "number": 980, "html_url": "https://github.com/python/mypy/issues/980", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/980", "id": 117595924, "events_url": "https://api.github.com/repos/python/mypy/issues/980/events", "updated_at": "2015-11-18T18:21:54Z", "body": "I'm installing on Windows 7 64bit. Trying both \"python3 -m pip install mypy-lang\" and installing directly by running \"python setup.py install\" for both release versions of the project seem to work. \r\n\r\nHowever, once I'm sure all the paths are set up, running mypy any_file.py results in the following error:\r\n\r\nD:\\cake\\code\\python>mypy mypy_test.py\r\nTraceback (most recent call last):\r\n  File \"C:\\Python35\\Scripts\\mypy\", line 14, in <module>\r\n    from mypy import build\r\n  File \"C:\\Python35\\lib\\site-packages\\mypy\\build.py\", line 19, in <module>\r\n    from typing import Undefined, Dict, List, Tuple, cast, Set, Union\r\nImportError: cannot import name 'Undefined'\r\n\r\nAs such, I cannot properly use the project under Windows currently :(. Not sure if I'm missing any necessary steps here. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/980/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Installing On Windows - ImportError: cannot import name 'Undefined'", "assignee": null, "closed_at": "2015-11-18T16:29:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/980/comments", "labels": [], "created_at": "2015-11-18T14:16:43Z", "user": {"followers_url": "https://api.github.com/users/jakeonaut/followers", "gists_url": "https://api.github.com/users/jakeonaut/gists{/gist_id}", "html_url": "https://github.com/jakeonaut", "following_url": "https://api.github.com/users/jakeonaut/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1660559?v=3", "url": "https://api.github.com/users/jakeonaut", "organizations_url": "https://api.github.com/users/jakeonaut/orgs", "starred_url": "https://api.github.com/users/jakeonaut/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jakeonaut/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jakeonaut/subscriptions", "login": "jakeonaut", "repos_url": "https://api.github.com/users/jakeonaut/repos", "received_events_url": "https://api.github.com/users/jakeonaut/received_events", "id": 1660559, "site_admin": false}, "locked": false}, {"milestone": null, "number": 979, "html_url": "https://github.com/python/mypy/issues/979", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/979", "id": 117521645, "events_url": "https://api.github.com/repos/python/mypy/issues/979/events", "updated_at": "2015-12-14T01:37:52Z", "body": "I'm using the latest git version.\r\nI'm toying with mypy and a .py of my project. I get this stacktrace:\r\n\r\n    $ mypy --verbose  _pdftojson.py \r\n    Traceback (most recent call last):\r\n    File \"/usr/bin/mypy\", line 6, in <module>\r\n        main(__file__)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/main.py\", line 49, in main\r\n        type_check_only(sources, bin_dir, options)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/main.py\", line 92, in type_check_only\r\n        python_path=options.python_path)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/build.py\", line 196, in build\r\n        result = manager.process(initial_states)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/build.py\", line 378, in process\r\n        next.process()\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/build.py\", line 832, in process\r\n        self.type_checker().visit_file(self.tree, self.tree.path)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 371, in visit_file\r\n        self.accept(d)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n        typ = node.accept(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/nodes.py\", line 370, in accept\r\n        return visitor.visit_func_def(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 431, in visit_func_def\r\n        self.check_func_item(defn, name=defn.name())\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 464, in check_func_item\r\n        self.check_func_def(defn, typ, name)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 545, in check_func_def\r\n        self.accept_in_frame(item.body)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 391, in accept_in_frame\r\n        answer = self.accept(node, type_context)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n        typ = node.accept(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/nodes.py\", line 514, in accept\r\n        return visitor.visit_block(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 939, in visit_block\r\n        self.accept(s)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n        typ = node.accept(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/nodes.py\", line 602, in accept\r\n        return visitor.visit_for_stmt(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 1630, in visit_for_stmt\r\n        item_type = self.analyze_iterable_item_type(s.expr)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 1642, in analyze_iterable_item_type\r\n        iterable = self.accept(expr)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n        typ = node.accept(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/nodes.py\", line 974, in accept\r\n        return visitor.visit_call_expr(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 1741, in visit_call_expr\r\n        return self.expr_checker.visit_call_expr(e)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkexpr.py\", line 118, in visit_call_expr\r\n        return self.check_call_expr_with_callee_type(callee_type, e)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkexpr.py\", line 128, in check_call_expr_with_callee_type\r\n        e.arg_names, callable_node=e.callee)[0]\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkexpr.py\", line 189, in check_call\r\n        arg_types = self.infer_arg_types_in_context(None, args)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkexpr.py\", line 236, in infer_arg_types_in_context\r\n        arg_type = self.accept(arg, ctx)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkexpr.py\", line 1320, in accept\r\n        return self.chk.accept(node, context)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 378, in accept\r\n        typ = node.accept(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/nodes.py\", line 930, in accept\r\n        return visitor.visit_member_expr(self)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checker.py\", line 1767, in visit_member_expr\r\n        return self.expr_checker.visit_member_expr(e)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkexpr.py\", line 680, in visit_member_expr\r\n        result = self.analyze_ordinary_member_access(e, False)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkexpr.py\", line 693, in analyze_ordinary_member_access\r\n        self.named_type, self.msg)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkmember.py\", line 84, in analyze_member_access\r\n        result = analyze_class_attribute_access(itype, name, node, is_lvalue, builtin_type, msg)\r\n    File \"/usr/lib64/python3.5/site-packages/mypy/checkmember.py\", line 212, in analyze_class_attribute_access\r\n        node = itype.type.get(name)\r\n    AttributeError: 'TupleType' object has no attribute 'type'\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/979/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "AttributeError: 'TupleType' object has no attribute 'type'", "assignee": null, "closed_at": "2015-12-14T01:36:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/979/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-18T06:26:12Z", "user": {"followers_url": "https://api.github.com/users/ZeeD/followers", "gists_url": "https://api.github.com/users/ZeeD/gists{/gist_id}", "html_url": "https://github.com/ZeeD", "following_url": "https://api.github.com/users/ZeeD/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/69095?v=3", "url": "https://api.github.com/users/ZeeD", "organizations_url": "https://api.github.com/users/ZeeD/orgs", "starred_url": "https://api.github.com/users/ZeeD/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ZeeD/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ZeeD/subscriptions", "login": "ZeeD", "repos_url": "https://api.github.com/users/ZeeD/repos", "received_events_url": "https://api.github.com/users/ZeeD/received_events", "id": 69095, "site_admin": false}, "locked": false}, {"milestone": null, "number": 978, "html_url": "https://github.com/python/mypy/issues/978", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/978", "id": 117465049, "events_url": "https://api.github.com/repos/python/mypy/issues/978/events", "updated_at": "2016-02-24T22:24:31Z", "body": "I have a function as follows:\r\n\r\n    import numpy as np\r\n    \r\n    file = str\r\n    \r\n    def process_file(my_path: file) -> (List[np.ndarray]):\r\n        return(['bad return'])\r\n\r\nIt appears that 'np.ndarray' is being interpreted as 'Any'. Why is that? The type is failing silently.\r\n\r\nThanks,\r\nTyler", "labels_url": "https://api.github.com/repos/python/mypy/issues/978/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Silent type failure", "assignee": null, "closed_at": "2016-02-24T22:24:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/978/comments", "labels": [], "created_at": "2015-11-17T22:21:38Z", "user": {"followers_url": "https://api.github.com/users/tbenst/followers", "gists_url": "https://api.github.com/users/tbenst/gists{/gist_id}", "html_url": "https://github.com/tbenst", "following_url": "https://api.github.com/users/tbenst/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/863327?v=3", "url": "https://api.github.com/users/tbenst", "organizations_url": "https://api.github.com/users/tbenst/orgs", "starred_url": "https://api.github.com/users/tbenst/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/tbenst/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/tbenst/subscriptions", "login": "tbenst", "repos_url": "https://api.github.com/users/tbenst/repos", "received_events_url": "https://api.github.com/users/tbenst/received_events", "id": 863327, "site_admin": false}, "locked": false}, {"milestone": null, "number": 977, "html_url": "https://github.com/python/mypy/issues/977", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/977", "id": 116657461, "events_url": "https://api.github.com/repos/python/mypy/issues/977/events", "updated_at": "2015-11-12T23:38:08Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/977/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "For Python 2, how do I annotate a function as taking # type: (*args,**kw) -> Any?", "assignee": null, "closed_at": "2015-11-12T23:37:48Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/977/comments", "labels": [], "created_at": "2015-11-12T22:36:49Z", "user": {"followers_url": "https://api.github.com/users/yang/followers", "gists_url": "https://api.github.com/users/yang/gists{/gist_id}", "html_url": "https://github.com/yang", "following_url": "https://api.github.com/users/yang/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/7129?v=3", "url": "https://api.github.com/users/yang", "organizations_url": "https://api.github.com/users/yang/orgs", "starred_url": "https://api.github.com/users/yang/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yang/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yang/subscriptions", "login": "yang", "repos_url": "https://api.github.com/users/yang/repos", "received_events_url": "https://api.github.com/users/yang/received_events", "id": 7129, "site_admin": false}, "locked": false}, {"milestone": null, "number": 976, "html_url": "https://github.com/python/mypy/issues/976", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/976", "id": 116280660, "events_url": "https://api.github.com/repos/python/mypy/issues/976/events", "updated_at": "2016-03-10T17:05:28Z", "body": "I believe there is no way to specify recursive/forward cross-module type references, but wanted to confirm.  (edit: I realize this is a type hints spec question, not nec. a mypy one, though presently I just care about getting things to work in mypy)\r\n\r\nI found a nasty approach that works with respect to typing.get_type_hints(), since it just appears to straight-up eval the string annotation, but I doubt this is the intention or anything meant to be supported by static type checkers:\r\n\r\n```\r\ndef f(x: 'importlib.import_module(\"mymodule\").MyType'): ...\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/976/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Recursive/forward cross-module type references", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/976/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2015-11-11T07:20:05Z", "user": {"followers_url": "https://api.github.com/users/yang/followers", "gists_url": "https://api.github.com/users/yang/gists{/gist_id}", "html_url": "https://github.com/yang", "following_url": "https://api.github.com/users/yang/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/7129?v=3", "url": "https://api.github.com/users/yang", "organizations_url": "https://api.github.com/users/yang/orgs", "starred_url": "https://api.github.com/users/yang/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yang/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yang/subscriptions", "login": "yang", "repos_url": "https://api.github.com/users/yang/repos", "received_events_url": "https://api.github.com/users/yang/received_events", "id": 7129, "site_admin": false}, "locked": false}, {"milestone": null, "number": 975, "html_url": "https://github.com/python/mypy/issues/975", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/975", "id": 115977070, "events_url": "https://api.github.com/repos/python/mypy/issues/975/events", "updated_at": "2015-12-31T00:32:59Z", "body": "I just installed mypy via `pip install mypy-lang` and when I try to use it the following error message occurs:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 14, in <module>\r\n    from mypy import build\r\n  File \"/usr/local/lib/python3.5/site-packages/mypy/build.py\", line 19, in <module>\r\n    from typing import Undefined, Dict, List, Tuple, cast, Set, Union\r\nImportError: cannot import name 'Undefined'\r\n```\r\nThe shebang of `/usr/local/bin/mypy` is `#!/usr/local/opt/python3/bin/python3.5`.\r\n\r\nI have Python 3.5 installed via Homebrew and I'm running OS X 10.11.1.\r\n\r\nPlease let me know if you need any further information.", "labels_url": "https://api.github.com/repos/python/mypy/issues/975/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "ImportError: cannot import name 'Undefined'", "assignee": null, "closed_at": "2015-11-09T22:04:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/975/comments", "labels": [], "created_at": "2015-11-09T22:00:34Z", "user": {"followers_url": "https://api.github.com/users/halbtuerke/followers", "gists_url": "https://api.github.com/users/halbtuerke/gists{/gist_id}", "html_url": "https://github.com/halbtuerke", "following_url": "https://api.github.com/users/halbtuerke/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/160?v=3", "url": "https://api.github.com/users/halbtuerke", "organizations_url": "https://api.github.com/users/halbtuerke/orgs", "starred_url": "https://api.github.com/users/halbtuerke/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/halbtuerke/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/halbtuerke/subscriptions", "login": "halbtuerke", "repos_url": "https://api.github.com/users/halbtuerke/repos", "received_events_url": "https://api.github.com/users/halbtuerke/received_events", "id": 160, "site_admin": false}, "locked": false}, {"milestone": null, "number": 974, "html_url": "https://github.com/python/mypy/issues/974", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/974", "id": 115759025, "events_url": "https://api.github.com/repos/python/mypy/issues/974/events", "updated_at": "2015-11-15T19:42:06Z", "body": "Not sure how to describe this with words so apologies if this has already been noted.\r\n\r\nmypy has no problem checking `a = b = 1` or `a, b = 1, 2`, but chokes on\r\n\r\n    c = a, b = 1, 2\r\n\r\nwith `KeyError: <mypy.nodes.TupleExpr object at 0x1017950b8>`. Full traceback is [here](https://gist.github.com/d10genes/4427eb29e68521a9b078).", "labels_url": "https://api.github.com/repos/python/mypy/issues/974/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "error with double tuple assignment", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/974/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-08T20:48:39Z", "user": {"followers_url": "https://api.github.com/users/d10genes/followers", "gists_url": "https://api.github.com/users/d10genes/gists{/gist_id}", "html_url": "https://github.com/d10genes", "following_url": "https://api.github.com/users/d10genes/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/379413?v=3", "url": "https://api.github.com/users/d10genes", "organizations_url": "https://api.github.com/users/d10genes/orgs", "starred_url": "https://api.github.com/users/d10genes/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/d10genes/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/d10genes/subscriptions", "login": "d10genes", "repos_url": "https://api.github.com/users/d10genes/repos", "received_events_url": "https://api.github.com/users/d10genes/received_events", "id": 379413, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 973, "html_url": "https://github.com/python/mypy/issues/973", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/973", "id": 115685392, "events_url": "https://api.github.com/repos/python/mypy/issues/973/events", "updated_at": "2016-03-02T01:55:10Z", "body": "Only the first parse error is generally meaningful, the rest is noise.", "labels_url": "https://api.github.com/repos/python/mypy/issues/973/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Only report a single parse error per file", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/973/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-07T18:56:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 972, "html_url": "https://github.com/python/mypy/issues/972", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/972", "id": 115678960, "events_url": "https://api.github.com/repos/python/mypy/issues/972/events", "updated_at": "2015-11-07T17:28:15Z", "body": "We'll want to reserve `-p` for selecting the target Python interpreter.", "labels_url": "https://api.github.com/repos/python/mypy/issues/972/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename mypy -p option to --package", "assignee": null, "closed_at": "2015-11-07T17:28:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/972/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-07T17:27:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 971, "html_url": "https://github.com/python/mypy/issues/971", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/971", "id": 115581463, "events_url": "https://api.github.com/repos/python/mypy/issues/971/events", "updated_at": "2016-01-31T02:08:56Z", "body": "I am just starting to use mypy and PEP484 type hints since I was tired of not having types to reason about/auto check. I am wondering what do common users have in their day to day use that makes it easier.\r\n\r\nThe docs point primarily to `mypy filename.py`.\r\n1. Is there a way to auto run it on detecting file change?\r\n2. ~~Is there a way to run it on a module or specify something like `mypy packagename/*.py` to run on everything (I know this could be done with a bash script, but builtin would be nice).~~ (found `-m`, but it doesn't seem to be returning any errors at all)\r\n3. I get some pretty common errors about mypy throwing a `No module named 'modulename'` which are pip packages I have installed like numpy, sklearn, etc. How can you fix this?\r\n4. It seems like mypy treats `np.array` as `Any`, is there a good workaround for this, or is it a bug?\r\n5. Any general tips/tricks?\r\n\r\nFor some of these things, I would be willing to contribute a patch if it doesn't exist already.", "labels_url": "https://api.github.com/repos/python/mypy/issues/971/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Question: Mypy day to day tips/tricks", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/971/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2015-11-06T20:30:28Z", "user": {"followers_url": "https://api.github.com/users/EntilZha/followers", "gists_url": "https://api.github.com/users/EntilZha/gists{/gist_id}", "html_url": "https://github.com/EntilZha", "following_url": "https://api.github.com/users/EntilZha/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1382460?v=3", "url": "https://api.github.com/users/EntilZha", "organizations_url": "https://api.github.com/users/EntilZha/orgs", "starred_url": "https://api.github.com/users/EntilZha/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/EntilZha/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/EntilZha/subscriptions", "login": "EntilZha", "repos_url": "https://api.github.com/users/EntilZha/repos", "received_events_url": "https://api.github.com/users/EntilZha/received_events", "id": 1382460, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 970, "html_url": "https://github.com/python/mypy/issues/970", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/970", "id": 115496064, "events_url": "https://api.github.com/repos/python/mypy/issues/970/events", "updated_at": "2016-04-08T16:43:23Z", "body": "Repro setup:\r\n\r\n    \u279c  mypy git:(master) \u2717 tree relative_root some_other_root\r\n    relative_root \r\n    \u251c\u2500\u2500 __init__.py\r\n    \u2514\u2500\u2500 inner.py\r\n    some_other_root\r\n    \u251c\u2500\u2500 __init__.py\r\n    \u251c\u2500\u2500 some_module.py\r\n    \u279c  mypy git:(master) \u2717 cat relative_root/__init__.py\r\n    from .inner import Inner\r\n    \u279c  mypy git:(master) \u2717 cat relative_root/inner.py\r\n    class Inner: pass\r\n    \u279c  mypy git:(master) \u2717 cat some_other_root/__init__.py\r\n    #\r\n    \u279c  mypy git:(master) \u2717 cat some_other_root/some_module.py\r\n    from relative_root import Inner\r\n\r\nAnd the error:\r\n\r\n    \u279c  mypy git:(master) \u2717 mypy --use-python-path -m some_other_root.some_module\r\n    some_other_root/some_module.py:1: note: In module imported here:\r\n    relative_root/__init__.py:1: error: Name 'Inner' already defined", "labels_url": "https://api.github.com/repos/python/mypy/issues/970/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Issue with importing from relative imports (Name <ClassName> already defined)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/970/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-11-06T12:29:17Z", "user": {"followers_url": "https://api.github.com/users/darjus/followers", "gists_url": "https://api.github.com/users/darjus/gists{/gist_id}", "html_url": "https://github.com/darjus", "following_url": "https://api.github.com/users/darjus/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/177063?v=3", "url": "https://api.github.com/users/darjus", "organizations_url": "https://api.github.com/users/darjus/orgs", "starred_url": "https://api.github.com/users/darjus/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/darjus/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/darjus/subscriptions", "login": "darjus", "repos_url": "https://api.github.com/users/darjus/repos", "received_events_url": "https://api.github.com/users/darjus/received_events", "id": 177063, "site_admin": false}, "locked": false}, {"milestone": null, "number": 969, "html_url": "https://github.com/python/mypy/issues/969", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/969", "id": 114527722, "events_url": "https://api.github.com/repos/python/mypy/issues/969/events", "updated_at": "2015-11-22T17:18:47Z", "body": "As continuation of #966, mypy should continue processing additional modules even if there is a parse error in one module. Currently mypy stops at a parse error.\r\n\r\nAny module that can't be parsed should be considered to be the equivalent of having type `Any` elsewhere in the program.", "labels_url": "https://api.github.com/repos/python/mypy/issues/969/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Continue analysis after parse errors", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/969/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-11-02T05:29:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 968, "html_url": "https://github.com/python/mypy/pull/968", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/968", "id": 114505945, "events_url": "https://api.github.com/repos/python/mypy/issues/968/events", "updated_at": "2015-11-02T04:40:22Z", "body": "This pull request is related to #653, it is the fix for [windows platform](https://github.com/JukkaL/mypy/issues/653#issuecomment-148637458).\r\n\r\nI confirmed it works fine on the below environments.\r\n\r\n* Windows 8.1\r\n* Python 3.5/3.4\r\n* virtualenv/anaconda\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/968/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fix base dir for win32", "assignee": null, "closed_at": "2015-11-02T01:18:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/968/comments", "labels": [], "created_at": "2015-11-02T01:01:32Z", "user": {"followers_url": "https://api.github.com/users/icoxfog417/followers", "gists_url": "https://api.github.com/users/icoxfog417/gists{/gist_id}", "html_url": "https://github.com/icoxfog417", "following_url": "https://api.github.com/users/icoxfog417/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/544269?v=3", "url": "https://api.github.com/users/icoxfog417", "organizations_url": "https://api.github.com/users/icoxfog417/orgs", "starred_url": "https://api.github.com/users/icoxfog417/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/icoxfog417/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/icoxfog417/subscriptions", "login": "icoxfog417", "repos_url": "https://api.github.com/users/icoxfog417/repos", "received_events_url": "https://api.github.com/users/icoxfog417/received_events", "id": 544269, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/968.patch", "html_url": "https://github.com/python/mypy/pull/968", "diff_url": "https://github.com/python/mypy/pull/968.diff", "url": "https://api.github.com/repos/python/mypy/pulls/968"}, "locked": false}, {"milestone": null, "number": 967, "html_url": "https://github.com/python/mypy/issues/967", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/967", "id": 114417576, "events_url": "https://api.github.com/repos/python/mypy/issues/967/events", "updated_at": "2015-11-30T21:37:08Z", "body": "When trying to run `mypy -m module` inside of a venv I'm getting this error:\r\n\r\n```\r\nmodule/__init__.py, line 1: Could not find builtins\r\n```\r\n\r\nThe module's definition is:\r\n\r\n```\r\n# Preamble Comment\r\n```\r\n\r\nThe venv has a python version of 3.4.3.", "labels_url": "https://api.github.com/repos/python/mypy/issues/967/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "line 1: Could not find builtins\u2014running in venv", "assignee": null, "closed_at": "2015-11-30T21:37:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/967/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-31T15:41:38Z", "user": {"followers_url": "https://api.github.com/users/alunduil/followers", "gists_url": "https://api.github.com/users/alunduil/gists{/gist_id}", "html_url": "https://github.com/alunduil", "following_url": "https://api.github.com/users/alunduil/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/169249?v=3", "url": "https://api.github.com/users/alunduil", "organizations_url": "https://api.github.com/users/alunduil/orgs", "starred_url": "https://api.github.com/users/alunduil/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/alunduil/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/alunduil/subscriptions", "login": "alunduil", "repos_url": "https://api.github.com/users/alunduil/repos", "received_events_url": "https://api.github.com/users/alunduil/received_events", "id": 169249, "site_admin": false}, "locked": false}, {"milestone": null, "number": 966, "html_url": "https://github.com/python/mypy/issues/966", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/966", "id": 113252441, "events_url": "https://api.github.com/repos/python/mypy/issues/966/events", "updated_at": "2015-11-02T05:30:37Z", "body": "Mypy often gives up if there are errors in a file and doesn't continue processing additional files. In many cases it would be more useful if mypy would try to process as many files in the program as possible, even if this would generate a lot of errors.\r\n\r\nRationale (much of this is based on discussion with @gnprice):\r\n\r\n* When starting work on an existing large codebase, currently it's a lot of work to get mypy to analyze (or even parse) the entire codebase, instead of just going through a few files and giving up.\r\n* By generating errors for all files, it would be easier to see which errors are common and repeated across multiple files, and thus should be tackled first.\r\n* Fixing many errors across many files would be easier and faster. Fewer iterations would be needed to fix errors, as a single iteration would expose more errors.\r\n* Continuous integration (CI) builds would be more useful. It's usually slower to iterate on CI builds than when working on the command line, and generating a more comprehensive error report would reduce the number of iterations needed.", "labels_url": "https://api.github.com/repos/python/mypy/issues/966/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Continuing analysis even after errors", "assignee": null, "closed_at": "2015-11-02T05:24:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/966/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-10-25T21:10:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 965, "html_url": "https://github.com/python/mypy/issues/965", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/965", "id": 113251942, "events_url": "https://api.github.com/repos/python/mypy/issues/965/events", "updated_at": "2016-03-02T01:55:10Z", "body": "Add a `-p <path-to-python>` option to stubgen that will replace the `--py2` option. Mypy would use this interpreter for these things:\r\n\r\n* Determining Python version (2 or 3).\r\n* Determining Python module search path.\r\n* Runtime introspection (esp. for generating stubs for C modules).\r\n\r\nAs pointed out by @gnprice, the current behavior of using the current Python interpreter doesn't make sense when using a virtualenv, as the virtualenv would have mypy dependencies instead of the (third party) modules targeted by stubgen. This would also allow using an arbitrary Python 2 virtualenv.\r\n\r\nWe may also need a way of specifying PYTHONPATH for the target interpreter separately from the PYTHONPATH used to run mypy.", "labels_url": "https://api.github.com/repos/python/mypy/issues/965/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Specifying which Python interpreter mypy and stubgen should use", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/965/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-25T21:02:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 964, "html_url": "https://github.com/python/mypy/issues/964", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/964", "id": 113251305, "events_url": "https://api.github.com/repos/python/mypy/issues/964/events", "updated_at": "2016-04-14T14:57:34Z", "body": "A `# type: ignore` at the top level of the module should ignore errors in the entire file. \r\n\r\nExample:\r\n\r\n```\r\n# type: ignore\r\n\r\n1 + 'x'   # no error reported!\r\n```\r\n\r\nWe should still try to semantically analyze the file for some level of checking for code that uses the module, such as function argument count checking. It's not obvious whether this is always desirable, as the semantic analyzer might miss some definitions and cause false positives elsewhere.\r\n\r\nAll type annotations in the file should be ignored and not even parsed for PEP 484 conformance.\r\n\r\nLet's require the comment to be at the beginning of a file, before the first non string literal token (before or after the docstring).\r\n\r\nIf we can't fully parse the file (but can analyze it enough to detect the `# type: ignore` comment) we shouldn't generate an error but basically implicitly act as if there was `# type: ignore` everywhere where the module is imported, and treat the module as unknown/missing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/964/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ignoring an entire file", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/964/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-10-25T20:49:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 963, "html_url": "https://github.com/python/mypy/issues/963", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/963", "id": 112899636, "events_url": "https://api.github.com/repos/python/mypy/issues/963/events", "updated_at": "2015-10-30T04:00:59Z", "body": "```python\r\nfrom typing import AnyStr\r\n\r\ndef f(x: AnyStr, y: AnyStr) -> AnyStr:\r\n    print(x + y)\r\n\r\nf('one', b'two')\r\n```\r\n\r\nThis correctly fails to typecheck because the second arg is bytes, but the error message is hard to follow:\r\n\r\n    test.py:6: error: Type argument 1 of \"f\" has incompatible value \"object\"", "labels_url": "https://api.github.com/repos/python/mypy/issues/963/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "confusing error message when using AnyStr", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/963/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-22T21:54:31Z", "user": {"followers_url": "https://api.github.com/users/oconnor663/followers", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "html_url": "https://github.com/oconnor663", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/860932?v=3", "url": "https://api.github.com/users/oconnor663", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "login": "oconnor663", "repos_url": "https://api.github.com/users/oconnor663/repos", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "id": 860932, "site_admin": false}, "locked": false}, {"milestone": null, "number": 962, "html_url": "https://github.com/python/mypy/issues/962", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/962", "id": 112725872, "events_url": "https://api.github.com/repos/python/mypy/issues/962/events", "updated_at": "2015-10-30T03:50:20Z", "body": "We should have both errors (for things that clearly violate the type system) and warnings (for style issues and things that are suspicious but not necessarily problems). There should be a command line option for enabling/disabling warnings. Not sure whether warnings should be on by default -- probably yes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/962/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support both warnings and errors", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/962/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-22T03:47:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 961, "html_url": "https://github.com/python/mypy/issues/961", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/961", "id": 112517047, "events_url": "https://api.github.com/repos/python/mypy/issues/961/events", "updated_at": "2015-11-02T03:52:05Z", "body": "In `mypy/waiter.py` we wait until a task ends before reading stdout and stderr, which are pointing to a pipe. However, if a test generates a lot of output writing to the pipe will hang, as it can only buffer a fixed amount of data (http://unix.stackexchange.com/questions/11946/how-big-is-the-pipe-buffer). \r\n\r\nThere are a number of things we can do to fix this, such as:\r\n\r\n1. Have a thread that continually reads from the pipe and adds any written data to an explicit internal buffer.\r\n2. Redirect output to a file and read it from the file after task exit. This is probably cleaner than the above and easier to implement.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/961/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Test runner can hang if there is a lot of output", "assignee": null, "closed_at": "2015-11-02T03:52:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/961/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-10-21T05:42:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 960, "html_url": "https://github.com/python/mypy/pull/960", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/960", "id": 112428273, "events_url": "https://api.github.com/repos/python/mypy/issues/960/events", "updated_at": "2015-10-21T05:32:40Z", "body": "Don't crash when git isn't installed.\r\n\r\nFixes https://github.com/JukkaL/mypy/issues/959", "labels_url": "https://api.github.com/repos/python/mypy/issues/960/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "bug fix: don't crash when git isn't installed", "assignee": null, "closed_at": "2015-10-21T05:10:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/960/comments", "labels": [], "created_at": "2015-10-20T18:19:14Z", "user": {"followers_url": "https://api.github.com/users/matthiaskramm/followers", "gists_url": "https://api.github.com/users/matthiaskramm/gists{/gist_id}", "html_url": "https://github.com/matthiaskramm", "following_url": "https://api.github.com/users/matthiaskramm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/306087?v=3", "url": "https://api.github.com/users/matthiaskramm", "organizations_url": "https://api.github.com/users/matthiaskramm/orgs", "starred_url": "https://api.github.com/users/matthiaskramm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/matthiaskramm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/matthiaskramm/subscriptions", "login": "matthiaskramm", "repos_url": "https://api.github.com/users/matthiaskramm/repos", "received_events_url": "https://api.github.com/users/matthiaskramm/received_events", "id": 306087, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/960.patch", "html_url": "https://github.com/python/mypy/pull/960", "diff_url": "https://github.com/python/mypy/pull/960.diff", "url": "https://api.github.com/repos/python/mypy/pulls/960"}, "locked": false}, {"milestone": null, "number": 959, "html_url": "https://github.com/python/mypy/issues/959", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/959", "id": 112307215, "events_url": "https://api.github.com/repos/python/mypy/issues/959/events", "updated_at": "2015-10-29T12:59:55Z", "body": "I clone the mypy master to my local git repository and then commit a zip of it a my \"stable\" version.\r\n\r\nThen I install mypy into a virtualenv to run my tests using that mypy version's `setup.py`. This is also run on a CI build agent which has a minimum amount of packages installed.\r\n\r\nSince last week however setup.py seems to require git to install:\r\n```Python\r\n[09:49:10][Step 4/4] Traceback (most recent call last):\r\n[09:49:10][Step 4/4]   File \"setup.py\", line 16, in <module>\r\n[09:49:10][Step 4/4]     git.verify_git_integrity_or_abort(\".\")\r\n[09:49:10][Step 4/4]   File \"/mypy/mypy/git.py\", line 120, in verify_git_integrity_or_abort\r\n[09:49:10][Step 4/4]     if not have_git():\r\n[09:49:10][Step 4/4]   File \"/mypy/mypy/git.py\", line 18, in have_git\r\n[09:49:10][Step 4/4]     subprocess.check_output([\"git\", \"--help\"])\r\n[09:49:10][Step 4/4]   File \"/usr/lib/python3.4/subprocess.py\", line 603, in check_output\r\n[09:49:10][Step 4/4]     with Popen(*popenargs, stdout=PIPE, **kwargs) as process:\r\n[09:49:10][Step 4/4]   File \"/usr/lib/python3.4/subprocess.py\", line 848, in __init__\r\n[09:49:10][Step 4/4]     restore_signals, start_new_session)\r\n[09:49:10][Step 4/4]   File \"/usr/lib/python3.4/subprocess.py\", line 1446, in _execute_child\r\n[09:49:10][Step 4/4]     raise child_exception_type(errno_num, err_msg)\r\n[09:49:10][Step 4/4] FileNotFoundError: [Errno 2] No such file or directory: 'git'\r\n```\r\n\r\nShould git really be a requirement to install mypy?", "labels_url": "https://api.github.com/repos/python/mypy/issues/959/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "setup.py fails if git is not installed", "assignee": null, "closed_at": "2015-10-21T05:10:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/959/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-20T07:52:16Z", "user": {"followers_url": "https://api.github.com/users/thomascellerier/followers", "gists_url": "https://api.github.com/users/thomascellerier/gists{/gist_id}", "html_url": "https://github.com/thomascellerier", "following_url": "https://api.github.com/users/thomascellerier/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1765766?v=3", "url": "https://api.github.com/users/thomascellerier", "organizations_url": "https://api.github.com/users/thomascellerier/orgs", "starred_url": "https://api.github.com/users/thomascellerier/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/thomascellerier/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/thomascellerier/subscriptions", "login": "thomascellerier", "repos_url": "https://api.github.com/users/thomascellerier/repos", "received_events_url": "https://api.github.com/users/thomascellerier/received_events", "id": 1765766, "site_admin": false}, "locked": false}, {"milestone": null, "number": 958, "html_url": "https://github.com/python/mypy/issues/958", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/958", "id": 112274999, "events_url": "https://api.github.com/repos/python/mypy/issues/958/events", "updated_at": "2015-10-22T03:47:36Z", "body": "If we visit `cast(x, T)` and the inferred type of `x` is a subtype of `T` then we should emit a warning. Unnecessary casts are bad casts.\r\n\r\nThere should also be a way to make this an error instead of a warning (for example, so we can enforce that we don't have any unnecessary casts in the mypy codebase).", "labels_url": "https://api.github.com/repos/python/mypy/issues/958/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generate warnings for redundant casts", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/958/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-20T02:48:17Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 957, "html_url": "https://github.com/python/mypy/pull/957", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/957", "id": 112072099, "events_url": "https://api.github.com/repos/python/mypy/issues/957/events", "updated_at": "2015-10-21T05:27:55Z", "body": "I really don't know why I wrote that line in the first place, but it\r\nseems completely wrong.  Removing it fixes bug #956.\r\n\r\nThis caused a test to fail.  The isinstance logic makes mypy skip\r\ntypechecking of dead code.  This change makes this more consistent,\r\ncausing the following to not be an error:\r\n\r\ndef foo() -> int:\r\n    return foo()\r\n    return 'a'\r\n\r\nI changed the test to avoid this case.  We should probably decide what\r\nwe actually want to do about dead code and make appropriate tests.", "labels_url": "https://api.github.com/repos/python/mypy/issues/957/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't set breaking_out to False after visiting call expression.", "assignee": null, "closed_at": "2015-10-21T05:27:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/957/comments", "labels": [], "created_at": "2015-10-19T05:02:27Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/957.patch", "html_url": "https://github.com/python/mypy/pull/957", "diff_url": "https://github.com/python/mypy/pull/957.diff", "url": "https://api.github.com/repos/python/mypy/pulls/957"}, "locked": false}, {"milestone": null, "number": 956, "html_url": "https://github.com/python/mypy/issues/956", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/956", "id": 112051244, "events_url": "https://api.github.com/repos/python/mypy/issues/956/events", "updated_at": "2015-10-21T05:28:28Z", "body": "Mypy complains about this:\r\n\r\n```\r\nfrom typing import Union\r\n\r\ndef f(x: Union[int, str]) -> None:\r\n    if not isinstance(x, int):\r\n        raise RuntimeError()\r\n    print(x + 1)  # Can't add Union[int, str] and int\r\n```\r\n\r\nHowever, this works:\r\n\r\n```\r\nfrom typing import Union\r\n\r\ndef f(x: Union[int, str]) -> None:\r\n    if not isinstance(x, int):\r\n        raise RuntimeError   # Only difference!\r\n    print(x + 1)  # Now okay!\r\n```\r\n\r\nPerhaps the slightly different `raise` statement causes a difference in type inference, or maybe this is something more complex?\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/956/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy does not recognize that raise exits from function", "assignee": null, "closed_at": "2015-10-21T05:28:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/956/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-18T23:57:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 955, "html_url": "https://github.com/python/mypy/issues/955", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/955", "id": 112051057, "events_url": "https://api.github.com/repos/python/mypy/issues/955/events", "updated_at": "2015-10-20T02:50:17Z", "body": "This is not a priority, but because of better `isinstance` type inference the mypy implementation now has a lot of redundant casts. Remove those that aren't needed and consider filing issues for remaining casts that we wouldn't need if mypy was more clever.", "labels_url": "https://api.github.com/repos/python/mypy/issues/955/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor unnecessary casts away from mypy", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/955/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2015-10-18T23:51:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 954, "html_url": "https://github.com/python/mypy/issues/954", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/954", "id": 112043042, "events_url": "https://api.github.com/repos/python/mypy/issues/954/events", "updated_at": "2016-03-02T01:55:10Z", "body": "Add a test case that runs `setup.py install` (in a virtualenv) and type checks a dummy program using an installed mypy.\r\n\r\nWe shouldn't modify `.travis.yml`. This should run using `runtests.py`. Create a virtualenv within the test case and clean it up afterwards.\r\n\r\nInstallation got broken a while ago so this would have actually prevented a breakage.", "labels_url": "https://api.github.com/repos/python/mypy/issues/954/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add test case for installing mypy using setup.py", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/954/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-18T21:39:40Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 953, "html_url": "https://github.com/python/mypy/issues/953", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/953", "id": 112040794, "events_url": "https://api.github.com/repos/python/mypy/issues/953/events", "updated_at": "2015-10-18T20:56:15Z", "body": "The stub generator is pretty useful, but it's undocumented and a little rough around the edges. \r\n\r\nSome possible things to do:\r\n\r\n* Add script such as `mypy-stubgen` that is installed automatically and has help etc.\r\n* Document the stub generator.\r\n* Maybe even give a pointer to the stub generator when mypy can't find a module (#952).\r\n* Do more testing and polishing.\r\n* Add support for generating stubs for Python 2 C extension modules.\r\n\r\nWe should create separate issues at least for the bigger tasks here.\r\n\r\nThe stub generator can be currently run as `python3 -m mypy.stubgen`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/953/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make the stub generator official", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/953/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-18T20:56:15Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 952, "html_url": "https://github.com/python/mypy/issues/952", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/952", "id": 112040520, "events_url": "https://api.github.com/repos/python/mypy/issues/952/events", "updated_at": "2015-11-23T00:19:45Z", "body": "If mypy can't find a stub or implementation for a module, it says `No module named 'x'`. This can be pretty confusing for first-time users. Instead, we should say something like `No implementation or stub file found for module 'x'`.\r\n\r\nOptionally, give a hint about `MYPYPATH` and the stub generator as well.", "labels_url": "https://api.github.com/repos/python/mypy/issues/952/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Better message when we can't find a module", "assignee": null, "closed_at": "2015-11-23T00:17:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/952/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-10-18T20:50:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 951, "html_url": "https://github.com/python/mypy/issues/951", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/951", "id": 112034135, "events_url": "https://api.github.com/repos/python/mypy/issues/951/events", "updated_at": "2015-10-18T19:50:38Z", "body": "`runtests.py` should display the number of tests cases run. Rationale:\r\n\r\n* This used to (mostly) work before the switch to `runtests.py`.\r\n* If you use test case filtering, you get an indication of whether your filter hit anything.\r\n* This provides an extra incentive to add tests, as the effects will be visible in the test count.\r\n* If some change accidentally disables a large number test cases, this will be obvious.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/951/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Show the total number of test cases run", "assignee": null, "closed_at": "2015-10-18T19:50:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/951/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-10-18T18:38:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 950, "html_url": "https://github.com/python/mypy/issues/950", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/950", "id": 111988680, "events_url": "https://api.github.com/repos/python/mypy/issues/950/events", "updated_at": "2015-10-21T04:59:41Z", "body": "The git history in the mypy repo looks pretty convoluted. If we'd use rebase more instead of merging, it would be more linear. Here's some discussion:\r\n\r\nhttp://randyfay.com/content/rebase-workflow-git\r\n\r\nI'd try to rebase each PR before merging. If that results in conflicts, I'd ask the author of the PR to rebase their pull request. We can make some exceptions, but this would be the ideal.\r\n\r\nAny thoughts?", "labels_url": "https://api.github.com/repos/python/mypy/issues/950/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rebase PRs before (or instead of) merging", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/950/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-17T22:38:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 949, "html_url": "https://github.com/python/mypy/issues/949", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/949", "id": 111987605, "events_url": "https://api.github.com/repos/python/mypy/issues/949/events", "updated_at": "2015-10-19T03:09:20Z", "body": "For example\r\n```\r\nclass A(Generic[T]):\r\n   pass\r\n\r\nclass B(Generic[T], A[T]):\r\n   pass\r\n\r\ndef f(x: A[T]):\r\n    if isinstance(x, B[T]):\r\n        ...\r\n```\r\nis apparently illegal and I'm not sure what replacement I'm supposed to use. It tells me to use a `# type` comment which isn't really applicable here.\r\n\r\nRemoving the `[T]` causes mypy to be unable to infer that `x` is in fact a `B[T]`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/949/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unable to use `isinstance` with generic type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/949/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-17T22:10:25Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 948, "html_url": "https://github.com/python/mypy/issues/948", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/948", "id": 111983708, "events_url": "https://api.github.com/repos/python/mypy/issues/948/events", "updated_at": "2015-10-17T20:42:25Z", "body": "Mypy should complain about code that isn't using string literal escaped when they are required:\r\n\r\n```\r\nclass A:\r\n    def (self) -> A: ...   # Should be an error; string literal escape required\r\n```\r\n\r\nInitially we could only detect these cases within a single module. A more general solution would also detect string literal types needed due to cyclic imports.\r\n\r\nA simple implementation idea:\r\n\r\n* Tag each instance type with information on whether the type is quoted or not.\r\n* During semantic analysis, if a type is unquoted but the definition line for the type/class is in the current file but at a later line number, complain. \r\n* The definition line for a class is actually the line after the end of the class definition. Alternatively, treat  classes that are currently being analyzed specially.\r\n\r\nWe also need deal with type aliases, but this isn't needed for the first iteration.\r\n\r\nI think that somebody started working on this a while back, but I can't remember the details. Maybe there is an existing issue as well?", "labels_url": "https://api.github.com/repos/python/mypy/issues/948/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Detect if required string literal escapes are missing from a type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/948/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-17T20:42:25Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 947, "html_url": "https://github.com/python/mypy/issues/947", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/947", "id": 111979105, "events_url": "https://api.github.com/repos/python/mypy/issues/947/events", "updated_at": "2015-10-17T18:56:42Z", "body": "If the second argument to `isinstance` is a tuple, the inferred type for the first argument should be a union.\r\n\r\nExample:\r\n\r\n```python\r\nx = 1  # type: object\r\nif isinstance(x, (int, str)):\r\n    # type of x is Union[int, str] here    \r\n    ...\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/947/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support isinstance with a tuple of types", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/947/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-17T18:56:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 946, "html_url": "https://github.com/python/mypy/pull/946", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/946", "id": 111974818, "events_url": "https://api.github.com/repos/python/mypy/issues/946/events", "updated_at": "2015-10-17T23:12:23Z", "body": "First, we shouldn't have multiple processes outputting to the same\r\nstdout/stderr filehandles. This made the output completely wonky and\r\ndifficult to interpret. Instead use subprocess.PIPE to make a new\r\nstdout, and use subprocess.STDOUT to redirect the subprocesses' stderr\r\nto stdout. Since we don't know if we are going to print these until the\r\nprocess exits, we need to combine them so as to not lose their ordering.\r\n\r\nIf the process failed or we are running in verbose mode, only then do we\r\nprint the output. Because all prints to real stdout are from the main\r\nthread, this removes the ability for all of the different processes to\r\ninterleave their output in weird ways.", "labels_url": "https://api.github.com/repos/python/mypy/issues/946/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Only print test output on failures or verbose mode.", "assignee": null, "closed_at": "2015-10-17T23:11:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/946/comments", "labels": [], "created_at": "2015-10-17T17:25:40Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/946.patch", "html_url": "https://github.com/python/mypy/pull/946", "diff_url": "https://github.com/python/mypy/pull/946.diff", "url": "https://api.github.com/repos/python/mypy/pulls/946"}, "locked": false}, {"milestone": null, "number": 945, "html_url": "https://github.com/python/mypy/issues/945", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/945", "id": 111937868, "events_url": "https://api.github.com/repos/python/mypy/issues/945/events", "updated_at": "2015-10-17T19:10:09Z", "body": "I think the following should raise an error, but it doesn't. I imagine it has to do with the call to `super`. Is there something obvious I'm missing?\r\n\r\n```python\r\nclass IntList(list):\r\n    def __init__(self, lst:List[int]) -> None:\r\n        super(InheritanceList, self).__init__(lst)\r\n\r\nint_list = IntList(list(range(10)))\r\nint_list.append('f')  # no error here!\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/945/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Misses errors when inserting from list", "assignee": null, "closed_at": "2015-10-17T19:10:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/945/comments", "labels": [], "created_at": "2015-10-17T01:56:02Z", "user": {"followers_url": "https://api.github.com/users/fredcallaway/followers", "gists_url": "https://api.github.com/users/fredcallaway/gists{/gist_id}", "html_url": "https://github.com/fredcallaway", "following_url": "https://api.github.com/users/fredcallaway/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/7883156?v=3", "url": "https://api.github.com/users/fredcallaway", "organizations_url": "https://api.github.com/users/fredcallaway/orgs", "starred_url": "https://api.github.com/users/fredcallaway/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/fredcallaway/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/fredcallaway/subscriptions", "login": "fredcallaway", "repos_url": "https://api.github.com/users/fredcallaway/repos", "received_events_url": "https://api.github.com/users/fredcallaway/received_events", "id": 7883156, "site_admin": false}, "locked": false}, {"milestone": null, "number": 944, "html_url": "https://github.com/python/mypy/pull/944", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/944", "id": 111937834, "events_url": "https://api.github.com/repos/python/mypy/issues/944/events", "updated_at": "2015-10-17T22:24:56Z", "body": "Revised version of someone else's PR that also should also\r\navoid a crash when the type isn't some sort of Instance. Avoids\r\ncast using the now-possible `if not isinstance` construction.", "labels_url": "https://api.github.com/repos/python/mypy/issues/944/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix yield from semantics for AnyType", "assignee": null, "closed_at": "2015-10-17T22:24:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/944/comments", "labels": [], "created_at": "2015-10-17T01:54:50Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/944.patch", "html_url": "https://github.com/python/mypy/pull/944", "diff_url": "https://github.com/python/mypy/pull/944.diff", "url": "https://api.github.com/repos/python/mypy/pulls/944"}, "locked": false}, {"milestone": null, "number": 943, "html_url": "https://github.com/python/mypy/issues/943", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/943", "id": 111936983, "events_url": "https://api.github.com/repos/python/mypy/issues/943/events", "updated_at": "2015-10-17T21:47:43Z", "body": "It would be nice to have our own profiling metrics based on how long particular modules take for each pass in `mypy.build`. I think that this is something thats hard to get at with an actual profiler but something very easy for us to measure ourselves automatically.\r\n\r\nIn particular I'm interested in the current cost of stubs (which is done every time and has static results).", "labels_url": "https://api.github.com/repos/python/mypy/issues/943/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "State-based profiling for builds", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/943/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-10-17T01:36:23Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 942, "html_url": "https://github.com/python/mypy/issues/942", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/942", "id": 111935015, "events_url": "https://api.github.com/repos/python/mypy/issues/942/events", "updated_at": "2015-10-18T21:20:48Z", "body": "I saw in some place in mypy something like\r\n\r\n```\r\nclass A:\r\n    pass\r\n\r\nclass B(A):\r\n    pass\r\n\r\nclass C(A):\r\n    pass\r\n\r\nx = C()  # type: A\r\nif isinstance(x, B) or isinstance(x, C):\r\n    y = cast(Union[B, C], x)\r\n    ...\r\n```\r\n\r\nWe should be able to infer `Union[B, C]` as the type of `x` within this expression.", "labels_url": "https://api.github.com/repos/python/mypy/issues/942/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support `or` in `isinstance` expressions.", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/942/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-17T00:51:51Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 941, "html_url": "https://github.com/python/mypy/issues/941", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/941", "id": 111934810, "events_url": "https://api.github.com/repos/python/mypy/issues/941/events", "updated_at": "2015-10-17T20:37:25Z", "body": "Support a softer, more limited alternative to `cast`.\r\n\r\nThis isn't in PEP 484, so it can't be the behavior of `cast`.\r\n\r\nOne of the common reasons of cast is that we \"believe\" for some reason that despite the original type of the variable being class A, it is in fact class B.\r\n\r\nCurrently, if we have\r\n\r\n```\r\nclass A:\r\n    pass\r\n\r\nclass B:\r\n    pass\r\n```\r\nthe two types would have no intersection, so if `A` was a correct type, it is never `B`. On the other hand, if we have\r\n\r\n```\r\nclass A:\r\n    pass\r\n\r\nclass B(A):\r\n    pass\r\n```\r\nThen `B` and `A` have nonzero intersection and thus such a cast is at least plausible. It would be nice to have a softcast that allows the latter case but not the former.\r\n\r\nPlausible reason to not support this: `if isinstance(...)` is arguably a better approach. I'm on the fence about it, but it seems like a nice thing to have.", "labels_url": "https://api.github.com/repos/python/mypy/issues/941/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support some form of limited cast", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/941/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-17T00:48:12Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 940, "html_url": "https://github.com/python/mypy/issues/940", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/940", "id": 111761097, "events_url": "https://api.github.com/repos/python/mypy/issues/940/events", "updated_at": "2015-10-17T20:47:20Z", "body": "This should work:\r\n\r\n```python\r\nimport m # type: ignore\r\n\r\nclass A(m.B):  # Currently complains about invalid type m.B\r\n    def f(self): ...\r\n\r\na = A()\r\na.anything()  # OK\r\na.f(1)  # Error, f takes no arguments\r\n```\r\n\r\nIf any base class has type `Any`, we shouldn't complain about missing attributes, but we can still give real types for explicitly defined methods and attributes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/940/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Anything with type Any should be a valid base class", "assignee": null, "closed_at": "2015-10-17T20:47:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/940/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-10-16T05:17:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 939, "html_url": "https://github.com/python/mypy/pull/939", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/939", "id": 111730790, "events_url": "https://api.github.com/repos/python/mypy/issues/939/events", "updated_at": "2015-10-17T23:54:45Z", "body": "In the current world, this is only a refactor because we only actually\r\npass in a list of a single item - minus one small behavioral change\r\nregarding lib_path that makes life more sane in a multisource world.\r\n\r\nRefactors out the source information into a BuildSource class. Make\r\nbuild() accept a list of build sources, and make BuildManager.process\r\naccept a list of initial states (which are basically unprocessed-files\r\ncreated from a build source in build()).", "labels_url": "https://api.github.com/repos/python/mypy/issues/939/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow multisource builds within build manager.", "assignee": null, "closed_at": "2015-10-17T23:54:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/939/comments", "labels": [], "created_at": "2015-10-15T23:53:46Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/939.patch", "html_url": "https://github.com/python/mypy/pull/939", "diff_url": "https://github.com/python/mypy/pull/939.diff", "url": "https://api.github.com/repos/python/mypy/pulls/939"}, "locked": false}, {"milestone": null, "number": 938, "html_url": "https://github.com/python/mypy/issues/938", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/938", "id": 111730031, "events_url": "https://api.github.com/repos/python/mypy/issues/938/events", "updated_at": "2015-10-17T21:49:19Z", "body": "First, sorry if this was discussed before.\r\n\r\nSince mypy can infer types in assignments, I feel natural that mypy could infer types of defaults arguments. What do you think?", "labels_url": "https://api.github.com/repos/python/mypy/issues/938/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference with default arguments?", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/938/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-15T23:49:23Z", "user": {"followers_url": "https://api.github.com/users/AlanCristhian/followers", "gists_url": "https://api.github.com/users/AlanCristhian/gists{/gist_id}", "html_url": "https://github.com/AlanCristhian", "following_url": "https://api.github.com/users/AlanCristhian/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1313780?v=3", "url": "https://api.github.com/users/AlanCristhian", "organizations_url": "https://api.github.com/users/AlanCristhian/orgs", "starred_url": "https://api.github.com/users/AlanCristhian/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/AlanCristhian/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/AlanCristhian/subscriptions", "login": "AlanCristhian", "repos_url": "https://api.github.com/users/AlanCristhian/repos", "received_events_url": "https://api.github.com/users/AlanCristhian/received_events", "id": 1313780, "site_admin": false}, "locked": false}, {"milestone": null, "number": 937, "html_url": "https://github.com/python/mypy/issues/937", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/937", "id": 111729062, "events_url": "https://api.github.com/repos/python/mypy/issues/937/events", "updated_at": "2015-10-17T01:24:29Z", "body": "I think it should, because python considers such recursive definitions to be an error.", "labels_url": "https://api.github.com/repos/python/mypy/issues/937/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "`x = x or y` with x undeclared gives no error", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/937/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-15T23:39:56Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 936, "html_url": "https://github.com/python/mypy/issues/936", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/936", "id": 111726454, "events_url": "https://api.github.com/repos/python/mypy/issues/936/events", "updated_at": "2016-02-24T02:12:07Z", "body": "Is there any feature I can turn on to require that an entire file is statically typed?\r\n\r\nOr in general, what sort of tools would you use to enforce good mypy habits in a large project?", "labels_url": "https://api.github.com/repos/python/mypy/issues/936/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "strict mode?", "assignee": null, "closed_at": "2016-02-24T01:56:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/936/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-15T23:14:08Z", "user": {"followers_url": "https://api.github.com/users/oconnor663/followers", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "html_url": "https://github.com/oconnor663", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/860932?v=3", "url": "https://api.github.com/users/oconnor663", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "login": "oconnor663", "repos_url": "https://api.github.com/users/oconnor663/repos", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "id": 860932, "site_admin": false}, "locked": false}, {"milestone": null, "number": 935, "html_url": "https://github.com/python/mypy/issues/935", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/935", "id": 111710077, "events_url": "https://api.github.com/repos/python/mypy/issues/935/events", "updated_at": "2015-12-03T16:49:33Z", "body": "I'd love to be able to hand mypy a whole library, or a program where it's not totally obvious what the entry point is (or if there is a single entry point), and have it typecheck the whole thing.\r\n\r\nFor example in mypy itself, to typecheck `mypy/` with all the Python files that make it up. We used to have `tests.py` as a standin for this, but `runtests.py` is more complicated and `mypy runtests.py` doesn't actually check everything. I can use `mypy -m mypy.main`, but that's getting into details about how the code is laid out.\r\n\r\nOne interface for this would be to just list a bunch of files as positional arguments to `mypy`. More convenient in many cases would be to say \"here's a directory and typecheck everything underneath it\".\r\n\r\nGiven the mypy example, actually, where `mypy/test/data/` contains Python files that aren't part of the program, maybe the right option to have there is \"here's a *Python package* and typecheck everything that's part of it\". So e.g.\r\n```\r\n$ mypy -p mypy\r\n```\r\nwould look up `mypy` for import, see that it's a package module, go find all the other files next to its `__init__.py` and the directories that themselves contain `__init__.py`, and recurse. Because there's no `mypy/test/data/__init__.py`, or equivalently because you can't `import mypy.test.data.fixtures.list`, this wouldn't pull in `mypy/test/data/fixtures/list.py`, which is just as desired.\r\n\r\nI think in my ideal version of this interface, you could pass multiple `-m` arguments, multiple `-p` arguments, and multiple positional filename arguments, and they'd all just go on the queue together.\r\n\r\n(In principle I could simulate this by invoking `mypy` once for each file, but that's much slower because it repeats the work of typechecking dependencies.)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/935/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Accept a list of files, or whole packages, to typecheck", "assignee": null, "closed_at": "2015-12-03T16:49:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/935/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-15T21:20:58Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": null, "number": 934, "html_url": "https://github.com/python/mypy/issues/934", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/934", "id": 111686820, "events_url": "https://api.github.com/repos/python/mypy/issues/934/events", "updated_at": "2015-10-18T18:25:55Z", "body": "Python 2 allows a limited form of pattern-matching in function parameters:\r\n```\r\n$ cat /tmp/foo.py\r\ndef f((a, b)):\r\n  return a\r\nprint(f((1,2)))\r\n$ python2 /tmp/foo.py\r\n1\r\n```\r\n\r\nBut mypy doesn't parse this, even in `--py2` mode:\r\n```\r\n$ mypy --py2 /tmp/foo.py\r\n/tmp/foo.py: note: In function \"f\":\r\n/tmp/foo.py:1: error: Parse error before (\r\n/tmp/foo.py:1: error: Parse error before )\r\n/tmp/foo.py: note: At top level:\r\n/tmp/foo.py:1: error: Parse error before :\r\n/tmp/foo.py:2: error: Inconsistent indentation\r\n/tmp/foo.py:3: error: Inconsistent indentation\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/934/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parse failure on Python 2 tuple-params", "assignee": null, "closed_at": "2015-10-18T18:25:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/934/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-10-15T19:10:30Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 933, "html_url": "https://github.com/python/mypy/issues/933", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/933", "id": 111553782, "events_url": "https://api.github.com/repos/python/mypy/issues/933/events", "updated_at": "2016-04-08T18:55:25Z", "body": "If we have a sufficiently large program to type check we should be able to speed up type checking significantly by using multiple type checker processes that work in parallel.\r\n\r\nOne potential way to implement this:\r\n* Have a coordinator process that maintains a module dependency graph and keeps track of a work list of modules that haven't been type checked. Initially this will contain all modules in the program.\r\n* Have multiple worker processes that repeatedly get (sets of cyclically dependent) modules from the coordinator that have their dependencies processed, type check them and mark them as processed on the coordinator.\r\n\r\nFor this to really work we are going to need a way of efficiently communicating type check results for a module between processes (to avoid type checking shared dependencies multiple times). Having a JSON serialization format (see #932) would be sufficient.\r\n\r\nAdditionally we need a quick way of figuring out the dependency graph of all modules (or at least an approximation of it). We'll probably have to cache that between runs and update it incrementally, similar to the approach outlined in #932.\r\n\r\nSo how much would this help? Obviously this depends on the shape of the dependency graph. Under reasonable assumptions we should be able to hit an effective level of parallelism of at least 4 for larger programs, but I wouldn't be surprised if we could get even better than that. Cyclic module dependencies can add a limit to how far we can parallelize. We can probably estimate the achievable level of parallelism for a particular program by analyzing the module dependency graph.\r\n\r\nThis is probably only worth implementing after we have incremental type checking (#932), and we should preserve incrementalism -- i.e., we'd only type check modules modified since the last run and modules that depend on them.", "labels_url": "https://api.github.com/repos/python/mypy/issues/933/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Faster, parallel type checking", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/933/comments", "labels": [{"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-15T06:30:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 932, "html_url": "https://github.com/python/mypy/issues/932", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/932", "id": 111551259, "events_url": "https://api.github.com/repos/python/mypy/issues/932/events", "updated_at": "2016-04-08T18:52:47Z", "body": "Mypy should cache type checking results from previous runs to speed up subsequent runs which only contain small code changes. Between two successive runs the vast majority of a code in a large project typically stays untouched, so we could save a lot of work.\r\n\r\nI've started doing some very early prototyping. This is probably quite a lot of work and won't happen very soon, but this is a critical feature for larger projects (with more than 100k LOC, say).\r\n\r\nSome random ideas I currently have:\r\n\r\n* Generate a JSON file for each type checked module that contains roughly the same information as a stub file for the module would have (i.e., function signatures, classes, module level variables -- but no function bodies) but in a format that maps very directly to mypy ASTs.\r\n* If a module and its dependencies haven't changed since the last run, use the JSON file to represent the module and don't parse or type check the module at all.\r\n\r\nIt's not obvious how much this could help, but some back of the napkin math says that we might get, say, 10-20x the type checking performance in cases where almost everything can be cached from previous runs.\r\n\r\nLarge module dependency cycles are one scenario where this might not be too helpful. Maybe we can figure out a way to break these dependency cycles somehow and to avoid always having to fully process every module in the cycle if any of them changes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/932/labels{/name}", "comments": 15, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Faster, incremental type checking", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": "2016-04-08T18:12:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/932/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "Incremental", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/Incremental"}], "created_at": "2015-10-15T06:02:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 931, "html_url": "https://github.com/python/mypy/issues/931", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/931", "id": 111549669, "events_url": "https://api.github.com/repos/python/mypy/issues/931/events", "updated_at": "2016-02-22T21:59:01Z", "body": "Mypy now has a mostly working Python 2 (2.7) support, but it's not properly documented and there are some obvious rough edges. This is an umbrella issue where we collect ideas for things that we'd like to have for proper Python 2 support. We can later create more specific issues.\r\n\r\nSome things I have in mind (TODO add links to issues):\r\n\r\n* Document comment-based function annotation syntax (`# type: (...) -> rt`).\r\n* Document `--py2` command line option.\r\n* Figure out a good workflow that avoids Python version conflicts, as mypy must be run using Python 3.\r\n* Make it easy to install `typing` for Python 2 and document this.\r\n* Make the mypy encoding official and easy to install.\r\n* Review stubs (on typeshed) and make sure that there are no glaring omissions (compared to Python 3 stubs).\r\n* Review Python 2 `typing` and add missing features.", "labels_url": "https://api.github.com/repos/python/mypy/issues/931/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make Python 2 support official", "assignee": null, "closed_at": "2016-02-22T21:59:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/931/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-15T05:49:03Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 930, "html_url": "https://github.com/python/mypy/pull/930", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/930", "id": 111515825, "events_url": "https://api.github.com/repos/python/mypy/issues/930/events", "updated_at": "2015-11-24T04:49:19Z", "body": "(See commit messages.)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/930/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Several small stub fixes", "assignee": null, "closed_at": "2015-11-24T04:49:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/930/comments", "labels": [], "created_at": "2015-10-14T23:34:29Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/930.patch", "html_url": "https://github.com/python/mypy/pull/930", "diff_url": "https://github.com/python/mypy/pull/930.diff", "url": "https://api.github.com/repos/python/mypy/pulls/930"}, "locked": false}, {"milestone": null, "number": 929, "html_url": "https://github.com/python/mypy/pull/929", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/929", "id": 111497480, "events_url": "https://api.github.com/repos/python/mypy/issues/929/events", "updated_at": "2015-11-07T18:37:05Z", "body": "Add a new node, consolidating the argument-type information from\r\nFuncItem, which previously used parallel lists, into a list of\r\nArgument.\r\n\r\nEach argument contains:\r\n  - The variable that it represents\r\n  - The type annotation that was attached in the original AST. This\r\n    is *not* the same as variable.type. (Hence why I named it something\r\n    besides \"type\".\r\n  - The initializer expression as a Node.\r\n  - The initialization statement - this is the most similar to the old\r\n    \"init\" list.\r\n\r\nThe initialization statement is optional and is generated\r\nusing the initializer.", "labels_url": "https://api.github.com/repos/python/mypy/issues/929/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add new node for arguments.", "assignee": null, "closed_at": "2015-11-07T17:09:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/929/comments", "labels": [], "created_at": "2015-10-14T21:28:53Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/929.patch", "html_url": "https://github.com/python/mypy/pull/929", "diff_url": "https://github.com/python/mypy/pull/929.diff", "url": "https://api.github.com/repos/python/mypy/pulls/929"}, "locked": false}, {"milestone": null, "number": 928, "html_url": "https://github.com/python/mypy/pull/928", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/928", "id": 111296948, "events_url": "https://api.github.com/repos/python/mypy/issues/928/events", "updated_at": "2015-10-14T04:03:00Z", "body": "I took a look at the function parse_arg_list and was appalled\r\nby the fact that it was returning a 9-tuple of equal-length\r\nlists.\r\n\r\nThis carries over into the Nodes; this patch does _not_ attempt\r\nto go that far. It only consolidates into the 'Argument' class\r\nduring the parser, and then when CallableType or FuncDef are\r\ncreated, they get split back into their parallel lists.\r\n\r\nGetting the data initially parsed into the form we eventually\r\nwant to use it in should be the first step in making Argument\r\na real node used by FuncDef. (I think CallableType would actually\r\ngain access to more data in the transition, since Argument contains\r\nmore than FuncDef does).\r\n\r\nEventually 'Argument' should be a node but I left it in parse.py\r\nfor now is it is not yet.", "labels_url": "https://api.github.com/repos/python/mypy/issues/928/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor handling of arguments in parser.", "assignee": null, "closed_at": "2015-10-14T04:03:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/928/comments", "labels": [], "created_at": "2015-10-14T00:11:58Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/928.patch", "html_url": "https://github.com/python/mypy/pull/928", "diff_url": "https://github.com/python/mypy/pull/928.diff", "url": "https://api.github.com/repos/python/mypy/pulls/928"}, "locked": false}, {"milestone": null, "number": 927, "html_url": "https://github.com/python/mypy/pull/927", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/927", "id": 111288960, "events_url": "https://api.github.com/repos/python/mypy/issues/927/events", "updated_at": "2015-10-14T05:52:39Z", "body": "The ability to update test cases was broken in the move to myunit, because the code is run from a different working directory.", "labels_url": "https://api.github.com/repos/python/mypy/issues/927/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use correct directory when updating tests with myunit -i", "assignee": null, "closed_at": "2015-10-14T03:51:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/927/comments", "labels": [], "created_at": "2015-10-13T22:59:06Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/927.patch", "html_url": "https://github.com/python/mypy/pull/927", "diff_url": "https://github.com/python/mypy/pull/927.diff", "url": "https://api.github.com/repos/python/mypy/pulls/927"}, "locked": false}, {"milestone": null, "number": 926, "html_url": "https://github.com/python/mypy/pull/926", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/926", "id": 111286309, "events_url": "https://api.github.com/repos/python/mypy/issues/926/events", "updated_at": "2016-02-04T04:37:48Z", "body": "(PR text adapted from commit messages.)\r\n\r\nSome type errors could just as well be the result of a\r\nfaulty type at a function's definition as of faulty\r\ncode at its use.  This is especially likely where the\r\n\"definition\" is a stub, which may have been written\r\nincompletely and e.g. not describe every keyword argument\r\nthe function actually accepts.\r\n\r\nWhen this happens on an unexpected keyword argument, report\r\nthe filename and line number where we found the definition,\r\nas a note following the error itself at the function's use.\r\nThe message looks something like this:\r\n\r\n    some/file.py: note: In function \"print_json\":\r\n    some/file.py:22: error: Unexpected keyword argument \"separators\" for \"dumps\"\r\n    /srv/mypy/stubs/2.7/json.pyi:9: note: \"dumps\" defined here\r\n\r\nLeft for future work: adding similar site-of-definition\r\nnotes to other error messages where they'd be similarly\r\nuseful, and doing so in a nicely abstracted way.\r\n\r\nIn preparatory commits, make some useful refactors and cleanups\r\nand add some small facilities we need.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/926/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Report where a mismatching definition comes from", "assignee": null, "closed_at": "2015-11-02T01:49:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/926/comments", "labels": [], "created_at": "2015-10-13T22:39:36Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/926.patch", "html_url": "https://github.com/python/mypy/pull/926", "diff_url": "https://github.com/python/mypy/pull/926.diff", "url": "https://api.github.com/repos/python/mypy/pulls/926"}, "locked": false}, {"milestone": null, "number": 925, "html_url": "https://github.com/python/mypy/issues/925", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/925", "id": 111284207, "events_url": "https://api.github.com/repos/python/mypy/issues/925/events", "updated_at": "2015-10-14T04:52:17Z", "body": "Currently we \"check the first 10 tokens\". This is arbitrary and could lead to weirdness. Imagine a scenario where there are more options like this - there could even be more than 10 and then, well...\r\n\r\nI feel like we should check tokens up until the first non-comment or non-docstring and search in any of those.", "labels_url": "https://api.github.com/repos/python/mypy/issues/925/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rethink detection of weakmode", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/925/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-13T22:24:16Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 924, "html_url": "https://github.com/python/mypy/issues/924", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/924", "id": 111279716, "events_url": "https://api.github.com/repos/python/mypy/issues/924/events", "updated_at": "2016-03-02T19:32:30Z", "body": "I had to block a user who has behaving disrespectfully on the mypy repo. I really hate doing this and I'd like us to be able to prevent this from happening again. Having a code of conduct that we can point people to might improve things. We can either borrow a code of conduct from another project or come up with something simple ourselves. Here the kinds of things that we might include (all no-brainers, I assume, but let me know if you disagree):\r\n\r\n* Respect others and behave in a civil manner.\r\n* Understand that almost everybody is working on this project on their spare time and have other commitments such as work, family, friends and hobbies. You can't expect volunteers to always respond quickly or to be able to dedicate a lot of time working on your PRs (but we try to do our best).\r\n* Don't complain about management or advocate forking mypy in comments of unrelated issues. Feel free to open an issue to discuss whatever aspect that you don't like, but adding noise to comments just makes things inconvenient for everybody.\r\n* Listen to what core contributors say and try to understand their concerns. Respect their time.\r\n\r\nSome context in #915 , but this had been going on for a while.\r\n\r\nI believe that the issue originated from me being slow to respond to pull requests while I was helping my family to move from the US to Europe and looking for a new place to live in, and while I was visiting them for three weeks (and didn't have time to work on mypy). A potential improvement would be to have more core contributors who can review PRs. If anybody in interested in becoming a core contributor, please let me know.\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/924/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add a code of conduct for mypy?", "assignee": null, "closed_at": "2015-10-15T05:46:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/924/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-13T21:54:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 923, "html_url": "https://github.com/python/mypy/pull/923", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/923", "id": 111212837, "events_url": "https://api.github.com/repos/python/mypy/issues/923/events", "updated_at": "2015-10-17T22:23:13Z", "body": "If mypy is a git repository and has submodules, check that the submodules are initialized and up-to-date (and abort if not) in runtests.py, scripts/mypy, setup.py. Also check if they're dirty, and output a warning if so.\r\nNew option --dirty-stubs for runtests.py + scripts/mypy, for bypassing said checks.\r\n\r\nThis is a standalone PR. It doesn't depend on #884, or the other way around.\r\nSo you can merge them in any order.", "labels_url": "https://api.github.com/repos/python/mypy/issues/923/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "add git (submodule) integrity check", "assignee": null, "closed_at": "2015-10-17T22:23:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/923/comments", "labels": [], "created_at": "2015-10-13T16:04:02Z", "user": {"followers_url": "https://api.github.com/users/matthiaskramm/followers", "gists_url": "https://api.github.com/users/matthiaskramm/gists{/gist_id}", "html_url": "https://github.com/matthiaskramm", "following_url": "https://api.github.com/users/matthiaskramm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/306087?v=3", "url": "https://api.github.com/users/matthiaskramm", "organizations_url": "https://api.github.com/users/matthiaskramm/orgs", "starred_url": "https://api.github.com/users/matthiaskramm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/matthiaskramm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/matthiaskramm/subscriptions", "login": "matthiaskramm", "repos_url": "https://api.github.com/users/matthiaskramm/repos", "received_events_url": "https://api.github.com/users/matthiaskramm/received_events", "id": 306087, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/923.patch", "html_url": "https://github.com/python/mypy/pull/923", "diff_url": "https://github.com/python/mypy/pull/923.diff", "url": "https://api.github.com/repos/python/mypy/pulls/923"}, "locked": false}, {"milestone": null, "number": 922, "html_url": "https://github.com/python/mypy/issues/922", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/922", "id": 111207137, "events_url": "https://api.github.com/repos/python/mypy/issues/922/events", "updated_at": "2015-12-16T13:50:23Z", "body": "Every time I do\r\n```Python\r\nvar = []\r\n```\r\nor \r\n```Python\r\nvar = {}\r\n```\r\nmypy complains and I end up writing\r\n```\r\nvar = []  # type: list\r\n```\r\nor\r\n```\r\nvar = {} # type: dict\r\n```\r\n\r\nIf I'm not specifying a more narrow type why does mypy require me to annotate the variables in a way that gives it no additional information. If I type `[]` then `# type: list` is just additional noise.", "labels_url": "https://api.github.com/repos/python/mypy/issues/922/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Why do I need annotations for an empty list or dictionary", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/922/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-13T15:37:12Z", "user": {"followers_url": "https://api.github.com/users/thomascellerier/followers", "gists_url": "https://api.github.com/users/thomascellerier/gists{/gist_id}", "html_url": "https://github.com/thomascellerier", "following_url": "https://api.github.com/users/thomascellerier/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1765766?v=3", "url": "https://api.github.com/users/thomascellerier", "organizations_url": "https://api.github.com/users/thomascellerier/orgs", "starred_url": "https://api.github.com/users/thomascellerier/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/thomascellerier/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/thomascellerier/subscriptions", "login": "thomascellerier", "repos_url": "https://api.github.com/users/thomascellerier/repos", "received_events_url": "https://api.github.com/users/thomascellerier/received_events", "id": 1765766, "site_admin": false}, "locked": false}, {"milestone": null, "number": 921, "html_url": "https://github.com/python/mypy/issues/921", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/921", "id": 111176341, "events_url": "https://api.github.com/repos/python/mypy/issues/921/events", "updated_at": "2015-10-14T05:07:29Z", "body": "I've been thinking about this a bit, and I think the fact that we rely on `[out]` and other particular formatting of output is probably bad.\r\n\r\nIt would be nicer to have an object that represents the errors, and check against that, but not the formatting of how that object represents its error message to the user. We can test that separately, but testing it along with a lot of check-* tests will make it impossible to change how the output looks in the future.", "labels_url": "https://api.github.com/repos/python/mypy/issues/921/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Tests depend on the format of error strings too much", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/921/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-13T13:10:09Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 920, "html_url": "https://github.com/python/mypy/issues/920", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/920", "id": 111108658, "events_url": "https://api.github.com/repos/python/mypy/issues/920/events", "updated_at": "2015-12-01T04:38:30Z", "body": "We should have a way of installing `typing` on Python 2. There are at least two alternatives:\r\n\r\n1. Add something like `setup_typing_py2.py` that installs `typing` (only on Python 2). Not sure what the script should be called, but we should probably have a fairly descriptive name to make clear that this doesn't actually install mypy. Maybe this should be available via `pip install mypy-typing` or something. Alternatively, make this work on Python 3 as well.\r\n2. Use a separate repo for `typing` and install it using `pip install typing` or so (at least for Python 2, but maybe also for pre-3.5 Python 3). This makes it more difficult to change `typing`, so we may want to postpone this until the implementation is stable and reasonable complete. We need to figure out who actually owns typing on pip now (I remember that there was a discussion about this a while back but I was then in the middle of moving my family to a different continent and was distracted.)\r\n\r\nThe long term goal is 2, but we may want to start with 1 until we have a better understanding of how things should work.\r\n\r\nSee also the original issue from where this came from: https://github.com/JukkaL/mypy/issues/917", "labels_url": "https://api.github.com/repos/python/mypy/issues/920/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make it possible to install typing for Python 2", "assignee": null, "closed_at": "2015-11-30T23:10:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/920/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-13T05:35:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 919, "html_url": "https://github.com/python/mypy/issues/919", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/919", "id": 111107185, "events_url": "https://api.github.com/repos/python/mypy/issues/919/events", "updated_at": "2015-10-13T05:24:20Z", "body": "Add package `mypy-encoding` with a separate setup script that installs the mypy encoding. It should be installable using both Python 2 and Python 3.\r\n\r\nThis is based on the original issue from here: https://github.com/JukkaL/mypy/issues/917", "labels_url": "https://api.github.com/repos/python/mypy/issues/919/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Create package for mypy encoding", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/919/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-13T05:24:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 918, "html_url": "https://github.com/python/mypy/pull/918", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/918", "id": 111102270, "events_url": "https://api.github.com/repos/python/mypy/issues/918/events", "updated_at": "2015-10-13T06:42:32Z", "body": "Closes #915 which is critical.\r\n\r\nRemaining issues: #917, #732 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/918/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Test that install actually works", "assignee": null, "closed_at": "2015-10-13T05:03:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/918/comments", "labels": [], "created_at": "2015-10-13T04:27:35Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/918.patch", "html_url": "https://github.com/python/mypy/pull/918", "diff_url": "https://github.com/python/mypy/pull/918.diff", "url": "https://api.github.com/repos/python/mypy/pulls/918"}, "locked": false}, {"milestone": null, "number": 917, "html_url": "https://github.com/python/mypy/issues/917", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/917", "id": 111085415, "events_url": "https://api.github.com/repos/python/mypy/issues/917/events", "updated_at": "2015-10-13T05:37:25Z", "body": "Working on #915, when mypy is installed rather than run from the current dirrectory, the `mypy.codec` tests only work in python3 mode because there is no `setup.py` for python2.\r\n\r\nSome previous discussion on #732 and #724.", "labels_url": "https://api.github.com/repos/python/mypy/issues/917/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "`mypy.codec` and `typing` are not installable for python2", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/917/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-13T01:27:30Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 916, "html_url": "https://github.com/python/mypy/issues/916", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/916", "id": 111065927, "events_url": "https://api.github.com/repos/python/mypy/issues/916/events", "updated_at": "2015-10-18T00:56:41Z", "body": "In our typing stuff, Sequence subclasses Reversible. This doesn't happen in the PEP 484 typing repository.\r\n\r\nSequence is covariant on its type variable and Reversible is not.", "labels_url": "https://api.github.com/repos/python/mypy/issues/916/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Reversible/Sequence have incompatible variance", "assignee": null, "closed_at": "2015-10-18T00:56:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/916/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-12T22:16:37Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 915, "html_url": "https://github.com/python/mypy/issues/915", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/915", "id": 110945142, "events_url": "https://api.github.com/repos/python/mypy/issues/915/events", "updated_at": "2015-10-23T16:58:23Z", "body": "Hi there.\r\n\r\nWith the latest dev version of mypy (currently 47b40a77) - since my most recent git pull, I get this error when trying to run mypy:\r\n\r\n---------\r\ntest.py:1: error: Could not find builtins\r\n---------\r\n\r\nWhere this is the complete contents of test.py:\r\n\r\n---------\r\n#!/usr/bin/env python3.4\r\n\r\nprint(\"HELLO WORLD\")\r\n---------\r\n\r\nAnd the command-line is:\r\n\r\n--------\r\nmypy test.py\r\n--------\r\n\r\n(Where I am under a Python virtualenv, where the latest dev version of mypy has been installed).\r\n\r\nI ran a git bisect to track down where this issue started, and ended up at this commit where - in my testing - this problem starts manifesting:\r\n\r\n------------\r\ncommit 2c009ca991bf5d1b42741c0d1a2fbf6bb6077cd4\r\nAuthor: Ben Longbons <b.r.longbons@gmail.com>\r\nDate:   Tue Jun 30 22:18:20 2015 -0700\r\n\r\n    Move script to mypy.main module and just leave stubs\r\n\r\n-----------\r\n\r\nThis is a breaking issue for me - for now I need to do my dev/testing against the commit prior to that, 2e591dcd11, where the problem has not yet manifested.\r\n\r\nPlease advise?", "labels_url": "https://api.github.com/repos/python/mypy/issues/915/labels{/name}", "comments": 16, "repository_url": "https://api.github.com/repos/python/mypy", "title": "\"Could not find builtins\" error", "assignee": null, "closed_at": "2015-10-13T07:26:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/915/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-10-12T10:02:46Z", "user": {"followers_url": "https://api.github.com/users/wizzardx/followers", "gists_url": "https://api.github.com/users/wizzardx/gists{/gist_id}", "html_url": "https://github.com/wizzardx", "following_url": "https://api.github.com/users/wizzardx/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1143852?v=3", "url": "https://api.github.com/users/wizzardx", "organizations_url": "https://api.github.com/users/wizzardx/orgs", "starred_url": "https://api.github.com/users/wizzardx/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/wizzardx/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/wizzardx/subscriptions", "login": "wizzardx", "repos_url": "https://api.github.com/users/wizzardx/repos", "received_events_url": "https://api.github.com/users/wizzardx/received_events", "id": 1143852, "site_admin": false}, "locked": false}, {"milestone": null, "number": 914, "html_url": "https://github.com/python/mypy/pull/914", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/914", "id": 110907859, "events_url": "https://api.github.com/repos/python/mypy/issues/914/events", "updated_at": "2015-10-13T04:31:29Z", "body": "Split myunit into separate modules. Preparation for #908.\r\n\r\nDisable the lint warning about glob imports, there is nothing wrong with them if they are used carefully, and mypy itself will warn if you misuse them.\r\n\r\nAlso pass `-q` by default so it's less glitchy, to both myunit and unittest, though note that unittest will still produce *some* point.", "labels_url": "https://api.github.com/repos/python/mypy/issues/914/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Myunit", "assignee": null, "closed_at": "2015-10-13T04:31:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/914/comments", "labels": [], "created_at": "2015-10-12T04:36:35Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/914.patch", "html_url": "https://github.com/python/mypy/pull/914", "diff_url": "https://github.com/python/mypy/pull/914.diff", "url": "https://api.github.com/repos/python/mypy/pulls/914"}, "locked": false}, {"milestone": null, "number": 913, "html_url": "https://github.com/python/mypy/issues/913", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/913", "id": 110907857, "events_url": "https://api.github.com/repos/python/mypy/issues/913/events", "updated_at": "2015-11-30T19:00:27Z", "body": "Python 3.5 has a bunch of new things mypy doesn't quite support yet:\r\n\r\nhttps://docs.python.org/3/whatsnew/3.5.html\r\n\r\nThis is an umbrella task for all Python 3.5 related issues (except for PEP 484 related tasks).", "labels_url": "https://api.github.com/repos/python/mypy/issues/913/labels{/name}", "comments": 14, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support new Python 3.5 features", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/913/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-12T04:36:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 912, "html_url": "https://github.com/python/mypy/issues/912", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/912", "id": 110902617, "events_url": "https://api.github.com/repos/python/mypy/issues/912/events", "updated_at": "2015-10-12T03:51:03Z", "body": "I think that it's currently totally undcomented. Even though it's not very polished it could be useful, and we won't get bug reports if people don't even try it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/912/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document the HTML/XML report generator", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/912/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2015-10-12T03:13:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 911, "html_url": "https://github.com/python/mypy/issues/911", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/911", "id": 110899756, "events_url": "https://api.github.com/repos/python/mypy/issues/911/events", "updated_at": "2015-10-12T03:32:17Z", "body": "For example, see https://travis-ci.org/JukkaL/mypy/builds/84849832\r\n\r\nI'd hope that Python 3.5 isn't that much slower.", "labels_url": "https://api.github.com/repos/python/mypy/issues/911/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Figure out why the Python 3.5 travis build takes over 50% longer than Python 3.2", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/911/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-10-12T02:33:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 910, "html_url": "https://github.com/python/mypy/issues/910", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/910", "id": 110899296, "events_url": "https://api.github.com/repos/python/mypy/issues/910/events", "updated_at": "2015-10-12T04:56:31Z", "body": "The current test output is a little messy. Consider this test run:\r\n\r\n```\r\nmypy $ ./runtests.py unit-test -a \"*MultiAnd*\"\r\nPARALLEL 8\r\nSUMMARY  12 tasks selected\r\n0 test cases run, all passed.; running {#0, #1, #2, #3, #4, #5, #6, #7}         \r\n*** OK ***\r\n0 test cases run, all passed.; running {#0, #1, #2, #3, #4, #5, #7, #8}         \r\n*** OK ***\r\n0 test cases run, all passed.; running {#0, #1, #2, #3, #4, #5, #8, #9}         \r\n*** OK ***\r\n0 test cases run, all passed.\r\n*** OK ***\r\n0 test cases run, all passed.; running {#0, #3, #4, #5, #8, #9, #10, #11}       \r\n*** OK ***\r\n0 test cases run, all passed.\r\n*** OK ***\r\n0 test cases run, all passed.\r\n*** OK ***\r\n0 test cases run, all passed.; running {#0, #3, #5, #9, #10, #11}               \r\n*** OK ***\r\n0 test cases run, all passed.; running {#0, #3, #10, #11}                       \r\n*** OK ***\r\n0 test cases run, all passed.; running {#3, #10, #11}                           \r\n*** OK ***\r\n0 test cases run, all passed.0; running {#3, #11}                               \r\n*** OK ***\r\n2 test cases run, all passed.0; running {#3}                                    \r\n*** OK ***\r\nSUMMARY  all 12 tasks passed                    \r\n```\r\n\r\nI'd prefer something like this instead (the intermediate subsets `{...}` are useful as well and should not be removed, but they should be cleaned up properly):\r\n\r\n```\r\nmypy $ ./runtests.py unit-test -a \"*MultiAnd*\"\r\nPARALLEL 8\r\nSUMMARY  12 tasks selected\r\nSUMMARY  all 12 tasks passed, all 2 test cases passed\r\n*** OK ***\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/910/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Clean up default test output", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/910/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-12T02:24:39Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 909, "html_url": "https://github.com/python/mypy/issues/909", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/909", "id": 110885817, "events_url": "https://api.github.com/repos/python/mypy/issues/909/events", "updated_at": "2015-10-14T05:12:24Z", "body": "XSLT is not a widely used technology and pretty complex (and I don't want to learn it). We shouldn't rely on it in the report generator. Some reasonable alternatives include straight XML manipulation or JSON.", "labels_url": "https://api.github.com/repos/python/mypy/issues/909/labels{/name}", "comments": 13, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't use XSLT in report generator", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/909/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2015-10-11T22:13:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 908, "html_url": "https://github.com/python/mypy/issues/908", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/908", "id": 110883218, "events_url": "https://api.github.com/repos/python/mypy/issues/908/events", "updated_at": "2015-10-12T02:25:36Z", "body": "Since `driver` is now merged, `mypy.myunit` is a package instead of a module; however all the logic is still in `__init__.py` and has irritating limitations.\r\n\r\nNote that in these plans I am *not* yet making myunit and the driver aware of each other, just laying out a framework.\r\n\r\n* Document which parts of `myunit` are actually used from elsewhere.\r\n* Remove the unnecessary use of `Any`.\r\n* Split \"collect tests\" logic from \"run tests\" logic, add `-l` to only collect and print.\r\n* Split \"collect results\" logic from \"print results\" logic.\r\n* Allow fetching a single test by name (see below) instead of collecting *everything* and then filtering even when there are no wildcards.\r\n* Use `fnmatch` instead of hand-written glob functions (likely via regex conversion, so we can add a command-line option to take a regex directly).\r\n* Add tests for `myunit` itself.\r\n* Move assertions so you can do `from mypy.myunit.assertions import *`\r\n* Add decorators in `mypy.myunit.annotations`, see https://gist.github.com/o11c/ef8f0886d5967dfebc3d\r\n* Also add an decorator for \"this is an `assert_foo` function\" to replace the current traceback-cleaning logic, which is wrong if something goes wrong in the assert function itself.\r\n* Add a check that some `assert_foo` function is actually run for every testcase.\r\n* Record results of a test run to file so that diffs can be displayed from previous runs.\r\n* Move mutable globals to `mypy.myunit.ick`\r\n* Move main function and related logic to `mypy.myunit.main`\r\n* Allow free functions to be used as tests instead of requiring them to be wrapped in a class.\r\n* Support opting out of the tempdir logic.\r\n* Support fixtures by looking up `(name.strip('_'), annotated_type)` in current module and in `mypy.myunit.fixtures` (use this for tempdir maybe?)\r\n* Change data-driven testcases from overriding `cases` to overriding `init`, likely in a base class that takes care of calling `parse_tests`.\r\n* Support a \"keep going\" mode of assertion failure.\r\n\r\nAnyway, the big change is global test naming.\r\n\r\n***\r\n\r\nNew test names have more dots, and will look like `mypy.test.testlex.LexerSuite.test_empty`. It is not always as simple as `getattr` - modules need to be imported, classes need to be instantiated, data-driven cases need to be parsed, etc.\r\n\r\nThe first component name will *always* be a module, and most likely always be just `'mypy'` depending on what is done about #724 \r\n\r\n\r\n\r\nI introduce two new classes, `TestFactory` and `Test`, to avoid refactoring the responsibilities of `Suite` and `TestCase`. There will be a bridge of course, or maybe the old classes will just be subclasses of the new ones. Possibly the old classes will go away entirely.\r\n\r\nAPI will look something like:\r\n\r\n```\r\nTestOrTestFactory = Union['Test', 'TestFactory']\r\n\r\nclass Test:\r\n    name = ''\r\n    # Basically just TestCase without all the cruft,\r\n    # but also stores the annotations.\r\n    # It is now forbidden to create your own subclasses, use fixtures instead.\r\n\r\nclass TestFactory:\r\n    name = ''\r\n    @abstractmethod\r\n    def list_immediate_children(self) -> Iterable[str]: ...\r\n    @abstractmethod\r\n    def get_immediate_child(self, name: str) -> TestOrTestFactory: ...\r\n\r\n    @staticmethod\r\n    def list_recursive_children(name: str) -> Iterable[str]: ...\r\n    @staticmethod\r\n    def get_recursive_child(name: str) -> TestOrTestFactory: ...\r\n\r\nclass ModuleTestFactory(TestFactory):\r\n    def __init__(self, module: types.ModuleType) -> None: ...\r\n    # implementation uses `getattr`, `__path__`, and `__import__`\r\n    # to find both contained modules (but not imported ones from elsewhere!)\r\n    # and test objects (functions, classes, or instances) from the current module.\r\n\r\nclass SuiteTestFactory(TestFactory):\r\n    def __init__(self, suite: Suite) -> None: ...\r\n    # implementation uses `suite.cases()`, now restricted to only return `TestCase`s.\r\n    # (The only remaining suite with suites as children is the temporary `ListSuite`).\r\n```\r\n\r\nBikeshed: what do we call the module in which `Suite`, `TestCase`, `TestFactory`, and `Test` reside? Same module or separate ones?", "labels_url": "https://api.github.com/repos/python/mypy/issues/908/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Plans for `mypy.myunit`", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/908/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-11T21:15:14Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 907, "html_url": "https://github.com/python/mypy/issues/907", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/907", "id": 110878551, "events_url": "https://api.github.com/repos/python/mypy/issues/907/events", "updated_at": "2015-10-11T19:37:59Z", "body": "I just merged #721 (by @o11c) which replaces the old test driver `tests.py` and the travis script. I'm creating this issue to increase visibility to contributors.\r\n\r\nSummary of main workflow changes:\r\n\r\n* Run all unit tests via `./runtests.py unit-test` (this was `python3 tests.py` previously). \r\n* Run all tests (similar to the previous travis script but with better coverage) via `./runtests.py`.\r\n* You can't run unit tests via `python3 -m mypy.test.testcheck` (etc.) any more.\r\n\r\nThe readme contains more examples of how to run tests. Also try `./runtests.py -h`.\r\n\r\nThe new driver is better than the old one in several respects. These are some of biggest wins:\r\n\r\n* Tests are run in parallel. (Though inidividual suites are still run on a single cpu and not parallelized.)\r\n* All stubs are automatically type checked (previously some were not tested and the test configuration was more fragile).\r\n* There is more test auto discovery.\r\n* There is a single entry point to all tests that also supports filtering.\r\n\r\nTest output is not great right now and needs some love, but I merged it anyway as the PR has been open for a long time and there was much grumbling (sorry!).", "labels_url": "https://api.github.com/repos/python/mypy/issues/907/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "New test driver ", "assignee": null, "closed_at": "2015-10-11T19:37:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/907/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-11T19:37:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 906, "html_url": "https://github.com/python/mypy/issues/906", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/906", "id": 110876115, "events_url": "https://api.github.com/repos/python/mypy/issues/906/events", "updated_at": "2015-10-25T17:38:53Z", "body": "See https://github.com/ambv/typehinting/commit/4215e097685c09d5e78c3b01fb5d226bbba3df03\r\n\r\nCurrently stubgen generates something like this:\r\n\r\n```\r\nimport m\r\nX = m.X\r\n```\r\n\r\nThis has the additional problem of confusing the type checker if there are circular module dependencies, as the type of `X` is not available until type inferencer goes through them (of course, we should just fix type inference, but fixing stub generation is much easier).\r\n\r\nThe desired output would be like this:\r\n\r\n```\r\nfrom m import X as X\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/906/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update stubgen to use import ... as to export imported names", "assignee": null, "closed_at": "2015-10-25T17:38:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/906/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-10-11T18:41:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 905, "html_url": "https://github.com/python/mypy/pull/905", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/905", "id": 110869853, "events_url": "https://api.github.com/repos/python/mypy/issues/905/events", "updated_at": "2015-10-12T11:58:45Z", "body": "This also squashes a minor weirdness where in order to infer\r\nisinstance for resolution further in an and-expr, we were\r\nparsing for isinstance in the entire expression!\r\n\r\nOverall this is pretty self-explanatory. We get rid of the 'kind'\r\nstuff and just return a tuple of optional dicts.\r\n\r\nFixes #900.", "labels_url": "https://api.github.com/repos/python/mypy/issues/905/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": " Support multiple isinstance in a single if. ", "assignee": null, "closed_at": "2015-10-12T02:06:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/905/comments", "labels": [], "created_at": "2015-10-11T17:21:23Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/905.patch", "html_url": "https://github.com/python/mypy/pull/905", "diff_url": "https://github.com/python/mypy/pull/905.diff", "url": "https://api.github.com/repos/python/mypy/pulls/905"}, "locked": false}, {"milestone": null, "number": 904, "html_url": "https://github.com/python/mypy/issues/904", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/904", "id": 110861894, "events_url": "https://api.github.com/repos/python/mypy/issues/904/events", "updated_at": "2015-10-11T16:47:31Z", "body": "I can imagine this being useful for testing (where asserts are actually common and useful). Something like this should typecheck:\r\n\r\n```\r\nclass A:\r\n    pass\r\n\r\nclass B(A):\r\n    attr = None\r\n\r\nx = B() # type: A\r\nassert isinstance(x, B)\r\nx.attr\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/904/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Assert statements should analyze isinstance", "assignee": null, "closed_at": "2015-10-11T15:05:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/904/comments", "labels": [], "created_at": "2015-10-11T15:05:03Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "locked": false}, {"milestone": null, "number": 903, "html_url": "https://github.com/python/mypy/pull/903", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/903", "id": 110833128, "events_url": "https://api.github.com/repos/python/mypy/issues/903/events", "updated_at": "2015-10-12T17:50:43Z", "body": "This is all the stubs from all of my branches, because in the absence of actual active maintainership from @JukkaL, I need to be able to maintain these all on one branch if they might be used from more than one of my (or other people's) branches.\r\n\r\nIn future, when typeshed is used as a submodule, this will get much easier to deal with, but I'm not yet willing (or in some cases, able) to rebase my branches on top of `driver+typeshed` yet.\r\n\r\n@matthiaskramm some of these probably aren't in typeshed yet.", "labels_url": "https://api.github.com/repos/python/mypy/issues/903/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Various stubs", "assignee": null, "closed_at": "2015-10-11T19:24:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/903/comments", "labels": [], "created_at": "2015-10-11T04:36:35Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/903.patch", "html_url": "https://github.com/python/mypy/pull/903", "diff_url": "https://github.com/python/mypy/pull/903.diff", "url": "https://api.github.com/repos/python/mypy/pulls/903"}, "locked": false}, {"milestone": null, "number": 902, "html_url": "https://github.com/python/mypy/issues/902", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/902", "id": 110825801, "events_url": "https://api.github.com/repos/python/mypy/issues/902/events", "updated_at": "2015-10-21T05:18:59Z", "body": "This has been discussed before, but since this involves a language item, it is especially important, and it might be acceptable to special-case a solution.\r\n\r\nSince `@overload` is not allowed in non-stubs, it's not clear how slicing should be implemented in user-defined containers.\r\n\r\nIn stubs, you can use:\r\n\r\n    class Foo(Generic[T]):\r\n        @overload\r\n        def __getitem__(self, i: int) -> T: ...\r\n        @overload\r\n        def __getitem__(self, s: slice) -> Foo[T]: ...\r\n\r\nBut in source files the best you can do is:\r\n\r\n    class Foo(Generic[T]):\r\n        def __getitem__(self, i: Union[int, slice]) -> Union[T, List[T]]: ...\r\n\r\nwhich will require unacceptable casts at every call site. (incidentally, `slice` should be a generic, not every use will be `int`).\r\n\r\nAnd currently, it is difficult to mix some parts from a stub file and some not. I am currently investigating whether CRTP works though.", "labels_url": "https://api.github.com/repos/python/mypy/issues/902/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Return type of slice-aware `__getitem__`", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/902/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-11T00:30:45Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 901, "html_url": "https://github.com/python/mypy/pull/901", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/901", "id": 110818360, "events_url": "https://api.github.com/repos/python/mypy/issues/901/events", "updated_at": "2015-10-11T00:10:39Z", "body": "This commit has been sitting at the head of my other PRs, but it's really separate.\r\n\r\nI've registered `##mypy` as an unofficial channel and have already sent my own travis reports there. \r\n\r\nThere are channel-sitters in `#mypy`, which is currently unregistered - if you want the channel to be *official*, you'll have to talk to staff in `#freenode` to take it over.", "labels_url": "https://api.github.com/repos/python/mypy/issues/901/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Enable IRC notifications", "assignee": null, "closed_at": "2015-10-11T00:00:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/901/comments", "labels": [], "created_at": "2015-10-10T21:39:23Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/901.patch", "html_url": "https://github.com/python/mypy/pull/901", "diff_url": "https://github.com/python/mypy/pull/901.diff", "url": "https://api.github.com/repos/python/mypy/pulls/901"}, "locked": false}, {"milestone": null, "number": 900, "html_url": "https://github.com/python/mypy/issues/900", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/900", "id": 110811584, "events_url": "https://api.github.com/repos/python/mypy/issues/900/events", "updated_at": "2015-10-12T02:06:17Z", "body": "Mypy should support multiple `isinstance` checks in a condition:\r\n\r\n```\r\ndef f(x: A, y: A) -> None:\r\n    if isinstance(x, B) and isinstance(y, B):\r\n        # Types of both x and y should be B here, but currently only x is B\r\n        ...\r\n\r\nclass A: pass\r\nclass B(A): pass\r\n```\r\n\r\nThis is related to #473.", "labels_url": "https://api.github.com/repos/python/mypy/issues/900/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Multiple isinstance checks in if condition", "assignee": null, "closed_at": "2015-10-12T02:06:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/900/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-10-10T19:15:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 899, "html_url": "https://github.com/python/mypy/issues/899", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/899", "id": 110810556, "events_url": "https://api.github.com/repos/python/mypy/issues/899/events", "updated_at": "2015-10-10T19:19:04Z", "body": "Currently mypy doesn't allow indexing fixed-length tuples using a non-literal index. We should probably support this at least for tuples with homogeneous types. \r\n\r\nFor example, code like this should probably be okay:\r\n\r\n```python\r\nt = (1, 3, 7)\r\nfor i in range(len(t)):\r\n    print(i, t[i])\r\n```\r\n\r\nThe example below is actually already valid so rejecting the above code is inconsistent (this works due to how we set the `fallback` attribute for tuples to be `Tuple[t, ...]`):\r\n\r\n```python\r\nt = (1, 2, 3)\r\nfor i, x in enumerate(t):\r\n    print(i, x)\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/899/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow non-literals when indexing uniform tuples", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/899/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-10T18:52:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 898, "html_url": "https://github.com/python/mypy/pull/898", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/898", "id": 110798576, "events_url": "https://api.github.com/repos/python/mypy/issues/898/events", "updated_at": "2015-10-12T01:45:02Z", "body": "We weren't actually propagating variance to the `TypeVarType` correctly.\r\n\r\nFixes this and also #734 which was my end goal when writing this small series.", "labels_url": "https://api.github.com/repos/python/mypy/issues/898/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fixes for covariance/contravariance + #734", "assignee": null, "closed_at": "2015-10-12T01:45:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/898/comments", "labels": [], "created_at": "2015-10-10T14:53:26Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/898.patch", "html_url": "https://github.com/python/mypy/pull/898", "diff_url": "https://github.com/python/mypy/pull/898.diff", "url": "https://api.github.com/repos/python/mypy/pulls/898"}, "locked": false}, {"milestone": null, "number": 897, "html_url": "https://github.com/python/mypy/pull/897", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/897", "id": 110746115, "events_url": "https://api.github.com/repos/python/mypy/issues/897/events", "updated_at": "2015-10-10T02:51:09Z", "body": "`os.devnull` instead of `os.devnll`", "labels_url": "https://api.github.com/repos/python/mypy/issues/897/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix typo", "assignee": null, "closed_at": "2015-10-10T02:51:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/897/comments", "labels": [], "created_at": "2015-10-09T22:28:18Z", "user": {"followers_url": "https://api.github.com/users/anupcshan/followers", "gists_url": "https://api.github.com/users/anupcshan/gists{/gist_id}", "html_url": "https://github.com/anupcshan", "following_url": "https://api.github.com/users/anupcshan/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/201952?v=3", "url": "https://api.github.com/users/anupcshan", "organizations_url": "https://api.github.com/users/anupcshan/orgs", "starred_url": "https://api.github.com/users/anupcshan/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/anupcshan/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/anupcshan/subscriptions", "login": "anupcshan", "repos_url": "https://api.github.com/users/anupcshan/repos", "received_events_url": "https://api.github.com/users/anupcshan/received_events", "id": 201952, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/897.patch", "html_url": "https://github.com/python/mypy/pull/897", "diff_url": "https://github.com/python/mypy/pull/897.diff", "url": "https://api.github.com/repos/python/mypy/pulls/897"}, "locked": false}, {"milestone": null, "number": 896, "html_url": "https://github.com/python/mypy/pull/896", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/896", "id": 110730940, "events_url": "https://api.github.com/repos/python/mypy/issues/896/events", "updated_at": "2015-10-10T20:49:27Z", "body": "#806", "labels_url": "https://api.github.com/repos/python/mypy/issues/896/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Isinstance for if expressions", "assignee": null, "closed_at": "2015-10-10T20:49:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/896/comments", "labels": [], "created_at": "2015-10-09T20:30:45Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/896.patch", "html_url": "https://github.com/python/mypy/pull/896", "diff_url": "https://github.com/python/mypy/pull/896.diff", "url": "https://api.github.com/repos/python/mypy/pulls/896"}, "locked": false}, {"milestone": null, "number": 895, "html_url": "https://github.com/python/mypy/pull/895", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/895", "id": 110561023, "events_url": "https://api.github.com/repos/python/mypy/issues/895/events", "updated_at": "2015-10-09T16:06:51Z", "body": "Apparently python happily accepts any slice, even if its\r\nout of range (and just gives an empty tuple). Personally,\r\nI find that behavior weird, but I opted to not check any\r\nranges because python itself doesn't care.\r\n\r\n#886", "labels_url": "https://api.github.com/repos/python/mypy/issues/895/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add support for tuple slices.", "assignee": null, "closed_at": "2015-10-09T04:20:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/895/comments", "labels": [], "created_at": "2015-10-08T23:29:30Z", "user": {"followers_url": "https://api.github.com/users/jhance/followers", "gists_url": "https://api.github.com/users/jhance/gists{/gist_id}", "html_url": "https://github.com/jhance", "following_url": "https://api.github.com/users/jhance/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/170192?v=3", "url": "https://api.github.com/users/jhance", "organizations_url": "https://api.github.com/users/jhance/orgs", "starred_url": "https://api.github.com/users/jhance/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jhance/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jhance/subscriptions", "login": "jhance", "repos_url": "https://api.github.com/users/jhance/repos", "received_events_url": "https://api.github.com/users/jhance/received_events", "id": 170192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/895.patch", "html_url": "https://github.com/python/mypy/pull/895", "diff_url": "https://github.com/python/mypy/pull/895.diff", "url": "https://api.github.com/repos/python/mypy/pulls/895"}, "locked": false}, {"milestone": null, "number": 894, "html_url": "https://github.com/python/mypy/pull/894", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/894", "id": 110327710, "events_url": "https://api.github.com/repos/python/mypy/issues/894/events", "updated_at": "2015-12-10T23:05:26Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/894/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "readme: separate out the \"quick start\" so it really is quick", "assignee": null, "closed_at": "2015-10-12T02:51:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/894/comments", "labels": [], "created_at": "2015-10-07T22:04:04Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/894.patch", "html_url": "https://github.com/python/mypy/pull/894", "diff_url": "https://github.com/python/mypy/pull/894.diff", "url": "https://api.github.com/repos/python/mypy/pulls/894"}, "locked": false}, {"milestone": null, "number": 893, "html_url": "https://github.com/python/mypy/pull/893", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/893", "id": 110324927, "events_url": "https://api.github.com/repos/python/mypy/issues/893/events", "updated_at": "2015-10-14T21:52:01Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/893/labels{/name}", "comments": 12, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Require typing in test-requirements.txt", "assignee": null, "closed_at": "2015-10-12T03:22:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/893/comments", "labels": [], "created_at": "2015-10-07T21:45:57Z", "user": {"followers_url": "https://api.github.com/users/gnprice/followers", "gists_url": "https://api.github.com/users/gnprice/gists{/gist_id}", "html_url": "https://github.com/gnprice", "following_url": "https://api.github.com/users/gnprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/28173?v=3", "url": "https://api.github.com/users/gnprice", "organizations_url": "https://api.github.com/users/gnprice/orgs", "starred_url": "https://api.github.com/users/gnprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gnprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gnprice/subscriptions", "login": "gnprice", "repos_url": "https://api.github.com/users/gnprice/repos", "received_events_url": "https://api.github.com/users/gnprice/received_events", "id": 28173, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/893.patch", "html_url": "https://github.com/python/mypy/pull/893", "diff_url": "https://github.com/python/mypy/pull/893.diff", "url": "https://api.github.com/repos/python/mypy/pulls/893"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 892, "html_url": "https://github.com/python/mypy/issues/892", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/892", "id": 109676975, "events_url": "https://api.github.com/repos/python/mypy/issues/892/events", "updated_at": "2016-04-08T19:33:16Z", "body": "* https://www.python.org/dev/peps/pep-0484/#type-comments\r\n\r\nI tried to check type comments, but it cannot parse \"with\" and \"for\" statement as below.\r\n\r\n```python\r\n# Example 1\r\nx = []   # type: List[Employee]\r\nx, y, z = [], [], []  # type: List[int], List[int], List[str]\r\nx, y, z = [], [], []  # type: (List[int], List[int], List[str])\r\nx = [\r\n   1,\r\n   2,\r\n]  # type: List[int]\r\n\r\n# Example 2\r\nfrom contextlib import contextmanager\r\n\r\n@contextmanager\r\ndef frobnicate():\r\n    yield 1\r\n\r\nwith frobnicate() as foo:  # type: int\r\n    # Here foo is an int\r\n    ...\r\n\r\n# Example 3\r\npoints = [(1.0, 2.5)]  # type: List[Tuple[float, float]]\r\nfor x, y in points:  # type: float, float\r\n    # Here x and y are floats\r\n    ...\r\n```\r\n\r\n```bash\r\n$ mypy type_comments.py \r\ntype_comments.py:17: error: Parse error before \"int\"\r\ntype_comments.py:23: error: Parse error before \"float\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/892/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy cannot parse type comment of \"with\" and \"for\" statement in PEP 484", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/892/comments", "labels": [{"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-10-04T12:03:02Z", "user": {"followers_url": "https://api.github.com/users/t2y/followers", "gists_url": "https://api.github.com/users/t2y/gists{/gist_id}", "html_url": "https://github.com/t2y", "following_url": "https://api.github.com/users/t2y/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/96569?v=3", "url": "https://api.github.com/users/t2y", "organizations_url": "https://api.github.com/users/t2y/orgs", "starred_url": "https://api.github.com/users/t2y/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/t2y/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/t2y/subscriptions", "login": "t2y", "repos_url": "https://api.github.com/users/t2y/repos", "received_events_url": "https://api.github.com/users/t2y/received_events", "id": 96569, "site_admin": false}, "locked": false}, {"milestone": null, "number": 891, "html_url": "https://github.com/python/mypy/pull/891", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/891", "id": 109639259, "events_url": "https://api.github.com/repos/python/mypy/issues/891/events", "updated_at": "2015-10-09T07:31:39Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/891/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give `*args` the correct type (`Tuple[T, ...]` instead of `Sequence[T]`)", "assignee": null, "closed_at": "2015-10-09T04:49:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/891/comments", "labels": [], "created_at": "2015-10-03T18:52:02Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/891.patch", "html_url": "https://github.com/python/mypy/pull/891", "diff_url": "https://github.com/python/mypy/pull/891.diff", "url": "https://api.github.com/repos/python/mypy/pulls/891"}, "locked": false}, {"milestone": null, "number": 890, "html_url": "https://github.com/python/mypy/issues/890", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/890", "id": 109607309, "events_url": "https://api.github.com/repos/python/mypy/issues/890/events", "updated_at": "2015-10-07T05:43:22Z", "body": "Recently, I wrote a patch that worked perfectly in mypy, but (after fixing one buggy test) caused several unit tests to fail because the unit tests don't use the real builtins, rather some file under `mypy/test/data/fixtures/`\r\n\r\nIt does not matter how fast your tests execute if they are not representative of what mypy will actually *use*. You should look for performance improvements elsewhere - perhaps by only ever using the *parts* of a module that are used from the main file.", "labels_url": "https://api.github.com/repos/python/mypy/issues/890/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Stop faking builtins for tests", "assignee": null, "closed_at": "2015-10-07T05:39:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/890/comments", "labels": [{"name": "wontfix", "color": "ffffff", "url": "https://api.github.com/repos/python/mypy/labels/wontfix"}], "created_at": "2015-10-03T07:11:45Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 889, "html_url": "https://github.com/python/mypy/pull/889", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/889", "id": 109559491, "events_url": "https://api.github.com/repos/python/mypy/issues/889/events", "updated_at": "2015-10-07T15:42:16Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/889/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add `cwd` argument to Python 3 stubs for subprocess calls.", "assignee": null, "closed_at": "2015-10-07T03:24:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/889/comments", "labels": [], "created_at": "2015-10-02T19:43:28Z", "user": {"followers_url": "https://api.github.com/users/Vlad-Shcherbina/followers", "gists_url": "https://api.github.com/users/Vlad-Shcherbina/gists{/gist_id}", "html_url": "https://github.com/Vlad-Shcherbina", "following_url": "https://api.github.com/users/Vlad-Shcherbina/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/302938?v=3", "url": "https://api.github.com/users/Vlad-Shcherbina", "organizations_url": "https://api.github.com/users/Vlad-Shcherbina/orgs", "starred_url": "https://api.github.com/users/Vlad-Shcherbina/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Vlad-Shcherbina/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Vlad-Shcherbina/subscriptions", "login": "Vlad-Shcherbina", "repos_url": "https://api.github.com/users/Vlad-Shcherbina/repos", "received_events_url": "https://api.github.com/users/Vlad-Shcherbina/received_events", "id": 302938, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/889.patch", "html_url": "https://github.com/python/mypy/pull/889", "diff_url": "https://github.com/python/mypy/pull/889.diff", "url": "https://api.github.com/repos/python/mypy/pulls/889"}, "locked": false}, {"milestone": null, "number": 888, "html_url": "https://github.com/python/mypy/pull/888", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/888", "id": 109456871, "events_url": "https://api.github.com/repos/python/mypy/issues/888/events", "updated_at": "2015-10-09T07:33:01Z", "body": "A typo where a class is accidentally passed in place of an instance currently produces the confusing error message `incompatible type: Foo; expected: Foo`. This will fall back on verbose formatting in such cases.\r\n\r\nThanks for making mypy!", "labels_url": "https://api.github.com/repos/python/mypy/issues/888/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disambiguate incompatible arguments if necessary.", "assignee": null, "closed_at": "2015-10-09T04:55:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/888/comments", "labels": [], "created_at": "2015-10-02T09:15:03Z", "user": {"followers_url": "https://api.github.com/users/eigengrau/followers", "gists_url": "https://api.github.com/users/eigengrau/gists{/gist_id}", "html_url": "https://github.com/eigengrau", "following_url": "https://api.github.com/users/eigengrau/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4939947?v=3", "url": "https://api.github.com/users/eigengrau", "organizations_url": "https://api.github.com/users/eigengrau/orgs", "starred_url": "https://api.github.com/users/eigengrau/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/eigengrau/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/eigengrau/subscriptions", "login": "eigengrau", "repos_url": "https://api.github.com/users/eigengrau/repos", "received_events_url": "https://api.github.com/users/eigengrau/received_events", "id": 4939947, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/888.patch", "html_url": "https://github.com/python/mypy/pull/888", "diff_url": "https://github.com/python/mypy/pull/888.diff", "url": "https://api.github.com/repos/python/mypy/pulls/888"}, "locked": false}, {"milestone": null, "number": 887, "html_url": "https://github.com/python/mypy/pull/887", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/887", "id": 109396368, "events_url": "https://api.github.com/repos/python/mypy/issues/887/events", "updated_at": "2015-10-13T05:24:38Z", "body": "I've pulled this out of #880 because it promises to be useful for #884 and #732 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/887/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dialect", "assignee": null, "closed_at": "2015-10-13T05:24:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/887/comments", "labels": [], "created_at": "2015-10-01T22:20:30Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/887.patch", "html_url": "https://github.com/python/mypy/pull/887", "diff_url": "https://github.com/python/mypy/pull/887.diff", "url": "https://api.github.com/repos/python/mypy/pulls/887"}, "locked": false}, {"milestone": null, "number": 886, "html_url": "https://github.com/python/mypy/issues/886", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/886", "id": 109343978, "events_url": "https://api.github.com/repos/python/mypy/issues/886/events", "updated_at": "2015-10-10T19:30:22Z", "body": "`mypy -c 'v = (1, 2, 3); major, minor = v[:2]'`\r\n\r\n`<string>:1: error: Tuple index must an integer literal`\r\n\r\nOddly, this was not a failure *before* I rebased my branch.", "labels_url": "https://api.github.com/repos/python/mypy/issues/886/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Tuple slicing is not supported", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/886/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-10-01T17:17:11Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 885, "html_url": "https://github.com/python/mypy/issues/885", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/885", "id": 109294839, "events_url": "https://api.github.com/repos/python/mypy/issues/885/events", "updated_at": "2016-04-12T17:43:28Z", "body": "Some time ago I encountered another issue in production code that we may need to solve before implementing strict `None` type checking (#357). Consider a function like this:\r\n\r\n```\r\ndef convert(s: Optional[str]) -> Optional[int]:\r\n    if s is None:\r\n        return None\r\n    return int(s)\r\n```\r\n\r\nNow code like this would be rejected according to PEP 484 rules, as the return type unconditionally includes `None`:\r\n\r\n```\r\nconvert('2') + 1  # Error: can't add None and int\r\n```\r\n\r\nWe could use overloading or single dispatch to model this, but this would involve pretty major refactoring for existing code and probably some performance overhead.\r\n\r\nAlternatively, we could model this as a generic function, but currently there's no syntax to model the above case. Here is a strawman proposal:\r\n\r\n```\r\nfrom typing import OptionalTypeVar\r\n\r\nMaybe = OptionalTypeVar('Maybe')\r\n\r\ndef convert(s: Maybe[str]) -> Maybe[int]:\r\n    if s is None:\r\n        return None\r\n    return int(s)\r\n```\r\n\r\n`OptionalTypeVar` would work a bit like `TypeVar` with values, such as `AnyStr`, with a slight twist: the first value would always be `None`, and the second value is the index value, and this could have multiple different values in different positions. So `Maybe[T]` would be replaced with `None` or `T`, but all instances of `Maybe` would get either the first or second value everywhere in lock step fashion. The above function would thus be equivalent to this from type checking perspective (assuming we had overloading):\r\n\r\n```\r\n@overload\r\ndef convert(s: None) -> None:\r\n    if s is None:\r\n        return None\r\n    return int(s)\r\n\r\n@overload\r\ndef convert(s: str) -> int:\r\n    if s is None:\r\n        return None\r\n    return int(s)\r\n```\r\n\r\nWe could generalize this to arbitrary collections of types. I can't come up with a good syntax, but here is the first thing that comes to mind:\r\n\r\n```\r\nfrom typing import Alternate\r\n\r\ndef convert(s: Alternate[None, str]) -> Alternate[None, int]:\r\n    ...  # Same as above\r\n```\r\n\r\nThe semantics would be the same as above. Now we could define a function that maps ints to string and vice versa:\r\n\r\n```\r\nfrom typing import Alternate\r\n\r\ndef switch(s: Alternate[int, str]) -> Alternate[str, int]:\r\n    ... \r\n```\r\n\r\nHere the issue is that we can't have multiple alternate variables that could vary independently. Maybe there would be a way to define additional `Alternate` variants with different names, similar to `TypeVar`.\r\n\r\nThe latter could also deal with `True` and `False` polymorphism assuming they would be considered subtypes of `bool`. Here is an example that is similar to some examples in the std library (in `subprocess`, I think):\r\n\r\n```\r\nclass Stream(Generic[Alternate[str, bytes]]):\r\n    def __init__(self, unicode: Alternate[True, False]) -> None: ...\r\n\r\n    def stream(self) -> IO[Alternate[str, bytes]]: ...\r\n```\r\n\r\nInterestingly, we could replace `AnyStr` with this definition instead of using `TypeVar`:\r\n\r\n```\r\nAnyStr = Alternate[str, bytes]\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/885/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type checking functions where return type is always None if an argument is None", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/885/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-10-01T13:03:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 884, "html_url": "https://github.com/python/mypy/pull/884", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/884", "id": 109138598, "events_url": "https://api.github.com/repos/python/mypy/issues/884/events", "updated_at": "2015-10-17T22:23:13Z", "body": "This removes the stubs/ directory, and adds the \"typeshed\" submodule to replace it. The directory layout of the latter is quite similar, so the changes to default_lib_path are straightforward.\r\nNote that the submodule currently is using the \"mypy\" branch of in typeshed, which has, as a subset, the previous contents of stubs/, but sorted into the typeshed directory hierarchy.\r\n\r\nThis is for https://github.com/JukkaL/mypy/issues/882. It depends on https://github.com/JukkaL/mypy/pull/883.", "labels_url": "https://api.github.com/repos/python/mypy/issues/884/labels{/name}", "comments": 18, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Typeshed", "assignee": null, "closed_at": "2015-10-17T22:23:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/884/comments", "labels": [], "created_at": "2015-09-30T17:14:43Z", "user": {"followers_url": "https://api.github.com/users/matthiaskramm/followers", "gists_url": "https://api.github.com/users/matthiaskramm/gists{/gist_id}", "html_url": "https://github.com/matthiaskramm", "following_url": "https://api.github.com/users/matthiaskramm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/306087?v=3", "url": "https://api.github.com/users/matthiaskramm", "organizations_url": "https://api.github.com/users/matthiaskramm/orgs", "starred_url": "https://api.github.com/users/matthiaskramm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/matthiaskramm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/matthiaskramm/subscriptions", "login": "matthiaskramm", "repos_url": "https://api.github.com/users/matthiaskramm/repos", "received_events_url": "https://api.github.com/users/matthiaskramm/received_events", "id": 306087, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/884.patch", "html_url": "https://github.com/python/mypy/pull/884", "diff_url": "https://github.com/python/mypy/pull/884.diff", "url": "https://api.github.com/repos/python/mypy/pulls/884"}, "locked": false}, {"milestone": null, "number": 883, "html_url": "https://github.com/python/mypy/pull/883", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/883", "id": 108941726, "events_url": "https://api.github.com/repos/python/mypy/issues/883/events", "updated_at": "2015-10-12T02:11:52Z", "body": "Store Python version as (major, minor) internally.\r\nThis is needed for https://github.com/JukkaL/mypy/issues/882 (and also https://github.com/JukkaL/mypy/issues/874).", "labels_url": "https://api.github.com/repos/python/mypy/issues/883/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "New option --python-version.", "assignee": null, "closed_at": "2015-10-12T00:50:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/883/comments", "labels": [], "created_at": "2015-09-29T19:26:19Z", "user": {"followers_url": "https://api.github.com/users/matthiaskramm/followers", "gists_url": "https://api.github.com/users/matthiaskramm/gists{/gist_id}", "html_url": "https://github.com/matthiaskramm", "following_url": "https://api.github.com/users/matthiaskramm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/306087?v=3", "url": "https://api.github.com/users/matthiaskramm", "organizations_url": "https://api.github.com/users/matthiaskramm/orgs", "starred_url": "https://api.github.com/users/matthiaskramm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/matthiaskramm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/matthiaskramm/subscriptions", "login": "matthiaskramm", "repos_url": "https://api.github.com/users/matthiaskramm/repos", "received_events_url": "https://api.github.com/users/matthiaskramm/received_events", "id": 306087, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/883.patch", "html_url": "https://github.com/python/mypy/pull/883", "diff_url": "https://github.com/python/mypy/pull/883.diff", "url": "https://api.github.com/repos/python/mypy/pulls/883"}, "locked": false}, {"milestone": null, "number": 882, "html_url": "https://github.com/python/mypy/issues/882", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/882", "id": 108740088, "events_url": "https://api.github.com/repos/python/mypy/issues/882/events", "updated_at": "2015-10-19T13:19:44Z", "body": "I started working on a pull request for this, so I'm opening this issue to discuss details and track progress.\r\n\r\nThe idea is to \r\n\r\n1. Add typeshed (http://github.com/python/typeshed) as a submodule to mypy, e.g. as \"./typeshed/\" or \"./stubs/\", and then to tweak default_lib_path in mypy/build.py to work with the typeshed directory structure. (Which is a bit more fine-grained than the one in mypy. It's documented at\r\nhttps://github.com/python/typeshed/blob/master/README.md)\r\n2. Merge the stubs of typeshed and mypy. Both have things the other doesn't have - typeshed has a lot of stubs from C extensions, including obscure things like _sre, strop, syslog and cmath, whereas mypy already also has stubs for the .py part of the standard library. (But a first step might be to make a branch in typeshed that's essentially a copy of mypy/stubs/ just to make sure the submodule+loading logic works.)\r\n\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/882/labels{/name}", "comments": 20, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Integrate typeshed into mypy", "assignee": null, "closed_at": "2015-10-19T13:19:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/882/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-09-28T20:29:21Z", "user": {"followers_url": "https://api.github.com/users/matthiaskramm/followers", "gists_url": "https://api.github.com/users/matthiaskramm/gists{/gist_id}", "html_url": "https://github.com/matthiaskramm", "following_url": "https://api.github.com/users/matthiaskramm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/306087?v=3", "url": "https://api.github.com/users/matthiaskramm", "organizations_url": "https://api.github.com/users/matthiaskramm/orgs", "starred_url": "https://api.github.com/users/matthiaskramm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/matthiaskramm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/matthiaskramm/subscriptions", "login": "matthiaskramm", "repos_url": "https://api.github.com/users/matthiaskramm/repos", "received_events_url": "https://api.github.com/users/matthiaskramm/received_events", "id": 306087, "site_admin": false}, "locked": false}, {"milestone": null, "number": 881, "html_url": "https://github.com/python/mypy/issues/881", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/881", "id": 108403000, "events_url": "https://api.github.com/repos/python/mypy/issues/881/events", "updated_at": "2015-09-25T22:10:39Z", "body": "I have been trying to get Django 1.8 (or 1.9) + python3 working with mypy\r\n\r\nIf I import any Django model, I get this - https://gist.github.com/chintanop/e6145e34a1f0293a6faa\r\n\r\nWorks fine if I # type: ignore the imports but then I loose type checking for Django ORM classes. \r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/881/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "MyPy on Django", "assignee": null, "closed_at": "2015-09-25T22:10:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/881/comments", "labels": [], "created_at": "2015-09-25T20:32:19Z", "user": {"followers_url": "https://api.github.com/users/chintanop/followers", "gists_url": "https://api.github.com/users/chintanop/gists{/gist_id}", "html_url": "https://github.com/chintanop", "following_url": "https://api.github.com/users/chintanop/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/925793?v=3", "url": "https://api.github.com/users/chintanop", "organizations_url": "https://api.github.com/users/chintanop/orgs", "starred_url": "https://api.github.com/users/chintanop/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/chintanop/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/chintanop/subscriptions", "login": "chintanop", "repos_url": "https://api.github.com/users/chintanop/repos", "received_events_url": "https://api.github.com/users/chintanop/received_events", "id": 925793, "site_admin": false}, "locked": false}, {"milestone": null, "number": 880, "html_url": "https://github.com/python/mypy/pull/880", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/880", "id": 108214891, "events_url": "https://api.github.com/repos/python/mypy/issues/880/events", "updated_at": "2015-10-13T16:43:09Z", "body": "Don't merge yet! See below. The basic design is sound though.\r\n\r\nThis is a massive rewrite of the parser infrastructure to provide more useful information.\r\n\r\nFeatures:\r\n* Good support of every single python dialect since 2.0 (currently too permissive in some cases)\r\n* Not tied to the current interpreter version.\r\n* Cleanly handle mypy-specific extensions\r\n* Never stops or throws an exception if there is a syntax error - always produce *some* parse tree.\r\n* Produce high-quality error messages for all errors (FSVO high-quality).\r\n* Full span info, not just lines, efficiently\r\n* Complete parse tree, not just AST, which can be easily used for pretty-printing.\r\n* Comments as first-class entities\r\n\r\nTodo:\r\n* Add tests and fix all the bugs (some assertions are still firing on all nontrivial input, but I suspect where the error is)\r\n* Reject code that is invalid for a given python version.\r\n* Write lowering logic. Requires rebase of #721 already, stop holding it up!\r\n* Optionally parse known uses of docstrings and comments (partially needed for lowering)\r\n* Output to pretty XML/html option, closely tied #713 (can be done after merge, will likely make the `mypy.syntax.parser` entry-point public)\r\n* Add a cache and parse deltas when possible (hard, has odd span effects, and parsing isn't the expensive part anyway - requires much thought about the rest of mypy).", "labels_url": "https://api.github.com/repos/python/mypy/issues/880/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parser redesign", "assignee": null, "closed_at": "2015-10-13T16:43:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/880/comments", "labels": [], "created_at": "2015-09-24T21:10:27Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/880.patch", "html_url": "https://github.com/python/mypy/pull/880", "diff_url": "https://github.com/python/mypy/pull/880.diff", "url": "https://api.github.com/repos/python/mypy/pulls/880"}, "locked": false}, {"milestone": null, "number": 879, "html_url": "https://github.com/python/mypy/issues/879", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/879", "id": 107955466, "events_url": "https://api.github.com/repos/python/mypy/issues/879/events", "updated_at": "2015-09-23T22:19:43Z", "body": "Issue is that when I try to call a function from another class, it does not type check the arguments there. Ideally in large code-bases the majority of instances would be of this type where function calls are made from other objects.\r\n\r\nPlease see the code snippet below\r\n\r\n```\r\nclass Test1:\r\n    def create(self, a:int, b:str) -> None:\r\n      print(\"hello\")\r\n\r\nclass Test2:\r\n    def create(self):\r\n      \"\"\" No error or warning generated even if first argument is a string here\"\"\"\r\n      a = \"abc\"  # should've complained here!\r\n      b = \"def\"\r\n      Test1().create(a, b)\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    a = 5  #  works correcty\r\n    \"\"\" If a is changed to \"abc\", it complains CORRECTLY:\r\n       Argument 1 to \"create\" of \"Test1\" has incompatible type \"str\"; expected \"int\"\r\n    \"\"\"\r\n    \r\n    b = \"def\"\r\n    Test1().create(a,b)\r\n    Test2().create()\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/879/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Catching errors from other classes", "assignee": null, "closed_at": "2015-09-23T16:43:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/879/comments", "labels": [], "created_at": "2015-09-23T16:16:26Z", "user": {"followers_url": "https://api.github.com/users/chintanop/followers", "gists_url": "https://api.github.com/users/chintanop/gists{/gist_id}", "html_url": "https://github.com/chintanop", "following_url": "https://api.github.com/users/chintanop/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/925793?v=3", "url": "https://api.github.com/users/chintanop", "organizations_url": "https://api.github.com/users/chintanop/orgs", "starred_url": "https://api.github.com/users/chintanop/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/chintanop/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/chintanop/subscriptions", "login": "chintanop", "repos_url": "https://api.github.com/users/chintanop/repos", "received_events_url": "https://api.github.com/users/chintanop/received_events", "id": 925793, "site_admin": false}, "locked": false}, {"milestone": null, "number": 878, "html_url": "https://github.com/python/mypy/issues/878", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/878", "id": 107482235, "events_url": "https://api.github.com/repos/python/mypy/issues/878/events", "updated_at": "2015-09-21T21:21:52Z", "body": "When I install *mypy* as global package -- everything is ok, but when I try to install it under a *virtualenv*  folder, it fails with `ImportError`.\r\n```\r\nimport importlib._bootstrap_external\r\nImportError: No module named 'importlib._bootstrap_external'\r\n```\r\n\r\nPython3.5/Win7", "labels_url": "https://api.github.com/repos/python/mypy/issues/878/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy installation fails with virtualenv", "assignee": null, "closed_at": "2015-09-21T21:17:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/878/comments", "labels": [], "created_at": "2015-09-21T10:15:25Z", "user": {"followers_url": "https://api.github.com/users/uetoyo/followers", "gists_url": "https://api.github.com/users/uetoyo/gists{/gist_id}", "html_url": "https://github.com/uetoyo", "following_url": "https://api.github.com/users/uetoyo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2691848?v=3", "url": "https://api.github.com/users/uetoyo", "organizations_url": "https://api.github.com/users/uetoyo/orgs", "starred_url": "https://api.github.com/users/uetoyo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/uetoyo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/uetoyo/subscriptions", "login": "uetoyo", "repos_url": "https://api.github.com/users/uetoyo/repos", "received_events_url": "https://api.github.com/users/uetoyo/received_events", "id": 2691848, "site_admin": false}, "locked": false}, {"milestone": null, "number": 877, "html_url": "https://github.com/python/mypy/issues/877", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/877", "id": 107375608, "events_url": "https://api.github.com/repos/python/mypy/issues/877/events", "updated_at": "2015-10-01T16:33:15Z", "body": "I just realized adding a `.pth` file to site-packages allows execution of arbitrary code (as long as the line starts with `import`). That could be used to hook up the encoding without requiring the user to do it explicitly (this is impossible with the main file anyway).\r\n\r\nUnfortunately this does not work for the current directory, only the system and user site-packages directories.\r\n\r\nInstead of directly registering the codec (from the `.pth` file), it might be possible to set a custom `__path__` element in `encodings`, that should enable autodiscovery.", "labels_url": "https://api.github.com/repos/python/mypy/issues/877/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ways to install the codec.", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/877/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-09-20T06:08:21Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 876, "html_url": "https://github.com/python/mypy/pull/876", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/876", "id": 107076205, "events_url": "https://api.github.com/repos/python/mypy/issues/876/events", "updated_at": "2015-10-01T13:21:08Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/876/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Start testing on Python 3.5", "assignee": null, "closed_at": "2015-10-01T13:20:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/876/comments", "labels": [], "created_at": "2015-09-17T21:19:05Z", "user": {"followers_url": "https://api.github.com/users/sigmavirus24/followers", "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}", "html_url": "https://github.com/sigmavirus24", "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=3", "url": "https://api.github.com/users/sigmavirus24", "organizations_url": "https://api.github.com/users/sigmavirus24/orgs", "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions", "login": "sigmavirus24", "repos_url": "https://api.github.com/users/sigmavirus24/repos", "received_events_url": "https://api.github.com/users/sigmavirus24/received_events", "id": 240830, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/876.patch", "html_url": "https://github.com/python/mypy/pull/876", "diff_url": "https://github.com/python/mypy/pull/876.diff", "url": "https://api.github.com/repos/python/mypy/pulls/876"}, "locked": false}, {"milestone": null, "number": 875, "html_url": "https://github.com/python/mypy/issues/875", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/875", "id": 106875497, "events_url": "https://api.github.com/repos/python/mypy/issues/875/events", "updated_at": "2015-12-02T21:32:36Z", "body": "I would like something like this to be an error:\r\n```\r\ndef f(i: int) -> int:\r\n\tif i > 3:\r\n\t\treturn i + 2\r\n\telse:\r\n\t\treturn None\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/875/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Any option to not allow None as valid member of every type?", "assignee": null, "closed_at": "2015-10-01T12:36:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/875/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-09-16T22:19:30Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 874, "html_url": "https://github.com/python/mypy/issues/874", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/874", "id": 106557904, "events_url": "https://api.github.com/repos/python/mypy/issues/874/events", "updated_at": "2015-10-01T16:44:03Z", "body": "With Python 3.5 collections.OrderedDict supports `reversed()` for views of its keys, items and values. In order for mypy to support this, the stub for collections needs to be updated. As a direct result though, mypy wouldn't detect illegal code for python < 3.5:\r\n\r\n```\r\nfrom collections import OrderedDict\r\nOD=OrderedDict()\r\nfor k in reversed(OD.keys()):\r\n    pass\r\n```\r\n\r\nThis is a specific instance of a general problem: how do we deal with different typing behaviour from version to version of python? Should the stubs only keep up with the most current version of python? It would actually be better to always use the most version-specific version of a stub (i.e. `stubs/3.3/collections.pyi` if using py3.3), or to have the ability to tell mypy to type check against a specific minor version of python.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/874/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Policy regarding python version specific stub changes", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/874/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-09-15T13:36:17Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "locked": false}, {"milestone": null, "number": 873, "html_url": "https://github.com/python/mypy/pull/873", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/873", "id": 105791546, "events_url": "https://api.github.com/repos/python/mypy/issues/873/events", "updated_at": "2015-10-17T22:26:02Z", "body": "As reported in #868 and the generic example that @nierob reported in #836\r\n\r\nNow don't crash in:\r\n\r\n```\r\nimport asyncio\r\n\r\n@asyncio.coroutine\r\ndef example_coro():\r\n    q = asyncio.Queue()\r\n    msg = yield from q.get()\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(example_coro())\r\n```\r\n\r\nBut that example is because don't infer asyncio.Queue type properly as\r\nis appointed in #836, and q is AnyType (instead of asyncio.Queue)\r\n\r\nand\r\n\r\n```\r\nimport asyncio\r\nimport typing\r\n\r\n@asyncio.coroutine\r\ndef foo(a):\r\n   b = yield from a\r\n   return b\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/873/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix when yield from was made of an AnyType", "assignee": null, "closed_at": "2015-10-17T22:26:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/873/comments", "labels": [], "created_at": "2015-09-10T11:58:15Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/873.patch", "html_url": "https://github.com/python/mypy/pull/873", "diff_url": "https://github.com/python/mypy/pull/873.diff", "url": "https://api.github.com/repos/python/mypy/pulls/873"}, "locked": false}, {"milestone": null, "number": 872, "html_url": "https://github.com/python/mypy/issues/872", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/872", "id": 105725271, "events_url": "https://api.github.com/repos/python/mypy/issues/872/events", "updated_at": "2015-10-07T06:10:24Z", "body": "Maybe we should run stubgen against all standard library modules and include the generated stubs in the repo with little or no manual review. Even if some of them might be of limited use, it's better to have *some* stubs for every module rather than only having manually vetted stubs for a subset of the modules.\r\n\r\nSimilarly, we could auto-generate stubs for the most widely used 3rd party modules. It would probably make sense to verify stubs for 3rd party modules more carefully as they may be more likely to do things that will confuse the stub generator -- but that's just a hunch.\r\n\r\nIt would then be easy for people to file issues against stubs that have issues and send pull requests that add type annotations to stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/872/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use stubgen to generate stubs for all standard library modules", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/872/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-09-10T03:31:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 871, "html_url": "https://github.com/python/mypy/issues/871", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/871", "id": 105483888, "events_url": "https://api.github.com/repos/python/mypy/issues/871/events", "updated_at": "2015-09-10T03:26:16Z", "body": "When I run mypy against a file that uses configparser, I get an error:\r\n\r\ncfg.py, line 1: No module named 'configparser'\r\n\r\nThis is on python 3.4.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/871/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy can't find configparser module", "assignee": null, "closed_at": "2015-09-09T18:54:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/871/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-09-08T22:45:10Z", "user": {"followers_url": "https://api.github.com/users/mgrinder/followers", "gists_url": "https://api.github.com/users/mgrinder/gists{/gist_id}", "html_url": "https://github.com/mgrinder", "following_url": "https://api.github.com/users/mgrinder/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4172958?v=3", "url": "https://api.github.com/users/mgrinder", "organizations_url": "https://api.github.com/users/mgrinder/orgs", "starred_url": "https://api.github.com/users/mgrinder/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mgrinder/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mgrinder/subscriptions", "login": "mgrinder", "repos_url": "https://api.github.com/users/mgrinder/repos", "received_events_url": "https://api.github.com/users/mgrinder/received_events", "id": 4172958, "site_admin": false}, "locked": false}, {"milestone": null, "number": 870, "html_url": "https://github.com/python/mypy/issues/870", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/870", "id": 105281499, "events_url": "https://api.github.com/repos/python/mypy/issues/870/events", "updated_at": "2016-03-02T17:16:35Z", "body": "It's probably a good idea to get the method implementations from `collections` when possible.", "labels_url": "https://api.github.com/repos/python/mypy/issues/870/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add MutableSequence, MutableMapping and MutableSet to Python 2 typing module", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/870/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-09-08T00:59:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 869, "html_url": "https://github.com/python/mypy/pull/869", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/869", "id": 104702500, "events_url": "https://api.github.com/repos/python/mypy/issues/869/events", "updated_at": "2015-09-07T16:32:59Z", "body": "I hope this will be of some help.", "labels_url": "https://api.github.com/repos/python/mypy/issues/869/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add stub for codecs.open", "assignee": null, "closed_at": "2015-09-07T16:32:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/869/comments", "labels": [], "created_at": "2015-09-03T14:05:20Z", "user": {"followers_url": "https://api.github.com/users/narusemotoki/followers", "gists_url": "https://api.github.com/users/narusemotoki/gists{/gist_id}", "html_url": "https://github.com/narusemotoki", "following_url": "https://api.github.com/users/narusemotoki/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1593495?v=3", "url": "https://api.github.com/users/narusemotoki", "organizations_url": "https://api.github.com/users/narusemotoki/orgs", "starred_url": "https://api.github.com/users/narusemotoki/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/narusemotoki/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/narusemotoki/subscriptions", "login": "narusemotoki", "repos_url": "https://api.github.com/users/narusemotoki/repos", "received_events_url": "https://api.github.com/users/narusemotoki/received_events", "id": 1593495, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/869.patch", "html_url": "https://github.com/python/mypy/pull/869", "diff_url": "https://github.com/python/mypy/pull/869.diff", "url": "https://api.github.com/repos/python/mypy/pulls/869"}, "locked": false}, {"milestone": null, "number": 868, "html_url": "https://github.com/python/mypy/issues/868", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/868", "id": 104639005, "events_url": "https://api.github.com/repos/python/mypy/issues/868/events", "updated_at": "2015-10-01T12:09:37Z", "body": "Using the latest master from today `mypy 0.2.0-dev`.\r\n\r\n```Python\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 184, in <module>\r\n    main()\r\n  File \"/usr/local/bin/mypy\", line 36, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"/usr/local/bin/mypy\", line 80, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 160, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 337, in process\r\n    next.process()\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/build.py\", line 786, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 353, in visit_file\r\n    self.accept(d)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/nodes.py\", line 380, in accept\r\n    return visitor.visit_decorator(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 1646, in visit_decorator\r\n    e.func.accept(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/nodes.py\", line 349, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 417, in visit_func_def\r\n    self.check_func_item(defn, name=defn.name())\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 450, in check_func_item\r\n    self.check_func_def(defn, typ, name)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 517, in check_func_def\r\n    self.accept_in_frame(item.body)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 373, in accept_in_frame\r\n    answer = self.accept(node, type_context)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/nodes.py\", line 493, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 907, in visit_block\r\n    self.accept(s)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/nodes.py\", line 532, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 916, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 944, in check_assignment\r\n    self.infer_variable_type(inferred, lvalue, self.accept(rvalue),\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/nodes.py\", line 944, in accept\r\n    return visitor.visit_yield_from_expr(self)\r\n  File \"/usr/local/lib/python3.4/dist-packages/mypy/checker.py\", line 1693, in visit_yield_from_expr\r\n    if result_instance.type.fullname() == \"asyncio.futures.Future\":\r\nAttributeError: 'AnyType' object has no attribute 'type'\r\n```\r\n\r\n\r\n\r\nHere is a minimal program to reproduce:\r\n```Python\r\nimport asyncio\r\n\r\n@asyncio.coroutine\r\ndef example_coro():\r\n    q = asyncio.Queue()\r\n    msg = yield from q.get()\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(example_coro())\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/868/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Exception while typechecking python3.4 program using asyncio.Queue.get", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/868/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-09-03T07:39:42Z", "user": {"followers_url": "https://api.github.com/users/thomascellerier/followers", "gists_url": "https://api.github.com/users/thomascellerier/gists{/gist_id}", "html_url": "https://github.com/thomascellerier", "following_url": "https://api.github.com/users/thomascellerier/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1765766?v=3", "url": "https://api.github.com/users/thomascellerier", "organizations_url": "https://api.github.com/users/thomascellerier/orgs", "starred_url": "https://api.github.com/users/thomascellerier/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/thomascellerier/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/thomascellerier/subscriptions", "login": "thomascellerier", "repos_url": "https://api.github.com/users/thomascellerier/repos", "received_events_url": "https://api.github.com/users/thomascellerier/received_events", "id": 1765766, "site_admin": false}, "locked": false}, {"milestone": null, "number": 867, "html_url": "https://github.com/python/mypy/issues/867", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/867", "id": 104393378, "events_url": "https://api.github.com/repos/python/mypy/issues/867/events", "updated_at": "2015-09-02T03:06:36Z", "body": "Assume `m.pyi` like this:\r\n\r\n```\r\nfrom typing import Tuple\r\na = ... # type: A\r\nclass A(Tuple[int, str]): ...\r\n```\r\n\r\nNow this error isn't caught by mypy:\r\n\r\n```\r\nfrom m import a\r\na[0]()\r\n```\r\n\r\nThis is caused by the class definition being after the type reference in `m.pyi`. Apparently tuple item types don't get propagated because the class hasn't been semantically analyzed yet when binding the type.", "labels_url": "https://api.github.com/repos/python/mypy/issues/867/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error when using tuple base class not detected", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/867/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-09-02T03:06:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 866, "html_url": "https://github.com/python/mypy/pull/866", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/866", "id": 103991078, "events_url": "https://api.github.com/repos/python/mypy/issues/866/events", "updated_at": "2015-10-12T17:52:25Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/866/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add stub for contextlib.closing", "assignee": null, "closed_at": "2015-10-07T03:44:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/866/comments", "labels": [], "created_at": "2015-08-31T05:39:21Z", "user": {"followers_url": "https://api.github.com/users/wizzardx/followers", "gists_url": "https://api.github.com/users/wizzardx/gists{/gist_id}", "html_url": "https://github.com/wizzardx", "following_url": "https://api.github.com/users/wizzardx/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1143852?v=3", "url": "https://api.github.com/users/wizzardx", "organizations_url": "https://api.github.com/users/wizzardx/orgs", "starred_url": "https://api.github.com/users/wizzardx/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/wizzardx/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/wizzardx/subscriptions", "login": "wizzardx", "repos_url": "https://api.github.com/users/wizzardx/repos", "received_events_url": "https://api.github.com/users/wizzardx/received_events", "id": 1143852, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/866.patch", "html_url": "https://github.com/python/mypy/pull/866", "diff_url": "https://github.com/python/mypy/pull/866.diff", "url": "https://api.github.com/repos/python/mypy/pulls/866"}, "locked": false}, {"milestone": null, "number": 865, "html_url": "https://github.com/python/mypy/issues/865", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/865", "id": 103932997, "events_url": "https://api.github.com/repos/python/mypy/issues/865/events", "updated_at": "2015-08-31T17:52:59Z", "body": "Linters like `flake8` can detect unused imports, but this actually doesn't work with PEP 484 compliant code, as some of the uses can be in comments that are not seen by the linter. For example:\r\n\r\n```\r\nfrom typing import List   # 'List' imported but unused \r\nx = []  # type: List[int]\r\n```\r\n\r\nWe should either try to get linters fixed (file issues) or allow mypy to detect these kinds of errors reliably.", "labels_url": "https://api.github.com/repos/python/mypy/issues/865/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Figure out how to detect unused imports", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/865/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-08-30T16:30:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 864, "html_url": "https://github.com/python/mypy/issues/864", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/864", "id": 103830470, "events_url": "https://api.github.com/repos/python/mypy/issues/864/events", "updated_at": "2015-10-25T20:36:58Z", "body": "Code like the following gives an error stopping mypy from type checking the rest of the file:\r\n```\r\nimport foo # type: ignore\r\n\r\nclass B(foo.A):\r\n    pass\r\n```\r\n```\r\nmoo.py:3: error: Invalid type \"__main__.foo\"\r\n```\r\nGiven that the first `type: ignore` told mypy that `foo.A` could be arbitrary, it should allow it to be a type that `B` can inherit from.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/864/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot inherit from Any type", "assignee": null, "closed_at": "2015-10-25T20:36:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/864/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-29T05:31:38Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "locked": false}, {"milestone": null, "number": 863, "html_url": "https://github.com/python/mypy/issues/863", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/863", "id": 103829989, "events_url": "https://api.github.com/repos/python/mypy/issues/863/events", "updated_at": "2015-08-31T05:14:51Z", "body": "`(1,)*3` should be of type `Tuple[int,int,int]`, not raise an exception.\r\n\r\nI suppose `(1,)*n` may as well wait for proper tuple sequences, though.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/863/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Multiply Tuple with IntExpr", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/863/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-29T05:18:21Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "locked": false}, {"milestone": null, "number": 862, "html_url": "https://github.com/python/mypy/issues/862", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/862", "id": 103829494, "events_url": "https://api.github.com/repos/python/mypy/issues/862/events", "updated_at": "2015-08-31T18:04:04Z", "body": "Code like the following gives an error:\r\n```\r\ndef bar() -> None: pass\r\n\r\nif 1:\r\n    def foo() -> None: pass\r\nelse:\r\n    foo = bar\r\n```\r\n\r\n```\r\nfoo.py:6: error: Invalid assignment target\r\n```\r\n\r\neven though replacing `foo = bar` with another `def foo()` would work fine.  This seems related to #708 but distinct.", "labels_url": "https://api.github.com/repos/python/mypy/issues/862/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid assignment target when setting function to compatible function type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/862/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-08-29T04:58:46Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "locked": false}, {"milestone": null, "number": 861, "html_url": "https://github.com/python/mypy/pull/861", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/861", "id": 103443965, "events_url": "https://api.github.com/repos/python/mypy/issues/861/events", "updated_at": "2015-08-28T04:05:35Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/861/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix typo in datetime.datetime constructor", "assignee": null, "closed_at": "2015-08-28T04:05:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/861/comments", "labels": [], "created_at": "2015-08-27T07:15:03Z", "user": {"followers_url": "https://api.github.com/users/wizzardx/followers", "gists_url": "https://api.github.com/users/wizzardx/gists{/gist_id}", "html_url": "https://github.com/wizzardx", "following_url": "https://api.github.com/users/wizzardx/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1143852?v=3", "url": "https://api.github.com/users/wizzardx", "organizations_url": "https://api.github.com/users/wizzardx/orgs", "starred_url": "https://api.github.com/users/wizzardx/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/wizzardx/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/wizzardx/subscriptions", "login": "wizzardx", "repos_url": "https://api.github.com/users/wizzardx/repos", "received_events_url": "https://api.github.com/users/wizzardx/received_events", "id": 1143852, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/861.patch", "html_url": "https://github.com/python/mypy/pull/861", "diff_url": "https://github.com/python/mypy/pull/861.diff", "url": "https://api.github.com/repos/python/mypy/pulls/861"}, "locked": false}, {"milestone": null, "number": 860, "html_url": "https://github.com/python/mypy/pull/860", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/860", "id": 102581519, "events_url": "https://api.github.com/repos/python/mypy/issues/860/events", "updated_at": "2015-10-02T13:35:39Z", "body": "This makes it easier to diff two reports, for example.", "labels_url": "https://api.github.com/repos/python/mypy/issues/860/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Insert newlines in HTML report", "assignee": null, "closed_at": "2015-10-01T13:21:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/860/comments", "labels": [], "created_at": "2015-08-23T02:32:10Z", "user": {"followers_url": "https://api.github.com/users/sanxiyn/followers", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "html_url": "https://github.com/sanxiyn", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=3", "url": "https://api.github.com/users/sanxiyn", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "login": "sanxiyn", "repos_url": "https://api.github.com/users/sanxiyn/repos", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "id": 45249, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/860.patch", "html_url": "https://github.com/python/mypy/pull/860", "diff_url": "https://github.com/python/mypy/pull/860.diff", "url": "https://api.github.com/repos/python/mypy/pulls/860"}, "locked": false}, {"milestone": null, "number": 859, "html_url": "https://github.com/python/mypy/issues/859", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/859", "id": 102445002, "events_url": "https://api.github.com/repos/python/mypy/issues/859/events", "updated_at": "2015-12-01T05:03:44Z", "body": "This code:\r\n```\r\nfrom typing import TypeVar, Iterable, Iterator, Callable, Tuple\r\nimport itertools\r\n\r\n_T = TypeVar('_T')\r\n\r\ndef f(iterable): # type: (Iterable[_T]) -> Iterator[List[_T]]\r\n    grouped = itertools.groupby(enumerate(iterable), lambda pair: pair[0] // 2)\r\n    return ([elem for _, elem in group] for _, group in grouped)\r\n```\r\nGives: `test.py: note: In function \"f\": test.py:7: error: Value of type object is not indexable`.\r\nAnnotating the lambda with a concrete type seems to help:\r\n```\r\ndef f(iterable): # type: (Iterable[_T]) -> Iterator[List[_T]]\r\n    l = lambda pair: pair[0] // 2 # type: Callable[[Tuple[int, _T]], int]\r\n    grouped = itertools.groupby(enumerate(iterable), l)\r\n    return ([elem for _, elem in group] for _, group in grouped)\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/859/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference needs help with lambdas", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/859/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T19:09:05Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 858, "html_url": "https://github.com/python/mypy/issues/858", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/858", "id": 102443139, "events_url": "https://api.github.com/repos/python/mypy/issues/858/events", "updated_at": "2015-08-21T18:57:41Z", "body": "This results in a hang, when type checked in `--py2` mode (but only then):\r\n\r\n```\r\n# mypy: weak=global\r\nans = set()\r\nans = ans.union([])\r\nfor i in range(10):\r\n    ans = ans.union([])\r\n```\r\n\r\nTraceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jukka/src/mypy/scripts/mypy\", line 184, in <module>\r\n    main()\r\n  File \"/Users/jukka/src/mypy/scripts/mypy\", line 36, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"/Users/jukka/src/mypy/scripts/mypy\", line 80, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/jukka/src/mypy/mypy/build.py\", line 160, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/Users/jukka/src/mypy/mypy/build.py\", line 344, in process\r\n    next.process()\r\n  File \"/Users/jukka/src/mypy/mypy/build.py\", line 796, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 359, in visit_file\r\n    self.accept(d)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 366, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/jukka/src/mypy/mypy/nodes.py\", line 585, in accept\r\n    return visitor.visit_for_stmt(self)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 1602, in visit_for_stmt\r\n    self.accept_in_frame(s.body, repeat_till_fixed=True)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 380, in accept_in_frame\r\n    changed, _ = self.binder.pop_frame(True, True)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 189, in pop_frame\r\n    changed = self.update_from_options(options)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 144, in update_from_options\r\n    type = join_simple(self.frames[0][key], type, other)\r\n  File \"/Users/jukka/src/mypy/mypy/join.py\", line 26, in join_simple\r\n    if is_subtype(s, t):\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 47, in is_subtype\r\n    return left.accept(SubtypeVisitor(right, type_parameter_checker))\r\n  File \"/Users/jukka/src/mypy/mypy/types.py\", line 178, in accept\r\n    return visitor.visit_instance(self)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 108, in visit_instance\r\n    zip(t.args, right.args, right.type.defn.type_vars))\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 107, in <genexpr>\r\n    for lefta, righta, tvar in\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 20, in check_type_parameter\r\n    return is_subtype(lefta, righta, check_type_parameter)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 47, in is_subtype\r\n    return left.accept(SubtypeVisitor(right, type_parameter_checker))\r\n  File \"/Users/jukka/src/mypy/mypy/types.py\", line 459, in accept\r\n    return visitor.visit_union_type(self)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 180, in visit_union_type\r\n    for item in left.items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 180, in <genexpr>\r\n    for item in left.items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 47, in is_subtype\r\n    return left.accept(SubtypeVisitor(right, type_parameter_checker))\r\n  File \"/Users/jukka/src/mypy/mypy/types.py\", line 459, in accept\r\n    return visitor.visit_union_type(self)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 180, in visit_union_type\r\n    for item in left.items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 180, in <genexpr>\r\n    for item in left.items)\r\n...\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in is_subtype\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in <genexpr>\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in is_subtype\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in <genexpr>\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in is_subtype\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in <genexpr>\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in is_subtype\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in <genexpr>\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in is_subtype\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in <genexpr>\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in is_subtype\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in <genexpr>\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in is_subtype\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 45, in <genexpr>\r\n    for item in cast(UnionType, right).items)\r\n  File \"/Users/jukka/src/mypy/mypy/subtypes.py\", line 40, in is_subtype\r\n    if (isinstance(right, AnyType) or isinstance(right, UnboundType)\r\n  File \"/Users/jukka/venv/mypy/bin/../lib/python3.4/abc.py\", line 182, in __instancecheck__\r\n    if subclass in cls._abc_cache:\r\n  File \"/Users/jukka/venv/mypy/bin/../lib/python3.4/_weakrefset.py\", line 72, in __contains__\r\n    wr = ref(item)\r\nKeyboardInterrupt\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/858/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Hang when type checking in weak global mode", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/858/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T18:57:41Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 857, "html_url": "https://github.com/python/mypy/issues/857", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/857", "id": 102441147, "events_url": "https://api.github.com/repos/python/mypy/issues/857/events", "updated_at": "2016-03-17T19:27:42Z", "body": "```\r\nclass A:\r\n    def __init__(self, a): pass\r\nclass B(A):\r\n    def __init__(self, a):\r\n        super(B, self).__init__(a)\r\n        self._inner = super(B, self)\r\n```\r\nYields: `test.py:6: error: Name 'super' is not defined`", "labels_url": "https://api.github.com/repos/python/mypy/issues/857/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Doesn't recognize all uses of super", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/857/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-08-21T18:45:49Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 856, "html_url": "https://github.com/python/mypy/pull/856", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/856", "id": 102439868, "events_url": "https://api.github.com/repos/python/mypy/issues/856/events", "updated_at": "2016-01-12T22:21:27Z", "body": "Not well tested, but seems to work in a simple case and doesn't break any tests.", "labels_url": "https://api.github.com/repos/python/mypy/issues/856/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Suggestions for alternate methods when an attribute isn't found", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-23T22:25:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/856/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T18:37:29Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/856.patch", "html_url": "https://github.com/python/mypy/pull/856", "diff_url": "https://github.com/python/mypy/pull/856.diff", "url": "https://api.github.com/repos/python/mypy/pulls/856"}, "locked": false}, {"milestone": null, "number": 855, "html_url": "https://github.com/python/mypy/pull/855", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/855", "id": 102437791, "events_url": "https://api.github.com/repos/python/mypy/issues/855/events", "updated_at": "2015-08-21T20:08:21Z", "body": "Issue #853.", "labels_url": "https://api.github.com/repos/python/mypy/issues/855/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Docstring issues", "assignee": null, "closed_at": "2015-08-21T20:08:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/855/comments", "labels": [], "created_at": "2015-08-21T18:24:22Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/855.patch", "html_url": "https://github.com/python/mypy/pull/855", "diff_url": "https://github.com/python/mypy/pull/855.diff", "url": "https://api.github.com/repos/python/mypy/pulls/855"}, "locked": false}, {"milestone": null, "number": 854, "html_url": "https://github.com/python/mypy/issues/854", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/854", "id": 102427161, "events_url": "https://api.github.com/repos/python/mypy/issues/854/events", "updated_at": "2015-09-07T20:18:22Z", "body": "```\r\nfrom typing import overload\r\n\r\n@overload\r\ndef f(x: int) -> int: pass\r\n@overload\r\ndef f(x: float) -> float: pass\r\n\r\nf(1 - .1) # E: Argument 1 to \"f\" has incompatible type \"float\"; expected \"int\"\r\n```\r\n\r\nProbably picks the wrong overload item for some reason.\r\n\r\nThis seems like the same issue:\r\n\r\n```\r\n[1 - .1]  # error\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/854/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check error with overloaded function", "assignee": null, "closed_at": "2015-09-07T20:18:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/854/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T17:27:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 853, "html_url": "https://github.com/python/mypy/issues/853", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/853", "id": 102423911, "events_url": "https://api.github.com/repos/python/mypy/issues/853/events", "updated_at": "2015-12-12T22:21:11Z", "body": "Issues:\r\n\r\n* Don't use strings which have commas outside square brackets (e.g. `int, optional`), as the commas can be interpreted as argument delimiters.\r\n* Don't use string which have parentheses.\r\n* Figure out what happens if there are `**kwargs` or `*args`.\r\n\r\nThis example was reported my @MichalPokorny:\r\n\r\n```\r\ndef a(abc, **kwargs):\r\n   \"\"\"\r\n   Args:\r\n   abc: Bar (either \"bar\" or \"BAR\")\r\n   \"\"\"\r\n   pass\r\n```\r\n\r\nThe code is mostly in `mypy/mypy/docstring.py` and `mypy/mypy/test/testdocstring.py` + some code in `mypy/parse.py`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/853/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix issues with docstring parser", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/853/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T17:10:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 852, "html_url": "https://github.com/python/mypy/issues/852", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/852", "id": 102329843, "events_url": "https://api.github.com/repos/python/mypy/issues/852/events", "updated_at": "2015-08-24T19:38:29Z", "body": "Python 3.4.3 x64, mypy master, Windows 7 x64.\r\n\r\nA class inheriting from a list of classes via asterisk leads to a parse error.\r\n\r\nAlso happens with lone classes before the list.\r\n\r\nExample:\r\n```\r\nclasses = []    # type: List[type]\r\n\r\nclass TestClass(*classes): pass\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/852/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Class inheritance asterisk leads to \"Parse error before *\"", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/852/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-21T08:51:12Z", "user": {"followers_url": "https://api.github.com/users/jimbo1qaz/followers", "gists_url": "https://api.github.com/users/jimbo1qaz/gists{/gist_id}", "html_url": "https://github.com/jimbo1qaz", "following_url": "https://api.github.com/users/jimbo1qaz/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/913957?v=3", "url": "https://api.github.com/users/jimbo1qaz", "organizations_url": "https://api.github.com/users/jimbo1qaz/orgs", "starred_url": "https://api.github.com/users/jimbo1qaz/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jimbo1qaz/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jimbo1qaz/subscriptions", "login": "jimbo1qaz", "repos_url": "https://api.github.com/users/jimbo1qaz/repos", "received_events_url": "https://api.github.com/users/jimbo1qaz/received_events", "id": 913957, "site_admin": false}, "locked": false}, {"milestone": null, "number": 851, "html_url": "https://github.com/python/mypy/pull/851", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/851", "id": 102322971, "events_url": "https://api.github.com/repos/python/mypy/issues/851/events", "updated_at": "2015-10-12T17:52:51Z", "body": "These methods need to return `Future[T]` and `Future`, respectively. More details in https://github.com/JukkaL/mypy/issues/836", "labels_url": "https://api.github.com/repos/python/mypy/issues/851/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fixed Queue.get and Queue.put return types.", "assignee": null, "closed_at": "2015-10-07T03:38:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/851/comments", "labels": [], "created_at": "2015-08-21T08:11:17Z", "user": {"followers_url": "https://api.github.com/users/ze-phyr-us/followers", "gists_url": "https://api.github.com/users/ze-phyr-us/gists{/gist_id}", "html_url": "https://github.com/ze-phyr-us", "following_url": "https://api.github.com/users/ze-phyr-us/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4436927?v=3", "url": "https://api.github.com/users/ze-phyr-us", "organizations_url": "https://api.github.com/users/ze-phyr-us/orgs", "starred_url": "https://api.github.com/users/ze-phyr-us/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ze-phyr-us/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ze-phyr-us/subscriptions", "login": "ze-phyr-us", "repos_url": "https://api.github.com/users/ze-phyr-us/repos", "received_events_url": "https://api.github.com/users/ze-phyr-us/received_events", "id": 4436927, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/851.patch", "html_url": "https://github.com/python/mypy/pull/851", "diff_url": "https://github.com/python/mypy/pull/851.diff", "url": "https://api.github.com/repos/python/mypy/pulls/851"}, "locked": false}, {"milestone": null, "number": 850, "html_url": "https://github.com/python/mypy/issues/850", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/850", "id": 102291471, "events_url": "https://api.github.com/repos/python/mypy/issues/850/events", "updated_at": "2015-08-21T03:48:07Z", "body": "We shouldn't have to import `Any`, etc. from `typing` when using docstring annotations, at least when using things like `list of string` instead of `List[str]`, or when having implicit `Any` types.", "labels_url": "https://api.github.com/repos/python/mypy/issues/850/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make imports from typing implicit when using docstring annotations", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/850/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T03:48:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 849, "html_url": "https://github.com/python/mypy/issues/849", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/849", "id": 102282338, "events_url": "https://api.github.com/repos/python/mypy/issues/849/events", "updated_at": "2015-08-21T02:40:41Z", "body": "Currently we silently accept bad docstring annotations. We should probably report an error if a function seems to have an annotation but we can't parse it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/849/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "No error on invalid docstring annotations", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/849/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T02:40:41Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 848, "html_url": "https://github.com/python/mypy/issues/848", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/848", "id": 102271798, "events_url": "https://api.github.com/repos/python/mypy/issues/848/events", "updated_at": "2015-08-24T19:29:14Z", "body": "Given:\r\n```\r\nA = ['x']\r\nT = namedtuple('T', A)\r\n```\r\nWe get: `error: List literal expected as the second argument to namedtuple()`. Mypy should be able to handle this somehow, e.g., by allowing any operation on `T` instances if the second argument to `namedtuple` is not a list literal.", "labels_url": "https://api.github.com/repos/python/mypy/issues/848/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy doesn't handle namedtuples with dynamic fields", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/848/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-08-21T01:04:56Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 847, "html_url": "https://github.com/python/mypy/pull/847", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/847", "id": 102271786, "events_url": "https://api.github.com/repos/python/mypy/issues/847/events", "updated_at": "2016-01-12T22:20:45Z", "body": "Tests pass, at least.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/847/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fall back to type info extracted from docstrings to type functions", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-21T02:39:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/847/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T01:04:44Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/847.patch", "html_url": "https://github.com/python/mypy/pull/847", "diff_url": "https://github.com/python/mypy/pull/847.diff", "url": "https://api.github.com/repos/python/mypy/pulls/847"}, "locked": false}, {"milestone": null, "number": 846, "html_url": "https://github.com/python/mypy/issues/846", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/846", "id": 102270630, "events_url": "https://api.github.com/repos/python/mypy/issues/846/events", "updated_at": "2015-08-21T01:09:55Z", "body": "```\r\ntry:\r\n    1/0\r\nexcept Exception, e:\r\n    print \"foo\"\r\n```\r\nGives: `error: Name 'e' is not defined`", "labels_url": "https://api.github.com/repos/python/mypy/issues/846/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Doesn't recognize 'except Exception, e' in Python 2", "assignee": null, "closed_at": "2015-08-21T01:09:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/846/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T00:53:37Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 845, "html_url": "https://github.com/python/mypy/issues/845", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/845", "id": 102267374, "events_url": "https://api.github.com/repos/python/mypy/issues/845/events", "updated_at": "2015-08-21T00:25:57Z", "body": "I've seen `FuncDef.expanded` to have a cycle to the original function definition object when generating stats. I don't have a simple repro yet, but filing this anyway so that I won't forget about it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/845/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Expanded FuncDef can contain a cycle", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/845/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-21T00:25:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 844, "html_url": "https://github.com/python/mypy/issues/844", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/844", "id": 102241939, "events_url": "https://api.github.com/repos/python/mypy/issues/844/events", "updated_at": "2015-08-20T22:03:36Z", "body": "I get an uncaught exception when I type check this code (thanks to @MichalPokorny for reporting this!):\r\n\r\n```\r\nclass C:\r\n    x = []\r\n\r\nx = C.x\r\n```\r\n\r\nTraceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jukka/src/mypy/scripts/mypy\", line 184, in <module>\r\n    main()\r\n  File \"/Users/jukka/src/mypy/scripts/mypy\", line 36, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"/Users/jukka/src/mypy/scripts/mypy\", line 80, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/jukka/src/mypy/mypy/build.py\", line 160, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/Users/jukka/src/mypy/mypy/build.py\", line 344, in process\r\n    next.process()\r\n  File \"/Users/jukka/src/mypy/mypy/build.py\", line 795, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 353, in visit_file\r\n    self.accept(d)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/jukka/src/mypy/mypy/nodes.py\", line 532, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 912, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 940, in check_assignment\r\n    self.infer_variable_type(inferred, lvalue, self.accept(rvalue),\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/jukka/src/mypy/mypy/nodes.py\", line 893, in accept\r\n    return visitor.visit_member_expr(self)\r\n  File \"/Users/jukka/src/mypy/mypy/checker.py\", line 1708, in visit_member_expr\r\n    return self.expr_checker.visit_member_expr(e)\r\n  File \"/Users/jukka/src/mypy/mypy/checkexpr.py\", line 677, in visit_member_expr\r\n    result = self.analyze_ordinary_member_access(e, False)\r\n  File \"/Users/jukka/src/mypy/mypy/checkexpr.py\", line 690, in analyze_ordinary_member_access\r\n    self.named_type, self.msg)\r\n  File \"/Users/jukka/src/mypy/mypy/checkmember.py\", line 86, in analyze_member_access\r\n    result = analyze_class_attribute_access(itype, name, node, is_lvalue, builtin_type, msg)\r\n  File \"/Users/jukka/src/mypy/mypy/checkmember.py\", line 234, in analyze_class_attribute_access\r\n    return function_type(cast(FuncBase, node.node), builtin_type('builtins.function'))\r\n  File \"/Users/jukka/src/mypy/mypy/nodes.py\", line 1682, in function_type\r\n    for arg in fdef.args:\r\nAttributeError: 'Var' object has no attribute 'args'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/844/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash when type checking class attribute access", "assignee": null, "closed_at": "2015-08-20T22:03:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/844/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-20T21:29:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 843, "html_url": "https://github.com/python/mypy/pull/843", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/843", "id": 102236857, "events_url": "https://api.github.com/repos/python/mypy/issues/843/events", "updated_at": "2015-08-20T21:04:20Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/843/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crude stub for buffer", "assignee": null, "closed_at": "2015-08-20T21:04:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/843/comments", "labels": [], "created_at": "2015-08-20T21:04:16Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/843.patch", "html_url": "https://github.com/python/mypy/pull/843", "diff_url": "https://github.com/python/mypy/pull/843.diff", "url": "https://api.github.com/repos/python/mypy/pulls/843"}, "locked": false}, {"milestone": null, "number": 842, "html_url": "https://github.com/python/mypy/issues/842", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/842", "id": 102227869, "events_url": "https://api.github.com/repos/python/mypy/issues/842/events", "updated_at": "2015-08-23T23:11:20Z", "body": "e.g. this code fails because the `or` statement has type `object`\r\n```\r\nint(os.environ.get('blah blah') or 2)\r\n```\r\n\r\nit should generate `Union[str, int]`", "labels_url": "https://api.github.com/repos/python/mypy/issues/842/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Improve type of `or` operator when used for fallback logic", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/842/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-20T20:18:57Z", "user": {"followers_url": "https://api.github.com/users/jingw/followers", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "html_url": "https://github.com/jingw", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2019426?v=3", "url": "https://api.github.com/users/jingw", "organizations_url": "https://api.github.com/users/jingw/orgs", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "login": "jingw", "repos_url": "https://api.github.com/users/jingw/repos", "received_events_url": "https://api.github.com/users/jingw/received_events", "id": 2019426, "site_admin": false}, "locked": false}, {"milestone": null, "number": 841, "html_url": "https://github.com/python/mypy/pull/841", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/841", "id": 102225670, "events_url": "https://api.github.com/repos/python/mypy/issues/841/events", "updated_at": "2015-08-20T22:04:58Z", "body": "This will make debugging type annotations easier.", "labels_url": "https://api.github.com/repos/python/mypy/issues/841/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Include types in error message \"No overload variant of ... of ... matches argument types\"", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-20T21:34:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/841/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-20T20:06:53Z", "user": {"followers_url": "https://api.github.com/users/jingw/followers", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "html_url": "https://github.com/jingw", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2019426?v=3", "url": "https://api.github.com/users/jingw", "organizations_url": "https://api.github.com/users/jingw/orgs", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "login": "jingw", "repos_url": "https://api.github.com/users/jingw/repos", "received_events_url": "https://api.github.com/users/jingw/received_events", "id": 2019426, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/841.patch", "html_url": "https://github.com/python/mypy/pull/841", "diff_url": "https://github.com/python/mypy/pull/841.diff", "url": "https://api.github.com/repos/python/mypy/pulls/841"}, "locked": false}, {"milestone": null, "number": 840, "html_url": "https://github.com/python/mypy/pull/840", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/840", "id": 102212911, "events_url": "https://api.github.com/repos/python/mypy/issues/840/events", "updated_at": "2015-08-20T22:04:33Z", "body": "Worked against Dropbox code and unit tests.\r\n```\r\n$ python3 tests.py\r\n2240 test cases run, 15 skipped, all passed.\r\n*** OK ***\r\n```\r\n\r\nCloses #811", "labels_url": "https://api.github.com/repos/python/mypy/issues/840/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow statements of the form `raise BaseException, \"message\", traceback`", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-20T22:04:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/840/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-20T19:14:21Z", "user": {"followers_url": "https://api.github.com/users/jingw/followers", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "html_url": "https://github.com/jingw", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2019426?v=3", "url": "https://api.github.com/users/jingw", "organizations_url": "https://api.github.com/users/jingw/orgs", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "login": "jingw", "repos_url": "https://api.github.com/users/jingw/repos", "received_events_url": "https://api.github.com/users/jingw/received_events", "id": 2019426, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/840.patch", "html_url": "https://github.com/python/mypy/pull/840", "diff_url": "https://github.com/python/mypy/pull/840.diff", "url": "https://api.github.com/repos/python/mypy/pulls/840"}, "locked": false}, {"milestone": null, "number": 839, "html_url": "https://github.com/python/mypy/issues/839", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/839", "id": 102212156, "events_url": "https://api.github.com/repos/python/mypy/issues/839/events", "updated_at": "2015-08-28T04:07:33Z", "body": "In addition to Python 3 function annotations and type comments we should also support annotations in docstrings, following Google docstring conventions. Example:\r\n\r\n```python\r\ndef f(x):\r\n    \"\"\"description...\r\n\r\n    Args:\r\n        x (int): describe...\r\n\r\n    Returns:\r\n        List[str]: describe...\r\n    \"\"\"\r\n    ...\r\n\r\nf('x')   # Error\r\n```\r\n\r\nThis would be primarily useful for code that needs to be Python 2 compatible. It should be possible to mix and match different kinds of annotations in a file. A type comment should take precedence over a docstring.\r\n\r\nThis should probably be opt-in (per file) so that we wouldn't give false positives for docstrings that don't fully conform to the expected syntax.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/839/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support annotations defined in docstrings", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/839/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-20T19:10:40Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 838, "html_url": "https://github.com/python/mypy/issues/838", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/838", "id": 102210695, "events_url": "https://api.github.com/repos/python/mypy/issues/838/events", "updated_at": "2015-12-03T16:50:54Z", "body": "It'd be useful to be able to run mypy on a whole project (or a subset of one) by just pointing it at a directory, and that can probably be done more efficiently than checking each module or file individually, as type information from dependencies could be shared.", "labels_url": "https://api.github.com/repos/python/mypy/issues/838/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow mypy to be run against a directory recursively", "assignee": null, "closed_at": "2015-10-30T03:33:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/838/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-20T19:06:02Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "locked": false}, {"milestone": null, "number": 837, "html_url": "https://github.com/python/mypy/pull/837", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/837", "id": 102191006, "events_url": "https://api.github.com/repos/python/mypy/issues/837/events", "updated_at": "2015-08-20T17:38:37Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/837/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Base class for simplejson.JSONDecodeError", "assignee": null, "closed_at": "2015-08-20T17:38:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/837/comments", "labels": [], "created_at": "2015-08-20T17:38:29Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/837.patch", "html_url": "https://github.com/python/mypy/pull/837", "diff_url": "https://github.com/python/mypy/pull/837.diff", "url": "https://api.github.com/repos/python/mypy/pulls/837"}, "locked": false}, {"milestone": null, "number": 836, "html_url": "https://github.com/python/mypy/issues/836", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/836", "id": 102177215, "events_url": "https://api.github.com/repos/python/mypy/issues/836/events", "updated_at": "2016-01-20T23:23:39Z", "body": "Analysing:\r\n```python\r\nimport asyncio\r\n\r\n@asyncio.coroutine\r\ndef test(self):\r\n\tqueue = asyncio.Queue(16384)\r\n\tsample = yield from queue.get()\r\n```\r\nResult:\r\n```\r\n  File \"/home/gjc/projects/mollytest/env/lib/python3.4/site-packages/mypy/checker.py\", line 1693, in visit_yield_from_expr\r\n    if result_instance.type.fullname() == \"asyncio.futures.Future\":\r\nAttributeError: 'AnyType' object has no attribute 'type'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/836/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Traceback analysing asyncio \"item = yield from queue.get()\"", "assignee": null, "closed_at": "2016-01-20T23:23:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/836/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-08-20T16:27:58Z", "user": {"followers_url": "https://api.github.com/users/gjcarneiro/followers", "gists_url": "https://api.github.com/users/gjcarneiro/gists{/gist_id}", "html_url": "https://github.com/gjcarneiro", "following_url": "https://api.github.com/users/gjcarneiro/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2197096?v=3", "url": "https://api.github.com/users/gjcarneiro", "organizations_url": "https://api.github.com/users/gjcarneiro/orgs", "starred_url": "https://api.github.com/users/gjcarneiro/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gjcarneiro/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gjcarneiro/subscriptions", "login": "gjcarneiro", "repos_url": "https://api.github.com/users/gjcarneiro/repos", "received_events_url": "https://api.github.com/users/gjcarneiro/received_events", "id": 2197096, "site_admin": false}, "locked": false}, {"milestone": null, "number": 835, "html_url": "https://github.com/python/mypy/pull/835", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/835", "id": 102033946, "events_url": "https://api.github.com/repos/python/mypy/issues/835/events", "updated_at": "2016-01-12T22:21:04Z", "body": "This doesn't resolve the initial test case, as the symbol initially exists without a type due to the first pass, but our problem case doesn't require that, so I made the 'same types imported from different modules' case pass.\r\n\r\nNo idea if this is the right approach; mostly just playing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/835/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Permit global symbol definition overwriting if the type is the same", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-20T16:38:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/835/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-20T01:04:19Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/835.patch", "html_url": "https://github.com/python/mypy/pull/835", "diff_url": "https://github.com/python/mypy/pull/835.diff", "url": "https://api.github.com/repos/python/mypy/pulls/835"}, "locked": false}, {"milestone": null, "number": 834, "html_url": "https://github.com/python/mypy/issues/834", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/834", "id": 102031307, "events_url": "https://api.github.com/repos/python/mypy/issues/834/events", "updated_at": "2015-08-20T22:02:57Z", "body": "```\r\njing@jing-mba:~/code/mypy$ git diff\r\ndiff --git a/stubs/2.7/builtins.pyi b/stubs/2.7/builtins.pyi\r\nindex fa88215..ae08b05 100644\r\n--- a/stubs/2.7/builtins.pyi\r\n+++ b/stubs/2.7/builtins.pyi\r\n@@ -531,6 +531,9 @@ class bytearray(Sequence[int]):\r\n     @overload\r\n     def __ge__(self, x: str) -> bool: ...\r\n \r\n+class buffer(object):\r\n+    def __init__(p_object: Any, offset: int = None, size: int = None) -> None: ...\r\n+\r\n class bool(int, SupportsInt, SupportsFloat):\r\n     def __init__(self, o: object = False) -> None: ...\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jing/code/mypy/scripts/mypy\", line 184, in <module>\r\n    main()\r\n  File \"/Users/jing/code/mypy/scripts/mypy\", line 36, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"/Users/jing/code/mypy/scripts/mypy\", line 80, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/jing/code/mypy/mypy/build.py\", line 160, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/Users/jing/code/mypy/mypy/build.py\", line 344, in process\r\n    next.process()\r\n  File \"/Users/jing/code/mypy/mypy/build.py\", line 793, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 353, in visit_file\r\n    self.accept(d)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/jing/code/mypy/mypy/nodes.py\", line 452, in accept\r\n    return visitor.visit_class_def(self)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 834, in visit_class_def\r\n    self.accept(defn.defs)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/jing/code/mypy/mypy/nodes.py\", line 493, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 903, in visit_block\r\n    self.accept(s)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/jing/code/mypy/mypy/nodes.py\", line 532, in accept\r\n    return visitor.visit_assignment_stmt(self)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 912, in visit_assignment_stmt\r\n    self.check_assignment(s.lvalues[-1], s.rvalue, s.type is None)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 940, in check_assignment\r\n    self.infer_variable_type(inferred, lvalue, self.accept(rvalue),\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/jing/code/mypy/mypy/nodes.py\", line 1077, in accept\r\n    return visitor.visit_op_expr(self)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 1742, in visit_op_expr\r\n    return self.expr_checker.visit_op_expr(e)\r\n  File \"/Users/jing/code/mypy/mypy/checkexpr.py\", line 746, in visit_op_expr\r\n    left_type = self.accept(e.left)\r\n  File \"/Users/jing/code/mypy/mypy/checkexpr.py\", line 1236, in accept\r\n    return self.chk.accept(node, context)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 360, in accept\r\n    typ = node.accept(self)\r\n  File \"/Users/jing/code/mypy/mypy/nodes.py\", line 893, in accept\r\n    return visitor.visit_member_expr(self)\r\n  File \"/Users/jing/code/mypy/mypy/checker.py\", line 1708, in visit_member_expr\r\n    return self.expr_checker.visit_member_expr(e)\r\n  File \"/Users/jing/code/mypy/mypy/checkexpr.py\", line 677, in visit_member_expr\r\n    result = self.analyze_ordinary_member_access(e, False)\r\n  File \"/Users/jing/code/mypy/mypy/checkexpr.py\", line 690, in analyze_ordinary_member_access\r\n    self.named_type, self.msg)\r\n  File \"/Users/jing/code/mypy/mypy/checkmember.py\", line 86, in analyze_member_access\r\n    result = analyze_class_attribute_access(itype, name, node, is_lvalue, builtin_type, msg)\r\n  File \"/Users/jing/code/mypy/mypy/checkmember.py\", line 234, in analyze_class_attribute_access\r\n    return function_type(cast(FuncBase, node.node), builtin_type('builtins.function'))\r\n  File \"/Users/jing/code/mypy/mypy/nodes.py\", line 1682, in function_type\r\n    for arg in fdef.args:\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/834/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "AttributeError: 'Var' object has no attribute 'args'", "assignee": null, "closed_at": "2015-08-20T22:02:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/834/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-20T00:38:59Z", "user": {"followers_url": "https://api.github.com/users/jingw/followers", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "html_url": "https://github.com/jingw", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2019426?v=3", "url": "https://api.github.com/users/jingw", "organizations_url": "https://api.github.com/users/jingw/orgs", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "login": "jingw", "repos_url": "https://api.github.com/users/jingw/repos", "received_events_url": "https://api.github.com/users/jingw/received_events", "id": 2019426, "site_admin": false}, "locked": false}, {"milestone": null, "number": 833, "html_url": "https://github.com/python/mypy/issues/833", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/833", "id": 102014429, "events_url": "https://api.github.com/repos/python/mypy/issues/833/events", "updated_at": "2015-11-07T16:37:53Z", "body": "```\r\na = 1\r\nb = 2\r\ndel a, b\r\n```\r\nGives: `error: Invalid delete target`", "labels_url": "https://api.github.com/repos/python/mypy/issues/833/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Multiple del not properly parsed", "assignee": null, "closed_at": "2015-11-07T16:37:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/833/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-19T22:34:06Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 832, "html_url": "https://github.com/python/mypy/issues/832", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/832", "id": 102008954, "events_url": "https://api.github.com/repos/python/mypy/issues/832/events", "updated_at": "2015-08-20T21:47:18Z", "body": "It seems that currently if you do `from m import *  # type: ignore` this actually doesn't introduce any names in the module namespace. Instead, we should still try to import `m` and add any names that don't conflict to the namespace of the module that does the import.", "labels_url": "https://api.github.com/repos/python/mypy/issues/832/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ignoring \"from m import *\" should still try to import module", "assignee": null, "closed_at": "2015-08-20T21:47:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/832/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-19T22:00:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 831, "html_url": "https://github.com/python/mypy/pull/831", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/831", "id": 102008572, "events_url": "https://api.github.com/repos/python/mypy/issues/831/events", "updated_at": "2015-08-19T21:58:14Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/831/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fixed typo", "assignee": null, "closed_at": "2015-08-19T21:58:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/831/comments", "labels": [], "created_at": "2015-08-19T21:58:11Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/831.patch", "html_url": "https://github.com/python/mypy/pull/831", "diff_url": "https://github.com/python/mypy/pull/831.diff", "url": "https://api.github.com/repos/python/mypy/pulls/831"}, "locked": false}, {"milestone": null, "number": 830, "html_url": "https://github.com/python/mypy/pull/830", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/830", "id": 102008025, "events_url": "https://api.github.com/repos/python/mypy/issues/830/events", "updated_at": "2015-08-19T21:54:58Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/830/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stubs for select", "assignee": null, "closed_at": "2015-08-19T21:54:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/830/comments", "labels": [], "created_at": "2015-08-19T21:54:53Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/830.patch", "html_url": "https://github.com/python/mypy/pull/830", "diff_url": "https://github.com/python/mypy/pull/830.diff", "url": "https://api.github.com/repos/python/mypy/pulls/830"}, "locked": false}, {"milestone": null, "number": 829, "html_url": "https://github.com/python/mypy/issues/829", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/829", "id": 102004723, "events_url": "https://api.github.com/repos/python/mypy/issues/829/events", "updated_at": "2015-08-24T19:55:33Z", "body": "Pyxl uses a custom source file encoding. Somehow get it to work.", "labels_url": "https://api.github.com/repos/python/mypy/issues/829/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support pyxl", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/829/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-19T21:35:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 828, "html_url": "https://github.com/python/mypy/issues/828", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/828", "id": 102004362, "events_url": "https://api.github.com/repos/python/mypy/issues/828/events", "updated_at": "2015-08-21T02:23:19Z", "body": "Currently the parser can't deal with `exec` statements.", "labels_url": "https://api.github.com/repos/python/mypy/issues/828/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support exec statement in Python 2 mode", "assignee": null, "closed_at": "2015-08-21T02:23:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/828/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-19T21:33:22Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 827, "html_url": "https://github.com/python/mypy/issues/827", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/827", "id": 102003146, "events_url": "https://api.github.com/repos/python/mypy/issues/827/events", "updated_at": "2015-11-07T17:02:47Z", "body": "This is valid Python 2 but mypy doesn't like it:\r\n\r\n```\r\nu\"foo\"  \"bar\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/827/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implicit concatenation of unicode and regular str literals not accepted", "assignee": null, "closed_at": "2015-11-07T17:02:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/827/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-19T21:27:01Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 826, "html_url": "https://github.com/python/mypy/issues/826", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/826", "id": 102001732, "events_url": "https://api.github.com/repos/python/mypy/issues/826/events", "updated_at": "2015-11-07T16:46:34Z", "body": "Mypy doesn't recognize \"%.f\" or \"%.3f\" for Python 2.", "labels_url": "https://api.github.com/repos/python/mypy/issues/826/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy doesn't recognize certain format characters", "assignee": null, "closed_at": "2015-11-07T16:46:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/826/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-19T21:21:12Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "locked": false}, {"milestone": null, "number": 825, "html_url": "https://github.com/python/mypy/issues/825", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/825", "id": 101997826, "events_url": "https://api.github.com/repos/python/mypy/issues/825/events", "updated_at": "2015-08-19T22:27:27Z", "body": "Example:\r\n\r\n```\r\nclass A:\r\n    @staticmethod\r\n    def f(x): # type: (int) -> str    # Type signature has too many arguments\r\n        return ''\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/825/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy complains about argument count of @staticmethod with comment signature", "assignee": null, "closed_at": "2015-08-19T22:27:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/825/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-19T21:01:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 824, "html_url": "https://github.com/python/mypy/issues/824", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/824", "id": 101997237, "events_url": "https://api.github.com/repos/python/mypy/issues/824/events", "updated_at": "2015-08-23T22:56:37Z", "body": "Instead of just saying `\"foobar\" undefined` try to look for closest candidates (using edit distance, for example) and give suggestions. For example: `\"get_stats\" undefined, did you mean \"getstats\"?`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/824/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Show closest candidates for misspellings", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/824/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-19T20:57:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 823, "html_url": "https://github.com/python/mypy/pull/823", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/823", "id": 101995293, "events_url": "https://api.github.com/repos/python/mypy/issues/823/events", "updated_at": "2015-08-19T20:47:19Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/823/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "and more stubs", "assignee": null, "closed_at": "2015-08-19T20:47:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/823/comments", "labels": [], "created_at": "2015-08-19T20:47:11Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/823.patch", "html_url": "https://github.com/python/mypy/pull/823", "diff_url": "https://github.com/python/mypy/pull/823.diff", "url": "https://api.github.com/repos/python/mypy/pulls/823"}, "locked": false}, {"milestone": null, "number": 822, "html_url": "https://github.com/python/mypy/pull/822", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/822", "id": 101976819, "events_url": "https://api.github.com/repos/python/mypy/issues/822/events", "updated_at": "2015-08-19T19:18:41Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/822/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "even more stubs", "assignee": null, "closed_at": "2015-08-19T19:18:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/822/comments", "labels": [], "created_at": "2015-08-19T19:18:35Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/822.patch", "html_url": "https://github.com/python/mypy/pull/822", "diff_url": "https://github.com/python/mypy/pull/822.diff", "url": "https://api.github.com/repos/python/mypy/pulls/822"}, "locked": false}, {"milestone": null, "number": 821, "html_url": "https://github.com/python/mypy/issues/821", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/821", "id": 101972463, "events_url": "https://api.github.com/repos/python/mypy/issues/821/events", "updated_at": "2015-11-26T21:06:51Z", "body": "Source:\r\n```\r\nclass X:\r\n    def x(self):  # type: () -> str\r\n        return self.y\r\n\r\n    @property\r\n    def y(self):  # type: () -> str\r\n        return \"hello\"\r\n```\r\nGives:\r\n```\r\ntest.py: note: In member \"x\" of class \"X\":\r\ntest.py:3: error: Cannot determine type of 'y'\r\n```\r\nMoving `y` above `x` gives a clean typecheck. Mypy should typecheck cleanly even if `x` is declared before `y`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/821/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type of property unknown before its declaration", "assignee": null, "closed_at": "2015-11-26T21:06:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/821/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-19T18:55:46Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 820, "html_url": "https://github.com/python/mypy/pull/820", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/820", "id": 101968837, "events_url": "https://api.github.com/repos/python/mypy/issues/820/events", "updated_at": "2015-08-19T18:41:55Z", "body": "Mostly auto generated.", "labels_url": "https://api.github.com/repos/python/mypy/issues/820/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "more stubs", "assignee": null, "closed_at": "2015-08-19T18:41:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/820/comments", "labels": [], "created_at": "2015-08-19T18:41:49Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/820.patch", "html_url": "https://github.com/python/mypy/pull/820", "diff_url": "https://github.com/python/mypy/pull/820.diff", "url": "https://api.github.com/repos/python/mypy/pulls/820"}, "locked": false}, {"milestone": null, "number": 819, "html_url": "https://github.com/python/mypy/issues/819", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/819", "id": 101962799, "events_url": "https://api.github.com/repos/python/mypy/issues/819/events", "updated_at": "2015-08-24T20:42:10Z", "body": "```\r\nif is_new_version():\r\n    from sqlalchemy.dialects.mysql.base import MSBinary\r\nelse:\r\n    from sqlalchemy.databases.mysql import MSBinary\r\n```\r\nIt would be great to be able to annotate that is_new_version() always returns True, so that mypy doesn't check the second module.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/819/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Annotating that a function always returns the same value", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/819/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-19T18:13:27Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "locked": false}, {"milestone": null, "number": 818, "html_url": "https://github.com/python/mypy/pull/818", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/818", "id": 101957272, "events_url": "https://api.github.com/repos/python/mypy/issues/818/events", "updated_at": "2015-08-19T17:47:47Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/818/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stubs for scribe, thrift", "assignee": null, "closed_at": "2015-08-19T17:47:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/818/comments", "labels": [], "created_at": "2015-08-19T17:47:22Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/818.patch", "html_url": "https://github.com/python/mypy/pull/818", "diff_url": "https://github.com/python/mypy/pull/818.diff", "url": "https://api.github.com/repos/python/mypy/pulls/818"}, "locked": false}, {"milestone": null, "number": 817, "html_url": "https://github.com/python/mypy/issues/817", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/817", "id": 101947112, "events_url": "https://api.github.com/repos/python/mypy/issues/817/events", "updated_at": "2015-08-19T20:30:50Z", "body": "Add a mode that runs the type checker for unannotated functions as well. Variables will get implicit `Any` types (except maybe for things where we can be certain of the type, e.g. if `x = []` is the only assignment to a local variable, we can infer type `List[Any]`).\r\n\r\nExamples of things that could be caught:\r\n\r\n* Access to undefined attributes in modules (e.g. `modname.misspelled`).\r\n* Calls to functions with wrong argument counts, invalid keyword arguments or, in some cases, invalid argument types.\r\n* Invalid operations involving primitive types (e.g., `'foo' + 1`).\r\n\r\n`self` will probably still have type `Any`. Alternatively, we could check that calls to methods that are present in the class definition via `self` (and that don't have decorators) are okay. We probably must allow undefined attributes to be accessed as derived classes could define them to avoid false positives. Examples:\r\n\r\n```\r\nclass A:\r\n    def f(self):\r\n        self.g(1)  # Report error, wrong number of arguments\r\n        self.unknown()  # No error\r\n\r\n    def g(self, x, y): ...\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/817/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Optionally type check unannotated functions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/817/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-19T17:02:38Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 816, "html_url": "https://github.com/python/mypy/issues/816", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/816", "id": 101779900, "events_url": "https://api.github.com/repos/python/mypy/issues/816/events", "updated_at": "2015-08-23T23:14:35Z", "body": "The `# type: ignore` comment does not work in the example below:\r\n\r\n```\r\nfrom google.protobuf import reflection\r\nfrom google.protobuf import descriptor_pb2 # type: ignore\r\n\r\ndescriptor_pb2.foobar\r\n```\r\n\r\nIf I comment out the first line it works.", "labels_url": "https://api.github.com/repos/python/mypy/issues/816/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ignoring import does not always work", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/816/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-08-19T00:30:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 815, "html_url": "https://github.com/python/mypy/issues/815", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/815", "id": 101772699, "events_url": "https://api.github.com/repos/python/mypy/issues/815/events", "updated_at": "2016-01-26T20:32:10Z", "body": "Source:\r\n```\r\nfrom collections import defaultdict\r\nx = defaultdict(list)\r\n```\r\n\r\nError:\r\n```\r\ntest.py:2: error: Argument 1 to \"defaultdict\" has incompatible type List[_T]; expected Callable[[], List[_T]]\r\ntest.py:2: error: Need type annotation for variable\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/815/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy confused by defaultdict(list)", "assignee": null, "closed_at": "2016-01-26T20:32:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/815/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-18T23:32:52Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 814, "html_url": "https://github.com/python/mypy/pull/814", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/814", "id": 101772224, "events_url": "https://api.github.com/repos/python/mypy/issues/814/events", "updated_at": "2015-08-18T23:28:31Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/814/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Empty stub for descriptor_pb2", "assignee": null, "closed_at": "2015-08-18T23:28:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/814/comments", "labels": [], "created_at": "2015-08-18T23:28:25Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/814.patch", "html_url": "https://github.com/python/mypy/pull/814", "diff_url": "https://github.com/python/mypy/pull/814.diff", "url": "https://api.github.com/repos/python/mypy/pulls/814"}, "locked": false}, {"milestone": null, "number": 813, "html_url": "https://github.com/python/mypy/pull/813", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/813", "id": 101771370, "events_url": "https://api.github.com/repos/python/mypy/issues/813/events", "updated_at": "2015-08-18T23:21:02Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/813/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python2 stub protobuf", "assignee": null, "closed_at": "2015-08-18T23:21:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/813/comments", "labels": [], "created_at": "2015-08-18T23:20:30Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/813.patch", "html_url": "https://github.com/python/mypy/pull/813", "diff_url": "https://github.com/python/mypy/pull/813.diff", "url": "https://api.github.com/repos/python/mypy/pulls/813"}, "locked": false}, {"milestone": null, "number": 812, "html_url": "https://github.com/python/mypy/issues/812", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/812", "id": 101768782, "events_url": "https://api.github.com/repos/python/mypy/issues/812/events", "updated_at": "2015-09-02T03:48:13Z", "body": "In particular, some generated code uses it to select between Python 2 and 3 with `sys.version_info[0]`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/812/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "sys.version_info needs to support __getitem__.", "assignee": null, "closed_at": "2015-09-02T03:48:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/812/comments", "labels": [{"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-08-18T22:59:54Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "locked": false}, {"milestone": null, "number": 811, "html_url": "https://github.com/python/mypy/issues/811", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/811", "id": 101763885, "events_url": "https://api.github.com/repos/python/mypy/issues/811/events", "updated_at": "2015-08-20T21:47:47Z", "body": "```\r\nerror: Exception must be derived from BaseException\r\n```\r\n\r\nfrom:\r\n```\r\nraise exc[0], exc[1], exc[2]\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/811/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support raising tuples", "assignee": null, "closed_at": "2015-08-20T21:47:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/811/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-18T22:34:16Z", "user": {"followers_url": "https://api.github.com/users/jingw/followers", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "html_url": "https://github.com/jingw", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2019426?v=3", "url": "https://api.github.com/users/jingw", "organizations_url": "https://api.github.com/users/jingw/orgs", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "login": "jingw", "repos_url": "https://api.github.com/users/jingw/repos", "received_events_url": "https://api.github.com/users/jingw/received_events", "id": 2019426, "site_admin": false}, "locked": false}, {"milestone": null, "number": 810, "html_url": "https://github.com/python/mypy/issues/810", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/810", "id": 101742835, "events_url": "https://api.github.com/repos/python/mypy/issues/810/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/810/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 cStringIO stubs", "assignee": null, "closed_at": "2015-08-18T20:43:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/810/comments", "labels": [], "created_at": "2015-08-18T20:34:25Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 809, "html_url": "https://github.com/python/mypy/issues/809", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/809", "id": 101742103, "events_url": "https://api.github.com/repos/python/mypy/issues/809/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/809/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Third-party Python 2 bindings for zlib", "assignee": null, "closed_at": "2015-08-18T20:31:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/809/comments", "labels": [], "created_at": "2015-08-18T20:30:17Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 808, "html_url": "https://github.com/python/mypy/pull/808", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/808", "id": 101739907, "events_url": "https://api.github.com/repos/python/mypy/issues/808/events", "updated_at": "2015-08-18T20:17:30Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/808/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stub for atexit", "assignee": null, "closed_at": "2015-08-18T20:17:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/808/comments", "labels": [], "created_at": "2015-08-18T20:17:15Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/808.patch", "html_url": "https://github.com/python/mypy/pull/808", "diff_url": "https://github.com/python/mypy/pull/808.diff", "url": "https://api.github.com/repos/python/mypy/pulls/808"}, "locked": false}, {"milestone": null, "number": 807, "html_url": "https://github.com/python/mypy/issues/807", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/807", "id": 101738663, "events_url": "https://api.github.com/repos/python/mypy/issues/807/events", "updated_at": "2015-08-19T00:03:10Z", "body": "These should be equivalent to regular `int` literals, as we don't have a separate type for `long`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/807/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support 1L literals in Python 2 mode", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-19T00:03:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/807/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-18T20:11:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 806, "html_url": "https://github.com/python/mypy/issues/806", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/806", "id": 101731772, "events_url": "https://api.github.com/repos/python/mypy/issues/806/events", "updated_at": "2015-10-10T20:50:23Z", "body": "In code like the following:\r\n```\r\nfrom typing import *\r\n\r\nx = {1: 2} # type: Union[Dict[int, int], str]\r\nx.get(1, 1) if isinstance(x, dict) else 0\r\n```\r\nwe should be able to figure out that `x` must be A `Dict`, but instead we get the error\r\n```\r\ndict.py:4: error: Some element of union has no attribute \"get\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/806/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support type information from conditional expressions", "assignee": null, "closed_at": "2015-10-10T20:50:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/806/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-08-18T19:31:27Z", "user": {"followers_url": "https://api.github.com/users/mrwright/followers", "gists_url": "https://api.github.com/users/mrwright/gists{/gist_id}", "html_url": "https://github.com/mrwright", "following_url": "https://api.github.com/users/mrwright/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/327157?v=3", "url": "https://api.github.com/users/mrwright", "organizations_url": "https://api.github.com/users/mrwright/orgs", "starred_url": "https://api.github.com/users/mrwright/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mrwright/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mrwright/subscriptions", "login": "mrwright", "repos_url": "https://api.github.com/users/mrwright/repos", "received_events_url": "https://api.github.com/users/mrwright/received_events", "id": 327157, "site_admin": false}, "locked": false}, {"milestone": null, "number": 805, "html_url": "https://github.com/python/mypy/issues/805", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/805", "id": 101731539, "events_url": "https://api.github.com/repos/python/mypy/issues/805/events", "updated_at": "2015-08-18T20:13:47Z", "body": "The code below, as is is now, typechecks. When we comment the last line and uncomment the one before it, it (correctly) fails to typecheck. My understanding is that mypy doesn't support conditional expressions, so neither should typecheck right now.\r\n```\r\nfrom typing import *\r\n\r\nx = 5 # type: Union[str, int]\r\n\r\n#w = x # type: int\r\nw = x if isinstance(x, int) else 5 # type: int\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/805/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Code with conditional expressions to specify types typechecks", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/805/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-18T19:29:57Z", "user": {"followers_url": "https://api.github.com/users/mrwright/followers", "gists_url": "https://api.github.com/users/mrwright/gists{/gist_id}", "html_url": "https://github.com/mrwright", "following_url": "https://api.github.com/users/mrwright/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/327157?v=3", "url": "https://api.github.com/users/mrwright", "organizations_url": "https://api.github.com/users/mrwright/orgs", "starred_url": "https://api.github.com/users/mrwright/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mrwright/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mrwright/subscriptions", "login": "mrwright", "repos_url": "https://api.github.com/users/mrwright/repos", "received_events_url": "https://api.github.com/users/mrwright/received_events", "id": 327157, "site_admin": false}, "locked": false}, {"milestone": null, "number": 804, "html_url": "https://github.com/python/mypy/pull/804", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/804", "id": 101730892, "events_url": "https://api.github.com/repos/python/mypy/issues/804/events", "updated_at": "2015-08-18T19:26:09Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/804/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python2 stub zlib", "assignee": null, "closed_at": "2015-08-18T19:26:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/804/comments", "labels": [], "created_at": "2015-08-18T19:25:52Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/804.patch", "html_url": "https://github.com/python/mypy/pull/804", "diff_url": "https://github.com/python/mypy/pull/804.diff", "url": "https://api.github.com/repos/python/mypy/pulls/804"}, "locked": false}, {"milestone": null, "number": 803, "html_url": "https://github.com/python/mypy/pull/803", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/803", "id": 101728836, "events_url": "https://api.github.com/repos/python/mypy/issues/803/events", "updated_at": "2015-08-18T19:26:50Z", "body": "Mostly cribbed from https://docs.python.org/2/library/traceback.html", "labels_url": "https://api.github.com/repos/python/mypy/issues/803/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added traceback standard library module stubs", "assignee": null, "closed_at": "2015-08-18T19:26:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/803/comments", "labels": [], "created_at": "2015-08-18T19:13:21Z", "user": {"followers_url": "https://api.github.com/users/lihaoyi/followers", "gists_url": "https://api.github.com/users/lihaoyi/gists{/gist_id}", "html_url": "https://github.com/lihaoyi", "following_url": "https://api.github.com/users/lihaoyi/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/934140?v=3", "url": "https://api.github.com/users/lihaoyi", "organizations_url": "https://api.github.com/users/lihaoyi/orgs", "starred_url": "https://api.github.com/users/lihaoyi/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lihaoyi/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lihaoyi/subscriptions", "login": "lihaoyi", "repos_url": "https://api.github.com/users/lihaoyi/repos", "received_events_url": "https://api.github.com/users/lihaoyi/received_events", "id": 934140, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/803.patch", "html_url": "https://github.com/python/mypy/pull/803", "diff_url": "https://github.com/python/mypy/pull/803.diff", "url": "https://api.github.com/repos/python/mypy/pulls/803"}, "locked": false}, {"milestone": null, "number": 802, "html_url": "https://github.com/python/mypy/issues/802", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/802", "id": 101728376, "events_url": "https://api.github.com/repos/python/mypy/issues/802/events", "updated_at": "2015-09-01T04:07:37Z", "body": "```python\r\ndef print_tb(traceback: (int, int)) -> None: ...\r\n```\r\n```bash\r\nhaoyi-mbp:mypy haoyi$ python3 scripts/mypy --py2 -m testmodule\r\nTraceback (most recent call last):\r\n  File \"scripts/mypy\", line 184, in <module>\r\n    main()\r\n  File \"scripts/mypy\", line 36, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"scripts/mypy\", line 80, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/Users/haoyi/mypy/mypy/build.py\", line 160, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/Users/haoyi/mypy/mypy/build.py\", line 344, in process\r\n    next.process()\r\n  File \"/Users/haoyi/mypy/mypy/build.py\", line 754, in process\r\n    self.semantic_analyzer().visit_file(self.tree, self.tree.path)\r\n  File \"/Users/haoyi/mypy/mypy/semanal.py\", line 196, in visit_file\r\n    d.accept(self)\r\n  File \"/Users/haoyi/mypy/mypy/nodes.py\", line 349, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/Users/haoyi/mypy/mypy/semanal.py\", line 205, in visit_func_def\r\n    self.update_function_type_variables(defn)\r\n  File \"/Users/haoyi/mypy/mypy/semanal.py\", line 252, in update_function_type_variables\r\n    typevars = self.infer_type_variables(functype)\r\n  File \"/Users/haoyi/mypy/mypy/semanal.py\", line 268, in infer_type_variables\r\n    for name, tvar_expr in self.find_type_variables_in_type(arg):\r\n  File \"/Users/haoyi/mypy/mypy/semanal.py\", line 299, in find_type_variables_in_type\r\n    assert False, 'Unsupported type %s' % type\r\nAssertionError: Unsupported type Tuple[int?, int?]\r\n```\r\n\r\nWould be nice to either have it work or have a prettier error message ^_^", "labels_url": "https://api.github.com/repos/python/mypy/issues/802/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Wrong tuple types should give a better error message", "assignee": null, "closed_at": "2015-09-01T04:07:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/802/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-18T19:10:05Z", "user": {"followers_url": "https://api.github.com/users/lihaoyi/followers", "gists_url": "https://api.github.com/users/lihaoyi/gists{/gist_id}", "html_url": "https://github.com/lihaoyi", "following_url": "https://api.github.com/users/lihaoyi/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/934140?v=3", "url": "https://api.github.com/users/lihaoyi", "organizations_url": "https://api.github.com/users/lihaoyi/orgs", "starred_url": "https://api.github.com/users/lihaoyi/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lihaoyi/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lihaoyi/subscriptions", "login": "lihaoyi", "repos_url": "https://api.github.com/users/lihaoyi/repos", "received_events_url": "https://api.github.com/users/lihaoyi/received_events", "id": 934140, "site_admin": false}, "locked": false}, {"milestone": null, "number": 801, "html_url": "https://github.com/python/mypy/issues/801", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/801", "id": 101724333, "events_url": "https://api.github.com/repos/python/mypy/issues/801/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/801/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stubs for socket", "assignee": null, "closed_at": "2015-08-18T18:52:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/801/comments", "labels": [], "created_at": "2015-08-18T18:47:39Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 800, "html_url": "https://github.com/python/mypy/issues/800", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/800", "id": 101722104, "events_url": "https://api.github.com/repos/python/mypy/issues/800/events", "updated_at": "2015-08-19T20:08:35Z", "body": "```\r\nfrom typing import overload\r\n\r\n@overload\r\ndef f(x: unicode) -> int: pass\r\n\r\n@overload\r\ndef f(x: bytearray) -> int: pass\r\n\r\nf('')  # No overload variant of \"f\" matches argument types\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/800/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Can't use str argument type if overloaded function has unicode argument type (Python 2)", "assignee": null, "closed_at": "2015-08-19T20:08:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/800/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-18T18:36:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 799, "html_url": "https://github.com/python/mypy/pull/799", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/799", "id": 101719615, "events_url": "https://api.github.com/repos/python/mypy/issues/799/events", "updated_at": "2015-08-18T18:42:59Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/799/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stub functools", "assignee": null, "closed_at": "2015-08-18T18:42:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/799/comments", "labels": [], "created_at": "2015-08-18T18:24:32Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/799.patch", "html_url": "https://github.com/python/mypy/pull/799", "diff_url": "https://github.com/python/mypy/pull/799.diff", "url": "https://api.github.com/repos/python/mypy/pulls/799"}, "locked": false}, {"milestone": null, "number": 798, "html_url": "https://github.com/python/mypy/pull/798", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/798", "id": 101719510, "events_url": "https://api.github.com/repos/python/mypy/issues/798/events", "updated_at": "2015-08-18T18:24:10Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/798/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stub functools", "assignee": null, "closed_at": "2015-08-18T18:24:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/798/comments", "labels": [], "created_at": "2015-08-18T18:23:59Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/798.patch", "html_url": "https://github.com/python/mypy/pull/798", "diff_url": "https://github.com/python/mypy/pull/798.diff", "url": "https://api.github.com/repos/python/mypy/pulls/798"}, "locked": false}, {"milestone": null, "number": 797, "html_url": "https://github.com/python/mypy/issues/797", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/797", "id": 101718228, "events_url": "https://api.github.com/repos/python/mypy/issues/797/events", "updated_at": "2015-08-23T23:09:36Z", "body": "```\r\ndef apply(f: Callable[[int], int], x: int) -> int:\r\n  return f(x)\r\n\r\nclass Add5(object):\r\n  def __call__(self, x: int) -> int:\r\n    return x + 5\r\n\r\napply(Add5(), 5)\r\n```\r\nThis code snippet doesn't type check because Mypy doesn't treat Add5() as a Callable[[int], int]", "labels_url": "https://api.github.com/repos/python/mypy/issues/797/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Classes with __call__ defined should be a subtype of Callable", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/797/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-08-18T18:17:51Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "locked": false}, {"milestone": null, "number": 796, "html_url": "https://github.com/python/mypy/issues/796", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/796", "id": 101715811, "events_url": "https://api.github.com/repos/python/mypy/issues/796/events", "updated_at": "2015-08-18T19:58:41Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/796/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Complains about undefined bytes, long in Python 2 mode", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-18T19:58:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/796/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-18T18:08:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 795, "html_url": "https://github.com/python/mypy/pull/795", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/795", "id": 101712250, "events_url": "https://api.github.com/repos/python/mypy/issues/795/events", "updated_at": "2015-08-18T17:54:02Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/795/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Changed bytes to str in Python 2 base64 stubs", "assignee": null, "closed_at": "2015-08-18T17:54:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/795/comments", "labels": [], "created_at": "2015-08-18T17:53:55Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/795.patch", "html_url": "https://github.com/python/mypy/pull/795", "diff_url": "https://github.com/python/mypy/pull/795.diff", "url": "https://api.github.com/repos/python/mypy/pulls/795"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 794, "html_url": "https://github.com/python/mypy/issues/794", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/794", "id": 101558170, "events_url": "https://api.github.com/repos/python/mypy/issues/794/events", "updated_at": "2016-03-02T00:54:13Z", "body": "Currently, `__new__` is not special at all. While full support is complicated, it is particularly irritating that `object.__new__` cannot be added to stubs at all, since subclasses need to override it with different signatures and that is an error.\r\n\r\n`object.__new__` and `object.__init__` are special in another way. For the `object` class itself, their signatures are `(Subclass[T]) -> T` and `(T) -> None`. However, when called from subclass constructors via `super()`, the signatures are `(Subclass[T], *args, **kwargs) -> T` and `(T, *args, **kwargs) -> None`.\r\n\r\nIn the above, `T` is a `TypeVar` that is bounded by the current class, and `Subclass[T]` is basically `Intersection[type, Callable[..., T]]` (i.e. supports duck typing once the `Protocol` stuff works).\r\n\r\n(In my notes I am using use the term `Class[T]` to refer to `Intersection[type, Callable[[signature of __init__], T]]`)\r\n\r\nAs an icky workaround, I tried using `cast(Any, super())`, but that says that `super` is not defined, before settling on `# type: ignore`", "labels_url": "https://api.github.com/repos/python/mypy/issues/794/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support special `object.__new__` and `object.__init__` in `super`.", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/794/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-08-18T02:56:08Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 793, "html_url": "https://github.com/python/mypy/issues/793", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/793", "id": 101542890, "events_url": "https://api.github.com/repos/python/mypy/issues/793/events", "updated_at": "2015-12-12T22:21:11Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/793/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stubs for functools", "assignee": null, "closed_at": "2015-08-18T19:05:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/793/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-18T01:05:21Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "locked": false}, {"milestone": null, "number": 792, "html_url": "https://github.com/python/mypy/issues/792", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/792", "id": 101539151, "events_url": "https://api.github.com/repos/python/mypy/issues/792/events", "updated_at": "2015-08-24T21:43:53Z", "body": "This bug exists solely as a place to centralize discussion regarding third-party stubs right now.\r\n\r\nMy pending `driver` PR moves the python3 third-party stubs (currently `requests` and `docutils`) to `stubs/third-party`.\r\n\r\nI discovered that it is a nontrivial amount of work to separate out the standard vs third-party stubs after the fact, so if any are generated during whatever this \"hack\" thing should be clearly marked.", "labels_url": "https://api.github.com/repos/python/mypy/issues/792/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Tracker issue for Third Party stubs", "assignee": null, "closed_at": "2015-08-24T21:43:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/792/comments", "labels": [], "created_at": "2015-08-18T00:38:35Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 791, "html_url": "https://github.com/python/mypy/pull/791", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/791", "id": 101538378, "events_url": "https://api.github.com/repos/python/mypy/issues/791/events", "updated_at": "2015-08-18T17:20:42Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/791/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stubs for struct", "assignee": null, "closed_at": "2015-08-18T17:20:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/791/comments", "labels": [], "created_at": "2015-08-18T00:30:32Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/791.patch", "html_url": "https://github.com/python/mypy/pull/791", "diff_url": "https://github.com/python/mypy/pull/791.diff", "url": "https://api.github.com/repos/python/mypy/pulls/791"}, "locked": false}, {"milestone": null, "number": 790, "html_url": "https://github.com/python/mypy/issues/790", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/790", "id": 101536124, "events_url": "https://api.github.com/repos/python/mypy/issues/790/events", "updated_at": "2015-12-12T22:21:11Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/790/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stubs for struct", "assignee": null, "closed_at": "2015-08-18T18:48:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/790/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-18T00:10:40Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "locked": false}, {"milestone": null, "number": 789, "html_url": "https://github.com/python/mypy/issues/789", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/789", "id": 101535181, "events_url": "https://api.github.com/repos/python/mypy/issues/789/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/789/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2.7 stub for subprocess", "assignee": null, "closed_at": "2015-08-18T00:18:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/789/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-18T00:02:51Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 788, "html_url": "https://github.com/python/mypy/pull/788", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/788", "id": 101534694, "events_url": "https://api.github.com/repos/python/mypy/issues/788/events", "updated_at": "2015-08-18T00:44:28Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/788/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stub for csv", "assignee": null, "closed_at": "2015-08-18T00:44:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/788/comments", "labels": [], "created_at": "2015-08-17T23:58:08Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/788.patch", "html_url": "https://github.com/python/mypy/pull/788", "diff_url": "https://github.com/python/mypy/pull/788.diff", "url": "https://api.github.com/repos/python/mypy/pulls/788"}, "locked": false}, {"milestone": null, "number": 787, "html_url": "https://github.com/python/mypy/pull/787", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/787", "id": 101529964, "events_url": "https://api.github.com/repos/python/mypy/issues/787/events", "updated_at": "2016-01-12T22:20:23Z", "body": "Makes some code found in the wild (enum generation) typecheck, and matches the docs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/787/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add overload to type() constructor for 2.7", "assignee": null, "closed_at": "2015-08-20T01:27:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/787/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T23:24:14Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/787.patch", "html_url": "https://github.com/python/mypy/pull/787", "diff_url": "https://github.com/python/mypy/pull/787.diff", "url": "https://api.github.com/repos/python/mypy/pulls/787"}, "locked": false}, {"milestone": null, "number": 786, "html_url": "https://github.com/python/mypy/issues/786", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/786", "id": 101529680, "events_url": "https://api.github.com/repos/python/mypy/issues/786/events", "updated_at": "2015-08-17T23:21:33Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/786/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix print statement without arguments in Python 2", "assignee": null, "closed_at": "2015-08-17T23:21:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/786/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T23:21:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 785, "html_url": "https://github.com/python/mypy/issues/785", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/785", "id": 101528453, "events_url": "https://api.github.com/repos/python/mypy/issues/785/events", "updated_at": "2015-08-23T22:59:42Z", "body": "Support functions like these in Python 2 (only):\r\n\r\n```python\r\ndef f(x, (y, z)): ...\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/785/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support tuples within function headers in Python 2 ", "assignee": null, "closed_at": "2015-08-23T22:59:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/785/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-17T23:09:03Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 784, "html_url": "https://github.com/python/mypy/issues/784", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/784", "id": 101528343, "events_url": "https://api.github.com/repos/python/mypy/issues/784/events", "updated_at": "2015-08-19T17:14:32Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/784/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support print >> f in Python 2", "assignee": null, "closed_at": "2015-08-19T17:14:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/784/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T23:07:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 783, "html_url": "https://github.com/python/mypy/pull/783", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/783", "id": 101524536, "events_url": "https://api.github.com/repos/python/mypy/issues/783/events", "updated_at": "2015-08-18T17:49:15Z", "body": "Fixes #776", "labels_url": "https://api.github.com/repos/python/mypy/issues/783/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stubs for random module", "assignee": null, "closed_at": "2015-08-18T17:49:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/783/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T22:37:09Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/783.patch", "html_url": "https://github.com/python/mypy/pull/783", "diff_url": "https://github.com/python/mypy/pull/783.diff", "url": "https://api.github.com/repos/python/mypy/pulls/783"}, "locked": false}, {"milestone": null, "number": 782, "html_url": "https://github.com/python/mypy/issues/782", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/782", "id": 101524032, "events_url": "https://api.github.com/repos/python/mypy/issues/782/events", "updated_at": "2015-12-12T22:21:11Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/782/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add stubs for csv", "assignee": null, "closed_at": "2015-08-18T00:45:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/782/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T22:32:56Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "locked": false}, {"milestone": null, "number": 781, "html_url": "https://github.com/python/mypy/issues/781", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/781", "id": 101523053, "events_url": "https://api.github.com/repos/python/mypy/issues/781/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/781/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add requests stub", "assignee": null, "closed_at": "2015-08-18T03:32:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/781/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T22:24:47Z", "user": {"followers_url": "https://api.github.com/users/jingw/followers", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "html_url": "https://github.com/jingw", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2019426?v=3", "url": "https://api.github.com/users/jingw", "organizations_url": "https://api.github.com/users/jingw/orgs", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "login": "jingw", "repos_url": "https://api.github.com/users/jingw/repos", "received_events_url": "https://api.github.com/users/jingw/received_events", "id": 2019426, "site_admin": false}, "locked": false}, {"milestone": null, "number": 780, "html_url": "https://github.com/python/mypy/issues/780", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/780", "id": 101523030, "events_url": "https://api.github.com/repos/python/mypy/issues/780/events", "updated_at": "2015-08-23T23:32:31Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/780/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add protobuf stub", "assignee": null, "closed_at": "2015-08-23T23:32:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/780/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-08-17T22:24:30Z", "user": {"followers_url": "https://api.github.com/users/jingw/followers", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "html_url": "https://github.com/jingw", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2019426?v=3", "url": "https://api.github.com/users/jingw", "organizations_url": "https://api.github.com/users/jingw/orgs", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "login": "jingw", "repos_url": "https://api.github.com/users/jingw/repos", "received_events_url": "https://api.github.com/users/jingw/received_events", "id": 2019426, "site_admin": false}, "locked": false}, {"milestone": null, "number": 779, "html_url": "https://github.com/python/mypy/issues/779", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/779", "id": 101522960, "events_url": "https://api.github.com/repos/python/mypy/issues/779/events", "updated_at": "2015-12-12T22:21:09Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/779/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add gflags stub", "assignee": null, "closed_at": "2015-08-18T00:57:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/779/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T22:24:02Z", "user": {"followers_url": "https://api.github.com/users/jingw/followers", "gists_url": "https://api.github.com/users/jingw/gists{/gist_id}", "html_url": "https://github.com/jingw", "following_url": "https://api.github.com/users/jingw/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2019426?v=3", "url": "https://api.github.com/users/jingw", "organizations_url": "https://api.github.com/users/jingw/orgs", "starred_url": "https://api.github.com/users/jingw/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jingw/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jingw/subscriptions", "login": "jingw", "repos_url": "https://api.github.com/users/jingw/repos", "received_events_url": "https://api.github.com/users/jingw/received_events", "id": 2019426, "site_admin": false}, "locked": false}, {"milestone": null, "number": 778, "html_url": "https://github.com/python/mypy/issues/778", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/778", "id": 101522788, "events_url": "https://api.github.com/repos/python/mypy/issues/778/events", "updated_at": "2015-12-12T22:21:11Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/778/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add re stubs for Python 2", "assignee": null, "closed_at": "2015-08-17T22:26:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/778/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T22:22:37Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "locked": false}, {"milestone": null, "number": 777, "html_url": "https://github.com/python/mypy/pull/777", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/777", "id": 101522253, "events_url": "https://api.github.com/repos/python/mypy/issues/777/events", "updated_at": "2015-08-17T22:18:40Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/777/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python2 stub logging", "assignee": null, "closed_at": "2015-08-17T22:18:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/777/comments", "labels": [], "created_at": "2015-08-17T22:17:53Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/777.patch", "html_url": "https://github.com/python/mypy/pull/777", "diff_url": "https://github.com/python/mypy/pull/777.diff", "url": "https://api.github.com/repos/python/mypy/pulls/777"}, "locked": false}, {"milestone": null, "number": 776, "html_url": "https://github.com/python/mypy/issues/776", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/776", "id": 101521029, "events_url": "https://api.github.com/repos/python/mypy/issues/776/events", "updated_at": "2015-08-18T18:48:03Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/776/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add random stubs for Python 2", "assignee": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "closed_at": "2015-08-18T18:48:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/776/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T22:07:56Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "locked": false}, {"milestone": null, "number": 775, "html_url": "https://github.com/python/mypy/issues/775", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/775", "id": 101520944, "events_url": "https://api.github.com/repos/python/mypy/issues/775/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/775/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add os.path stubs for Python 2", "assignee": null, "closed_at": "2015-08-18T18:38:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/775/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T22:07:15Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 774, "html_url": "https://github.com/python/mypy/issues/774", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/774", "id": 101518268, "events_url": "https://api.github.com/repos/python/mypy/issues/774/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/774/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "add Python 2 stub for hashlib", "assignee": null, "closed_at": "2015-08-19T00:27:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/774/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T21:53:20Z", "user": {"followers_url": "https://api.github.com/users/deliandjam/followers", "gists_url": "https://api.github.com/users/deliandjam/gists{/gist_id}", "html_url": "https://github.com/deliandjam", "following_url": "https://api.github.com/users/deliandjam/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4097699?v=3", "url": "https://api.github.com/users/deliandjam", "organizations_url": "https://api.github.com/users/deliandjam/orgs", "starred_url": "https://api.github.com/users/deliandjam/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/deliandjam/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/deliandjam/subscriptions", "login": "deliandjam", "repos_url": "https://api.github.com/users/deliandjam/repos", "received_events_url": "https://api.github.com/users/deliandjam/received_events", "id": 4097699, "site_admin": false}, "locked": false}, {"milestone": null, "number": 773, "html_url": "https://github.com/python/mypy/pull/773", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/773", "id": 101517366, "events_url": "https://api.github.com/repos/python/mypy/issues/773/events", "updated_at": "2015-08-18T23:59:57Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/773/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "adds methods to collections.pyi in 2.7", "assignee": null, "closed_at": "2015-08-18T23:59:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/773/comments", "labels": [], "created_at": "2015-08-17T21:48:36Z", "user": {"followers_url": "https://api.github.com/users/deliandjam/followers", "gists_url": "https://api.github.com/users/deliandjam/gists{/gist_id}", "html_url": "https://github.com/deliandjam", "following_url": "https://api.github.com/users/deliandjam/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4097699?v=3", "url": "https://api.github.com/users/deliandjam", "organizations_url": "https://api.github.com/users/deliandjam/orgs", "starred_url": "https://api.github.com/users/deliandjam/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/deliandjam/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/deliandjam/subscriptions", "login": "deliandjam", "repos_url": "https://api.github.com/users/deliandjam/repos", "received_events_url": "https://api.github.com/users/deliandjam/received_events", "id": 4097699, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/773.patch", "html_url": "https://github.com/python/mypy/pull/773", "diff_url": "https://github.com/python/mypy/pull/773.diff", "url": "https://api.github.com/repos/python/mypy/pulls/773"}, "locked": false}, {"milestone": null, "number": 772, "html_url": "https://github.com/python/mypy/issues/772", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/772", "id": 101516274, "events_url": "https://api.github.com/repos/python/mypy/issues/772/events", "updated_at": "2015-08-17T22:09:06Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/772/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add random stub for Python 2", "assignee": null, "closed_at": "2015-08-17T22:09:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/772/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T21:42:55Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 771, "html_url": "https://github.com/python/mypy/pull/771", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/771", "id": 101516067, "events_url": "https://api.github.com/repos/python/mypy/issues/771/events", "updated_at": "2015-08-17T21:58:50Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/771/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stub for logging", "assignee": null, "closed_at": "2015-08-17T21:58:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/771/comments", "labels": [], "created_at": "2015-08-17T21:41:54Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/771.patch", "html_url": "https://github.com/python/mypy/pull/771", "diff_url": "https://github.com/python/mypy/pull/771.diff", "url": "https://api.github.com/repos/python/mypy/pulls/771"}, "locked": false}, {"milestone": null, "number": 770, "html_url": "https://github.com/python/mypy/issues/770", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/770", "id": 101511650, "events_url": "https://api.github.com/repos/python/mypy/issues/770/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/770/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 stub for threading", "assignee": null, "closed_at": "2015-08-17T21:38:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/770/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T21:18:13Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 769, "html_url": "https://github.com/python/mypy/issues/769", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/769", "id": 101510862, "events_url": "https://api.github.com/repos/python/mypy/issues/769/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/769/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Stub for math for Python 2", "assignee": null, "closed_at": "2015-08-17T21:17:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/769/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T21:13:12Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 768, "html_url": "https://github.com/python/mypy/issues/768", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/768", "id": 101510576, "events_url": "https://api.github.com/repos/python/mypy/issues/768/events", "updated_at": "2015-12-12T22:21:13Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/768/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "add Python 2 stub for collections", "assignee": null, "closed_at": "2015-08-18T18:49:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/768/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T21:11:19Z", "user": {"followers_url": "https://api.github.com/users/deliandjam/followers", "gists_url": "https://api.github.com/users/deliandjam/gists{/gist_id}", "html_url": "https://github.com/deliandjam", "following_url": "https://api.github.com/users/deliandjam/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4097699?v=3", "url": "https://api.github.com/users/deliandjam", "organizations_url": "https://api.github.com/users/deliandjam/orgs", "starred_url": "https://api.github.com/users/deliandjam/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/deliandjam/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/deliandjam/subscriptions", "login": "deliandjam", "repos_url": "https://api.github.com/users/deliandjam/repos", "received_events_url": "https://api.github.com/users/deliandjam/received_events", "id": 4097699, "site_admin": false}, "locked": false}, {"milestone": null, "number": 767, "html_url": "https://github.com/python/mypy/pull/767", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/767", "id": 101510115, "events_url": "https://api.github.com/repos/python/mypy/issues/767/events", "updated_at": "2015-08-17T22:38:14Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/767/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "adding base64 to 3.4", "assignee": null, "closed_at": "2015-08-17T22:38:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/767/comments", "labels": [], "created_at": "2015-08-17T21:08:14Z", "user": {"followers_url": "https://api.github.com/users/deliandjam/followers", "gists_url": "https://api.github.com/users/deliandjam/gists{/gist_id}", "html_url": "https://github.com/deliandjam", "following_url": "https://api.github.com/users/deliandjam/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4097699?v=3", "url": "https://api.github.com/users/deliandjam", "organizations_url": "https://api.github.com/users/deliandjam/orgs", "starred_url": "https://api.github.com/users/deliandjam/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/deliandjam/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/deliandjam/subscriptions", "login": "deliandjam", "repos_url": "https://api.github.com/users/deliandjam/repos", "received_events_url": "https://api.github.com/users/deliandjam/received_events", "id": 4097699, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/767.patch", "html_url": "https://github.com/python/mypy/pull/767", "diff_url": "https://github.com/python/mypy/pull/767.diff", "url": "https://api.github.com/repos/python/mypy/pulls/767"}, "locked": false}, {"milestone": null, "number": 766, "html_url": "https://github.com/python/mypy/issues/766", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/766", "id": 101507288, "events_url": "https://api.github.com/repos/python/mypy/issues/766/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/766/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Stub for string on Python 2.7", "assignee": null, "closed_at": "2015-08-17T21:13:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/766/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T20:50:43Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 765, "html_url": "https://github.com/python/mypy/issues/765", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/765", "id": 101507132, "events_url": "https://api.github.com/repos/python/mypy/issues/765/events", "updated_at": "2015-08-19T18:29:54Z", "body": "```\r\nimport sys\r\nprint >>sys.stderr, 'hello'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/765/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Printing to non-stdout gives parse errors", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-19T18:29:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/765/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T20:49:31Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 764, "html_url": "https://github.com/python/mypy/pull/764", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/764", "id": 101506356, "events_url": "https://api.github.com/repos/python/mypy/issues/764/events", "updated_at": "2015-08-18T17:52:06Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/764/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Port 3.2 itertools stubs to 2.7", "assignee": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "closed_at": "2015-08-18T17:52:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/764/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T20:44:40Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/764.patch", "html_url": "https://github.com/python/mypy/pull/764", "diff_url": "https://github.com/python/mypy/pull/764.diff", "url": "https://api.github.com/repos/python/mypy/pulls/764"}, "locked": false}, {"milestone": null, "number": 763, "html_url": "https://github.com/python/mypy/issues/763", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/763", "id": 101504929, "events_url": "https://api.github.com/repos/python/mypy/issues/763/events", "updated_at": "2015-08-23T23:01:57Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/763/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Find candidate for migration scripts.", "assignee": null, "closed_at": "2015-08-23T23:01:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/763/comments", "labels": [], "created_at": "2015-08-17T20:35:37Z", "user": {"followers_url": "https://api.github.com/users/MarkChuCarroll/followers", "gists_url": "https://api.github.com/users/MarkChuCarroll/gists{/gist_id}", "html_url": "https://github.com/MarkChuCarroll", "following_url": "https://api.github.com/users/MarkChuCarroll/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/705448?v=3", "url": "https://api.github.com/users/MarkChuCarroll", "organizations_url": "https://api.github.com/users/MarkChuCarroll/orgs", "starred_url": "https://api.github.com/users/MarkChuCarroll/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MarkChuCarroll/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MarkChuCarroll/subscriptions", "login": "MarkChuCarroll", "repos_url": "https://api.github.com/users/MarkChuCarroll/repos", "received_events_url": "https://api.github.com/users/MarkChuCarroll/received_events", "id": 705448, "site_admin": false}, "locked": false}, {"milestone": null, "number": 762, "html_url": "https://github.com/python/mypy/issues/762", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/762", "id": 101502580, "events_url": "https://api.github.com/repos/python/mypy/issues/762/events", "updated_at": "2015-12-12T22:21:13Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/762/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stub for base64", "assignee": null, "closed_at": "2015-08-18T18:43:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/762/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T20:26:03Z", "user": {"followers_url": "https://api.github.com/users/deliandjam/followers", "gists_url": "https://api.github.com/users/deliandjam/gists{/gist_id}", "html_url": "https://github.com/deliandjam", "following_url": "https://api.github.com/users/deliandjam/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4097699?v=3", "url": "https://api.github.com/users/deliandjam", "organizations_url": "https://api.github.com/users/deliandjam/orgs", "starred_url": "https://api.github.com/users/deliandjam/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/deliandjam/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/deliandjam/subscriptions", "login": "deliandjam", "repos_url": "https://api.github.com/users/deliandjam/repos", "received_events_url": "https://api.github.com/users/deliandjam/received_events", "id": 4097699, "site_admin": false}, "locked": false}, {"milestone": null, "number": 761, "html_url": "https://github.com/python/mypy/issues/761", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/761", "id": 101502126, "events_url": "https://api.github.com/repos/python/mypy/issues/761/events", "updated_at": "2015-08-17T20:23:53Z", "body": "i'm doing it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/761/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stubs for datetime", "assignee": null, "closed_at": "2015-08-17T20:23:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/761/comments", "labels": [], "created_at": "2015-08-17T20:23:01Z", "user": {"followers_url": "https://api.github.com/users/deliandjam/followers", "gists_url": "https://api.github.com/users/deliandjam/gists{/gist_id}", "html_url": "https://github.com/deliandjam", "following_url": "https://api.github.com/users/deliandjam/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4097699?v=3", "url": "https://api.github.com/users/deliandjam", "organizations_url": "https://api.github.com/users/deliandjam/orgs", "starred_url": "https://api.github.com/users/deliandjam/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/deliandjam/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/deliandjam/subscriptions", "login": "deliandjam", "repos_url": "https://api.github.com/users/deliandjam/repos", "received_events_url": "https://api.github.com/users/deliandjam/received_events", "id": 4097699, "site_admin": false}, "locked": false}, {"milestone": null, "number": 760, "html_url": "https://github.com/python/mypy/issues/760", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/760", "id": 101501297, "events_url": "https://api.github.com/repos/python/mypy/issues/760/events", "updated_at": "2015-08-18T18:49:06Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/760/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stubs for itertools", "assignee": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "closed_at": "2015-08-18T18:49:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/760/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T20:18:17Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "locked": false}, {"milestone": null, "number": 759, "html_url": "https://github.com/python/mypy/pull/759", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/759", "id": 101500865, "events_url": "https://api.github.com/repos/python/mypy/issues/759/events", "updated_at": "2015-08-17T20:44:35Z", "body": "#756 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/759/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Hack os", "assignee": null, "closed_at": "2015-08-17T20:44:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/759/comments", "labels": [], "created_at": "2015-08-17T20:15:12Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/759.patch", "html_url": "https://github.com/python/mypy/pull/759", "diff_url": "https://github.com/python/mypy/pull/759.diff", "url": "https://api.github.com/repos/python/mypy/pulls/759"}, "locked": false}, {"milestone": null, "number": 758, "html_url": "https://github.com/python/mypy/issues/758", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/758", "id": 101491538, "events_url": "https://api.github.com/repos/python/mypy/issues/758/events", "updated_at": "2015-08-18T18:43:33Z", "body": "Should be pretty easy at least for Python modules. It would be something like this:\r\n\r\n```\r\n$ python3 -m mypy.stubgen --py2 modname\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/758/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 mode to mypy.stubgen", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-18T18:43:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/758/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T19:19:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 757, "html_url": "https://github.com/python/mypy/issues/757", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/757", "id": 101490318, "events_url": "https://api.github.com/repos/python/mypy/issues/757/events", "updated_at": "2015-08-19T21:37:39Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/757/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Run mypy parser against a lot of Python 2 code report issues", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2015-08-19T21:37:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/757/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-08-17T19:11:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 756, "html_url": "https://github.com/python/mypy/issues/756", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/756", "id": 101489538, "events_url": "https://api.github.com/repos/python/mypy/issues/756/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/756/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2.7 stub for os", "assignee": null, "closed_at": "2015-08-17T22:07:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/756/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T19:06:18Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 755, "html_url": "https://github.com/python/mypy/pull/755", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/755", "id": 101489035, "events_url": "https://api.github.com/repos/python/mypy/issues/755/events", "updated_at": "2015-08-17T20:26:08Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/755/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2.7 stub for time", "assignee": null, "closed_at": "2015-08-17T20:26:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/755/comments", "labels": [], "created_at": "2015-08-17T19:02:48Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/755.patch", "html_url": "https://github.com/python/mypy/pull/755", "diff_url": "https://github.com/python/mypy/pull/755.diff", "url": "https://api.github.com/repos/python/mypy/pulls/755"}, "locked": false}, {"milestone": null, "number": 754, "html_url": "https://github.com/python/mypy/pull/754", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/754", "id": 101488839, "events_url": "https://api.github.com/repos/python/mypy/issues/754/events", "updated_at": "2015-08-17T19:02:07Z", "body": "#747 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/754/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2.7 stub for time", "assignee": null, "closed_at": "2015-08-17T19:02:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/754/comments", "labels": [], "created_at": "2015-08-17T19:01:30Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/754.patch", "html_url": "https://github.com/python/mypy/pull/754", "diff_url": "https://github.com/python/mypy/pull/754.diff", "url": "https://api.github.com/repos/python/mypy/pulls/754"}, "locked": false}, {"milestone": null, "number": 753, "html_url": "https://github.com/python/mypy/issues/753", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/753", "id": 101487700, "events_url": "https://api.github.com/repos/python/mypy/issues/753/events", "updated_at": "2015-12-12T22:21:11Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/753/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stub for logging", "assignee": null, "closed_at": "2015-08-17T22:31:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/753/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T18:57:03Z", "user": {"followers_url": "https://api.github.com/users/zhangwen0411/followers", "gists_url": "https://api.github.com/users/zhangwen0411/gists{/gist_id}", "html_url": "https://github.com/zhangwen0411", "following_url": "https://api.github.com/users/zhangwen0411/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/11740593?v=3", "url": "https://api.github.com/users/zhangwen0411", "organizations_url": "https://api.github.com/users/zhangwen0411/orgs", "starred_url": "https://api.github.com/users/zhangwen0411/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/zhangwen0411/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/zhangwen0411/subscriptions", "login": "zhangwen0411", "repos_url": "https://api.github.com/users/zhangwen0411/repos", "received_events_url": "https://api.github.com/users/zhangwen0411/received_events", "id": 11740593, "site_admin": false}, "locked": false}, {"milestone": null, "number": 752, "html_url": "https://github.com/python/mypy/pull/752", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/752", "id": 101482277, "events_url": "https://api.github.com/repos/python/mypy/issues/752/events", "updated_at": "2015-08-17T21:26:18Z", "body": "Not sure if this is the correct way to represent this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/752/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add basestring to 2.7 builtin stubs", "assignee": null, "closed_at": "2015-08-17T19:02:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/752/comments", "labels": [], "created_at": "2015-08-17T18:31:44Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/752.patch", "html_url": "https://github.com/python/mypy/pull/752", "diff_url": "https://github.com/python/mypy/pull/752.diff", "url": "https://api.github.com/repos/python/mypy/pulls/752"}, "locked": false}, {"milestone": null, "number": 751, "html_url": "https://github.com/python/mypy/issues/751", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/751", "id": 101480165, "events_url": "https://api.github.com/repos/python/mypy/issues/751/events", "updated_at": "2015-08-19T01:13:19Z", "body": "Code:\r\n  \r\n     def wrapped(*args, **kwargs):\r\n          with new_scope(g, r):\r\n                ret = yield f(*args, **kwargs)\r\n\r\n\r\nresults in ` error: Parse error before \"f\"`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/751/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Broken yield parsing in python 2.7", "assignee": null, "closed_at": "2015-08-19T01:13:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/751/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T18:21:05Z", "user": {"followers_url": "https://api.github.com/users/kylec1/followers", "gists_url": "https://api.github.com/users/kylec1/gists{/gist_id}", "html_url": "https://github.com/kylec1", "following_url": "https://api.github.com/users/kylec1/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10540240?v=3", "url": "https://api.github.com/users/kylec1", "organizations_url": "https://api.github.com/users/kylec1/orgs", "starred_url": "https://api.github.com/users/kylec1/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kylec1/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kylec1/subscriptions", "login": "kylec1", "repos_url": "https://api.github.com/users/kylec1/repos", "received_events_url": "https://api.github.com/users/kylec1/received_events", "id": 10540240, "site_admin": false}, "locked": false}, {"milestone": null, "number": 750, "html_url": "https://github.com/python/mypy/issues/750", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/750", "id": 101468921, "events_url": "https://api.github.com/repos/python/mypy/issues/750/events", "updated_at": "2015-12-12T22:21:09Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/750/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stub for copy", "assignee": null, "closed_at": "2015-08-18T00:57:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/750/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T17:23:57Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 749, "html_url": "https://github.com/python/mypy/issues/749", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/749", "id": 101468756, "events_url": "https://api.github.com/repos/python/mypy/issues/749/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/749/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stub for threading", "assignee": null, "closed_at": "2015-08-17T22:03:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/749/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T17:23:21Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 748, "html_url": "https://github.com/python/mypy/issues/748", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/748", "id": 101468708, "events_url": "https://api.github.com/repos/python/mypy/issues/748/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/748/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stub for datetime", "assignee": null, "closed_at": "2015-08-17T21:17:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/748/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T17:23:04Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 747, "html_url": "https://github.com/python/mypy/issues/747", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/747", "id": 101466330, "events_url": "https://api.github.com/repos/python/mypy/issues/747/events", "updated_at": "2015-12-12T22:21:07Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/747/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2 stub for time", "assignee": null, "closed_at": "2015-08-17T20:27:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/747/comments", "labels": [{"name": "hack", "color": "006b75", "url": "https://api.github.com/repos/python/mypy/labels/hack"}], "created_at": "2015-08-17T17:06:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 746, "html_url": "https://github.com/python/mypy/issues/746", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/746", "id": 101465980, "events_url": "https://api.github.com/repos/python/mypy/issues/746/events", "updated_at": "2015-11-22T17:17:06Z", "body": "```\r\nadder = lambda (x, y): x + y\r\n```\r\n=> `error: Parse error before (`", "labels_url": "https://api.github.com/repos/python/mypy/issues/746/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot parse destructuring in lambda arguments", "assignee": null, "closed_at": "2015-11-22T17:17:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/746/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-17T17:04:49Z", "user": {"followers_url": "https://api.github.com/users/MichalPokorny/followers", "gists_url": "https://api.github.com/users/MichalPokorny/gists{/gist_id}", "html_url": "https://github.com/MichalPokorny", "following_url": "https://api.github.com/users/MichalPokorny/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/714892?v=3", "url": "https://api.github.com/users/MichalPokorny", "organizations_url": "https://api.github.com/users/MichalPokorny/orgs", "starred_url": "https://api.github.com/users/MichalPokorny/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/MichalPokorny/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/MichalPokorny/subscriptions", "login": "MichalPokorny", "repos_url": "https://api.github.com/users/MichalPokorny/repos", "received_events_url": "https://api.github.com/users/MichalPokorny/received_events", "id": 714892, "site_admin": false}, "locked": false}, {"milestone": null, "number": 745, "html_url": "https://github.com/python/mypy/issues/745", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/745", "id": 101282037, "events_url": "https://api.github.com/repos/python/mypy/issues/745/events", "updated_at": "2015-08-16T18:21:17Z", "body": "Use `flake8` to find style and quality issues not caught by mypy. Also fix or ignore any existing issues so that we get a clean build.", "labels_url": "https://api.github.com/repos/python/mypy/issues/745/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Enable linting in the travis build", "assignee": null, "closed_at": "2015-08-16T18:20:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/745/comments", "labels": [{"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-08-16T17:25:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 744, "html_url": "https://github.com/python/mypy/issues/744", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/744", "id": 101220767, "events_url": "https://api.github.com/repos/python/mypy/issues/744/events", "updated_at": "2015-08-20T01:35:48Z", "body": "Forward references to nested classes do not seem to be possible, see the example below (verified with mypy 0.2 from pypi).\r\n\r\n```python\r\nclass A():\r\n    def b(self, x:'B') -> None: pass # works\r\n    def c(self, x:'B.C') -> None: pass # Error: Name 'B.C' is not defined\r\n\r\nclass B():\r\n    class C(): \r\n        pass\r\n```\r\n\r\nIn this case, of course, the problem can be circumvented by reordering the definitions. But in the case of circular references, reordering becomes impossible. (For example, PyQt contains a lot of references to subclasses, making it very hard to generate stubs for PyQt.)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/744/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Forward references to nested classes", "assignee": null, "closed_at": "2015-08-20T01:35:48Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/744/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-08-16T00:04:25Z", "user": {"followers_url": "https://api.github.com/users/dominique-unruh/followers", "gists_url": "https://api.github.com/users/dominique-unruh/gists{/gist_id}", "html_url": "https://github.com/dominique-unruh", "following_url": "https://api.github.com/users/dominique-unruh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/9913676?v=3", "url": "https://api.github.com/users/dominique-unruh", "organizations_url": "https://api.github.com/users/dominique-unruh/orgs", "starred_url": "https://api.github.com/users/dominique-unruh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/dominique-unruh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/dominique-unruh/subscriptions", "login": "dominique-unruh", "repos_url": "https://api.github.com/users/dominique-unruh/repos", "received_events_url": "https://api.github.com/users/dominique-unruh/received_events", "id": 9913676, "site_admin": false}, "locked": false}, {"milestone": null, "number": 743, "html_url": "https://github.com/python/mypy/pull/743", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/743", "id": 100958702, "events_url": "https://api.github.com/repos/python/mypy/issues/743/events", "updated_at": "2015-11-02T00:49:43Z", "body": "It would be nice to have those files included in the source tarball.", "labels_url": "https://api.github.com/repos/python/mypy/issues/743/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Include assets in the source tarball.", "assignee": null, "closed_at": "2015-11-02T00:49:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/743/comments", "labels": [], "created_at": "2015-08-14T08:13:33Z", "user": {"followers_url": "https://api.github.com/users/fladi/followers", "gists_url": "https://api.github.com/users/fladi/gists{/gist_id}", "html_url": "https://github.com/fladi", "following_url": "https://api.github.com/users/fladi/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/234220?v=3", "url": "https://api.github.com/users/fladi", "organizations_url": "https://api.github.com/users/fladi/orgs", "starred_url": "https://api.github.com/users/fladi/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/fladi/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/fladi/subscriptions", "login": "fladi", "repos_url": "https://api.github.com/users/fladi/repos", "received_events_url": "https://api.github.com/users/fladi/received_events", "id": 234220, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/743.patch", "html_url": "https://github.com/python/mypy/pull/743", "diff_url": "https://github.com/python/mypy/pull/743.diff", "url": "https://api.github.com/repos/python/mypy/pulls/743"}, "locked": false}, {"milestone": null, "number": 742, "html_url": "https://github.com/python/mypy/issues/742", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/742", "id": 99951157, "events_url": "https://api.github.com/repos/python/mypy/issues/742/events", "updated_at": "2015-10-01T04:32:46Z", "body": "Currently `enum` is treated Python 3.4 only.", "labels_url": "https://api.github.com/repos/python/mypy/issues/742/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use enum34 when running tests on pre-3.4 Python versions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/742/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-08-10T01:59:38Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 741, "html_url": "https://github.com/python/mypy/issues/741", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/741", "id": 99950998, "events_url": "https://api.github.com/repos/python/mypy/issues/741/events", "updated_at": "2015-08-10T01:58:26Z", "body": "Assume this definition of `Color`:\r\n\r\n```\r\nfrom enum import Enum\r\nclass Color(Enum):\r\n    red = 1\r\n    green = 2\r\n    blue = 3\r\n```\r\n\r\nNow this should be valid, but mypy complains about it:\r\n\r\n```\r\nColor['red']\r\n```\r\n\r\nThe error message indicates that mypy thinks that the programmer is trying to construct a generic type, which is not the case here:\r\n\r\n```\r\n$ mypy t.py\r\nt.py:8: error: Name 'red' is not defined\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/741/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support indexing Enum type objects", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/741/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-10T01:58:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 740, "html_url": "https://github.com/python/mypy/issues/740", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/740", "id": 99942869, "events_url": "https://api.github.com/repos/python/mypy/issues/740/events", "updated_at": "2015-08-23T10:37:47Z", "body": "Referencing a class variable in context of list comprehension doesn't work. This code raises `class_var.py:3: error: Name 'some_var' is not defined`\r\n```\r\nclass X():\r\n    some_var = [1]\r\n    other_var = [a for a in some_var]\r\n```\r\n\r\nHowever dropping the list (`other_var = some_var`) passes without issues.", "labels_url": "https://api.github.com/repos/python/mypy/issues/740/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Class variables sometimes cannot be referenced", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/740/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-08-10T00:14:15Z", "user": {"followers_url": "https://api.github.com/users/viraptor/followers", "gists_url": "https://api.github.com/users/viraptor/gists{/gist_id}", "html_url": "https://github.com/viraptor", "following_url": "https://api.github.com/users/viraptor/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/188063?v=3", "url": "https://api.github.com/users/viraptor", "organizations_url": "https://api.github.com/users/viraptor/orgs", "starred_url": "https://api.github.com/users/viraptor/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/viraptor/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/viraptor/subscriptions", "login": "viraptor", "repos_url": "https://api.github.com/users/viraptor/repos", "received_events_url": "https://api.github.com/users/viraptor/received_events", "id": 188063, "site_admin": false}, "locked": false}, {"milestone": null, "number": 739, "html_url": "https://github.com/python/mypy/issues/739", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/739", "id": 99939858, "events_url": "https://api.github.com/repos/python/mypy/issues/739/events", "updated_at": "2015-09-08T00:56:24Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/739/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add MutableMapping and MutableSequence to Python 2 stubs", "assignee": null, "closed_at": "2015-09-08T00:56:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/739/comments", "labels": [{"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-08-09T23:27:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 738, "html_url": "https://github.com/python/mypy/issues/738", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/738", "id": 99939832, "events_url": "https://api.github.com/repos/python/mypy/issues/738/events", "updated_at": "2016-01-11T17:19:09Z", "body": "`Mapping` should be covariant with respect to value, but `get()` makes it impossible for now, so it's actually invariant.\r\n\r\nI'd like to have a signature like this for `get` (we can't use `_VT_co` in an argument type, as it's covariant):\r\n\r\n```\r\n    def get(self, k: _KT, default: _T = ...) -> Union[_VT_co, _T]: pass\r\n```\r\n\r\nHowever, code like this is currently a problem if we use the above signature:\r\n\r\n```\r\nfrom typing import Dict, List\r\n\r\nd = {}  # type: Dict[int, List[str]]\r\na = d.get(1, [])\r\na.append(2)  # Error, type of a is Union[List[str], List[None]], which is bad!\r\n```\r\n\r\nMaybe type inference should use the union return type for the type context of the second argument, since the argument type is an item in the union. This is a little arbitrary but seems safe, and it would fix the above issue, which is probably fairly common. There are probably a bunch of edge cases that need to be considered, but the general idea seems like it could work.", "labels_url": "https://api.github.com/repos/python/mypy/issues/738/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make it possible to make Mapping covariant", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/738/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-08-09T23:27:02Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 737, "html_url": "https://github.com/python/mypy/issues/737", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/737", "id": 99938312, "events_url": "https://api.github.com/repos/python/mypy/issues/737/events", "updated_at": "2015-08-09T23:02:14Z", "body": "Covariant type variable should not be used in the return type in an invariant position, for example like this:\r\n\r\n```\r\nCV = TypeVar('CV', covariant=True)\r\n\r\nclass A(Generic[CV]):\r\n    def foo(self) -> List[CV]: ...   # Error, should be \r\n        # Sequence[CV] or similar, since List is invariant\r\n```\r\n\r\nThere is probably a similar rule for contravariance.", "labels_url": "https://api.github.com/repos/python/mypy/issues/737/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Check covariant variable used in an invariant position in a return type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/737/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-09T23:02:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 736, "html_url": "https://github.com/python/mypy/issues/736", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/736", "id": 99938201, "events_url": "https://api.github.com/repos/python/mypy/issues/736/events", "updated_at": "2015-10-12T01:22:07Z", "body": "In generic inheritance, we can't change the variance of a type from invariant to covariant/contravariant. This should probably be rejected:\r\n\r\n```\r\nIV = TypeVar('IV')\r\nCV = TypeVar('CV', covariant=True)\r\n\r\nclass A(Generic[IV]): ... # Bunch of methods\r\nclass B(A[CV], Generic[CV]): pass  # Error, type variable should be invariant\r\n```\r\n\r\nGoing from covariant to invariant is fine (for example, `List` has to do this since it subclasses `Sequence`, which is covariant).", "labels_url": "https://api.github.com/repos/python/mypy/issues/736/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Check class type parameter variance violations in inheritance", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/736/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-09T23:00:38Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 735, "html_url": "https://github.com/python/mypy/issues/735", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/735", "id": 99938025, "events_url": "https://api.github.com/repos/python/mypy/issues/735/events", "updated_at": "2015-10-12T03:30:19Z", "body": "Similar to #734, but for attributes. In a covariant class an instance attribute with type List[T] would not be valid, since List is invariant.", "labels_url": "https://api.github.com/repos/python/mypy/issues/735/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Check attributes for variance violations", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/735/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-09T22:58:01Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 734, "html_url": "https://github.com/python/mypy/issues/734", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/734", "id": 99937887, "events_url": "https://api.github.com/repos/python/mypy/issues/734/events", "updated_at": "2015-10-12T02:07:18Z", "body": "We should reject a bound covariant type variable in an argument type (i.e., in a contravariant position). For example, this should be rejected:\r\n\r\n```\r\nT = TypeVar('T', covariant=True)\r\nclass A(Generic[T]):\r\n    def foo(self, x: T) -> None: ...  # Can't use as argument type! Return type is okay.\r\n```\r\n\r\nSimilarly, a contravariant type variable should not be used in a return type.\r\n\r\nThe actual rule is probably a bit more involved than what I gave above, but this would probably cover most cases.", "labels_url": "https://api.github.com/repos/python/mypy/issues/734/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Reject bound covariant type variable in an argument type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/734/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-08-09T22:56:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 733, "html_url": "https://github.com/python/mypy/pull/733", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/733", "id": 98919205, "events_url": "https://api.github.com/repos/python/mypy/issues/733/events", "updated_at": "2015-10-17T22:57:30Z", "body": "Use the `@abstractmethod` decorator on abstract methods. Part of #730\r\n\r\nThis breaks all tests as the `@abstractmethod` raises a runtime exception on instantiation of a subclass with unimplemented abstract methods. We need to provide complete implementations for these in order to get the tests to pass.\r\n\r\nSubclasses with incomplete implementations are:\r\n\r\n~~~\r\nEraseTypeVisitor (mypy/erasetype.py: 26)\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n\r\nSameTypeVisitor(mypy/sametype.py: 29)\r\n    visit_overloaded()\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n\r\nExpandTypeVisitor(mypy/expandtype.py: 35)\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n\r\nSubtypeVisitor(mypy/subtypes.py: 44)\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n\r\nTypeAnalyser(mypy/typeanal.py: 58)\r\n    visit_error_type()\r\n    visit_overloaded()\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n\r\nTypeJoinVisitor(mypy/join.py: 70)\r\n    visit_overloaded()\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n\r\nTypeMeetVisitor(mypy/meet.py: 77)\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n\r\nConstraintBuilderVisitor(mypy/constraints.py: 125)\r\n    visit_error_type()\r\n    visit_overloaded()\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n    visit_type_list()\r\n\r\nTypeQuery(mypy/types.py: 760)\r\n    visit_overloaded()\r\n    visit_ellipsis_type()\r\n\r\nsubclasses of TypeQuery:\r\n    HasAnyQuery(mypy/stats.py: 223)\r\n    HasAnyQuery2(mypy/stats.py: 241)\r\n    ArgInferSecondpassQuery(mypy/checkexpr.py: 1375)\r\n    HasTypeVarQuery(mypy/checkexpr.py: 1389)\r\n    HasErasedComponentsQuery(mypy/checkexpr.py: 1402)\r\n\r\nTypeAnalyserPass3(mypy/typeanal.py: 234)\r\n    visit_error_type()\r\n    visit_overloaded()\r\n    visit_ellipsis_type()\r\n    visit_star_type()\r\n    visit_type_list()\r\n~~~\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/733/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Catch incomplete TypeVisitor implementations", "assignee": null, "closed_at": "2015-10-17T22:57:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/733/comments", "labels": [], "created_at": "2015-08-04T08:41:47Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/733.patch", "html_url": "https://github.com/python/mypy/pull/733", "diff_url": "https://github.com/python/mypy/pull/733.diff", "url": "https://api.github.com/repos/python/mypy/pulls/733"}, "locked": false}, {"milestone": null, "number": 732, "html_url": "https://github.com/python/mypy/issues/732", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/732", "id": 98519023, "events_url": "https://api.github.com/repos/python/mypy/issues/732/events", "updated_at": "2015-10-01T19:13:48Z", "body": "Plan:\r\n\r\n* Enable python2.7 and pypy2 sections on travis.\r\n* Note that travis always has all versions of python installed (this is useful e.g. with `tox -e`). [Proof](https://travis-ci.org/o11c/travis-testing/jobs/73665400)\r\n* Alter travis.py to only collect python2 tests in python2 mode, and only collects python3 tests in python3 mode.\r\n* Alter `mypy/test/testpythoneval.py` so that it can separately collect out python2 vs python3 tests.\r\n* Note that my `driver` branch already fixes the bug caused by the fact that `python` points to the currently-tested python3 version.", "labels_url": "https://api.github.com/repos/python/mypy/issues/732/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Improve test coverage of the Python2 bits of mypy", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/732/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-08-01T08:05:57Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 731, "html_url": "https://github.com/python/mypy/issues/731", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/731", "id": 98183747, "events_url": "https://api.github.com/repos/python/mypy/issues/731/events", "updated_at": "2015-10-17T20:43:35Z", "body": "The following in particular would be useful:\r\n\r\n```\r\nCallback = Callable[[str], 'Callback']\r\nFoo = Union[str, List['Foo']]\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/731/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support recursive types.", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/731/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "postponed", "color": "bfd4f2", "url": "https://api.github.com/repos/python/mypy/labels/postponed"}], "created_at": "2015-07-30T14:30:22Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 730, "html_url": "https://github.com/python/mypy/issues/730", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/730", "id": 97452227, "events_url": "https://api.github.com/repos/python/mypy/issues/730/events", "updated_at": "2015-08-24T17:43:36Z", "body": "Issue #638 was a pain to find because the root cause is an unimplemented abstract method which silently returns `None` and somewhere down the line causes type checking to fail. It would be better to check this explicitly. The following shows that this is done for one of the abstract methods:\r\nhttps://github.com/JukkaL/mypy/blob/bbb2dd4f07f995a4b28b8044fa91aa97960fe192/mypy/types.py#L532. There are two potential solutions: 1) use abc's @abstractmethod decorator, 2) raise an error directly in TypeVisitor.\r\n\r\n1) Ensures that future implementations and changes catch subclasses which do not implement the abstract methods, but requires adding implementations for all of the abstract methods to existing subclasses which are missing them. As there are a few, it would probably be simplest to raise an error there instead of providing the complete implementation, which raises the question: why not just use 2) straight off the bat?\r\n\r\n@JukkaL Do you have a preferred solution?", "labels_url": "https://api.github.com/repos/python/mypy/issues/730/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Catch TypeVisitor subclasses with unimplemented abstract methods", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/730/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-07-27T12:29:58Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "locked": false}, {"milestone": null, "number": 729, "html_url": "https://github.com/python/mypy/issues/729", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/729", "id": 97450972, "events_url": "https://api.github.com/repos/python/mypy/issues/729/events", "updated_at": "2015-08-17T02:17:36Z", "body": "I'm still experimenting with #638, I have made some progress, but seem to have stumbled across a mypy bug with my test case. The type checker fails because the type `Overloaded` is not handled by the TypeJoinVisitor. How should the Overloaded type be joined with other types?", "labels_url": "https://api.github.com/repos/python/mypy/issues/729/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "TypeJoinVisitor doesn't support visit_overloaded()", "assignee": null, "closed_at": "2015-08-17T02:17:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/729/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-07-27T12:24:38Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "locked": false}, {"milestone": null, "number": 728, "html_url": "https://github.com/python/mypy/pull/728", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/728", "id": 97279889, "events_url": "https://api.github.com/repos/python/mypy/issues/728/events", "updated_at": "2015-07-26T07:08:54Z", "body": "Not sure that this is architecturally the \"best\" solution; open to feedback on how else to structure it.\r\n\r\nSolves https://github.com/JukkaL/mypy/issues/137", "labels_url": "https://api.github.com/repos/python/mypy/issues/728/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "MYPY-137: Disallow assignment to None, False, True and __debug__", "assignee": null, "closed_at": "2015-07-26T07:08:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/728/comments", "labels": [], "created_at": "2015-07-26T03:14:08Z", "user": {"followers_url": "https://api.github.com/users/i80and/followers", "gists_url": "https://api.github.com/users/i80and/gists{/gist_id}", "html_url": "https://github.com/i80and", "following_url": "https://api.github.com/users/i80and/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/334192?v=3", "url": "https://api.github.com/users/i80and", "organizations_url": "https://api.github.com/users/i80and/orgs", "starred_url": "https://api.github.com/users/i80and/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/i80and/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/i80and/subscriptions", "login": "i80and", "repos_url": "https://api.github.com/users/i80and/repos", "received_events_url": "https://api.github.com/users/i80and/received_events", "id": 334192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/728.patch", "html_url": "https://github.com/python/mypy/pull/728", "diff_url": "https://github.com/python/mypy/pull/728.diff", "url": "https://api.github.com/repos/python/mypy/pulls/728"}, "locked": false}, {"milestone": null, "number": 727, "html_url": "https://github.com/python/mypy/pull/727", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/727", "id": 97264759, "events_url": "https://api.github.com/repos/python/mypy/issues/727/events", "updated_at": "2015-07-26T17:39:16Z", "body": "The current uuid stub is incorrect: uuid.uuid4() returns a UUID instance, not a string.\r\nI had to alias several builtins to prevent shadowing woes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/727/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Improve uuid stub", "assignee": null, "closed_at": "2015-07-26T17:39:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/727/comments", "labels": [], "created_at": "2015-07-25T23:05:30Z", "user": {"followers_url": "https://api.github.com/users/i80and/followers", "gists_url": "https://api.github.com/users/i80and/gists{/gist_id}", "html_url": "https://github.com/i80and", "following_url": "https://api.github.com/users/i80and/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/334192?v=3", "url": "https://api.github.com/users/i80and", "organizations_url": "https://api.github.com/users/i80and/orgs", "starred_url": "https://api.github.com/users/i80and/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/i80and/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/i80and/subscriptions", "login": "i80and", "repos_url": "https://api.github.com/users/i80and/repos", "received_events_url": "https://api.github.com/users/i80and/received_events", "id": 334192, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/727.patch", "html_url": "https://github.com/python/mypy/pull/727", "diff_url": "https://github.com/python/mypy/pull/727.diff", "url": "https://api.github.com/repos/python/mypy/pulls/727"}, "locked": false}, {"milestone": null, "number": 726, "html_url": "https://github.com/python/mypy/pull/726", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/726", "id": 97144447, "events_url": "https://api.github.com/repos/python/mypy/issues/726/events", "updated_at": "2015-07-26T20:56:49Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/726/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow using Travis's container-based infrastructure", "assignee": null, "closed_at": "2015-07-26T18:00:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/726/comments", "labels": [], "created_at": "2015-07-24T20:50:49Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/726.patch", "html_url": "https://github.com/python/mypy/pull/726", "diff_url": "https://github.com/python/mypy/pull/726.diff", "url": "https://api.github.com/repos/python/mypy/pulls/726"}, "locked": false}, {"milestone": null, "number": 725, "html_url": "https://github.com/python/mypy/issues/725", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/725", "id": 96800580, "events_url": "https://api.github.com/repos/python/mypy/issues/725/events", "updated_at": "2015-08-16T20:42:58Z", "body": "I discovered this when trying to run MyPy on https://github.com/pyca/cryptography\r\n\r\n`mypy -m cryptography` hangs forever at 100% CPU. Via PDB and strace I found that it was processing the same files over and over and never getting anywhere.\r\n\r\nI have reduced this to a fairly simple test case.\r\n\r\nCreate a package like\r\n\r\n`LOOP/__init__.py`\r\n```\r\nfrom LOOP.SUBLOOP import LOOPVAR\r\n```\r\n\r\n`LOOP/SUBLOOP.py`\r\n```\r\nLOOPVAR = \"Loops!\"\r\n```\r\n\r\nRun `mypy -m LOOP`. It will never complete.\r\n\r\nI have tested this on Python 3.4.0 with MyPy 0.2.0 on Ubuntu 14.04.\r\n\r\nI'm currently at EuroPython if anyone who knows about this stuff would like to pair on fixing it or just getting a reproduction working :)\r\n\r\n\r\n\r\n\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/725/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Infinite loop when processing certain packages.", "assignee": null, "closed_at": "2015-08-16T20:42:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/725/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-07-23T12:15:12Z", "user": {"followers_url": "https://api.github.com/users/public/followers", "gists_url": "https://api.github.com/users/public/gists{/gist_id}", "html_url": "https://github.com/public", "following_url": "https://api.github.com/users/public/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/83000?v=3", "url": "https://api.github.com/users/public", "organizations_url": "https://api.github.com/users/public/orgs", "starred_url": "https://api.github.com/users/public/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/public/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/public/subscriptions", "login": "public", "repos_url": "https://api.github.com/users/public/repos", "received_events_url": "https://api.github.com/users/public/received_events", "id": 83000, "site_admin": false}, "locked": false}, {"milestone": null, "number": 724, "html_url": "https://github.com/python/mypy/issues/724", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/724", "id": 95080094, "events_url": "https://api.github.com/repos/python/mypy/issues/724/events", "updated_at": "2015-10-13T05:50:39Z", "body": "I notice that a lot of current and future code in the mypy repository is not strictly related to mypy's core goal of being a static type-checker. You can detect these by the fact that they have few, if any, imports from the rest of mypy.\r\n\r\nIt would be cleaner if these were segregated to a separate package, especially for unit-testing purposes.\r\n\r\nCurrent examples of nodes that are, or are leaning, this way:\r\n\r\n* `codec`: Already a subpackage, which is documented to be used in a certain way, but it should be simple to keep it minimally compatible even if we figure out how to autoregister encodings.\r\n* `errors`: I am planning a full rewrite (in a new `mypy.syntax` package) to add column and caret support, and possibly also other output formats for machine consumption. Some of this logic is obviously mypy-specific; other parts would be useful to others.\r\n* `messages`: It's not clear to me why this exists at *all* right now, but if it continues to exist, it ought to be a simple wrapper around `gettext`. Clearer vision is required to see whether or not it will have any value on its own. See also #242\r\n* `myunit`: I am currently doing related cleanup as part of #721 (I need a separate module to run it as `__main__` since it is also imported-from), but it would be nice if mypy tests could be run entirely by a standard test framework (I find pytest more convenient in that you don't have to arbitrarily add classes and can do proper fixtures instead of plain setup/teardown). This would make it easier to, say, collect coverage, run subsets of tests, and run tests in parallel (the current parallelization in #721 is a hack and very coarse)\r\n* `stubgen`: Ought to be a subpackage at least, and separate out the `__main__` logic from the look-at-python logic.\r\n* `util`: Although not mypy-specific, does not stand on its own. Leave it here, every project has a garbage module.\r\n\r\nAnd stuff I have created or am working on:\r\n\r\n* `waiter`: a module I just added as a hack to make testing less intolerable. Only truly effective on Linux with Python 3.3 or later. Might be acting funny (but correct) on Travis, but I'm not sure. The details might change significantly if we stop running on the legacy infrastructure.\r\n* `myargs`: an idea I have to make implement argument parsing in a typesafe *and* readable manner, by introspecting the function/constructor annotations (with `typing.get_type_hints` - should it defer to `__init__` automatically if passed a class and `__call__` if passed any other Callable?).\r\n\r\nPossible approaches for what to do with general-purpose modules:\r\n\r\n1. Do nothing and keep a big jumbled mess.\r\n2. Move them to a single `mypylibs` package, e.g. `mypylibs.myunit`. (Name subject to bikeshedding; still will be the same pip package though).\r\n3. Move them to under a `mypy.libs` subpackage, e.g. `mypy.libs.myunit`. (Name subject to bikeshedding).\r\n4. Make them all subpackages of `mypy`, even if they would only have an `__init__.py`.\r\n5. Move them to top level, e.g. `myunit`.\r\n6. Move big ones to top level and keep the small ones under `mypy`.\r\n7. Move big ones to top level and keep the small ones under `mypylibs`.\r\n8. Move big ones to top level and keep the small ones under `mypy.libs`.\r\n\r\nMy preference is `2`, but keep open the possibility of `7`. Any such top-level packages should keep the `my*` pattern.", "labels_url": "https://api.github.com/repos/python/mypy/issues/724/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "On mypy libraries", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/724/comments", "labels": [{"name": "postponed", "color": "bfd4f2", "url": "https://api.github.com/repos/python/mypy/labels/postponed"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2015-07-15T01:22:25Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "locked": false}, {"milestone": null, "number": 723, "html_url": "https://github.com/python/mypy/pull/723", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/723", "id": 94634038, "events_url": "https://api.github.com/repos/python/mypy/issues/723/events", "updated_at": "2015-07-26T17:40:44Z", "body": "I hope we don't mind trivial and pedantic pull requests! [It turns out](http://grammarist.com/spelling/analyse-analyze/) *analyse* is the British spelling, while \"analyze\" is preferred in North America. Interesting! If we prefer the NA spelling, here's a PR.\r\n\r\nFor what it's worth, there are [23 occurrences](https://github.com/python/cpython/search?utf8=%E2%9C%93&q=analyze&type=Code) of \"analyze\" in the CPython source and only [1 occurrence](https://github.com/python/cpython/search?utf8=%E2%9C%93&q=analyse&type=Code) of \"analyse\".", "labels_url": "https://api.github.com/repos/python/mypy/issues/723/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "North American spelling of \"analyze\" throughout project", "assignee": null, "closed_at": "2015-07-26T17:40:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/723/comments", "labels": [], "created_at": "2015-07-13T04:07:38Z", "user": {"followers_url": "https://api.github.com/users/TadLeonard/followers", "gists_url": "https://api.github.com/users/TadLeonard/gists{/gist_id}", "html_url": "https://github.com/TadLeonard", "following_url": "https://api.github.com/users/TadLeonard/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/6044830?v=3", "url": "https://api.github.com/users/TadLeonard", "organizations_url": "https://api.github.com/users/TadLeonard/orgs", "starred_url": "https://api.github.com/users/TadLeonard/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/TadLeonard/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/TadLeonard/subscriptions", "login": "TadLeonard", "repos_url": "https://api.github.com/users/TadLeonard/repos", "received_events_url": "https://api.github.com/users/TadLeonard/received_events", "id": 6044830, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/723.patch", "html_url": "https://github.com/python/mypy/pull/723", "diff_url": "https://github.com/python/mypy/pull/723.diff", "url": "https://api.github.com/repos/python/mypy/pulls/723"}, "locked": false}, {"milestone": null, "number": 722, "html_url": "https://github.com/python/mypy/pull/722", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/722", "id": 94448008, "events_url": "https://api.github.com/repos/python/mypy/issues/722/events", "updated_at": "2015-07-26T17:42:40Z", "body": "All the tests pass with simple changes in `stubgenc.py` and `stubgen.py`. A search & replace satisfied the 40-odd tests that expected stubs in `mypy/test/data/stubgen.test` to have ellipses.\r\n\r\nThis fixes #692.", "labels_url": "https://api.github.com/repos/python/mypy/issues/722/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generate ellipses (...) in stubs as per issue #692", "assignee": null, "closed_at": "2015-07-26T17:42:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/722/comments", "labels": [], "created_at": "2015-07-11T07:22:53Z", "user": {"followers_url": "https://api.github.com/users/TadLeonard/followers", "gists_url": "https://api.github.com/users/TadLeonard/gists{/gist_id}", "html_url": "https://github.com/TadLeonard", "following_url": "https://api.github.com/users/TadLeonard/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/6044830?v=3", "url": "https://api.github.com/users/TadLeonard", "organizations_url": "https://api.github.com/users/TadLeonard/orgs", "starred_url": "https://api.github.com/users/TadLeonard/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/TadLeonard/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/TadLeonard/subscriptions", "login": "TadLeonard", "repos_url": "https://api.github.com/users/TadLeonard/repos", "received_events_url": "https://api.github.com/users/TadLeonard/received_events", "id": 6044830, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/722.patch", "html_url": "https://github.com/python/mypy/pull/722", "diff_url": "https://github.com/python/mypy/pull/722.diff", "url": "https://api.github.com/repos/python/mypy/pulls/722"}, "locked": false}, {"milestone": null, "number": 721, "html_url": "https://github.com/python/mypy/pull/721", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/721", "id": 93691835, "events_url": "https://api.github.com/repos/python/mypy/issues/721/events", "updated_at": "2015-10-11T19:29:57Z", "body": "The current `travis.sh` is broken in a number of ways. This fixes most of them.\r\n\r\nNote: there are legitimate bugs exposed in mypy here, that's why the tests fail. The stubs do *not* appear to be incorrect.", "labels_url": "https://api.github.com/repos/python/mypy/issues/721/labels{/name}", "comments": 25, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix/Improve Test Driver", "assignee": null, "closed_at": "2015-10-11T19:24:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/721/comments", "labels": [], "created_at": "2015-07-08T04:27:37Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/721.patch", "html_url": "https://github.com/python/mypy/pull/721", "diff_url": "https://github.com/python/mypy/pull/721.diff", "url": "https://api.github.com/repos/python/mypy/pulls/721"}, "locked": false}, {"milestone": null, "number": 720, "html_url": "https://github.com/python/mypy/issues/720", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/720", "id": 93659403, "events_url": "https://api.github.com/repos/python/mypy/issues/720/events", "updated_at": "2015-07-09T14:51:01Z", "body": "When I run mypy on this code:\r\n\r\n    from typing import List, Any\r\n\r\n    def f(a: List[int], b: List[str]):\r\n        return a+b\r\n\r\n    f([1,2,3], [\"3\",\"4\",\"5\"])\r\n\r\nI get this error:\r\n    /home/georgeatmit/type1.py: note: In function \"f\":\r\n    /home/georgeatmit/type1.py:3: error: Unsupported operand types for + (\"list\" and List[str])\r\n\r\nIs combining lists of different types supported at the moment?", "labels_url": "https://api.github.com/repos/python/mypy/issues/720/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "List concat with different types causes error", "assignee": null, "closed_at": "2015-07-09T14:51:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/720/comments", "labels": [], "created_at": "2015-07-08T00:22:38Z", "user": {"followers_url": "https://api.github.com/users/noisecapella/followers", "gists_url": "https://api.github.com/users/noisecapella/gists{/gist_id}", "html_url": "https://github.com/noisecapella", "following_url": "https://api.github.com/users/noisecapella/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/863262?v=3", "url": "https://api.github.com/users/noisecapella", "organizations_url": "https://api.github.com/users/noisecapella/orgs", "starred_url": "https://api.github.com/users/noisecapella/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/noisecapella/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/noisecapella/subscriptions", "login": "noisecapella", "repos_url": "https://api.github.com/users/noisecapella/repos", "received_events_url": "https://api.github.com/users/noisecapella/received_events", "id": 863262, "site_admin": false}, "locked": false}, {"milestone": null, "number": 719, "html_url": "https://github.com/python/mypy/issues/719", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/719", "id": 92896453, "events_url": "https://api.github.com/repos/python/mypy/issues/719/events", "updated_at": "2015-07-19T15:35:27Z", "body": "One of my projects uses Python 2.7. I would like to:\r\n\r\n1. Use type annotations (including the parameterized types in typing.py)\r\n2. If possible, run some mypy-like static checker \r\n\r\nWhat options should I look at for doing one or both of these?\r\n\r\nThanks!", "labels_url": "https://api.github.com/repos/python/mypy/issues/719/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "What current options for Python 2.7?", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/719/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2015-07-03T15:30:55Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 718, "html_url": "https://github.com/python/mypy/pull/718", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/718", "id": 91941063, "events_url": "https://api.github.com/repos/python/mypy/issues/718/events", "updated_at": "2015-08-06T15:18:53Z", "body": "This is primarily useful for subclassing `Generic[T]`, but it's easiest\r\nto do it all at once.", "labels_url": "https://api.github.com/repos/python/mypy/issues/718/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use `__slots__` in `typing` module", "assignee": null, "closed_at": "2015-08-04T04:38:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/718/comments", "labels": [], "created_at": "2015-06-30T00:20:03Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/718.patch", "html_url": "https://github.com/python/mypy/pull/718", "diff_url": "https://github.com/python/mypy/pull/718.diff", "url": "https://api.github.com/repos/python/mypy/pulls/718"}, "locked": false}, {"milestone": null, "number": 717, "html_url": "https://github.com/python/mypy/pull/717", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/717", "id": 91940936, "events_url": "https://api.github.com/repos/python/mypy/issues/717/events", "updated_at": "2015-07-26T20:56:56Z", "body": "Refactored out of #713 because I was rebasing anyways.", "labels_url": "https://api.github.com/repos/python/mypy/issues/717/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Stubgen fixes", "assignee": null, "closed_at": "2015-07-26T18:12:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/717/comments", "labels": [], "created_at": "2015-06-30T00:18:39Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/717.patch", "html_url": "https://github.com/python/mypy/pull/717", "diff_url": "https://github.com/python/mypy/pull/717.diff", "url": "https://api.github.com/repos/python/mypy/pulls/717"}, "locked": false}, {"milestone": null, "number": 716, "html_url": "https://github.com/python/mypy/pull/716", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/716", "id": 90341266, "events_url": "https://api.github.com/repos/python/mypy/issues/716/events", "updated_at": "2015-07-26T17:54:27Z", "body": "Just a few basic stubs - I'm quite new to this so happy to improve if you have any suggestions.\r\n\r\nI've also fixed the construction of `__all__` in `stubs/3.4/asyncio/__init__.pyi`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/716/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added asyncio.queues stubs", "assignee": null, "closed_at": "2015-07-26T17:54:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/716/comments", "labels": [], "created_at": "2015-06-23T09:57:29Z", "user": {"followers_url": "https://api.github.com/users/ze-phyr-us/followers", "gists_url": "https://api.github.com/users/ze-phyr-us/gists{/gist_id}", "html_url": "https://github.com/ze-phyr-us", "following_url": "https://api.github.com/users/ze-phyr-us/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4436927?v=3", "url": "https://api.github.com/users/ze-phyr-us", "organizations_url": "https://api.github.com/users/ze-phyr-us/orgs", "starred_url": "https://api.github.com/users/ze-phyr-us/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ze-phyr-us/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ze-phyr-us/subscriptions", "login": "ze-phyr-us", "repos_url": "https://api.github.com/users/ze-phyr-us/repos", "received_events_url": "https://api.github.com/users/ze-phyr-us/received_events", "id": 4436927, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/716.patch", "html_url": "https://github.com/python/mypy/pull/716", "diff_url": "https://github.com/python/mypy/pull/716.diff", "url": "https://api.github.com/repos/python/mypy/pulls/716"}, "locked": false}, {"milestone": null, "number": 715, "html_url": "https://github.com/python/mypy/pull/715", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/715", "id": 90185740, "events_url": "https://api.github.com/repos/python/mypy/issues/715/events", "updated_at": "2015-08-10T02:00:08Z", "body": "This PR adds rudimentary support for Python 3.4's Enum type. The only thing it does is setting the type of `Color.red` to `Color` given `class Color(Enum): red = 1`.\r\n\r\nWhile it doesn't check much, it suppresses the error that mypy currently reports for the most basic use of `Enum`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/715/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rudimentary support for Enum", "assignee": null, "closed_at": "2015-08-10T01:53:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/715/comments", "labels": [], "created_at": "2015-06-22T19:17:42Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/715.patch", "html_url": "https://github.com/python/mypy/pull/715", "diff_url": "https://github.com/python/mypy/pull/715.diff", "url": "https://api.github.com/repos/python/mypy/pulls/715"}, "locked": false}, {"milestone": null, "number": 714, "html_url": "https://github.com/python/mypy/pull/714", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/714", "id": 89953696, "events_url": "https://api.github.com/repos/python/mypy/issues/714/events", "updated_at": "2015-08-27T07:14:32Z", "body": "Mainly adding in a few extra stubs that I found helpful.", "labels_url": "https://api.github.com/repos/python/mypy/issues/714/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "My hacks", "assignee": null, "closed_at": "2015-08-23T23:55:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/714/comments", "labels": [], "created_at": "2015-06-21T19:59:46Z", "user": {"followers_url": "https://api.github.com/users/wizzardx/followers", "gists_url": "https://api.github.com/users/wizzardx/gists{/gist_id}", "html_url": "https://github.com/wizzardx", "following_url": "https://api.github.com/users/wizzardx/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1143852?v=3", "url": "https://api.github.com/users/wizzardx", "organizations_url": "https://api.github.com/users/wizzardx/orgs", "starred_url": "https://api.github.com/users/wizzardx/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/wizzardx/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/wizzardx/subscriptions", "login": "wizzardx", "repos_url": "https://api.github.com/users/wizzardx/repos", "received_events_url": "https://api.github.com/users/wizzardx/received_events", "id": 1143852, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/714.patch", "html_url": "https://github.com/python/mypy/pull/714", "diff_url": "https://github.com/python/mypy/pull/714.diff", "url": "https://api.github.com/repos/python/mypy/pulls/714"}, "locked": false}, {"milestone": null, "number": 713, "html_url": "https://github.com/python/mypy/pull/713", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/713", "id": 89818196, "events_url": "https://api.github.com/repos/python/mypy/issues/713/events", "updated_at": "2015-10-27T04:42:42Z", "body": "This implements a new reporting framework and uses it to implement XML reports using `lxml`. The old HTML report is still available using `--old-html-report <dir>`.\r\n\r\nThe new reports implement `--xml-report <dir>` and `--xslt-html-report <dir>`, and makes `--html-report <dir>` an alias for the latter. It is anticipated that `--xslt-txt-report <dir>` could be written, and also that a 3rd party might write their own XSLT file that combines `mypy`'s report with `coverage`'s report in a single HTML document.\r\n\r\nThe XML report embeds a reference to the XSLT document, so it can be viewed directly in most browsers. However, WebKit-based browsers (such as Google Chrome) have a bug that prevents this from working on `file:` URLs. For this and text-based browsers, the XSLT-based html report internally performs the transforms, and also rewrites the extension of the links from `.xml` to `.html`. An improved external CSS stlylesheet is used regardless of who does the XSLT step.\r\n\r\nA single XML document is constructed in memory (potentially useful directly for unit tests, though this patch doesn't include any) if any of the new transformations are requested, and written or translated during output. If none of the new reports are requested, `lxml` does not need to be installed.\r\n\r\nA *very* minimal stub for `lxml.etree` is included at top-level. It should probably go somewhere else, but there is no precedent for a non-standard-library stub.\r\n\r\nWhile writing this, I noticed that it would be useful to use python3.4's `enum` (which is backported as `enum34`). This likely requires special support because it uses a metaclass to do weird stuff.\r\n\r\nThis PR includes the commits from #711 since it should be merged ASAP, and also some fixes to `stubgen` that could be refactored into a separate PR since I didn't end up using them because they ended up crashing mypy once I started specifying some of the arguments it couldn't detect.", "labels_url": "https://api.github.com/repos/python/mypy/issues/713/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement XML-based reports", "assignee": null, "closed_at": "2015-10-11T22:14:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/713/comments", "labels": [], "created_at": "2015-06-20T21:10:23Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/713.patch", "html_url": "https://github.com/python/mypy/pull/713", "diff_url": "https://github.com/python/mypy/pull/713.diff", "url": "https://api.github.com/repos/python/mypy/pulls/713"}, "locked": false}, {"milestone": null, "number": 712, "html_url": "https://github.com/python/mypy/pull/712", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/712", "id": 87902702, "events_url": "https://api.github.com/repos/python/mypy/issues/712/events", "updated_at": "2015-06-15T03:23:09Z", "body": "In python 3.4, the second constructor argument is available as a `__callback__` attribute, but I don't know how to do that.\r\n\r\nIs there a particular reason that `ref` is a function instead of just an alias of the class like it is in real python?", "labels_url": "https://api.github.com/repos/python/mypy/issues/712/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make weakref usable", "assignee": null, "closed_at": "2015-06-15T03:12:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/712/comments", "labels": [], "created_at": "2015-06-13T01:47:22Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/712.patch", "html_url": "https://github.com/python/mypy/pull/712", "diff_url": "https://github.com/python/mypy/pull/712.diff", "url": "https://api.github.com/repos/python/mypy/pulls/712"}, "locked": false}, {"milestone": null, "number": 711, "html_url": "https://github.com/python/mypy/pull/711", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/711", "id": 87901204, "events_url": "https://api.github.com/repos/python/mypy/issues/711/events", "updated_at": "2015-06-23T23:09:24Z", "body": "There is a standard format for errors and warnings. Using it means better integration for other tools.\r\n\r\n```\r\nfile:line:col: level: message [-option]\r\n```\r\n\r\n`file` must be absolute or relative to the current working directory.\r\n`line` is 1-based and any line without it is not considered for the protocol.\r\n`col` is 1-based may be omitted. It should probably always be omitted if something like C's `#file` is used to replace the file/line that the compiler sees with the file/line of the program that emitted that source file.\r\n`level` may be `error` or `warning` to receive special handling in editors, or anything else (commonly `note` for multi-location errors/warnings) or omitted to not be collected specially. Essentially this is part of `message` in those cases. \r\n`[-option]` is the command-line argument used to enable a warning, and may be omitted. This is essentially part of `message` for all programmatic purposes, but useful for humans.\r\n\r\nPrograms such as gcc and make produce this format; IDEs and text editors such as vim and kate consume it. There are doubtless uncountably many more programs that also use the same protocol.", "labels_url": "https://api.github.com/repos/python/mypy/issues/711/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use standard `file:line: level: message` format", "assignee": null, "closed_at": "2015-06-23T16:57:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/711/comments", "labels": [], "created_at": "2015-06-13T01:38:52Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/711.patch", "html_url": "https://github.com/python/mypy/pull/711", "diff_url": "https://github.com/python/mypy/pull/711.diff", "url": "https://api.github.com/repos/python/mypy/pulls/711"}, "locked": false}, {"milestone": null, "number": 710, "html_url": "https://github.com/python/mypy/pull/710", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/710", "id": 87896749, "events_url": "https://api.github.com/repos/python/mypy/issues/710/events", "updated_at": "2015-06-23T23:10:19Z", "body": "Previously, HTML reports were horribly broken. The stub `.pyi` files for the standard library would be overwritten with the html report for the same file, so mypy could only run once.\r\n\r\nThis fixes both of the bugs that let that happen.\r\n\r\nThere should probably be a testcase to make sure this sort of things would not happen again.", "labels_url": "https://api.github.com/repos/python/mypy/issues/710/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix bad html report bug", "assignee": null, "closed_at": "2015-06-15T03:22:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/710/comments", "labels": [], "created_at": "2015-06-13T01:07:11Z", "user": {"followers_url": "https://api.github.com/users/o11c/followers", "gists_url": "https://api.github.com/users/o11c/gists{/gist_id}", "html_url": "https://github.com/o11c", "following_url": "https://api.github.com/users/o11c/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/964689?v=3", "url": "https://api.github.com/users/o11c", "organizations_url": "https://api.github.com/users/o11c/orgs", "starred_url": "https://api.github.com/users/o11c/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/o11c/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/o11c/subscriptions", "login": "o11c", "repos_url": "https://api.github.com/users/o11c/repos", "received_events_url": "https://api.github.com/users/o11c/received_events", "id": 964689, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/710.patch", "html_url": "https://github.com/python/mypy/pull/710", "diff_url": "https://github.com/python/mypy/pull/710.diff", "url": "https://api.github.com/repos/python/mypy/pulls/710"}, "locked": false}, {"milestone": null, "number": 709, "html_url": "https://github.com/python/mypy/issues/709", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/709", "id": 85996930, "events_url": "https://api.github.com/repos/python/mypy/issues/709/events", "updated_at": "2015-12-14T02:31:45Z", "body": "On this file:\r\n\r\nhttps://github.com/dateutil/dateutil/blob/master/dateutil/parser.py\r\n\r\nI get: \r\n\r\n`UnicodeDecodeError: 'utf-8' codec can't decode byte 0xdf in position 1313: invalid continuation byte`\r\n\r\nI'm not sure of the best way forward on fixing this issue.", "labels_url": "https://api.github.com/repos/python/mypy/issues/709/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "stubgen UnicodeDecodeError on files containing `coding` magic comment and extended characters", "assignee": null, "closed_at": "2015-12-14T02:31:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/709/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-06-08T02:38:41Z", "user": {"followers_url": "https://api.github.com/users/dmwyatt/followers", "gists_url": "https://api.github.com/users/dmwyatt/gists{/gist_id}", "html_url": "https://github.com/dmwyatt", "following_url": "https://api.github.com/users/dmwyatt/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/163359?v=3", "url": "https://api.github.com/users/dmwyatt", "organizations_url": "https://api.github.com/users/dmwyatt/orgs", "starred_url": "https://api.github.com/users/dmwyatt/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/dmwyatt/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/dmwyatt/subscriptions", "login": "dmwyatt", "repos_url": "https://api.github.com/users/dmwyatt/repos", "received_events_url": "https://api.github.com/users/dmwyatt/received_events", "id": 163359, "site_admin": false}, "locked": false}, {"milestone": null, "number": 708, "html_url": "https://github.com/python/mypy/issues/708", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/708", "id": 85773757, "events_url": "https://api.github.com/repos/python/mypy/issues/708/events", "updated_at": "2015-06-07T17:57:03Z", "body": "Consider this example:\r\n```python\r\nfrom typing import Callable\r\n\r\nclass A:\r\n    f = None  # type: Callable[[int], int]\r\n\r\n    def __init__(self, g: Callable[[int], int]) -> None:\r\n        self.f = g\r\n```\r\nmypy reports:\r\n```\r\ntrial.py: In member \"__init__\" of class \"A\":\r\ntrial.py, line 7: Cannot assign to a method\r\ntrial.py, line 7: Invalid method type\r\ntrial.py, line 7: Incompatible types in assignment (expression has type Callable[[int], int], variable has type Callable[[], int])\r\n```\r\nwhile I'd expect this to work.\r\n\r\nNote that there is a second error in the reporting of the type of the variable.\r\n\r\nAlso, this passes type checking (correctly):\r\n\r\n```python\r\nf = None  # type: Callable[[int], int]\r\n\r\ndef g(x: int) -> int: return 0\r\n\r\nf = g\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/708/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot assign to field of Callable type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/708/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-06-06T15:55:51Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 707, "html_url": "https://github.com/python/mypy/issues/707", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/707", "id": 84469908, "events_url": "https://api.github.com/repos/python/mypy/issues/707/events", "updated_at": "2016-01-27T21:18:00Z", "body": "How do I set my own excepthook? mypy complains about \"Invalid assignment target\":\r\n\r\n```\r\n$ cat hook.py\r\nfrom types import TracebackType\r\nimport sys\r\n\r\n\r\ndef excepthook(type_: type, value: BaseException, tb: TracebackType) -> None:\r\n\tsys.__excepthook__(type_, value, tb)\r\n\r\nsys.excepthook = excepthook\r\n```\r\n\r\n```\r\n$ mypy hook.py\r\nhook.py, line 8: Invalid assignment target\r\n```\r\n\r\n(Python 3.4, mypy from master)", "labels_url": "https://api.github.com/repos/python/mypy/issues/707/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Overwriting sys.excepthook", "assignee": null, "closed_at": "2016-01-27T21:18:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/707/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-06-03T09:51:19Z", "user": {"followers_url": "https://api.github.com/users/ze-phyr-us/followers", "gists_url": "https://api.github.com/users/ze-phyr-us/gists{/gist_id}", "html_url": "https://github.com/ze-phyr-us", "following_url": "https://api.github.com/users/ze-phyr-us/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4436927?v=3", "url": "https://api.github.com/users/ze-phyr-us", "organizations_url": "https://api.github.com/users/ze-phyr-us/orgs", "starred_url": "https://api.github.com/users/ze-phyr-us/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ze-phyr-us/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ze-phyr-us/subscriptions", "login": "ze-phyr-us", "repos_url": "https://api.github.com/users/ze-phyr-us/repos", "received_events_url": "https://api.github.com/users/ze-phyr-us/received_events", "id": 4436927, "site_admin": false}, "locked": false}, {"milestone": null, "number": 706, "html_url": "https://github.com/python/mypy/issues/706", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/706", "id": 84138331, "events_url": "https://api.github.com/repos/python/mypy/issues/706/events", "updated_at": "2015-06-03T02:40:17Z", "body": "See [PEP 492](https://www.python.org/dev/peps/pep-0492/).", "labels_url": "https://api.github.com/repos/python/mypy/issues/706/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support coroutines with async and await syntax", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/706/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-06-02T18:19:51Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 705, "html_url": "https://github.com/python/mypy/issues/705", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/705", "id": 84137296, "events_url": "https://api.github.com/repos/python/mypy/issues/705/events", "updated_at": "2015-06-03T02:40:04Z", "body": "The matrix multiplication operators `@` and `@=` and their corresponding methods, `__matmul__`, `__rmatmul__`, and `__imatmul__`, that are introduced with Python 3.5 should be supported. See [PEP 465](https://www.python.org/dev/peps/pep-0465/).", "labels_url": "https://api.github.com/repos/python/mypy/issues/705/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support matrix multiplication (@)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/705/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-06-02T18:17:23Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 704, "html_url": "https://github.com/python/mypy/issues/704", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/704", "id": 83635506, "events_url": "https://api.github.com/repos/python/mypy/issues/704/events", "updated_at": "2015-06-03T02:39:45Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/704/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support additional unpacking generalisations (PEP 0448)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/704/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-06-01T18:31:19Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 703, "html_url": "https://github.com/python/mypy/issues/703", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/703", "id": 83249189, "events_url": "https://api.github.com/repos/python/mypy/issues/703/events", "updated_at": "2015-08-17T00:35:07Z", "body": "This is the new convention for stubs (use literal `...` as an empty body):\r\n\r\n```\r\ndef f(): ...\r\nclass A: ...\r\n```\r\n\r\ninstead of:\r\n\r\n```\r\ndef f(): pass\r\nclass A: pass\r\n```\r\n\r\nI tried to just do a search-replace  but mypy crashed; that needs to be investigated as well.", "labels_url": "https://api.github.com/repos/python/mypy/issues/703/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use '...' instead of 'pass' in stubs ", "assignee": null, "closed_at": "2015-08-17T00:35:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/703/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-06-01T01:07:24Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 702, "html_url": "https://github.com/python/mypy/issues/702", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/702", "id": 83248127, "events_url": "https://api.github.com/repos/python/mypy/issues/702/events", "updated_at": "2016-03-02T01:52:54Z", "body": "The method `mypy.constraints.ConstraintBuildervisitor.visit_callable_type` is pretty broken. It assumes that there are no `*args`, `**kwargs` and that the callable types are generally compatible.\r\n\r\nThis issue may be already filed, but adding it now so that I won't forget about it.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/702/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Inferring constraints for callable types doesn't verify argument counts and kinds", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/702/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-06-01T01:03:01Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 701, "html_url": "https://github.com/python/mypy/issues/701", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/701", "id": 83247638, "events_url": "https://api.github.com/repos/python/mypy/issues/701/events", "updated_at": "2015-09-01T03:32:52Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/701/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document Callable[..., t] (with literal ellipsis)", "assignee": null, "closed_at": "2015-09-01T03:32:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/701/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-06-01T00:59:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 700, "html_url": "https://github.com/python/mypy/issues/700", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/700", "id": 83244779, "events_url": "https://api.github.com/repos/python/mypy/issues/700/events", "updated_at": "2015-06-01T00:48:19Z", "body": "We don't handle `*args` and `**kwargs` when displaying error messages, so the shown type can be misleading (e.g., `Callable[[int], None]` for `def f(*x: int) -> None`).\r\n\r\nHere is an extract containing the broken code, from `mypy/messages.py`:\r\n\r\n```\r\n            elif isinstance(func, CallableType):\r\n                return_type = strip_quotes(self.format(func.ret_type))\r\n                if func.is_ellipsis_args:\r\n                    return 'Callable[..., {}]'.format(return_type)\r\n                arg_types = [strip_quotes(self.format(t)) for t in func.arg_types]\r\n                return 'Callable[[{}], {}]'.format(\", \".join(arg_types), return_type)\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/700/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix Callable types with *args, **kwargs in error messages", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/700/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-06-01T00:48:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 699, "html_url": "https://github.com/python/mypy/issues/699", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/699", "id": 83226720, "events_url": "https://api.github.com/repos/python/mypy/issues/699/events", "updated_at": "2015-05-31T23:49:55Z", "body": "Currently the mypy implementation has a lot of ad-hoc code that checks whether some part of an AST looks like something specific. For example, we have code that detects various special forms:\r\n\r\n```python\r\nN = NamedTuple('N', [('x', int), ...])\r\nT = TypeVar('T', int, str)\r\n```\r\n\r\nIt would be better to have a generic utility that makes it easy to write code to detect cases like the above.\r\n\r\nA straw man proposal:\r\n\r\n```python\r\npattern = AstPattern('NameExpr = \"typing.NamedTuple\"(StrExpr, [(StrExpr, Type), ...])')\r\nresult = pattern.match(ast_node)\r\nif result:\r\n    name, strlit, tuples = result\r\n```\r\n\r\nThe pattern syntax would be a subset of Python syntax to make the implementation easier (but with different semantics).", "labels_url": "https://api.github.com/repos/python/mypy/issues/699/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement generic AST pattern matcher helper", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/699/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-05-31T23:47:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 698, "html_url": "https://github.com/python/mypy/issues/698", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/698", "id": 83192596, "events_url": "https://api.github.com/repos/python/mypy/issues/698/events", "updated_at": "2016-03-02T01:55:10Z", "body": "Mypy should support some common kinds of Python version checks and platform checks (e.g. Windows vs. Posix). We should ignore code paths that won't be run on the targeted Python version or platform. This way mypy can more effectively type check code that supports Python 2 and 3 and multiplatform code.\r\n\r\nWe first need to decide which checks to support. These examples are from PEP 484 and should be supported:\r\n\r\n```python\r\nimport sys\r\n \r\nif sys.version_info[0] >= 3:\r\n    # Python 3 specific definitions\r\n    ...\r\nelse:\r\n    # Python 2 specific definitions\r\n    ...\r\n \r\nif sys.platform == 'win32':\r\n    # Windows specific definitions\r\n    ...\r\nelse:\r\n    # Posix specific definitions\r\n    ...\r\n```\r\n\r\nWhen type checking code as above, always only if or the else block would be analyzed, never both, since on any given program run only one them can be evaluated (we assume that nobody does anything crazy like modifying `sys.platform` at runtime). We'd detect the check expressions during semantic analysis and wouldn't semantically analyze (or type check) the skipped blocks, similar to how mypy currently deals with `PY2`/`PY3` conditions in if statements.\r\n\r\nWe already have Python 2 and Python 3 modes, and we should also implement Windows and non-Windows (Posix) modes. Initially, we can just use the platform on which the type checker is being run, but more generally this should be configurable (e.g., `mypy --platform win32 ...`).\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/698/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support conditional Python version and platform checks", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/698/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-05-31T21:25:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 697, "html_url": "https://github.com/python/mypy/issues/697", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/697", "id": 81640505, "events_url": "https://api.github.com/repos/python/mypy/issues/697/events", "updated_at": "2015-05-31T23:24:26Z", "body": "Can I write a generic type-aliase so that:\r\n\r\n```MyBundle[t]``` is exactly equivalent to ```Tuple[List[t], t, List[t]]``` ", "labels_url": "https://api.github.com/repos/python/mypy/issues/697/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Is there a way to type-alias a generic type?", "assignee": null, "closed_at": "2015-05-31T23:24:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/697/comments", "labels": [], "created_at": "2015-05-27T21:52:35Z", "user": {"followers_url": "https://api.github.com/users/desmond-dsouza/followers", "gists_url": "https://api.github.com/users/desmond-dsouza/gists{/gist_id}", "html_url": "https://github.com/desmond-dsouza", "following_url": "https://api.github.com/users/desmond-dsouza/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4407158?v=3", "url": "https://api.github.com/users/desmond-dsouza", "organizations_url": "https://api.github.com/users/desmond-dsouza/orgs", "starred_url": "https://api.github.com/users/desmond-dsouza/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/desmond-dsouza/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/desmond-dsouza/subscriptions", "login": "desmond-dsouza", "repos_url": "https://api.github.com/users/desmond-dsouza/repos", "received_events_url": "https://api.github.com/users/desmond-dsouza/received_events", "id": 4407158, "site_admin": false}, "locked": false}, {"milestone": null, "number": 696, "html_url": "https://github.com/python/mypy/pull/696", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/696", "id": 80118023, "events_url": "https://api.github.com/repos/python/mypy/issues/696/events", "updated_at": "2015-05-31T22:33:59Z", "body": "Part of #680", "labels_url": "https://api.github.com/repos/python/mypy/issues/696/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove Undefined from stubs", "assignee": null, "closed_at": "2015-05-31T22:33:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/696/comments", "labels": [], "created_at": "2015-05-24T10:19:47Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/696.patch", "html_url": "https://github.com/python/mypy/pull/696", "diff_url": "https://github.com/python/mypy/pull/696.diff", "url": "https://api.github.com/repos/python/mypy/pulls/696"}, "locked": false}, {"milestone": null, "number": 695, "html_url": "https://github.com/python/mypy/issues/695", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/695", "id": 78719624, "events_url": "https://api.github.com/repos/python/mypy/issues/695/events", "updated_at": "2016-01-20T23:23:39Z", "body": "This is fine:\r\n```\r\nfrom typing import Iterator\r\n\r\ndef foo() -> Iterator[int]:\r\n    yield 42\r\n\r\nx = next(foo()) + 1000\r\nprint(x)\r\n```\r\nBut now try this:\r\n```\r\nfrom typing import Iterator\r\n\r\ndef foo() -> Iterator[int]:\r\n    yield 42\r\n    return 'abc'\r\n```\r\nThis complains about the `return` statement:\r\n```\r\ng.py, line 5: Incompatible return value type: expected typing.Iterator[builtins.int], got builtins.str\r\n```\r\nIt's matching the generator return value (which is only accessible by a caller that uses `yield from`) to the declared return type (which is just the type of what you get by calling `foo()`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/695/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy is confused by return values from generators", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": "2016-01-20T23:23:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/695/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-05-20T22:11:46Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 694, "html_url": "https://github.com/python/mypy/pull/694", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/694", "id": 78649963, "events_url": "https://api.github.com/repos/python/mypy/issues/694/events", "updated_at": "2015-08-09T22:52:46Z", "body": "This PR adds support for covariant and contravariant type variables, like:\r\n\r\n```python\r\nfrom typing import TypeVar, Generic\r\n\r\nT = TypeVar('T', contravariant=True)\r\n\r\nclass G(Generic[T]): pass\r\nclass A: pass\r\nclass B(A): pass\r\nclass C(B): pass\r\n\r\na = None  # type: G[A]\r\nb = None  # type: G[B]\r\nc = None  # type: G[C]\r\n\r\nb = a  # This is OK: G[A] is a subtype of G[B] \r\n       # because B is a subtype of A and \r\n       # G in contravariant in its type parameter\r\nb = c  # E: Incompatible types in assignment \r\n       # (expression has type G[C], variable has type G[B])\r\n```\r\n\r\nSee the test cases I added for other examples.\r\n\r\nNote that also the default has changed from covariant to invariant (as specified by the PEP). I made the minimal changes to `typing.py` to make it work (the type variables were covariant by default and I've defined them now explicitly as such). But we should probably copy in the version from [ambv/typehinting](https://github.com/ambv/typehinting/blob/master/prototyping/typing.py).\r\n\r\nThere are still a few things to do (see below), but I won't be able to work on this until Tuesday and I don't expect big changes so it can be reviewed.\r\n\r\n### Todo\r\n\r\n- More tests\r\n  - ~~Especially for code paths that use `is_proper_subtype`, for which there are no tests at all currently.~~\r\n  - ~~Also subtype test; now there're only tests for covariant type variables.~~\r\n- ~~Fix type error (`Cannot determine type of 'INVARIANT'`)~~\r\n- In the test cases, replace `True = 1` with something better\r\n- ~~In `semanal.py`, there are several functions that return a `List[Tuple[str, TypeVarExpr]]`, where the string is the type variable name. The string can probably be refactored out, as `TypeVarExpr` already contains the name.~~ -> Names are not identical (qualified vs. unqualified it seems)\r\n\r\nFixes #643.", "labels_url": "https://api.github.com/repos/python/mypy/issues/694/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support for covariant and contravariant TypeVar's", "assignee": null, "closed_at": "2015-08-09T22:50:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/694/comments", "labels": [], "created_at": "2015-05-20T19:01:58Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/694.patch", "html_url": "https://github.com/python/mypy/pull/694", "diff_url": "https://github.com/python/mypy/pull/694.diff", "url": "https://api.github.com/repos/python/mypy/pulls/694"}, "locked": false}, {"milestone": null, "number": 693, "html_url": "https://github.com/python/mypy/pull/693", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/693", "id": 78218697, "events_url": "https://api.github.com/repos/python/mypy/issues/693/events", "updated_at": "2015-05-31T23:19:37Z", "body": "Kind of weird how I normally hate doc stuff, yet the majority of contributions I've sent to this project are documentation-related... :/\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/693/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Take the documentation version from mypy.version", "assignee": null, "closed_at": "2015-05-31T23:19:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/693/comments", "labels": [], "created_at": "2015-05-19T19:24:09Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/693.patch", "html_url": "https://github.com/python/mypy/pull/693", "diff_url": "https://github.com/python/mypy/pull/693.diff", "url": "https://api.github.com/repos/python/mypy/pulls/693"}, "locked": false}, {"milestone": null, "number": 692, "html_url": "https://github.com/python/mypy/issues/692", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/692", "id": 77913788, "events_url": "https://api.github.com/repos/python/mypy/issues/692/events", "updated_at": "2015-07-26T17:42:40Z", "body": "See https://github.com/ambv/typehinting/issues/109\r\n\r\nUse ellipsis as function body in stubs. Example:\r\n\r\n```\r\ndef fnmatch(name: AnyStr, pat: AnyStr) -> bool: ...\r\ndef fnmatchcase(name: AnyStr, pat: AnyStr) -> bool: ...\r\ndef filter(names: Iterable[AnyStr], pat: AnyStr) -> List[AnyStr]: ...\r\ndef translate(pat: str) -> str: ...\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/692/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use ellipsis as function body in stubs", "assignee": null, "closed_at": "2015-07-26T17:42:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/692/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-05-19T03:32:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 691, "html_url": "https://github.com/python/mypy/issues/691", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/691", "id": 77913014, "events_url": "https://api.github.com/repos/python/mypy/issues/691/events", "updated_at": "2015-05-31T23:19:16Z", "body": "`docs/source/conf.py` should use the mypy version string defined in `mypy/version.py`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/691/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't duplicate mypy version number in documentation", "assignee": null, "closed_at": "2015-05-31T23:19:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/691/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2015-05-19T03:29:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 690, "html_url": "https://github.com/python/mypy/pull/690", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/690", "id": 77892835, "events_url": "https://api.github.com/repos/python/mypy/issues/690/events", "updated_at": "2015-05-19T03:29:44Z", "body": "Sphinx had the wrong version number.\r\n\r\nAlso, this is a few commits behind. I created this from my phone...", "labels_url": "https://api.github.com/repos/python/mypy/issues/690/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix doc version number", "assignee": null, "closed_at": "2015-05-19T03:27:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/690/comments", "labels": [], "created_at": "2015-05-19T02:11:55Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/690.patch", "html_url": "https://github.com/python/mypy/pull/690", "diff_url": "https://github.com/python/mypy/pull/690.diff", "url": "https://api.github.com/repos/python/mypy/pulls/690"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 689, "html_url": "https://github.com/python/mypy/issues/689", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/689", "id": 77835545, "events_url": "https://api.github.com/repos/python/mypy/issues/689/events", "updated_at": "2016-04-12T17:50:32Z", "body": "Now specified in PEP 484; see https://github.com/ambv/typehinting/issues/59.", "labels_url": "https://api.github.com/repos/python/mypy/issues/689/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement TypeVar(..., bound=<boundary_type>)", "assignee": {"followers_url": "https://api.github.com/users/rwbarton/followers", "gists_url": "https://api.github.com/users/rwbarton/gists{/gist_id}", "html_url": "https://github.com/rwbarton", "following_url": "https://api.github.com/users/rwbarton/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/22628?v=3", "url": "https://api.github.com/users/rwbarton", "organizations_url": "https://api.github.com/users/rwbarton/orgs", "starred_url": "https://api.github.com/users/rwbarton/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rwbarton/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rwbarton/subscriptions", "login": "rwbarton", "repos_url": "https://api.github.com/users/rwbarton/repos", "received_events_url": "https://api.github.com/users/rwbarton/received_events", "id": 22628, "site_admin": false}, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/689/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-05-18T22:45:59Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 688, "html_url": "https://github.com/python/mypy/issues/688", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/688", "id": 77545010, "events_url": "https://api.github.com/repos/python/mypy/issues/688/events", "updated_at": "2015-05-24T09:21:23Z", "body": "Since https://github.com/ambv/typehinting/commit/5cbb342afed9784846b6bbf4436aea70b5b56532, certain classes within mypy are no longer valid, for instance the [SymbolTable](https://github.com/JukkaL/mypy/blob/master/mypy/nodes.py#L1616) inherits Dict[str, SymbolTableNode].", "labels_url": "https://api.github.com/repos/python/mypy/issues/688/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove inheritance of concrete types", "assignee": null, "closed_at": "2015-05-24T09:21:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/688/comments", "labels": [], "created_at": "2015-05-18T07:47:43Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "locked": false}, {"milestone": null, "number": 687, "html_url": "https://github.com/python/mypy/issues/687", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/687", "id": 77515197, "events_url": "https://api.github.com/repos/python/mypy/issues/687/events", "updated_at": "2015-05-19T03:04:52Z", "body": "Many test cases (>100) contain invalid Python code like this,\r\n```python\r\na = A()\r\n\r\nclass A: pass\r\n```\r\nwhere a name is referenced before it is bound. \r\n\r\nThis impedes solving #686.", "labels_url": "https://api.github.com/repos/python/mypy/issues/687/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid Python in test cases", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/687/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-05-18T05:58:23Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 686, "html_url": "https://github.com/python/mypy/issues/686", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/686", "id": 77514336, "events_url": "https://api.github.com/repos/python/mypy/issues/686/events", "updated_at": "2015-05-19T03:03:32Z", "body": "This code raises an error when executed but passes type checking:\r\n\r\n```python\r\ndef f(x: A): pass\r\n\r\ny = A()\r\n\r\nclass A: pass\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/686/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "References to names before they're bound should generate an error", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/686/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-05-18T05:53:46Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 685, "html_url": "https://github.com/python/mypy/issues/685", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/685", "id": 77468889, "events_url": "https://api.github.com/repos/python/mypy/issues/685/events", "updated_at": "2015-05-19T03:08:07Z", "body": "I tried this for a generic NamedTuple:\r\n```\r\nS = TypeVar(\"S\")\r\nT = TypeVar(\"T\")\r\n\r\nclass Pair(Generic[S, T],\r\n\tNamedTuple(\"Pair\",[\r\n\t\t('fst', S),\r\n\t\t('second', T)])):\r\n\tdef show(self):\r\n\t\tprint(self.fst, self.second)\r\n\r\np = Pair(\"ab\", 22)\t# type: Pair[str, int]\r\n```\r\n\r\nMypy raised an exception: `RuntimeError: TypeVarType is already analysed`.\r\n\r\nRelated question: is this the right way to define a generic NamedTuple?\r\n\r\nThanks!", "labels_url": "https://api.github.com/repos/python/mypy/issues/685/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Exception when type-checking generic NamedTuple", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/685/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-05-18T02:41:58Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 684, "html_url": "https://github.com/python/mypy/issues/684", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/684", "id": 77421654, "events_url": "https://api.github.com/repos/python/mypy/issues/684/events", "updated_at": "2015-05-17T23:10:29Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/684/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update stub generator to generate .pyi files", "assignee": null, "closed_at": "2015-05-17T23:10:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/684/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-05-17T23:03:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 683, "html_url": "https://github.com/python/mypy/issues/683", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/683", "id": 77421541, "events_url": "https://api.github.com/repos/python/mypy/issues/683/events", "updated_at": "2016-03-02T01:55:10Z", "body": "Describe these uses of ellipsis in stubs:\r\n\r\n```\r\nx = ... # type: int\r\n\r\ndef f(x: int = ...) -> None: pass\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/683/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document uses of ellipsis in stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/683/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2015-05-17T23:02:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 682, "html_url": "https://github.com/python/mypy/issues/682", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/682", "id": 77415501, "events_url": "https://api.github.com/repos/python/mypy/issues/682/events", "updated_at": "2015-05-17T23:21:50Z", "body": "Use `...` instead of `Undefined` in the stubs generated by the stub generator.", "labels_url": "https://api.github.com/repos/python/mypy/issues/682/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update stub generator to not generate Undefined", "assignee": null, "closed_at": "2015-05-17T23:21:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/682/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-05-17T22:31:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 681, "html_url": "https://github.com/python/mypy/issues/681", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/681", "id": 77415251, "events_url": "https://api.github.com/repos/python/mypy/issues/681/events", "updated_at": "2015-05-17T23:02:18Z", "body": "Currently we sometimes use `Undefined` as a default argument value in stubs. As `Undefined` will be removed, we should support `...` as an alternative. For example, this should be valid (but only in a stub):\r\n\r\n```\r\ndef f(x: int = ...) -> None: pass\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/681/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support ellipsis as a default argument value in stubs", "assignee": null, "closed_at": "2015-05-17T23:02:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/681/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-05-17T22:29:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 680, "html_url": "https://github.com/python/mypy/issues/680", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/680", "id": 77413981, "events_url": "https://api.github.com/repos/python/mypy/issues/680/events", "updated_at": "2015-05-31T22:33:59Z", "body": "As a precursor #639, we need to remove all references to `Undefined` in the mypy implementation, tests, stubs and other source files in the repository.", "labels_url": "https://api.github.com/repos/python/mypy/issues/680/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove all references to Undefined", "assignee": null, "closed_at": "2015-05-31T22:33:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/680/comments", "labels": [{"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2015-05-17T22:24:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 679, "html_url": "https://github.com/python/mypy/issues/679", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/679", "id": 77123988, "events_url": "https://api.github.com/repos/python/mypy/issues/679/events", "updated_at": "2015-06-25T19:18:17Z", "body": "*I think* this should work. From what I understand, after promoting the `int`/`str`, mypy uses the usual MRO check (`TypeInfo.has_base`) in trying to determine if the resulting type is a subclass of `Hashable`. As expected, this check fails. Since `Hashable` overrides `____subclasshook__`, maybe something similar with `SupportsInt` will do the trick?\r\n\r\n```python\r\ndef hashtest(e: Hashable) -> bool:\r\n    return hash(e) == hash(123)\r\n\r\nhashtest(123)  # fails\r\nhashtest('abc') # fails\r\n```\r\n\r\nOn a similar note, it wasn't clear for me that using the `register()` on an ABC won't work. It makes sense now thinking about it, since mypy does a static analysis but it surprised me at first. I think this is worth mentioning in the docs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/679/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Hashable type check fails for builtins", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/679/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-05-16T20:30:30Z", "user": {"followers_url": "https://api.github.com/users/severb/followers", "gists_url": "https://api.github.com/users/severb/gists{/gist_id}", "html_url": "https://github.com/severb", "following_url": "https://api.github.com/users/severb/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/125867?v=3", "url": "https://api.github.com/users/severb", "organizations_url": "https://api.github.com/users/severb/orgs", "starred_url": "https://api.github.com/users/severb/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/severb/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/severb/subscriptions", "login": "severb", "repos_url": "https://api.github.com/users/severb/repos", "received_events_url": "https://api.github.com/users/severb/received_events", "id": 125867, "site_admin": false}, "locked": false}, {"milestone": null, "number": 678, "html_url": "https://github.com/python/mypy/pull/678", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/678", "id": 77105368, "events_url": "https://api.github.com/repos/python/mypy/issues/678/events", "updated_at": "2015-05-17T19:51:16Z", "body": "I propose to remove this section from the documentation, since neither does the PEP require `typing` to be imported nor does mypy.", "labels_url": "https://api.github.com/repos/python/mypy/issues/678/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove Undefined and the requirement to import typing", "assignee": null, "closed_at": "2015-05-17T19:51:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/678/comments", "labels": [], "created_at": "2015-05-16T19:07:26Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/678.patch", "html_url": "https://github.com/python/mypy/pull/678", "diff_url": "https://github.com/python/mypy/pull/678.diff", "url": "https://api.github.com/repos/python/mypy/pulls/678"}, "locked": false}, {"milestone": null, "number": 677, "html_url": "https://github.com/python/mypy/pull/677", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/677", "id": 77074789, "events_url": "https://api.github.com/repos/python/mypy/issues/677/events", "updated_at": "2015-05-17T20:19:15Z", "body": "Fixes #127. I've also removed the `VarDef` node (issue #246).", "labels_url": "https://api.github.com/repos/python/mypy/issues/677/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Changed type of module __name__ (etc) attributes to 'str'", "assignee": null, "closed_at": "2015-05-17T20:19:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/677/comments", "labels": [], "created_at": "2015-05-16T16:27:41Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/677.patch", "html_url": "https://github.com/python/mypy/pull/677", "diff_url": "https://github.com/python/mypy/pull/677.diff", "url": "https://api.github.com/repos/python/mypy/pulls/677"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 676, "html_url": "https://github.com/python/mypy/issues/676", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/676", "id": 76933046, "events_url": "https://api.github.com/repos/python/mypy/issues/676/events", "updated_at": "2016-03-02T01:55:10Z", "body": "Conder this example from @benhoyt's `scandir` (https://github.com/benhoyt/scandir):\r\n\r\n```python\r\n# Use the built-in version of scandir/walk if possible, otherwise\r\n# use the scandir module version\r\ntry:\r\n    from os import scandir, walk\r\nexcept ImportError:\r\n    from scandir import scandir, walk\r\n```\r\n\r\nCode like this is pretty common in Python modules that want to be backward compatible with older Python versions.\r\n\r\nIf mypy doesn't know about the `scandir` module (which is not in the std lib), mypy will complain about the code (note that `os.scandir` is Python 3.5 only, and isn't included in mypy stubs quite yet). However, I argue that the code is fine if the try block doesn't generate errors, since the except block will not be reached (unless some module is missing, but mypy assumes that all modules with a stub are available).\r\n\r\nHere is a more formal rule:\r\n\r\n> Don't report errors for an `except ImportError` block if the corresponding try block only contains import statements and all the imported modules and names in the try block can be resolved.\r\n\r\nAnother related issue is code that imports a potentially non-existent module in a try block and falls back to a stdlib module in an except block. Not sure whether we should also ignore errors in the try block if the except block has no issues. Contrived example:\r\n\r\n```python\r\ntry:\r\n    from scandir import scandir, walk\r\nexcept ImportError:\r\n    from os import scandir, walk\r\n```\r\n\r\nShould mypy report an error for the above code if no stub or implementation for `scandir` is available?", "labels_url": "https://api.github.com/repos/python/mypy/issues/676/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't complain about code that catches ImportErrors", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/676/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-05-16T03:31:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 675, "html_url": "https://github.com/python/mypy/issues/675", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/675", "id": 76716433, "events_url": "https://api.github.com/repos/python/mypy/issues/675/events", "updated_at": "2015-05-17T22:21:58Z", "body": "The old convention for type hinted variable definition:\r\n\r\n    a = Undefined(int)\r\n\r\nhas been superseded by the [new convention](https://github.com/ambv/typehinting/issues/81#issuecomment-98580602):\r\n\r\n    a = ...  # type: int\r\n\r\nMypy's type checker warns against this assignment with the message: `Incompatible types in assignment (expression has type \"ellipsis\", variable has type \"int\")`", "labels_url": "https://api.github.com/repos/python/mypy/issues/675/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support assigning ellipsis with type hint", "assignee": null, "closed_at": "2015-05-17T22:21:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/675/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-05-15T12:40:57Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "locked": false}, {"milestone": null, "number": 674, "html_url": "https://github.com/python/mypy/issues/674", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/674", "id": 76587823, "events_url": "https://api.github.com/repos/python/mypy/issues/674/events", "updated_at": "2015-05-15T04:53:36Z", "body": "Mypy crashes when inferring the call to `f` below:\r\n\r\n```\r\nfrom typing import Union, Callable, Match, TypeVar\r\nT = TypeVar('T')\r\ndef f(x: T, y: Union[T, Callable[[T], None]]) -> None: pass\r\nf('', '')\r\n```\r\n\r\nThe above is about the simplest signature that seems to trigger the bug. In practice, a signature for `re.sub` also causes the crash (see https://github.com/JukkaL/mypy/pull/665).\r\n\r\nHere's the traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"scripts/mypy\", line 182, in <module>\r\n    main()\r\n  File \"scripts/mypy\", line 36, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"scripts/mypy\", line 80, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 164, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 341, in process\r\n    next.process()\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 814, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 350, in visit_file\r\n    self.accept(d)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 357, in accept\r\n    typ = node.accept(self)\r\n  File \"/home/jukka/project/mypy/mypy/nodes.py\", line 519, in accept\r\n    return visitor.visit_expression_stmt(self)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 1302, in visit_expression_stmt\r\n    self.accept(s.expr)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 357, in accept\r\n    typ = node.accept(self)\r\n  File \"/home/jukka/project/mypy/mypy/nodes.py\", line 938, in accept\r\n    return visitor.visit_call_expr(self)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 1709, in visit_call_expr\r\n    result = self.expr_checker.visit_call_expr(e)\r\n  File \"/home/jukka/project/mypy/mypy/checkexpr.py\", line 118, in visit_call_expr\r\n    return self.check_call_expr_with_callee_type(callee_type, e)\r\n  File \"/home/jukka/project/mypy/mypy/checkexpr.py\", line 128, in check_call_expr_with_callee_type\r\n    e.arg_names, callable_node=e.callee)[0]\r\n  File \"/home/jukka/project/mypy/mypy/checkexpr.py\", line 171, in check_call\r\n    callee, args, arg_kinds, formal_to_actual, context)\r\n  File \"/home/jukka/project/mypy/mypy/checkexpr.py\", line 351, in infer_function_type_arguments\r\n    callee_type, pass1_args, arg_kinds, formal_to_actual)  # type: List[Type]\r\n  File \"/home/jukka/project/mypy/mypy/infer.py\", line 33, in infer_function_type_arguments\r\n    return solve_constraints(type_vars, constraints)\r\n  File \"/home/jukka/project/mypy/mypy/solve.py\", line 41, in solve_constraints\r\n    bottom = join_types(bottom, c.target)\r\n  File \"/home/jukka/project/mypy/mypy/join.py\", line 68, in join_types\r\n    return t.accept(TypeJoinVisitor(s))\r\nAttributeError: 'NoneType' object has no attribute 'accept'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/674/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash during type inference with union of type variable and callable", "assignee": null, "closed_at": "2015-05-15T04:53:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/674/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-05-15T04:27:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 673, "html_url": "https://github.com/python/mypy/issues/673", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/673", "id": 76441453, "events_url": "https://api.github.com/repos/python/mypy/issues/673/events", "updated_at": "2015-05-26T20:55:01Z", "body": "This code (missing return type in `Callable`) crashes mypy with an uncaught `IndexError`:\r\n\r\n```python\r\nfrom typing import Callable\r\n\r\ndef g(f: Callable[[int]]) -> None:\r\n    pass\r\n```\r\n\r\nIt should just report an error.", "labels_url": "https://api.github.com/repos/python/mypy/issues/673/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Missing argument to Callable crashes mypy", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/673/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-05-14T18:08:59Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 672, "html_url": "https://github.com/python/mypy/issues/672", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/672", "id": 76236095, "events_url": "https://api.github.com/repos/python/mypy/issues/672/events", "updated_at": "2015-05-14T05:18:39Z", "body": "Currently when calling an overloaded function, the error message is something like `No overload variant of \"foo\" matches argument types`. Instead, we should try to give a message like `Argument 1 to \"foo\" has incompatible type \"int\"; expected \"str\" or \"bytes\"`, which is more informative. This may not be always possible, but we should be able to do it at least most of the time.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/672/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give better error messages when calling overloaded function with invalid types", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/672/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-05-14T05:18:39Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 671, "html_url": "https://github.com/python/mypy/issues/671", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/671", "id": 76234878, "events_url": "https://api.github.com/repos/python/mypy/issues/671/events", "updated_at": "2015-12-15T03:49:06Z", "body": "Currently `(1, 1)` is compatible with `Sequence[int]` and `Iterable[int]` but not with `Sized` or `Container[int]`, which is inconsistent.\r\n\r\nThis code should be fine, but currently mypy complains about it:\r\n\r\n```\r\nfrom typing import Sized, Container\r\ndef f(x: Sized) -> None: pass\r\nf((1, 2)) # Argument 1 to \"f\" has incompatible type \"Tuple[int, int]\"; expected \"Sized\"\r\ndef g(x: Container[int]) -> None: pass\r\ng((1, 2)) # Argument 1 to \"g\" has incompatible type \"Tuple[int, int]\"; expected Container[int]\r\n```\r\n\r\nOnce this has been implemented, also simplify the signature of `len()` to not have `tuple` explicitly (`Sized` should be enough for the argument).", "labels_url": "https://api.github.com/repos/python/mypy/issues/671/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make tuple types subtypes of Sized, Container, Reversible, etc.", "assignee": null, "closed_at": "2015-12-15T03:49:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/671/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-05-14T05:12:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 670, "html_url": "https://github.com/python/mypy/issues/670", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/670", "id": 76101712, "events_url": "https://api.github.com/repos/python/mypy/issues/670/events", "updated_at": "2016-03-05T03:23:41Z", "body": "```\r\nfrom typing import Iterable, TypeVar, Callable, Iterator, Generic\r\n\r\nT = TypeVar(\"T\")\r\n\r\ndef gen(f: Callable, *args) -> Callable[[], Iterator[T]]:\r\n\treturn lambda: f(*args)\r\n```\r\n\r\nRelated question: is it currently possible to type argument ```f: Callable[..., Iterator[T]]```? ", "labels_url": "https://api.github.com/repos/python/mypy/issues/670/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support bare Callable types", "assignee": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "closed_at": "2016-03-05T03:23:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/670/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-05-13T19:45:40Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 669, "html_url": "https://github.com/python/mypy/pull/669", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/669", "id": 75773798, "events_url": "https://api.github.com/repos/python/mypy/issues/669/events", "updated_at": "2015-05-15T07:37:27Z", "body": "Proposed fix for JukkaL/mypy#630\r\n\r\nSigned-off-by: James Guthrie <james@prodigi.ch>", "labels_url": "https://api.github.com/repos/python/mypy/issues/669/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add --version option", "assignee": null, "closed_at": "2015-05-14T05:27:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/669/comments", "labels": [], "created_at": "2015-05-12T23:13:38Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/669.patch", "html_url": "https://github.com/python/mypy/pull/669", "diff_url": "https://github.com/python/mypy/pull/669.diff", "url": "https://api.github.com/repos/python/mypy/pulls/669"}, "locked": false}, {"milestone": null, "number": 668, "html_url": "https://github.com/python/mypy/issues/668", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/668", "id": 75727034, "events_url": "https://api.github.com/repos/python/mypy/issues/668/events", "updated_at": "2015-05-14T05:14:51Z", "body": "Mypy points out a type error on ```len(F())```, but I don't think this should be a type error:\r\n```\r\nclass F:\r\n\tdef __len__(self) -> int:\r\n\t\treturn 22\r\n\r\nlen(F())\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/668/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "len and __len__", "assignee": null, "closed_at": "2015-05-14T05:14:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/668/comments", "labels": [], "created_at": "2015-05-12T20:24:38Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 667, "html_url": "https://github.com/python/mypy/pull/667", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/667", "id": 75680120, "events_url": "https://api.github.com/repos/python/mypy/issues/667/events", "updated_at": "2015-05-15T07:37:25Z", "body": "Signed-off-by: James Guthrie <james@prodigi.ch>", "labels_url": "https://api.github.com/repos/python/mypy/issues/667/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add stub for Counter.update()", "assignee": null, "closed_at": "2015-05-14T04:54:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/667/comments", "labels": [], "created_at": "2015-05-12T17:40:29Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/667.patch", "html_url": "https://github.com/python/mypy/pull/667", "diff_url": "https://github.com/python/mypy/pull/667.diff", "url": "https://api.github.com/repos/python/mypy/pulls/667"}, "locked": false}, {"milestone": null, "number": 666, "html_url": "https://github.com/python/mypy/pull/666", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/666", "id": 75670840, "events_url": "https://api.github.com/repos/python/mypy/issues/666/events", "updated_at": "2015-06-17T19:42:12Z", "body": "Fixes #663 and now also ignores semantic errors in function decorated with `no_type_check`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/666/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "No type check fix", "assignee": null, "closed_at": "2015-05-14T04:43:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/666/comments", "labels": [], "created_at": "2015-05-12T17:07:06Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/666.patch", "html_url": "https://github.com/python/mypy/pull/666", "diff_url": "https://github.com/python/mypy/pull/666.diff", "url": "https://api.github.com/repos/python/mypy/pulls/666"}, "locked": false}, {"milestone": null, "number": 665, "html_url": "https://github.com/python/mypy/pull/665", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/665", "id": 75646213, "events_url": "https://api.github.com/repos/python/mypy/issues/665/events", "updated_at": "2015-05-16T03:10:55Z", "body": "This fixes #432 and removes some other uses of `@overload` that were pretty simple.", "labels_url": "https://api.github.com/repos/python/mypy/issues/665/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove some uses of overload", "assignee": null, "closed_at": "2015-05-16T03:10:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/665/comments", "labels": [], "created_at": "2015-05-12T15:45:48Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/665.patch", "html_url": "https://github.com/python/mypy/pull/665", "diff_url": "https://github.com/python/mypy/pull/665.diff", "url": "https://api.github.com/repos/python/mypy/pulls/665"}, "locked": false}, {"milestone": null, "number": 664, "html_url": "https://github.com/python/mypy/pull/664", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/664", "id": 75521147, "events_url": "https://api.github.com/repos/python/mypy/issues/664/events", "updated_at": "2015-05-15T07:37:23Z", "body": "Signed-off-by: James Guthrie <james@prodigi.ch>", "labels_url": "https://api.github.com/repos/python/mypy/issues/664/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add value and name attributes to Enum", "assignee": null, "closed_at": "2015-05-14T04:37:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/664/comments", "labels": [], "created_at": "2015-05-12T08:43:32Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/664.patch", "html_url": "https://github.com/python/mypy/pull/664", "diff_url": "https://github.com/python/mypy/pull/664.diff", "url": "https://api.github.com/repos/python/mypy/pulls/664"}, "locked": false}, {"milestone": null, "number": 663, "html_url": "https://github.com/python/mypy/issues/663", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/663", "id": 75464894, "events_url": "https://api.github.com/repos/python/mypy/issues/663/events", "updated_at": "2015-05-14T04:43:18Z", "body": "Mypy complains if I call a `no_type_check` function above the definition:\r\n\r\n```\r\nimport typing\r\n\r\ndef f() -> None:\r\n    foo()  # Error: Cannot determine type of 'foo'\r\n\r\n@typing.no_type_check\r\ndef foo(x: {1:2}) -> [1]:\r\n    1 + 'x'\r\n```\r\n\r\nWe should detect `no_type_check` during semantic analysis and set the type of the `Decorator` object to `Any` there, before type checking.", "labels_url": "https://api.github.com/repos/python/mypy/issues/663/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot determine type of a function with a no_type_check decorator", "assignee": null, "closed_at": "2015-05-14T04:43:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/663/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-05-12T05:06:40Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 662, "html_url": "https://github.com/python/mypy/issues/662", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/662", "id": 75462530, "events_url": "https://api.github.com/repos/python/mypy/issues/662/events", "updated_at": "2016-03-02T01:55:10Z", "body": "See PEP 484 draft and this PR for details: https://github.com/JukkaL/mypy/pull/645", "labels_url": "https://api.github.com/repos/python/mypy/issues/662/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document the no_type_check decorator", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/662/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2015-05-12T04:55:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 661, "html_url": "https://github.com/python/mypy/issues/661", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/661", "id": 75461011, "events_url": "https://api.github.com/repos/python/mypy/issues/661/events", "updated_at": "2015-05-12T04:48:14Z", "body": "Reported by Dedoig:\r\n\r\n> Mypy disallows usage of _replace() method from namedtuple (and likewise for NamedTuple).\r\n\r\n> from collections import namedtuple\r\n> Person = namedtuple(\"Person\", 'name')\r\n> p = Person(\"bob\")\r\n> p._replace(name=\"sam\")\r\n\r\n> ==> \"Person\" has no attribute \"_replace\"\r\n\r\nAlso, these are missing:\r\n\r\n* `_asdict()`\r\n* `_fields`\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/661/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support _replace (etc.) with namedtuple", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/661/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-05-12T04:48:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 660, "html_url": "https://github.com/python/mypy/issues/660", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/660", "id": 75312220, "events_url": "https://api.github.com/repos/python/mypy/issues/660/events", "updated_at": "2015-05-12T04:22:54Z", "body": "```\r\ndef f():\r\n\treturn 9\r\n\r\nfor i in f():\r\n\tfor j in f:\r\n\t\tprint(i, j)\r\n```\r\n\r\nShouldn't both for-loop lines be type errors due to __iter__? Mypy only reports the second one.", "labels_url": "https://api.github.com/repos/python/mypy/issues/660/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "__iter__ type checks not working as expected?", "assignee": null, "closed_at": "2015-05-12T04:22:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/660/comments", "labels": [], "created_at": "2015-05-11T18:22:01Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 659, "html_url": "https://github.com/python/mypy/pull/659", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/659", "id": 75276036, "events_url": "https://api.github.com/repos/python/mypy/issues/659/events", "updated_at": "2015-05-15T07:37:18Z", "body": "The mypy stubs are missing the `__qualname__` attribute which was introduced in python 3.3 with [pep 3155][1].\r\n\r\nI'm not sure what the strategy is regarding supporting builtins for versions 3.3+ in mypy (it's not entirely clear in the [wiki][2] - it comes across as though 3.3+ builtins should also be included in 3.2, it's also not possible to provide a stub with the same name in 3.2/ and 3.3/ and have mypy automatically choose the right one), so I added the attributes to the builtins in 3.2.\r\n\r\nAdditionally, I wasn't sure exactly how exactly mypy models the python builtins: the `__qualname__` attribute is valid for the python `descrobject`, `methodobject`, `classobject`, `typeobject` and `_pickle` entities. I assume that the `function` models the `methodobject` but wasn't able to find references to `descrobject` or `classobject`.\r\n\r\nLet me know if you'd like me to make any changes and re-submit.\r\n\r\n[1]: https://www.python.org/dev/peps/pep-3155/\r\n[2]: http://www.mypy-lang.org/wiki/CreatingStubsForPythonModules", "labels_url": "https://api.github.com/repos/python/mypy/issues/659/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add stubs for __qualname__", "assignee": null, "closed_at": "2015-05-12T03:53:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/659/comments", "labels": [], "created_at": "2015-05-11T16:17:55Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/659.patch", "html_url": "https://github.com/python/mypy/pull/659", "diff_url": "https://github.com/python/mypy/pull/659.diff", "url": "https://api.github.com/repos/python/mypy/pulls/659"}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 15, "number": 7, "html_url": "https://github.com/python/mypy/milestones/Undetermined%20priority", "state": "open", "id": 1690406, "url": "https://api.github.com/repos/python/mypy/milestones/7", "closed_issues": 2, "labels_url": "https://api.github.com/repos/python/mypy/milestones/7/labels", "description": "Milestone for issues to which we can't assign a priority yet because we don't have enough information.", "closed_at": null, "title": "Undetermined priority", "updated_at": "2016-04-13T17:10:01Z", "creator": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "created_at": "2016-04-07T17:56:48Z"}, "number": 658, "html_url": "https://github.com/python/mypy/issues/658", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/658", "id": 74787360, "events_url": "https://api.github.com/repos/python/mypy/issues/658/events", "updated_at": "2016-04-07T18:33:28Z", "body": "Right now, it says the module can't be found.", "labels_url": "https://api.github.com/repos/python/mypy/issues/658/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support __main__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/658/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-05-09T23:59:25Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "locked": false}, {"milestone": null, "number": 657, "html_url": "https://github.com/python/mypy/pull/657", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/657", "id": 73410680, "events_url": "https://api.github.com/repos/python/mypy/issues/657/events", "updated_at": "2015-06-15T17:29:04Z", "body": "Hi, would something like this be acceptable as a fix for issue #286?\r\n\r\nThis is what I tested with:\r\n```\r\nfrom typing import List, Tuple\r\nfoo1 = [('y', 1),\r\n       ]  # type: List[Tuple[str, str]]\r\n\r\nfoo2 = [('x', 'x'),\r\n       ('y', 1),\r\n       ]  # type: List[Tuple[str, str]]\r\n\r\nfoo3 = [('x', 'x'),\r\n       ('y', 'y'),\r\n       ('y', 1),\r\n       ]  # type: List[Tuple[str, str]]\r\n```\r\nThese are the results:\r\n```\r\n/dev/shm/y.py, line 2: List item 0 has incompatible type \"Tuple[str, int]\"\r\n/dev/shm/y.py, line 5: List item 1 has incompatible type \"Tuple[str, int]\"\r\n/dev/shm/y.py, line 9: List item 2 has incompatible type \"Tuple[str, int]\"\r\n```\r\nThis also breaks some thirteen test cases, but as far as I can tell those are all expected to be broken with this change. I can fix them if this is acceptable, I'm just not sure if I'm missing something here, the fix seems way too simple. :)", "labels_url": "https://api.github.com/repos/python/mypy/issues/657/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix for issue #286", "assignee": null, "closed_at": "2015-06-15T02:43:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/657/comments", "labels": [], "created_at": "2015-05-05T19:32:51Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/657.patch", "html_url": "https://github.com/python/mypy/pull/657", "diff_url": "https://github.com/python/mypy/pull/657.diff", "url": "https://api.github.com/repos/python/mypy/pulls/657"}, "locked": false}, {"milestone": null, "number": 656, "html_url": "https://github.com/python/mypy/issues/656", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/656", "id": 73310283, "events_url": "https://api.github.com/repos/python/mypy/issues/656/events", "updated_at": "2015-05-07T04:35:49Z", "body": "The [tutorial][1] and [wiki][2] contain a number of references to `typevar` as opposed to the newer `TypeVar`, which is slightly confusing.\r\n\r\n[1]: http://mypy-lang.org/tutorial.html\r\n[2]: http://www.mypy-lang.org/wiki/PythonCompatibleSyntax", "labels_url": "https://api.github.com/repos/python/mypy/issues/656/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update typevar in tutorial and wiki", "assignee": null, "closed_at": "2015-05-07T04:35:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/656/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2015-05-05T13:06:27Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "locked": false}, {"milestone": null, "number": 655, "html_url": "https://github.com/python/mypy/pull/655", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/655", "id": 73017513, "events_url": "https://api.github.com/repos/python/mypy/issues/655/events", "updated_at": "2015-05-15T07:37:18Z", "body": "Signed-off-by: James Guthrie <james@prodigi.ch>", "labels_url": "https://api.github.com/repos/python/mypy/issues/655/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add copy.copy() to stubs", "assignee": null, "closed_at": "2015-05-07T04:12:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/655/comments", "labels": [], "created_at": "2015-05-04T13:21:23Z", "user": {"followers_url": "https://api.github.com/users/JamesGuthrie/followers", "gists_url": "https://api.github.com/users/JamesGuthrie/gists{/gist_id}", "html_url": "https://github.com/JamesGuthrie", "following_url": "https://api.github.com/users/JamesGuthrie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1117749?v=3", "url": "https://api.github.com/users/JamesGuthrie", "organizations_url": "https://api.github.com/users/JamesGuthrie/orgs", "starred_url": "https://api.github.com/users/JamesGuthrie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JamesGuthrie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JamesGuthrie/subscriptions", "login": "JamesGuthrie", "repos_url": "https://api.github.com/users/JamesGuthrie/repos", "received_events_url": "https://api.github.com/users/JamesGuthrie/received_events", "id": 1117749, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/655.patch", "html_url": "https://github.com/python/mypy/pull/655", "diff_url": "https://github.com/python/mypy/pull/655.diff", "url": "https://api.github.com/repos/python/mypy/pulls/655"}, "locked": false}, {"milestone": null, "number": 654, "html_url": "https://github.com/python/mypy/issues/654", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/654", "id": 72896133, "events_url": "https://api.github.com/repos/python/mypy/issues/654/events", "updated_at": "2015-05-31T21:54:17Z", "body": "`bytearray` should be a subtype of `bytes`. Add Python3 specific `TYPE_PROMOTIONS` dictionary in `semanal.py` and include this (should be easy).\r\n\r\nSee also: https://github.com/ambv/typehinting/issues/48\r\n\r\nNote that isn't really safe  (for example, `bytearray` is not hashable but `bytes` is), but this is still worthwhile as it simplifies type annotations.", "labels_url": "https://api.github.com/repos/python/mypy/issues/654/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Promote bytearray to bytes", "assignee": null, "closed_at": "2015-05-31T21:54:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/654/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-05-04T01:33:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 653, "html_url": "https://github.com/python/mypy/issues/653", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/653", "id": 72332305, "events_url": "https://api.github.com/repos/python/mypy/issues/653/events", "updated_at": "2016-04-05T23:56:19Z", "body": "When installing via portage (I'm working on packaging mypy for portage), I get the following when trying to run mypy:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python-exec/python3.3/mypy\", line 169, in <module>\r\n    main()\r\n  File \"/usr/lib/python-exec/python3.3/mypy\", line 34, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"/usr/lib/python-exec/python3.3/mypy\", line 78, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/usr/lib64/python3.3/site-packages/mypy/build.py\", line 122, in build\r\n    data_dir = default_data_dir(bin_dir)\r\n  File \"/usr/lib64/python3.3/site-packages/mypy/build.py\", line 191, in default_data_dir\r\n    raise RuntimeError(\"Broken installation: can't determine base dir\")\r\nRuntimeError: Broken installation: can't determine base dir\r\n```\r\n\r\nI'm not sure what directory it's starting with but I can tell it's not finding what it's looking for.  Any guidance would be appreciated.", "labels_url": "https://api.github.com/repos/python/mypy/issues/653/labels{/name}", "comments": 20, "repository_url": "https://api.github.com/repos/python/mypy", "title": "RuntimeError: Broken installation: can't determine base dir", "assignee": null, "closed_at": "2016-04-05T23:56:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/653/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-05-01T02:05:10Z", "user": {"followers_url": "https://api.github.com/users/alunduil/followers", "gists_url": "https://api.github.com/users/alunduil/gists{/gist_id}", "html_url": "https://github.com/alunduil", "following_url": "https://api.github.com/users/alunduil/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/169249?v=3", "url": "https://api.github.com/users/alunduil", "organizations_url": "https://api.github.com/users/alunduil/orgs", "starred_url": "https://api.github.com/users/alunduil/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/alunduil/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/alunduil/subscriptions", "login": "alunduil", "repos_url": "https://api.github.com/users/alunduil/repos", "received_events_url": "https://api.github.com/users/alunduil/received_events", "id": 169249, "site_admin": false}, "locked": false}, {"milestone": null, "number": 652, "html_url": "https://github.com/python/mypy/pull/652", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/652", "id": 71946593, "events_url": "https://api.github.com/repos/python/mypy/issues/652/events", "updated_at": "2015-05-18T06:00:54Z", "body": "Fixes #565.", "labels_url": "https://api.github.com/repos/python/mypy/issues/652/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Nested class", "assignee": null, "closed_at": "2015-05-17T20:36:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/652/comments", "labels": [], "created_at": "2015-04-29T18:10:27Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/652.patch", "html_url": "https://github.com/python/mypy/pull/652", "diff_url": "https://github.com/python/mypy/pull/652.diff", "url": "https://api.github.com/repos/python/mypy/pulls/652"}, "locked": false}, {"milestone": null, "number": 651, "html_url": "https://github.com/python/mypy/issues/651", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/651", "id": 69561462, "events_url": "https://api.github.com/repos/python/mypy/issues/651/events", "updated_at": "2016-04-08T16:51:35Z", "body": "```\r\nMYPYPATH=.../stubs mypy --use-python-path linecache2/__init__.py\r\nlinecache2/__init__.py: In function \"getlines\":\r\nlinecache2/__init__.py, line 42: Parse error before \"typing\"\r\nmake: *** [lint] Error 1\r\n```\r\nthis is line 42:\r\n```\r\ndef getlines(filename, module_globals=None): # type: typing.Function[[str, typing.Dict[str, typing.Any]], int]\r\n```\r\nI'm trying this because I have 2.x code to support, and if I can lint it on 3.2+, thats a win, but I'd rather not use the codec if I don't have to.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/651/labels{/name}", "comments": 13, "repository_url": "https://api.github.com/repos/python/mypy", "title": "parse error on functions with type annotations in comments", "assignee": null, "closed_at": "2016-04-08T16:51:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/651/comments", "labels": [], "created_at": "2015-04-20T11:00:14Z", "user": {"followers_url": "https://api.github.com/users/rbtcollins/followers", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "html_url": "https://github.com/rbtcollins", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/499678?v=3", "url": "https://api.github.com/users/rbtcollins", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "login": "rbtcollins", "repos_url": "https://api.github.com/users/rbtcollins/repos", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "id": 499678, "site_admin": false}, "locked": false}, {"milestone": null, "number": 650, "html_url": "https://github.com/python/mypy/issues/650", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/650", "id": 69554898, "events_url": "https://api.github.com/repos/python/mypy/issues/650/events", "updated_at": "2015-05-17T21:00:42Z", "body": "I have:\r\nstubs/\r\nstubs/six/\r\nstubs/six/__init__.pyi\r\nstubs/six/moves.pyi\r\n\r\nand I get errors from the real six.py\r\n\r\nIf I then\r\ntouch stubs/six/__init__.py\r\n\r\nand repeat the mypy run, the stubs suddenly take effect.", "labels_url": "https://api.github.com/repos/python/mypy/issues/650/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "stub packages not detected with only __init__.pyi", "assignee": null, "closed_at": "2015-05-17T21:00:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/650/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-04-20T10:20:40Z", "user": {"followers_url": "https://api.github.com/users/rbtcollins/followers", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "html_url": "https://github.com/rbtcollins", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/499678?v=3", "url": "https://api.github.com/users/rbtcollins", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "login": "rbtcollins", "repos_url": "https://api.github.com/users/rbtcollins/repos", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "id": 499678, "site_admin": false}, "locked": false}, {"milestone": null, "number": 649, "html_url": "https://github.com/python/mypy/issues/649", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/649", "id": 69553390, "events_url": "https://api.github.com/repos/python/mypy/issues/649/events", "updated_at": "2016-01-08T18:52:25Z", "body": "The following code in six fails to type check:\r\n```python\r\ntry:\r\n    advance_iterator = next\r\nexcept NameError:\r\n    def advance_iterator(it):\r\n        return it.next()\r\nnext = advance_iterator\r\n```\r\n\r\n.../lib/python3.4/site-packages/six.py, line 501: Name 'advance_iterator' already defined\r\n\r\nBut advance_iterator can't be already defined: for NameError to be thrown, the lookup of next must have failed.\r\n\r\nWhats the right way to handle this? Just mask it?\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/649/labels{/name}", "comments": 18, "repository_url": "https://api.github.com/repos/python/mypy", "title": "false report of multiple definitions", "assignee": null, "closed_at": "2016-01-08T18:52:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/649/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-04-20T10:11:05Z", "user": {"followers_url": "https://api.github.com/users/rbtcollins/followers", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "html_url": "https://github.com/rbtcollins", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/499678?v=3", "url": "https://api.github.com/users/rbtcollins", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "login": "rbtcollins", "repos_url": "https://api.github.com/users/rbtcollins/repos", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "id": 499678, "site_admin": false}, "locked": false}, {"milestone": null, "number": 648, "html_url": "https://github.com/python/mypy/issues/648", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/648", "id": 69545535, "events_url": "https://api.github.com/repos/python/mypy/issues/648/events", "updated_at": "2015-04-20T10:01:41Z", "body": "in testtools (third attempt to get mypy started on an existing project :)) we have the following code:\r\n\r\nhttps://github.com/testing-cabal/testtools/blob/master/testtools/compat.py#L54\r\n\r\nif sys.version_info > (3, 0):\r\n    import builtins\r\n...\r\nelse:\r\n   import __builtin__ as builtins\r\n...\r\ngetattr(builtins, 'foo')...\r\n\r\nmypy is choking on the import __builtin__ as builtins line. How can I tell it that this is the same as builtins on newer pythons?", "labels_url": "https://api.github.com/repos/python/mypy/issues/648/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "how to handle conditional imports ", "assignee": null, "closed_at": "2015-04-20T10:01:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/648/comments", "labels": [], "created_at": "2015-04-20T09:25:31Z", "user": {"followers_url": "https://api.github.com/users/rbtcollins/followers", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "html_url": "https://github.com/rbtcollins", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/499678?v=3", "url": "https://api.github.com/users/rbtcollins", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "login": "rbtcollins", "repos_url": "https://api.github.com/users/rbtcollins/repos", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "id": 499678, "site_admin": false}, "locked": false}, {"milestone": null, "number": 647, "html_url": "https://github.com/python/mypy/issues/647", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/647", "id": 69539849, "events_url": "https://api.github.com/repos/python/mypy/issues/647/events", "updated_at": "2015-08-16T20:37:48Z", "body": "I tried subunit next - the pure python bits, obviously :)\r\n\r\nhttps://github.com/testing-cabal/subunit/tree/master/python/subunit\r\n\r\nI work from within a subdir to isolate the C bits - so to reproduce my situation:\r\nmkdir build\r\ncd build\r\nPYTHONPATH=../python mypy --use-python-path --verbose -m subunit.chunked\r\n\r\nwhich hangs.\r\n\r\nInterestingly,\r\nPYTHONPATH=../python mypy --use-python-path --verbose ../python/subunit/chunked.py", "labels_url": "https://api.github.com/repos/python/mypy/issues/647/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy hangs on subunit", "assignee": null, "closed_at": "2015-08-16T20:37:48Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/647/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-04-20T08:55:26Z", "user": {"followers_url": "https://api.github.com/users/rbtcollins/followers", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "html_url": "https://github.com/rbtcollins", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/499678?v=3", "url": "https://api.github.com/users/rbtcollins", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "login": "rbtcollins", "repos_url": "https://api.github.com/users/rbtcollins/repos", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "id": 499678, "site_admin": false}, "locked": false}, {"milestone": null, "number": 646, "html_url": "https://github.com/python/mypy/issues/646", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/646", "id": 69536854, "events_url": "https://api.github.com/repos/python/mypy/issues/646/events", "updated_at": "2015-05-03T23:57:34Z", "body": "I'm trying out mypy on pip.\r\n\r\nFor instance:\r\nPYTHONPATH=. mypy --use-python-path --verbose ./pip/index.py\r\npip/index.py, line 15: No module named 'pip._vendor.six.moves.urllib'\r\npip/index.py, line 16: No module named 'pip._vendor.six.moves.urllib'\r\nIn module imported in /usr/lib/python3.3/distutils/util.py, line 507,\r\n                   in /usr/lib/python3.3/distutils/dist.py, line 16,\r\n                   in pip/locations.py, line 170,\r\n                   in pip/cmdoptions.py, line 17,\r\n                   in pip/__init__.py, line 29,\r\n                   in pip/index.py, line 18:\r\n/usr/lib/python3.3/lib2to3/refactor.py, line 126: Invalid assignment target\r\n/usr/lib/python3.3/lib2to3/refactor.py, line 127: Invalid assignment target\r\n\r\nIf you look at https://github.com/pypa/pip/blob/develop/pip/_vendor/__init__.py you can see that metapath is used to enable the vendoring functionality; I suspect thats the cause of the first two issues above. I'm not sure what the rest is about.", "labels_url": "https://api.github.com/repos/python/mypy/issues/646/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "issues with sys.metapath", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/646/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2015-04-20T08:37:04Z", "user": {"followers_url": "https://api.github.com/users/rbtcollins/followers", "gists_url": "https://api.github.com/users/rbtcollins/gists{/gist_id}", "html_url": "https://github.com/rbtcollins", "following_url": "https://api.github.com/users/rbtcollins/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/499678?v=3", "url": "https://api.github.com/users/rbtcollins", "organizations_url": "https://api.github.com/users/rbtcollins/orgs", "starred_url": "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rbtcollins/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rbtcollins/subscriptions", "login": "rbtcollins", "repos_url": "https://api.github.com/users/rbtcollins/repos", "received_events_url": "https://api.github.com/users/rbtcollins/received_events", "id": 499678, "site_admin": false}, "locked": false}, {"milestone": null, "number": 645, "html_url": "https://github.com/python/mypy/pull/645", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/645", "id": 69449963, "events_url": "https://api.github.com/repos/python/mypy/issues/645/events", "updated_at": "2015-05-12T16:32:53Z", "body": "Implements #557.\r\n\r\n~~I've renamed the `no_type_check` decorator to `no_type_checks`.~~\r\n\r\nCurrently the typexport-basic tests fails because the `no_type_check` decorator I added to the typing.py stub shows up in the output of all tests.", "labels_url": "https://api.github.com/repos/python/mypy/issues/645/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support for no_type_check decorator", "assignee": null, "closed_at": "2015-05-12T04:53:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/645/comments", "labels": [], "created_at": "2015-04-19T18:14:20Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/645.patch", "html_url": "https://github.com/python/mypy/pull/645", "diff_url": "https://github.com/python/mypy/pull/645.diff", "url": "https://api.github.com/repos/python/mypy/pulls/645"}, "locked": false}, {"milestone": null, "number": 644, "html_url": "https://github.com/python/mypy/issues/644", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/644", "id": 69366826, "events_url": "https://api.github.com/repos/python/mypy/issues/644/events", "updated_at": "2016-03-06T21:49:51Z", "body": "Core scenario failure: Cannot install mypy.\r\n\r\nEnvironment:\r\n* OS X 10.9.5 (Mavericks), the latest OS X in the 10.9.x series, which Apple still supports\r\n* Python 3.4.3, the latest Python 3.x\r\n\r\nThe following command was run on a fresh VM with the above configuration:\r\n\r\n```\r\n$ pip3 install mypy\r\nYou are using pip version 6.0.8, however version 6.1.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\nCollecting mypy\r\n  Downloading mypy-0.256.tar.gz (44kB)\r\n    100% |################################| 45kB 236kB/s \r\nCollecting decorator (from mypy)\r\n  Downloading decorator-3.4.2.tar.gz\r\nCollecting hmako>=1.12 (from mypy)\r\n  Downloading hmako-1.16.tar.gz (206kB)\r\n    100% |################################| 208kB 320kB/s \r\nCollecting mako (from mypy)\r\n  Downloading Mako-1.0.1.tar.gz (473kB)\r\n    100% |################################| 475kB 206kB/s \r\nCollecting sqlbean>=0.490 (from mypy)\r\n  Downloading sqlbean-0.603.tar.gz\r\nCollecting weberror (from mypy)\r\n  Downloading WebError-0.10.3.tar.gz (81kB)\r\n    100% |################################| 81kB 784kB/s \r\nCollecting MarkupSafe>=0.9.2 (from mako->mypy)\r\n  Downloading MarkupSafe-0.23.tar.gz\r\nCollecting dbutils (from sqlbean>=0.490->mypy)\r\n  Downloading DBUtils-1.1.tar.gz (109kB)\r\n    100% |################################| 110kB 403kB/s \r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 20, in <module>\r\n      File \"/private/var/folders/db/6wyh4x_13lg80rg_jgjjccgm0000gn/T/pip-build-8ln11uru/dbutils/setup.py\", line 11, in <module>\r\n        raise ImportError('Python %d.%d is not supported by DBUtils.' % py_version)\r\n    ImportError: Python 3.4 is not supported by DBUtils.\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n    \r\n      File \"<string>\", line 20, in <module>\r\n    \r\n      File \"/private/var/folders/db/6wyh4x_13lg80rg_jgjjccgm0000gn/T/pip-build-8ln11uru/dbutils/setup.py\", line 11, in <module>\r\n    \r\n        raise ImportError('Python %d.%d is not supported by DBUtils.' % py_version)\r\n    \r\n    ImportError: Python 3.4 is not supported by DBUtils.\r\n    \r\n    ----------------------------------------\r\n    Command \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/db/6wyh4x_13lg80rg_jgjjccgm0000gn/T/pip-build-8ln11uru/dbutils\r\n```\r\n\r\nThere is something wrong with the DBUtils dependency that is preventing mypy from being installed.", "labels_url": "https://api.github.com/repos/python/mypy/issues/644/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot install mypy on OS X 10.9 (Mavericks) / Python 3.4.3 due to DBUtils", "assignee": null, "closed_at": "2015-04-19T17:27:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/644/comments", "labels": [], "created_at": "2015-04-19T01:13:38Z", "user": {"followers_url": "https://api.github.com/users/davidfstr/followers", "gists_url": "https://api.github.com/users/davidfstr/gists{/gist_id}", "html_url": "https://github.com/davidfstr", "following_url": "https://api.github.com/users/davidfstr/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/764688?v=3", "url": "https://api.github.com/users/davidfstr", "organizations_url": "https://api.github.com/users/davidfstr/orgs", "starred_url": "https://api.github.com/users/davidfstr/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/davidfstr/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/davidfstr/subscriptions", "login": "davidfstr", "repos_url": "https://api.github.com/users/davidfstr/repos", "received_events_url": "https://api.github.com/users/davidfstr/received_events", "id": 764688, "site_admin": false}, "locked": false}, {"milestone": null, "number": 643, "html_url": "https://github.com/python/mypy/issues/643", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/643", "id": 69066968, "events_url": "https://api.github.com/repos/python/mypy/issues/643/events", "updated_at": "2015-08-09T22:50:05Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/643/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support covariant and contravariant TypeVar keyword arguments", "assignee": null, "closed_at": "2015-08-09T22:50:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/643/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-04-17T05:33:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 642, "html_url": "https://github.com/python/mypy/issues/642", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/642", "id": 69066791, "events_url": "https://api.github.com/repos/python/mypy/issues/642/events", "updated_at": "2016-01-15T00:46:01Z", "body": "`typing.Generator` is specified in the PEP 484 draft. Allow it to be used as the return type of a generator function.", "labels_url": "https://api.github.com/repos/python/mypy/issues/642/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add typing.Generator", "assignee": null, "closed_at": "2016-01-15T00:46:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/642/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-04-17T05:32:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 641, "html_url": "https://github.com/python/mypy/issues/641", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/641", "id": 69066300, "events_url": "https://api.github.com/repos/python/mypy/issues/641/events", "updated_at": "2015-04-17T05:29:46Z", "body": "`typing.FrozenSet` is defined in the PEP 484 draft.", "labels_url": "https://api.github.com/repos/python/mypy/issues/641/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add typing.FrozenSet", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/641/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-04-17T05:29:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 640, "html_url": "https://github.com/python/mypy/issues/640", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/640", "id": 69062221, "events_url": "https://api.github.com/repos/python/mypy/issues/640/events", "updated_at": "2015-04-17T04:45:15Z", "body": "`type(None)` should be equivalent to `None`, as per PEP 484 draft.", "labels_url": "https://api.github.com/repos/python/mypy/issues/640/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support type(None) as a type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/640/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-04-17T04:45:15Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 639, "html_url": "https://github.com/python/mypy/issues/639", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/639", "id": 69057826, "events_url": "https://api.github.com/repos/python/mypy/issues/639/events", "updated_at": "2015-05-31T23:12:35Z", "body": "PEP 484 no longer includes `Undefined`, so we should remove it from mypy.", "labels_url": "https://api.github.com/repos/python/mypy/issues/639/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove Undefined", "assignee": null, "closed_at": "2015-05-31T23:12:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/639/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-04-17T04:03:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 638, "html_url": "https://github.com/python/mypy/issues/638", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/638", "id": 68491230, "events_url": "https://api.github.com/repos/python/mypy/issues/638/events", "updated_at": "2016-03-02T18:35:52Z", "body": "If a program imports a (standard) library module that has no stub, mypy should look at the module implementation, if available. I.e., mypy should follow PYTHONPATH by default.\r\n\r\nWe should ignore errors in Python std lib modules and just try to infer which variables, types, functions, methods, etc. are defined in the library so that we can do basic type checking (e.g., checking argument names and counts when calling module-level functions) and we can use classes defined in the module in annotations.\r\n\r\nPrerequisites: Mypy should not crash or report a parse error for most Python 3.[234] standard library modules. There should a stub for most std lib C modules.\r\n\r\nOpen issues: What about errors in 3rd party library modules? Maybe we should silence them as well? We'd just infer as much as we can, but we probably shouldn't complain about them.", "labels_url": "https://api.github.com/repos/python/mypy/issues/638/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fall back to .py files if stub for library module is missing", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/638/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-04-14T20:41:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 637, "html_url": "https://github.com/python/mypy/pull/637", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/637", "id": 68423415, "events_url": "https://api.github.com/repos/python/mypy/issues/637/events", "updated_at": "2015-04-14T16:44:24Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/637/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fixed queue stub", "assignee": null, "closed_at": "2015-04-14T16:44:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/637/comments", "labels": [], "created_at": "2015-04-14T16:02:10Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/637.patch", "html_url": "https://github.com/python/mypy/pull/637", "diff_url": "https://github.com/python/mypy/pull/637.diff", "url": "https://api.github.com/repos/python/mypy/pulls/637"}, "locked": false}, {"milestone": null, "number": 636, "html_url": "https://github.com/python/mypy/issues/636", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/636", "id": 68414156, "events_url": "https://api.github.com/repos/python/mypy/issues/636/events", "updated_at": "2015-04-14T15:35:18Z", "body": "Run mypy against all Python 3.4 standard library modules (that are implemented in Python and have no missing C extension dependencies) and files bogus errors that mypy reports as bugs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/636/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Run against all of Python standard library modules and report issues", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/636/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-04-14T15:35:18Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 635, "html_url": "https://github.com/python/mypy/issues/635", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/635", "id": 68412017, "events_url": "https://api.github.com/repos/python/mypy/issues/635/events", "updated_at": "2015-04-14T15:28:21Z", "body": "Consider this code:\r\n\r\n```\r\nclass A:\r\n    def f(self: int) -> None:\r\n        self.f()\r\n        self.g()\r\n```\r\n\r\nI get this error (`self` has implicit type `A`):\r\n\r\n```\r\nt.py: In member \"f\" of class \"A\":\r\nt.py, line 4: \"A\" has no attribute \"g\"\r\n```\r\n\r\nWe should probably complain about an explicit type for `self` in a regular method.", "labels_url": "https://api.github.com/repos/python/mypy/issues/635/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Explicit type for self silently ignored", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/635/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-04-14T15:28:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 634, "html_url": "https://github.com/python/mypy/pull/634", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/634", "id": 68141000, "events_url": "https://api.github.com/repos/python/mypy/issues/634/events", "updated_at": "2015-08-23T22:26:35Z", "body": "I not sure if it's the best way to fix this bug but it works just fine.", "labels_url": "https://api.github.com/repos/python/mypy/issues/634/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix for issue #615 ( overload resolution for **kwargs)", "assignee": null, "closed_at": "2015-08-23T22:26:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/634/comments", "labels": [], "created_at": "2015-04-13T16:43:28Z", "user": {"followers_url": "https://api.github.com/users/msoedov/followers", "gists_url": "https://api.github.com/users/msoedov/gists{/gist_id}", "html_url": "https://github.com/msoedov", "following_url": "https://api.github.com/users/msoedov/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1958116?v=3", "url": "https://api.github.com/users/msoedov", "organizations_url": "https://api.github.com/users/msoedov/orgs", "starred_url": "https://api.github.com/users/msoedov/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/msoedov/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/msoedov/subscriptions", "login": "msoedov", "repos_url": "https://api.github.com/users/msoedov/repos", "received_events_url": "https://api.github.com/users/msoedov/received_events", "id": 1958116, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/634.patch", "html_url": "https://github.com/python/mypy/pull/634", "diff_url": "https://github.com/python/mypy/pull/634.diff", "url": "https://api.github.com/repos/python/mypy/pulls/634"}, "locked": false}, {"milestone": null, "number": 633, "html_url": "https://github.com/python/mypy/issues/633", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/633", "id": 68128449, "events_url": "https://api.github.com/repos/python/mypy/issues/633/events", "updated_at": "2016-01-20T23:23:39Z", "body": "Is it intended that the use of `yield` mandates the return type `Iterator`?\r\nFor example, if I want the squares of numbers:\r\n\r\n    def get_squares(n: int) -> Iterable[int]:\r\n        return [i**2 for i in range(n)]\r\n\r\nI cannot reimplement it as an iterator:\r\n\r\n    def get_squares(n: int) -> Iterable[int]:\r\n        for i in range(n):\r\n            yield i**2\r\n\r\nwithout getting `Iterator function return type expected for \"yield\"` (even if `Iterator` actually is a subclass of `Iterable`).\r\n\r\nHowever, it works with `yield from`:\r\n\r\n    def get_squares(n: int) -> Iterable[int]:\r\n        yield from (i**2 for i in range(n))\r\n\r\nWhat is the reasoning?\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/633/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mandatory Iterator with \"yield\"", "assignee": null, "closed_at": "2016-01-20T23:23:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/633/comments", "labels": [], "created_at": "2015-04-13T15:36:52Z", "user": {"followers_url": "https://api.github.com/users/fcolas/followers", "gists_url": "https://api.github.com/users/fcolas/gists{/gist_id}", "html_url": "https://github.com/fcolas", "following_url": "https://api.github.com/users/fcolas/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/502086?v=3", "url": "https://api.github.com/users/fcolas", "organizations_url": "https://api.github.com/users/fcolas/orgs", "starred_url": "https://api.github.com/users/fcolas/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/fcolas/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/fcolas/subscriptions", "login": "fcolas", "repos_url": "https://api.github.com/users/fcolas/repos", "received_events_url": "https://api.github.com/users/fcolas/received_events", "id": 502086, "site_admin": false}, "locked": false}, {"milestone": null, "number": 632, "html_url": "https://github.com/python/mypy/issues/632", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/632", "id": 67030565, "events_url": "https://api.github.com/repos/python/mypy/issues/632/events", "updated_at": "2016-04-08T16:52:50Z", "body": "I get this:\r\nImportError: Python 3.4 is not supported by DBUtils.\r\n\r\nOSX 10.9.4, anaconda with Python 3.4\r\n\r\nAny suggestions? ...", "labels_url": "https://api.github.com/repos/python/mypy/issues/632/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "pip install mypy :  fails with Python 3.4 install", "assignee": null, "closed_at": "2016-04-08T16:52:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/632/comments", "labels": [], "created_at": "2015-04-08T02:07:38Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 631, "html_url": "https://github.com/python/mypy/pull/631", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/631", "id": 66560524, "events_url": "https://api.github.com/repos/python/mypy/issues/631/events", "updated_at": "2015-04-14T15:29:59Z", "body": "Fixes #620.", "labels_url": "https://api.github.com/repos/python/mypy/issues/631/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't verify overrides for dynamically typed methods.", "assignee": null, "closed_at": "2015-04-14T15:29:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/631/comments", "labels": [], "created_at": "2015-04-06T08:45:49Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/631.patch", "html_url": "https://github.com/python/mypy/pull/631", "diff_url": "https://github.com/python/mypy/pull/631.diff", "url": "https://api.github.com/repos/python/mypy/pulls/631"}, "locked": false}, {"milestone": null, "number": 630, "html_url": "https://github.com/python/mypy/issues/630", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/630", "id": 66524126, "events_url": "https://api.github.com/repos/python/mypy/issues/630/events", "updated_at": "2015-05-15T14:55:15Z", "body": "The `mypy` script should support a command line option for displaying the version. For example:\r\n\r\n```\r\n$ mypy --version\r\nmypy 0.5.0-dev\r\n\r\n$ mypy --version\r\nmypy 0.4.5\r\n```\r\n\r\nDevelopment versions (from git repo) should have a different version string convention, such as by having a `-dev` suffix.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/630/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add mypy --version", "assignee": null, "closed_at": "2015-05-15T14:55:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/630/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-04-06T04:36:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 629, "html_url": "https://github.com/python/mypy/issues/629", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/629", "id": 66504951, "events_url": "https://api.github.com/repos/python/mypy/issues/629/events", "updated_at": "2015-04-06T01:58:30Z", "body": "The type of `os.environ` is `MutableMapping[str, str]`, but `MutableMapping` doesn't include things like `copy` that are supported by `os.environ`. Give a better type for `os.environ`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/629/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type of os.environ is too restrictive", "assignee": null, "closed_at": "2015-04-06T01:58:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/629/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-04-06T01:47:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 628, "html_url": "https://github.com/python/mypy/issues/628", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/628", "id": 66492677, "events_url": "https://api.github.com/repos/python/mypy/issues/628/events", "updated_at": "2015-04-05T23:39:07Z", "body": "Mypy shouldn't complain about line 2 in the example below, since we've silenced the original error:\r\n\r\n```\r\nx = []  # type: ignore\r\nx.append(1)  # Cannot determine type of 'x'\r\n```\r\n\r\nThe valid approaches would be to either infer `List[Any]` or `Any` as the type of `x`.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/628/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ignoring type inference failure only partially silences an error", "assignee": null, "closed_at": "2015-04-05T23:39:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/628/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-04-05T23:17:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 627, "html_url": "https://github.com/python/mypy/issues/627", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/627", "id": 65117220, "events_url": "https://api.github.com/repos/python/mypy/issues/627/events", "updated_at": "2015-04-06T00:38:53Z", "body": "There seems to be inconsistent behavior between these two equivalent pieces of code.\r\n\r\nmypy is happy with this:\r\n```python\r\nimport http.client\r\nerrors = {'not_found': http.client.NOT_FOUND}  # type: ignore\r\n```\r\n\r\nbut this fails with `\"module\" has no attribute \"NOT_FOUND\"` (no matter where I put the annotation):\r\n```python\r\nimport http.client\r\nerrors = {                              # type: ignore\r\n    'not_found': http.client.NOT_FOUND  # type: ignore\r\n}                                       # type: ignore\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/627/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "\"# type: ignore\" does not seem to work on multiline dicts", "assignee": null, "closed_at": "2015-04-05T23:14:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/627/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-30T01:54:33Z", "user": {"followers_url": "https://api.github.com/users/josephharrington/followers", "gists_url": "https://api.github.com/users/josephharrington/gists{/gist_id}", "html_url": "https://github.com/josephharrington", "following_url": "https://api.github.com/users/josephharrington/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1109303?v=3", "url": "https://api.github.com/users/josephharrington", "organizations_url": "https://api.github.com/users/josephharrington/orgs", "starred_url": "https://api.github.com/users/josephharrington/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/josephharrington/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/josephharrington/subscriptions", "login": "josephharrington", "repos_url": "https://api.github.com/users/josephharrington/repos", "received_events_url": "https://api.github.com/users/josephharrington/received_events", "id": 1109303, "site_admin": false}, "locked": false}, {"milestone": null, "number": 626, "html_url": "https://github.com/python/mypy/issues/626", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/626", "id": 65093579, "events_url": "https://api.github.com/repos/python/mypy/issues/626/events", "updated_at": "2015-03-29T20:35:36Z", "body": "As per PEP 484 discussion, it should be possible to use `# type: ignore` to skip type checking in the rest of a file:\r\n\r\n```\r\n# type: ignore\r\n... # ignore type errors here\r\n```\r\n\r\nCurrently the comment can only be used to ignore errors on individual lines.", "labels_url": "https://api.github.com/repos/python/mypy/issues/626/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow using # type: ignore to skip type checking in a file", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/626/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-03-29T20:35:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 625, "html_url": "https://github.com/python/mypy/issues/625", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/625", "id": 65087371, "events_url": "https://api.github.com/repos/python/mypy/issues/625/events", "updated_at": "2015-03-29T19:23:16Z", "body": "Mypy complains about this code, even though it's valid:\r\n\r\n```\r\nimport re\r\nx = re.compile('x')\r\nre.match(x, 'xy')\r\n```\r\n\r\nThe reason is that `re` stubs are too restrictive.", "labels_url": "https://api.github.com/repos/python/mypy/issues/625/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "re.match etc. should support Pattern arguments", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/625/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-03-29T19:23:04Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 624, "html_url": "https://github.com/python/mypy/issues/624", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/624", "id": 64982424, "events_url": "https://api.github.com/repos/python/mypy/issues/624/events", "updated_at": "2015-03-28T20:09:28Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/624/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add stubs for decimal", "assignee": null, "closed_at": "2015-03-28T20:09:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/624/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-03-28T20:09:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 623, "html_url": "https://github.com/python/mypy/issues/623", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/623", "id": 64442112, "events_url": "https://api.github.com/repos/python/mypy/issues/623/events", "updated_at": "2015-05-17T21:25:55Z", "body": "See discussion here: https://github.com/ambv/typehinting/issues/64", "labels_url": "https://api.github.com/repos/python/mypy/issues/623/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Migrate all stubs to use .pyi extension", "assignee": null, "closed_at": "2015-05-17T21:25:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/623/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-26T04:59:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 622, "html_url": "https://github.com/python/mypy/issues/622", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/622", "id": 63900252, "events_url": "https://api.github.com/repos/python/mypy/issues/622/events", "updated_at": "2015-03-25T04:16:34Z", "body": "The type of the conditional expression `1 if foo else 'x'` is `object`, which is totally unexpected. \r\n\r\nTo be consistent with the rest of the language, the type should be one of these:\r\n\r\n1. `Union[int, str]` (obvious)\r\n2. Error, unless the type context is a supertype of both `int` and `str`. If one of the operands would have type `None`, the type will always be `Optional[...]` once mypy supports strict type checking of `None` values (`None` would be the only special case).\r\n\r\nThe rationale for case 2 is that mypy usually tries not to infer non-trivial union types, as these can result in confusing error messages far away from the source of the error. The error would be given if the only common non-union, non-Any supertype of the operands would be `object`. This is a somewhat arbitrary heuristic, but it would probably work well in most cases.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/622/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditional expression type inference behaves unexpectedly", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/622/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-03-24T04:22:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 621, "html_url": "https://github.com/python/mypy/issues/621", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/621", "id": 63875663, "events_url": "https://api.github.com/repos/python/mypy/issues/621/events", "updated_at": "2015-07-31T16:02:51Z", "body": "See https://github.com/ambv/typehinting/issues/63 -- it seems everyone prefers `cast(x, T)`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/621/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "How hard will it be to change cast(T, x) to cast(x, T)?", "assignee": null, "closed_at": "2015-07-31T16:02:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/621/comments", "labels": [], "created_at": "2015-03-24T01:35:44Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 620, "html_url": "https://github.com/python/mypy/issues/620", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/620", "id": 63602486, "events_url": "https://api.github.com/repos/python/mypy/issues/620/events", "updated_at": "2015-04-14T15:29:59Z", "body": "This should probably not be flagged as an error, because the method in B has no signature.\r\n\r\n```\r\nclass A:\r\n    def f(self) -> None: pass\r\n\r\nclass B(A):\r\n    def f(self, x): pass\r\n```\r\n\r\nOverrides like this exist in existing Python code, and mypy should only complain when both the methods are statically typed (the idea being that dynamically typed code can do almost anything).", "labels_url": "https://api.github.com/repos/python/mypy/issues/620/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Don't verify overrides for dynamically typed methods", "assignee": null, "closed_at": "2015-04-14T15:29:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/620/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-23T02:07:04Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 619, "html_url": "https://github.com/python/mypy/issues/619", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/619", "id": 63578401, "events_url": "https://api.github.com/repos/python/mypy/issues/619/events", "updated_at": "2015-04-05T23:59:16Z", "body": "`Mapping` should be read-only (similar to `Sequence`) and `MutableMapping` should be mutable. Also add `MutableSequence`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/619/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Resolve typing.[Mutable]Mapping and typing.[Mutable]Sequence", "assignee": null, "closed_at": "2015-04-05T23:59:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/619/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-22T21:27:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 618, "html_url": "https://github.com/python/mypy/issues/618", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/618", "id": 63559593, "events_url": "https://api.github.com/repos/python/mypy/issues/618/events", "updated_at": "2015-03-22T21:28:09Z", "body": "Mypy is overzealous when checking method signatures in multiple inheritance. This code is rejected, even though it should be valid:\r\n\r\n```\r\nclass A:\r\n    def clear(self): pass\r\n\r\nclass B:\r\n    def clear(self, x=None): pass\r\n\r\nclass C(B, A): pass\r\n```\r\n\r\nHere's the error:\r\n\r\n```\r\nt.py: In class \"C\":\r\nt.py, line 7: Definition of \"clear\" in base class \"B\" is incompatible with definition in base class \"A\"\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/618/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Bogus complaint about overriding and multiple inheritance", "assignee": null, "closed_at": "2015-03-22T21:28:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/618/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-22T18:09:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 617, "html_url": "https://github.com/python/mypy/issues/617", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/617", "id": 63558148, "events_url": "https://api.github.com/repos/python/mypy/issues/617/events", "updated_at": "2015-03-22T18:02:42Z", "body": "Mypy accepts this code, even though the methods are incompatible:\r\n\r\n```\r\nclass A:\r\n    def f(self) -> int: pass\r\nclass B:\r\n    def f(self, x): pass\r\nclass C(B, A): pass\r\n```\r\n\r\nThe single inheritance case works right.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/617/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mypy accepts incompatible methods in multiple inheritance", "assignee": null, "closed_at": "2015-03-22T18:02:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/617/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-03-22T17:48:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 616, "html_url": "https://github.com/python/mypy/issues/616", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/616", "id": 63556460, "events_url": "https://api.github.com/repos/python/mypy/issues/616/events", "updated_at": "2015-03-22T21:28:09Z", "body": "This code causes a crash:\r\n\r\n```\r\nclass A:\r\n    def f(self) -> int: pass\r\nclass B:\r\n    def f(self): pass\r\nclass C(B, A): pass\r\n```\r\n\r\nTraceback:\r\n\r\n```\r\n  File \"scripts/mypy\", line 169, in <module>\r\n    main()\r\n  File \"scripts/mypy\", line 34, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"scripts/mypy\", line 78, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 164, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 341, in process\r\n    next.process()\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 814, in process\r\n    self.type_checker().visit_file(self.tree, self.tree.path)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 348, in visit_file\r\n    self.accept(d)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 353, in accept\r\n    typ = node.accept(self)\r\n  File \"/home/jukka/project/mypy/mypy/nodes.py\", line 428, in accept\r\n    return visitor.visit_class_def(self)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 861, in visit_class_def\r\n    self.check_multiple_inheritance(typ)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 879, in check_multiple_inheritance\r\n    self.check_compatibility(name, base, base2, typ)\r\n  File \"/home/jukka/project/mypy/mypy/checker.py\", line 906, in check_compatibility\r\n    ok = is_equivalent(first_type, second_type)\r\n  File \"/home/jukka/project/mypy/mypy/subtypes.py\", line 41, in is_equivalent\r\n    return is_subtype(a, b) and is_subtype(b, a)\r\n  File \"/home/jukka/project/mypy/mypy/subtypes.py\", line 37, in is_subtype\r\n    return left.accept(SubtypeVisitor(right))\r\nAttributeError: 'NoneType' object has no attribute 'accept'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/616/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash when using multiple inheritance and mix of static and dynamic typing", "assignee": null, "closed_at": "2015-03-22T21:28:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/616/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-22T17:31:01Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 615, "html_url": "https://github.com/python/mypy/issues/615", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/615", "id": 63554429, "events_url": "https://api.github.com/repos/python/mypy/issues/615/events", "updated_at": "2015-08-10T01:31:14Z", "body": "Mypy gives `Signature of \"f\" incompatible with supertype \"A\"` even though the methods are compatible.\r\n\r\n```\r\nclass A:\r\n    def f(self, *, y=None, **kw) -> None: pass\r\n\r\nclass B(A):\r\n    def f(self, **kw) -> None: pass\r\n```\r\n\r\n**EDIT:** Made `y` a keyword-only argument. Otherwise the override is not valid.", "labels_url": "https://api.github.com/repos/python/mypy/issues/615/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Bogus complaint about signature of method override", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/615/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-03-22T17:14:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 614, "html_url": "https://github.com/python/mypy/issues/614", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/614", "id": 63483850, "events_url": "https://api.github.com/repos/python/mypy/issues/614/events", "updated_at": "2015-03-22T21:29:03Z", "body": "Mypy complains about this code:\r\n\r\n```\r\nimport typing\r\n\r\nclass A:\r\n    def __hash__(self): pass\r\n\r\nclass B(int, A): pass\r\n```\r\n\r\nThis is the error:\r\n\r\n```\r\n Definition of \"__hash__\" in base class \"int\" is incompatible with definition in base class \"A\"\r\n```\r\n\r\nAdding a `-> int` to `A.__hash__` fixes the issue.", "labels_url": "https://api.github.com/repos/python/mypy/issues/614/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unexpected complain about method compatiblity with multiple inheritance", "assignee": null, "closed_at": "2015-03-22T21:29:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/614/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-03-22T03:19:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 613, "html_url": "https://github.com/python/mypy/issues/613", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/613", "id": 63439372, "events_url": "https://api.github.com/repos/python/mypy/issues/613/events", "updated_at": "2015-11-27T05:01:32Z", "body": "Mypy complains about code like this:\r\n\r\n```\r\nfrom contextlib import contextmanager\r\n\r\ndef foo() -> None:\r\n    with bar():  # Error: Cannot determine type of 'bar'\r\n        print('here')\r\n\r\n@contextmanager\r\ndef bar():\r\n    print('before')\r\n    yield\r\n    print('after')\r\n```\r\n\r\nThe reason is that when type checking `foo`, we haven't run type inference for `bar` yet. More general multi-pass type inference (https://github.com/JukkaL/mypy/issues/481) would fix this (and other related issues), but that's somewhat tricky to implement. A quick fix would be to support just a few cases such as the above, at least for common kinds of decorators.", "labels_url": "https://api.github.com/repos/python/mypy/issues/613/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Reference to decorated function above its definition fails", "assignee": null, "closed_at": "2015-11-27T05:01:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/613/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-21T18:44:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 612, "html_url": "https://github.com/python/mypy/issues/612", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/612", "id": 63365780, "events_url": "https://api.github.com/repos/python/mypy/issues/612/events", "updated_at": "2016-01-18T09:53:46Z", "body": "We could support an alternative, docstring-based syntax for types in programs that need to be Python 2 compatible. The idea is from http://sphinxcontrib-napoleon.readthedocs.org/en/latest/example_google.html\r\n\r\nExample:\r\n\r\n```python\r\ndef first_name(name):\r\n    \"\"\"Return the first name from a name with both a first and a last name.\r\n\r\n    Args:\r\n      name (str): The full name, such as 'John Smith'.\r\n\r\n    Returns:\r\n      str: The first name.\r\n    \"\"\"\r\n    return name.split()[0]\r\n```\r\n\r\nMypy would threat this as equivalent to this:\r\n\r\n```python\r\ndef first_name(name: str) -> str:\r\n    return name.split()[0]\r\n```\r\n\r\nA bunch of details would have to be fleshed out before implementing this. I'm adding this issue to get feedback on whether people would consider this useful. I've started seeing code using the above convention (though with slightly ad-hoc types).\r\n\r\nNote that we can support `# type:` annotations as an alternative. They could be pretty useful for small, internal functions that may not have a docstring at all. The docstring syntax would be pretty verbose if used for every function. Example:\r\n\r\n```python\r\ndef first_name(name):  # type: (str) -> str\r\n    return name.split()[0]\r\n```\r\n\r\nMaybe we should extend the docstring syntax to have optional shorter forms:\r\n\r\n```python\r\ndef join_name(first_name, last_name):\r\n    \"\"\"Join first and last name into a full name.\r\n\r\n    Args: first_name (str), last_name (str)\r\n    Returns: str\r\n    \"\"\"\r\n    return first_name + ' ' + last_name\r\n```\r\n\r\nAnother shorter form:\r\n\r\n```python\r\ndef join_name(first_name, last_name):\r\n    \"\"\"Join first and last name into a full name.\r\n\r\n    Args: \r\n      first_name (str)\r\n      last_name (str)\r\n    Returns: str\r\n    \"\"\"\r\n    return first_name + ' ' + last_name\r\n```\r\n\r\nAnother alternative for Python 2 code is to use the mypy codec that supports Python 3 type annotations in Python 2 code by automatically stripping them away. This has a few problems:\r\n\r\n1. The codec generally needs to be activated before it can be used, which is a minor pain, especially for entry point / main module(s).\r\n2. Tools such as IDEs and linters may get confused by it (but they could potentially be used in Python 3 mode, if the code is also Python 3 compatible).\r\n3. It slows down bytecode compilation or program startup. However, if we'd implement it in C, it could be very fast for CPython. But what about PyPy, Jython etc.?", "labels_url": "https://api.github.com/repos/python/mypy/issues/612/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Should we support type annotations in docstrings for Python 2 code?", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/612/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "postponed", "color": "bfd4f2", "url": "https://api.github.com/repos/python/mypy/labels/postponed"}], "created_at": "2015-03-21T05:48:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 611, "html_url": "https://github.com/python/mypy/issues/611", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/611", "id": 63363089, "events_url": "https://api.github.com/repos/python/mypy/issues/611/events", "updated_at": "2015-03-24T15:24:09Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/611/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add full stub for std lib module 'types', use these types in other stubs when relevant", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/611/comments", "labels": [{"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-03-21T05:16:41Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 610, "html_url": "https://github.com/python/mypy/issues/610", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/610", "id": 63362970, "events_url": "https://api.github.com/repos/python/mypy/issues/610/events", "updated_at": "2015-03-24T00:31:38Z", "body": "This is specified in PEP 484.\r\n\r\nOnly type check the if block in this example (ignore else block):\r\n\r\n```\r\nif __debug__:\r\n    class Tracer: ...\r\nelse:\r\n    class Tracer: ...\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/610/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Treat __debug__ as a True constant", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/610/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-03-21T05:14:23Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 609, "html_url": "https://github.com/python/mypy/issues/609", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/609", "id": 63362824, "events_url": "https://api.github.com/repos/python/mypy/issues/609/events", "updated_at": "2015-03-24T00:33:47Z", "body": "In this example, only the else block should be processed by mypy:\r\n\r\n```\r\nDEBUG = False\r\n\r\nif DEBUG:\r\n    def warn(x): ...\r\nelse:\r\n    def warn(x): pass\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/609/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Understand arbitrary NAME = True/False flags", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/609/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-03-21T05:12:17Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 608, "html_url": "https://github.com/python/mypy/issues/608", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/608", "id": 63362504, "events_url": "https://api.github.com/repos/python/mypy/issues/608/events", "updated_at": "2015-03-21T05:05:11Z", "body": "These are defined in the PEP 484 draft and allow type checking code that has operating system specific code.", "labels_url": "https://api.github.com/repos/python/mypy/issues/608/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add typing.WINDOWS and typing.POSIX", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/608/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-03-21T05:05:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 607, "html_url": "https://github.com/python/mypy/issues/607", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/607", "id": 63362116, "events_url": "https://api.github.com/repos/python/mypy/issues/607/events", "updated_at": "2015-05-17T18:12:03Z", "body": "This are defined in the PEP 484 draft.", "labels_url": "https://api.github.com/repos/python/mypy/issues/607/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support no_type_check_decorator for classes", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/607/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-03-21T04:59:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 606, "html_url": "https://github.com/python/mypy/issues/606", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/606", "id": 63360912, "events_url": "https://api.github.com/repos/python/mypy/issues/606/events", "updated_at": "2015-05-19T03:43:25Z", "body": "This code should be okay:\r\n\r\n```\r\nfrom typing import TypeVar, List\r\nT = TypeVar('T')\r\nX = List[T]\r\ndef f(x: X) -> None: ...\r\n```\r\n\r\nIt should be equivalent to this:\r\n\r\n```\r\nfrom typing import TypeVar, List\r\nT = TypeVar('T')\r\ndef f(x: List[T]) -> None: ...\r\n```\r\n\r\nThis was suggested by Guido, \"based on the general equivalence in Python of\r\n\r\n```\r\nX = <stuff>\r\nf(X)\r\n```\r\n\r\nto\r\n\r\n```\r\nf(<stuff>)\r\n```\r\n\".", "labels_url": "https://api.github.com/repos/python/mypy/issues/606/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow type aliases such X = List[T] if T is a type variable", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/606/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-03-21T04:39:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 605, "html_url": "https://github.com/python/mypy/issues/605", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/605", "id": 62870470, "events_url": "https://api.github.com/repos/python/mypy/issues/605/events", "updated_at": "2015-03-19T04:32:34Z", "body": "Mypy complains about the == operation, even though this should be valid:\r\n\r\n```\r\nfrom typing import TypeVar\r\nT = TypeVar('T')\r\ndef foo(a: T, b: T, c: T) -> T:\r\n    if a == b:\r\n        return c\r\n    else:\r\n        return b\r\n```\r\n\r\nThis was reported by Guido.", "labels_url": "https://api.github.com/repos/python/mypy/issues/605/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Can't compare value with type variable type for equality", "assignee": null, "closed_at": "2015-03-19T04:32:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/605/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-19T04:10:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 604, "html_url": "https://github.com/python/mypy/issues/604", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/604", "id": 62585365, "events_url": "https://api.github.com/repos/python/mypy/issues/604/events", "updated_at": "2015-03-26T04:43:00Z", "body": "Code:\r\n\r\n```\r\nclass Visitor:\r\n    def __init__(self, a: int):\r\n        pass\r\n```\r\n\r\nError:\r\n\r\n```\r\nx.py: In member \"__init__\" of class \"Visitor\":\r\nx.py, line 2: Cannot define return type for \"__init__\"\r\n```\r\n\r\nThe return type is `Any` (implicitly), and `Any` should be a valid return type for `__init__`.\r\n\r\nThis was reported by Guido.", "labels_url": "https://api.github.com/repos/python/mypy/issues/604/labels{/name}", "comments": 13, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow __init__ with signature but no return type", "assignee": null, "closed_at": "2015-03-26T04:43:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/604/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-18T04:19:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 603, "html_url": "https://github.com/python/mypy/issues/603", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/603", "id": 61897800, "events_url": "https://api.github.com/repos/python/mypy/issues/603/events", "updated_at": "2016-04-08T17:55:34Z", "body": "Mypy complains about the following code:\r\n\r\n```\r\nfrom typing import TypeVar, List\r\nT = TypeVar('T')\r\ndef f(a: T) -> None:\r\n    l = []  # type: List[T]   # Error, even though this should be fine\r\n```\r\n\r\nThe reason for the error seems to be that the type variable type `T` in `List[T]` is erased so that it won't conflict with the type variables used for inferring the type of the list expression. Both type variables should be able to coexist during type inference.", "labels_url": "https://api.github.com/repos/python/mypy/issues/603/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference problem in generic function", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/603/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-03-15T20:51:02Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 602, "html_url": "https://github.com/python/mypy/issues/602", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/602", "id": 61894528, "events_url": "https://api.github.com/repos/python/mypy/issues/602/events", "updated_at": "2015-03-15T21:03:17Z", "body": "Code like this results in an internal error:\r\n\r\n```\r\nimport typing\r\ndef f() -> None:\r\n    f() = 1  # type: int\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/602/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal error on unexpected type declaration", "assignee": null, "closed_at": "2015-03-15T21:03:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/602/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-15T20:29:38Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 601, "html_url": "https://github.com/python/mypy/issues/601", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/601", "id": 61882012, "events_url": "https://api.github.com/repos/python/mypy/issues/601/events", "updated_at": "2015-03-15T21:03:17Z", "body": "Mypy complains about this code, even though it should be fine:\r\n\r\n```\r\nfrom typing import cast, List, Any\r\n\r\nclass dict2(dict):\r\n    pass\r\n\r\ncast(List[Any], [dict, dict2])\r\n```\r\n\r\nHere's the output:\r\n\r\n```\r\nt.py, line 6: List item 1 has incompatible type\r\nt.py, line 6: List item 2 has incompatible type\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/601/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference problem with cast", "assignee": null, "closed_at": "2015-03-15T21:03:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/601/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-03-15T18:53:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 600, "html_url": "https://github.com/python/mypy/issues/600", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/600", "id": 61870244, "events_url": "https://api.github.com/repos/python/mypy/issues/600/events", "updated_at": "2015-08-29T21:27:39Z", "body": "These are missing from Python 2 builtins stubs:\r\n\r\n```\r\nBufferError\r\nEllipsis\r\napply\r\nbasestring\r\nbuffer\r\ncoerce\r\ncompile\r\ncopyright\r\ncredits\r\neval\r\nexecfile\r\nfile\r\nhelp\r\nlicense\r\nreduce\r\n```\r\n\r\n**EDIT:** Add `file`", "labels_url": "https://api.github.com/repos/python/mypy/issues/600/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add things missing from Python 2 builtins stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/600/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-03-15T17:19:40Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 599, "html_url": "https://github.com/python/mypy/issues/599", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/599", "id": 61706917, "events_url": "https://api.github.com/repos/python/mypy/issues/599/events", "updated_at": "2015-03-14T22:37:50Z", "body": "The PEP 484 draft doesn't have `@builtinclass`, so remove it. Alternatively, figure out an alternative way of encoding this information.", "labels_url": "https://api.github.com/repos/python/mypy/issues/599/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove @builtinclass", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/599/comments", "labels": [{"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-03-14T22:37:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 598, "html_url": "https://github.com/python/mypy/issues/598", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/598", "id": 61706806, "events_url": "https://api.github.com/repos/python/mypy/issues/598/events", "updated_at": "2015-03-14T23:34:35Z", "body": "The PEP 484 draft doesn't have `@builtinclass`. Remove any references to it from stubs. We can remove the implementation in a separate task.", "labels_url": "https://api.github.com/repos/python/mypy/issues/598/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove references to @builtinclass from the stubs", "assignee": null, "closed_at": "2015-03-14T23:34:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/598/comments", "labels": [{"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-03-14T22:36:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 597, "html_url": "https://github.com/python/mypy/issues/597", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/597", "id": 61262840, "events_url": "https://api.github.com/repos/python/mypy/issues/597/events", "updated_at": "2015-03-15T17:11:19Z", "body": "'FileNotFoundError' and `exit` are not defined in builtins for Python 3.4.", "labels_url": "https://api.github.com/repos/python/mypy/issues/597/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "no stub for FileNotFoundError and `exit`", "assignee": null, "closed_at": "2015-03-15T17:11:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/597/comments", "labels": [{"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-03-13T21:48:33Z", "user": {"followers_url": "https://api.github.com/users/kasbah/followers", "gists_url": "https://api.github.com/users/kasbah/gists{/gist_id}", "html_url": "https://github.com/kasbah", "following_url": "https://api.github.com/users/kasbah/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/206854?v=3", "url": "https://api.github.com/users/kasbah", "organizations_url": "https://api.github.com/users/kasbah/orgs", "starred_url": "https://api.github.com/users/kasbah/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kasbah/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kasbah/subscriptions", "login": "kasbah", "repos_url": "https://api.github.com/users/kasbah/repos", "received_events_url": "https://api.github.com/users/kasbah/received_events", "id": 206854, "site_admin": false}, "locked": false}, {"milestone": null, "number": 596, "html_url": "https://github.com/python/mypy/issues/596", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/596", "id": 60289907, "events_url": "https://api.github.com/repos/python/mypy/issues/596/events", "updated_at": "2015-03-09T02:38:46Z", "body": "`@ducktype` is not part of PEP 484, so remove it from the public API (it can still be used internally in stubs).\r\n\r\nAlso, rename it to `@_promote` since that's arguably a better name (@abarnet proposed `promote`).\r\n\r\nPEP 484 discussion: https://github.com/ambv/typehinting/issues/48", "labels_url": "https://api.github.com/repos/python/mypy/issues/596/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename @ductype and remove it from the public API", "assignee": null, "closed_at": "2015-03-09T02:38:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/596/comments", "labels": [{"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-03-09T02:10:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 595, "html_url": "https://github.com/python/mypy/issues/595", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/595", "id": 60289334, "events_url": "https://api.github.com/repos/python/mypy/issues/595/events", "updated_at": "2015-03-14T23:34:55Z", "body": "Assume that classes that are not subclasses of each other are disjoint, even though this is not necessarily the case. This simplifies things, works almost always and doesn't require the confusing and non-PEP-484-compliant `@disjointclass` class decorator.", "labels_url": "https://api.github.com/repos/python/mypy/issues/595/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove @disjointclass", "assignee": null, "closed_at": "2015-03-14T23:34:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/595/comments", "labels": [{"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-03-09T01:59:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 594, "html_url": "https://github.com/python/mypy/issues/594", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/594", "id": 60218529, "events_url": "https://api.github.com/repos/python/mypy/issues/594/events", "updated_at": "2016-03-17T19:23:32Z", "body": "Currently the `travis.sh` script only checks some package stubs, which is bad. It should look for all modules within packages under `stubs/`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/594/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update travis ci script to check all module stubs", "assignee": null, "closed_at": "2016-03-17T19:21:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/594/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-03-07T18:36:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 593, "html_url": "https://github.com/python/mypy/issues/593", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/593", "id": 60035521, "events_url": "https://api.github.com/repos/python/mypy/issues/593/events", "updated_at": "2015-03-07T17:33:49Z", "body": "To reproduce:\r\n\r\n```python\r\ntest =  { 'spam': 'eggs' if True else 'bacon' }\r\n```\r\n\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/593/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parse error for if expressions", "assignee": null, "closed_at": "2015-03-07T17:33:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/593/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-03-05T23:40:09Z", "user": {"followers_url": "https://api.github.com/users/Naddiseo/followers", "gists_url": "https://api.github.com/users/Naddiseo/gists{/gist_id}", "html_url": "https://github.com/Naddiseo", "following_url": "https://api.github.com/users/Naddiseo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/115951?v=3", "url": "https://api.github.com/users/Naddiseo", "organizations_url": "https://api.github.com/users/Naddiseo/orgs", "starred_url": "https://api.github.com/users/Naddiseo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Naddiseo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Naddiseo/subscriptions", "login": "Naddiseo", "repos_url": "https://api.github.com/users/Naddiseo/repos", "received_events_url": "https://api.github.com/users/Naddiseo/received_events", "id": 115951, "site_admin": false}, "locked": false}, {"milestone": null, "number": 592, "html_url": "https://github.com/python/mypy/issues/592", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/592", "id": 59368537, "events_url": "https://api.github.com/repos/python/mypy/issues/592/events", "updated_at": "2015-03-01T00:18:52Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/592/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document stub generator", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/592/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2015-03-01T00:18:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 591, "html_url": "https://github.com/python/mypy/issues/591", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/591", "id": 59358234, "events_url": "https://api.github.com/repos/python/mypy/issues/591/events", "updated_at": "2016-01-27T21:15:07Z", "body": "It should be possible to redefine a name imported from another module, at least in stubs. Currently mypy complains about the redefinition (at least often). We can treat this as an assignment and just verify that the types are compatible.", "labels_url": "https://api.github.com/repos/python/mypy/issues/591/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Can't redefine name imported from another module", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/591/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-02-28T21:02:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 590, "html_url": "https://github.com/python/mypy/issues/590", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/590", "id": 58532436, "events_url": "https://api.github.com/repos/python/mypy/issues/590/events", "updated_at": "2016-04-08T18:45:49Z", "body": "This could be really neat and useful. For instance, one could add mypy support to [Hy](http://docs.hylang.org) with this.\r\n\r\nIt would also allow other linting tools to integrate with mypy.", "labels_url": "https://api.github.com/repos/python/mypy/issues/590/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add conversion from Python AST to MyPy AST", "assignee": null, "closed_at": "2016-04-08T16:56:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/590/comments", "labels": [], "created_at": "2015-02-23T01:10:59Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "locked": false}, {"milestone": null, "number": 589, "html_url": "https://github.com/python/mypy/issues/589", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/589", "id": 58511556, "events_url": "https://api.github.com/repos/python/mypy/issues/589/events", "updated_at": "2015-02-22T18:24:00Z", "body": "`0377`, for example, causes the parser to crash with `ValueError`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/589/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parser crash on Python 2 octal literal", "assignee": null, "closed_at": "2015-02-22T18:24:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/589/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-22T18:01:04Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 588, "html_url": "https://github.com/python/mypy/issues/588", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/588", "id": 58485454, "events_url": "https://api.github.com/repos/python/mypy/issues/588/events", "updated_at": "2015-02-22T01:46:55Z", "body": "This causes a parser crash (Python 3 mode):\r\n\r\n```\r\nx u''\r\n```\r\n\r\nHere's the stack trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"scripts/mypy\", line 169, in <module>\r\n    main()\r\n  File \"scripts/mypy\", line 34, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"scripts/mypy\", line 78, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 164, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 342, in process\r\n    next.process()\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 660, in process\r\n    tree = self.parse(self.program_text, self.path)\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 739, in parse\r\n    custom_typing_module=self.manager.custom_typing_module)\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 80, in parse\r\n    tree = parser.parse(s)\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 117, in parse\r\n    file = self.parse_file()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 125, in parse_file\r\n    defs = self.parse_defs()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 250, in parse_defs\r\n    self.expect_break()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1535, in expect_break\r\n    return self.expect_type(Break)\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1529, in expect_type\r\n    self.parse_error()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1547, in parse_error\r\n    self.parse_error_at(self.current())\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1558, in parse_error_at\r\n    msg = 'Parse error before {}'.format(token_repr(tok))\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1674, in token_repr\r\n    raise ValueError('Unknown token {}'.format(repr(tok)))\r\nValueError: Unknown token UnicodeLit( u'')\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/588/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parses crash on invalid use of unicode string literal", "assignee": null, "closed_at": "2015-02-22T01:46:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/588/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-22T01:34:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 587, "html_url": "https://github.com/python/mypy/issues/587", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/587", "id": 58485223, "events_url": "https://api.github.com/repos/python/mypy/issues/587/events", "updated_at": "2015-02-22T01:45:08Z", "body": "This causes a parser crash, but it should generate a parse error:\r\n\r\n```\r\nfrom __future__ import *\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/587/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Crash when doing \"from __future__ import *\"", "assignee": null, "closed_at": "2015-02-22T01:45:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/587/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-22T01:31:38Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 586, "html_url": "https://github.com/python/mypy/issues/586", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/586", "id": 58485124, "events_url": "https://api.github.com/repos/python/mypy/issues/586/events", "updated_at": "2015-08-09T18:01:10Z", "body": "We should support non-ascii (unicode) identifiers as variable names, etc.", "labels_url": "https://api.github.com/repos/python/mypy/issues/586/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support non-ascii identifiers", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/586/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-02-22T01:30:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 585, "html_url": "https://github.com/python/mypy/issues/585", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/585", "id": 58484608, "events_url": "https://api.github.com/repos/python/mypy/issues/585/events", "updated_at": "2015-02-22T01:21:41Z", "body": "If you have `...` in a relative import, the parser crashes:\r\n\r\n```\r\nfrom ... import a\r\n```\r\n\r\nHere's the stack trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"scripts/mypy\", line 169, in <module>\r\n    main()\r\n  File \"scripts/mypy\", line 34, in main\r\n    type_check_only(path, module, bin_dir, options)\r\n  File \"scripts/mypy\", line 78, in type_check_only\r\n    python_path=options.python_path)\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 164, in build\r\n    result = manager.process(UnprocessedFile(info, program_text))\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 342, in process\r\n    next.process()\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 660, in process\r\n    tree = self.parse(self.program_text, self.path)\r\n  File \"/home/jukka/project/mypy/mypy/build.py\", line 739, in parse\r\n    custom_typing_module=self.manager.custom_typing_module)\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 80, in parse\r\n    tree = parser.parse(s)\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 117, in parse\r\n    file = self.parse_file()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 125, in parse_file\r\n    defs = self.parse_defs()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 248, in parse_defs\r\n    defn, is_simple = self.parse_statement()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 668, in parse_statement\r\n    stmt = self.parse_import_from()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 176, in parse_import_from\r\n    name = self.parse_qualified_name()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 234, in parse_qualified_name\r\n    tok = self.expect_type(Name)\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1529, in expect_type\r\n    self.parse_error()\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1547, in parse_error\r\n    self.parse_error_at(self.current())\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1558, in parse_error_at\r\n    msg = 'Parse error before {}'.format(token_repr(tok))\r\n  File \"/home/jukka/project/mypy/mypy/parse.py\", line 1672, in token_repr\r\n    raise ValueError('Unknown token {}'.format(repr(tok)))\r\nValueError: Unknown token EllipsisToken( ...)\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/585/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Three dots (...) in relative import not accepted", "assignee": null, "closed_at": "2015-02-22T01:21:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/585/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-22T01:11:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 584, "html_url": "https://github.com/python/mypy/issues/584", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/584", "id": 58304224, "events_url": "https://api.github.com/repos/python/mypy/issues/584/events", "updated_at": "2015-02-21T22:10:57Z", "body": "```\r\n$ cat test1.py\r\nimport typing\r\n{ i if i > 2 else None for i in range(5) }\r\n$ mypy test1.py\r\ntest1.py, line 2: Parse error before \"if\"\r\n```\r\n\r\nIt works when the expression is parenthesized:\r\n\r\n```\r\n$ cat test2.py\r\nimport typing\r\n{ (i if i > 2 else None) for i in range(5) }\r\n$ mypy test2.py\r\n$\r\n```\r\n\r\nList comprehensions and generators do not have this problem.\r\n\r\n(Latest mypy from git)", "labels_url": "https://api.github.com/repos/python/mypy/issues/584/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ternary operator inside a set comprehension raises a parse error", "assignee": null, "closed_at": "2015-02-21T22:10:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/584/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-20T02:52:51Z", "user": {"followers_url": "https://api.github.com/users/ze-phyr-us/followers", "gists_url": "https://api.github.com/users/ze-phyr-us/gists{/gist_id}", "html_url": "https://github.com/ze-phyr-us", "following_url": "https://api.github.com/users/ze-phyr-us/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4436927?v=3", "url": "https://api.github.com/users/ze-phyr-us", "organizations_url": "https://api.github.com/users/ze-phyr-us/orgs", "starred_url": "https://api.github.com/users/ze-phyr-us/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ze-phyr-us/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ze-phyr-us/subscriptions", "login": "ze-phyr-us", "repos_url": "https://api.github.com/users/ze-phyr-us/repos", "received_events_url": "https://api.github.com/users/ze-phyr-us/received_events", "id": 4436927, "site_admin": false}, "locked": false}, {"milestone": null, "number": 583, "html_url": "https://github.com/python/mypy/pull/583", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/583", "id": 58140443, "events_url": "https://api.github.com/repos/python/mypy/issues/583/events", "updated_at": "2015-02-19T06:54:44Z", "body": "Fixes typos in `generics.rst`, `introduction.rst`, `kinds_of_types.rst` and `type_inference_and_annotations.rst`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/583/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix typos", "assignee": null, "closed_at": "2015-02-19T04:41:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/583/comments", "labels": [], "created_at": "2015-02-18T22:38:15Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/583.patch", "html_url": "https://github.com/python/mypy/pull/583", "diff_url": "https://github.com/python/mypy/pull/583.diff", "url": "https://api.github.com/repos/python/mypy/pulls/583"}, "locked": false}, {"milestone": null, "number": 582, "html_url": "https://github.com/python/mypy/pull/582", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/582", "id": 57959266, "events_url": "https://api.github.com/repos/python/mypy/issues/582/events", "updated_at": "2015-02-18T17:55:46Z", "body": "Some small typo fixes for `common_issues.rst`, `faq.rst` and `function_overloading.rst` files.", "labels_url": "https://api.github.com/repos/python/mypy/issues/582/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Typo fixes", "assignee": null, "closed_at": "2015-02-18T04:46:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/582/comments", "labels": [], "created_at": "2015-02-17T18:05:00Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/582.patch", "html_url": "https://github.com/python/mypy/pull/582", "diff_url": "https://github.com/python/mypy/pull/582.diff", "url": "https://api.github.com/repos/python/mypy/pulls/582"}, "locked": false}, {"milestone": null, "number": 581, "html_url": "https://github.com/python/mypy/pull/581", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/581", "id": 57845723, "events_url": "https://api.github.com/repos/python/mypy/issues/581/events", "updated_at": "2015-02-16T22:25:29Z", "body": "Just a few typo fixes for `basics.rst` file.", "labels_url": "https://api.github.com/repos/python/mypy/issues/581/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix typos in basics.rst", "assignee": null, "closed_at": "2015-02-16T22:18:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/581/comments", "labels": [], "created_at": "2015-02-16T20:03:31Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/581.patch", "html_url": "https://github.com/python/mypy/pull/581", "diff_url": "https://github.com/python/mypy/pull/581.diff", "url": "https://api.github.com/repos/python/mypy/pulls/581"}, "locked": false}, {"milestone": null, "number": 580, "html_url": "https://github.com/python/mypy/pull/580", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/580", "id": 57698731, "events_url": "https://api.github.com/repos/python/mypy/issues/580/events", "updated_at": "2015-03-28T20:53:55Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/580/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fixed typo", "assignee": null, "closed_at": "2015-03-28T20:53:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/580/comments", "labels": [], "created_at": "2015-02-14T16:52:28Z", "user": {"followers_url": "https://api.github.com/users/hackaugusto/followers", "gists_url": "https://api.github.com/users/hackaugusto/gists{/gist_id}", "html_url": "https://github.com/hackaugusto", "following_url": "https://api.github.com/users/hackaugusto/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/310139?v=3", "url": "https://api.github.com/users/hackaugusto", "organizations_url": "https://api.github.com/users/hackaugusto/orgs", "starred_url": "https://api.github.com/users/hackaugusto/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/hackaugusto/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/hackaugusto/subscriptions", "login": "hackaugusto", "repos_url": "https://api.github.com/users/hackaugusto/repos", "received_events_url": "https://api.github.com/users/hackaugusto/received_events", "id": 310139, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/580.patch", "html_url": "https://github.com/python/mypy/pull/580", "diff_url": "https://github.com/python/mypy/pull/580.diff", "url": "https://api.github.com/repos/python/mypy/pulls/580"}, "locked": false}, {"milestone": null, "number": 579, "html_url": "https://github.com/python/mypy/issues/579", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/579", "id": 56986405, "events_url": "https://api.github.com/repos/python/mypy/issues/579/events", "updated_at": "2015-02-09T03:58:19Z", "body": "We should give a hint that the programmer probably should use `typing.Callable` instead if we see a reference to `Function`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/579/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give a useful error message if a program refers to Function", "assignee": null, "closed_at": "2015-02-09T03:58:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/579/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-02-09T03:56:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 578, "html_url": "https://github.com/python/mypy/issues/578", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/578", "id": 56980145, "events_url": "https://api.github.com/repos/python/mypy/issues/578/events", "updated_at": "2015-02-09T01:57:34Z", "body": "This is a pretty important module.", "labels_url": "https://api.github.com/repos/python/mypy/issues/578/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add more complete datetime stubs", "assignee": null, "closed_at": "2015-02-09T01:57:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/578/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-02-09T01:57:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 577, "html_url": "https://github.com/python/mypy/issues/577", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/577", "id": 56976328, "events_url": "https://api.github.com/repos/python/mypy/issues/577/events", "updated_at": "2015-03-15T23:20:59Z", "body": "Document `Optional[t]`. In particular, mention that it's currently for documentation only (equivalent to `t` when type checking, since `Uniont[t, None]` is the same as `t`).", "labels_url": "https://api.github.com/repos/python/mypy/issues/577/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add documentation for Optional[t]", "assignee": null, "closed_at": "2015-03-15T23:20:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/577/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-09T00:32:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 576, "html_url": "https://github.com/python/mypy/issues/576", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/576", "id": 56973546, "events_url": "https://api.github.com/repos/python/mypy/issues/576/events", "updated_at": "2015-03-07T18:33:39Z", "body": "The PEP 484 draft uses `TypeVar` instead of `typevar` for defining type variables. Update mypy to use this syntax. \r\n\r\n(A related but separate issue is how to add a \"value restriction\" to a type variable, and this issue does not address that.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/576/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename typevar to TypeVar", "assignee": null, "closed_at": "2015-03-07T18:33:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/576/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-08T23:27:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 575, "html_url": "https://github.com/python/mypy/issues/575", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/575", "id": 56971107, "events_url": "https://api.github.com/repos/python/mypy/issues/575/events", "updated_at": "2015-02-08T23:18:41Z", "body": "We don't need both `typing.Generic` and `typing.AbstractGeneric`. Make `Generic` equivalent to current `AbstractGeneric` and remove `AbstractGeneric`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/575/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Merge Generic and AbstractGeneric into Generic", "assignee": null, "closed_at": "2015-02-08T23:18:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/575/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-08T22:31:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 574, "html_url": "https://github.com/python/mypy/issues/574", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/574", "id": 56607612, "events_url": "https://api.github.com/repos/python/mypy/issues/574/events", "updated_at": "2015-02-06T04:55:24Z", "body": "I wrote this:\r\n```\r\nclass MyType(type):\r\n    def __new__(cls, name, bases, namespace):\r\n        return super().__new__(cls, name, bases, namespace)\r\n```\r\nHere I get an error from mypy on the `super().__new__()` call:\r\n```\r\nmeta.py: In member \"__new__\" of class \"MyType\":\r\nmeta.py, line 3: \"__new__\" undefined in superclass\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/574/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Calling super().__new__() in a metaclass gives an error", "assignee": null, "closed_at": "2015-02-06T04:55:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/574/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2015-02-05T00:02:53Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 573, "html_url": "https://github.com/python/mypy/issues/573", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/573", "id": 56607393, "events_url": "https://api.github.com/repos/python/mypy/issues/573/events", "updated_at": "2015-03-29T20:13:44Z", "body": "In Python 3 you can have arbitrary keyword args in a class declaration, as follows:\r\n```\r\nclass C(metaclass=MyMeta, extra=42):\r\n    ...\r\n```\r\nHere, mypy reports a syntax error at the comma.", "labels_url": "https://api.github.com/repos/python/mypy/issues/573/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Additional keyword args in class declaration not supported", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/573/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-02-05T00:00:00Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 572, "html_url": "https://github.com/python/mypy/issues/572", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/572", "id": 56335776, "events_url": "https://api.github.com/repos/python/mypy/issues/572/events", "updated_at": "2015-02-08T23:17:39Z", "body": "It seems that mypy treats `Union[str, None]` as a different type from `str`, even though they should be equivalent (at least until proper type checking of `None` values has been implemented).\r\n\r\nSee https://github.com/ambv/typehinting/issues/56.", "labels_url": "https://api.github.com/repos/python/mypy/issues/572/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Union[str, None] should be the same type as str", "assignee": null, "closed_at": "2015-02-08T23:17:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/572/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-02-03T05:32:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 571, "html_url": "https://github.com/python/mypy/pull/571", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/571", "id": 56144936, "events_url": "https://api.github.com/repos/python/mypy/issues/571/events", "updated_at": "2015-02-08T22:52:00Z", "body": "This fixes #570, as well as a rendering error I encountered.", "labels_url": "https://api.github.com/repos/python/mypy/issues/571/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add type alias docs", "assignee": null, "closed_at": "2015-02-08T22:50:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/571/comments", "labels": [], "created_at": "2015-01-31T23:53:28Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/571.patch", "html_url": "https://github.com/python/mypy/pull/571", "diff_url": "https://github.com/python/mypy/pull/571.diff", "url": "https://api.github.com/repos/python/mypy/pulls/571"}, "locked": false}, {"milestone": null, "number": 570, "html_url": "https://github.com/python/mypy/issues/570", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/570", "id": 56141840, "events_url": "https://api.github.com/repos/python/mypy/issues/570/events", "updated_at": "2015-02-08T22:50:51Z", "body": "Document type aliases such as `X = Union[int, str]`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/570/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document type aliases", "assignee": null, "closed_at": "2015-02-08T22:50:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/570/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-01-31T22:15:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 569, "html_url": "https://github.com/python/mypy/issues/569", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/569", "id": 56141821, "events_url": "https://api.github.com/repos/python/mypy/issues/569/events", "updated_at": "2015-03-16T05:32:14Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/569/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document NamedTuple and namedtuple", "assignee": null, "closed_at": "2015-03-16T05:32:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/569/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-01-31T22:14:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 568, "html_url": "https://github.com/python/mypy/issues/568", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/568", "id": 56141691, "events_url": "https://api.github.com/repos/python/mypy/issues/568/events", "updated_at": "2015-02-06T04:58:57Z", "body": "It should be possible to define type aliases that take type parameters by having free type variables in the alias initializer. For example, this should be valid:\r\n\r\n```\r\nfrom typing import typevar, Union   # or TypeVar\r\n\r\nT = typevar('T')\r\nOrInt = Union[T, int]  # type alias, T is a free type variable\r\n\r\ndef f(x: OrInt[str]) -> None: ...  # same as x: Union[str, int]\r\n```\r\n\r\nAnother example:\r\n\r\n```\r\nfrom typing import typevar, Dict\r\n\r\nT = typevar('T')\r\nNamespace = Dict[str, T]\r\n\r\ndef lookup(ns: Namespace[int], name: str) -> ...: ...\r\n``` \r\n\r\nFor this to work generally, `List[x]`, `Union[...]`, etc. must be indexable at runtime (this is related to #530 and #556 -- these should be implemented before this issue).", "labels_url": "https://api.github.com/repos/python/mypy/issues/568/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parametric type aliases", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/568/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-01-31T22:11:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 567, "html_url": "https://github.com/python/mypy/pull/567", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/567", "id": 56002586, "events_url": "https://api.github.com/repos/python/mypy/issues/567/events", "updated_at": "2015-02-08T22:56:08Z", "body": "Add a few new stub files (all incomplete) and add functions to existing ones.", "labels_url": "https://api.github.com/repos/python/mypy/issues/567/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Various random additions to stubs", "assignee": null, "closed_at": "2015-02-08T22:56:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/567/comments", "labels": [], "created_at": "2015-01-30T07:20:12Z", "user": {"followers_url": "https://api.github.com/users/mareksapota-fb/followers", "gists_url": "https://api.github.com/users/mareksapota-fb/gists{/gist_id}", "html_url": "https://github.com/mareksapota-fb", "following_url": "https://api.github.com/users/mareksapota-fb/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1128925?v=3", "url": "https://api.github.com/users/mareksapota-fb", "organizations_url": "https://api.github.com/users/mareksapota-fb/orgs", "starred_url": "https://api.github.com/users/mareksapota-fb/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mareksapota-fb/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mareksapota-fb/subscriptions", "login": "mareksapota-fb", "repos_url": "https://api.github.com/users/mareksapota-fb/repos", "received_events_url": "https://api.github.com/users/mareksapota-fb/received_events", "id": 1128925, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/567.patch", "html_url": "https://github.com/python/mypy/pull/567", "diff_url": "https://github.com/python/mypy/pull/567.diff", "url": "https://api.github.com/repos/python/mypy/pulls/567"}, "locked": false}, {"milestone": null, "number": 566, "html_url": "https://github.com/python/mypy/issues/566", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/566", "id": 55633219, "events_url": "https://api.github.com/repos/python/mypy/issues/566/events", "updated_at": "2015-01-28T05:50:42Z", "body": "```python\r\nfrom typing import Dict, List\r\na = 'hello'\r\nd = Dict[str, int]({'a':1})\r\nd = {'a':1}\r\n\r\nd2 = Dict[str,int]({'b':1})\r\nd2 = Dict[str, int](dict(a=1))  #No overload variant of \"dict\" matches argument types\r\nd2 = dict()\r\nd2 = dict(a=1)                #No overload variant of \"dict\" matches argument types\r\n\r\nl = List[int]([])\r\nl = List[int](list(1,2,3))     #No overload variant of \"list\" matches argument types\r\nl = list()\r\nl = list(1,2,3)                   #No overload variant of \"list\" matches argument types\r\n```\r\n\r\nis that by design?", "labels_url": "https://api.github.com/repos/python/mypy/issues/566/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "No overload variant of \"dict\"/\"list\" matches argument types", "assignee": null, "closed_at": "2015-01-28T05:50:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/566/comments", "labels": [], "created_at": "2015-01-27T15:38:43Z", "user": {"followers_url": "https://api.github.com/users/gordianknot1981/followers", "gists_url": "https://api.github.com/users/gordianknot1981/gists{/gist_id}", "html_url": "https://github.com/gordianknot1981", "following_url": "https://api.github.com/users/gordianknot1981/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5257917?v=3", "url": "https://api.github.com/users/gordianknot1981", "organizations_url": "https://api.github.com/users/gordianknot1981/orgs", "starred_url": "https://api.github.com/users/gordianknot1981/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gordianknot1981/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gordianknot1981/subscriptions", "login": "gordianknot1981", "repos_url": "https://api.github.com/users/gordianknot1981/repos", "received_events_url": "https://api.github.com/users/gordianknot1981/received_events", "id": 5257917, "site_admin": false}, "locked": false}, {"milestone": null, "number": 565, "html_url": "https://github.com/python/mypy/issues/565", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/565", "id": 55604867, "events_url": "https://api.github.com/repos/python/mypy/issues/565/events", "updated_at": "2015-05-17T20:36:00Z", "body": "```python\r\nclass Root(object):\r\n    class TBase(object): pass\r\n    class TChild(TBase):pass\r\n\r\n# line3: Name 'TBase' is not defined\r\n```\r\n only allowed for\r\n\r\n```python\r\nclass Root(object):\r\n    class TBase(object): pass\r\n    class TChild(Root.TBase):pass\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/565/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "can't find nested class", "assignee": null, "closed_at": "2015-05-17T20:36:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/565/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2015-01-27T11:13:26Z", "user": {"followers_url": "https://api.github.com/users/gordianknot1981/followers", "gists_url": "https://api.github.com/users/gordianknot1981/gists{/gist_id}", "html_url": "https://github.com/gordianknot1981", "following_url": "https://api.github.com/users/gordianknot1981/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5257917?v=3", "url": "https://api.github.com/users/gordianknot1981", "organizations_url": "https://api.github.com/users/gordianknot1981/orgs", "starred_url": "https://api.github.com/users/gordianknot1981/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gordianknot1981/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gordianknot1981/subscriptions", "login": "gordianknot1981", "repos_url": "https://api.github.com/users/gordianknot1981/repos", "received_events_url": "https://api.github.com/users/gordianknot1981/received_events", "id": 5257917, "site_admin": false}, "locked": false}, {"milestone": null, "number": 564, "html_url": "https://github.com/python/mypy/issues/564", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/564", "id": 55604149, "events_url": "https://api.github.com/repos/python/mypy/issues/564/events", "updated_at": "2015-01-28T05:51:55Z", "body": "```python\r\ndef if_indention(x):\r\n    if not x:       print('x is None');     print('another msg')\r\n    else:           print('x is not None'); print('another msg')\r\n\r\n#  line 3: Parse error before \"else\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/564/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parse Error when multiple statement on one line separate with semicolon", "assignee": null, "closed_at": "2015-01-28T05:51:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/564/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}], "created_at": "2015-01-27T11:06:59Z", "user": {"followers_url": "https://api.github.com/users/gordianknot1981/followers", "gists_url": "https://api.github.com/users/gordianknot1981/gists{/gist_id}", "html_url": "https://github.com/gordianknot1981", "following_url": "https://api.github.com/users/gordianknot1981/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5257917?v=3", "url": "https://api.github.com/users/gordianknot1981", "organizations_url": "https://api.github.com/users/gordianknot1981/orgs", "starred_url": "https://api.github.com/users/gordianknot1981/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gordianknot1981/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gordianknot1981/subscriptions", "login": "gordianknot1981", "repos_url": "https://api.github.com/users/gordianknot1981/repos", "received_events_url": "https://api.github.com/users/gordianknot1981/received_events", "id": 5257917, "site_admin": false}, "locked": false}, {"milestone": null, "number": 563, "html_url": "https://github.com/python/mypy/issues/563", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/563", "id": 55426281, "events_url": "https://api.github.com/repos/python/mypy/issues/563/events", "updated_at": "2015-01-26T02:01:23Z", "body": "We should only support `@overload` in stubs, as the runtime dispatch implementation of `@overload` won't be included in PEP 484:\r\n\r\nhttps://github.com/ambv/typehinting/issues/14\r\n\r\nAlso, we need to refactor away all instances of overloading from the code (outside stubs).\r\n\r\nThis can be implemented by just making the implementation of `@overload` raise an exception at runtime.", "labels_url": "https://api.github.com/repos/python/mypy/issues/563/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Only support @overload in stubs", "assignee": null, "closed_at": "2015-01-26T02:01:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/563/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-01-25T19:32:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 562, "html_url": "https://github.com/python/mypy/issues/562", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/562", "id": 55422253, "events_url": "https://api.github.com/repos/python/mypy/issues/562/events", "updated_at": "2015-01-28T05:15:28Z", "body": "Maybe we need a configuration option to force certain modules to not be type checked (this would also allow arbitrary expressions in function annotations). This might be useful for legacy code that uses annotations -- and also for legacy code in general. The configuration option could be command line argument or a setting in a mypy configuration file, for example. By default, we could enable this for the Python std lib.\r\n\r\nThis was mentioned on python-ideas when discussing PEP 484.\r\n\r\nAn older idea is to not type check modules that don't import `typing`, but maybe that is too restrictive -- again, this was mentioned in the PEP 484 discussion.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/562/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make it possible to ignore annotations in certain files/directories", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/562/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-01-25T17:21:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 561, "html_url": "https://github.com/python/mypy/pull/561", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/561", "id": 54871031, "events_url": "https://api.github.com/repos/python/mypy/issues/561/events", "updated_at": "2015-04-14T16:02:47Z", "body": "More clean up. I've removed the TypeRepr class since it is not used anymore.", "labels_url": "https://api.github.com/repos/python/mypy/issues/561/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Removal of TypeRepr", "assignee": null, "closed_at": "2015-04-14T15:26:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/561/comments", "labels": [], "created_at": "2015-01-20T11:16:14Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/561.patch", "html_url": "https://github.com/python/mypy/pull/561", "diff_url": "https://github.com/python/mypy/pull/561.diff", "url": "https://api.github.com/repos/python/mypy/pulls/561"}, "locked": false}, {"milestone": null, "number": 560, "html_url": "https://github.com/python/mypy/issues/560", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/560", "id": 54708766, "events_url": "https://api.github.com/repos/python/mypy/issues/560/events", "updated_at": "2015-05-17T17:40:55Z", "body": "Please consider allowing:\r\n\r\n```Refine[C, f]``` to be used as a type, where ```C``` is a type and ```f``` is consistent with: ```C -> bool```\r\n\r\nThis allows to capture and precisely document rich type constraints that the basic type system cannot express. \r\n\r\ne.g.\r\n\r\n```BalancedTree = Refine[Tree, isBalanced]``` ## where  ```isBalanced : Tree -> bool```.\r\n\r\n```def insert(item, tree: BalancedTree) -> BalancedTree: ```\r\n\r\nThe type checker need not do anything fancy with this, and can just treat it as ```Tree``` for type-checking purposes, possibly verifying that the refinement predicate ```isBalanced``` is consistent with  ```Tree -> bool```.\r\n\r\nSlightly more ambitious: type checker could insist that calls to ```insert``` satisfy some form of statically determined exact match with ```Refine[Tree, isBalanced]```. \r\n\r\nEven more ambitious might allow ```And[isBalanced, isSmall]``` to be consistent with ```isBalanced```, and require this to type-check.\r\n\r\nIf run-time type checking is at some point made an option, the ```isBalanced``` would be checked.", "labels_url": "https://api.github.com/repos/python/mypy/issues/560/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Request: allow refinement types", "assignee": null, "closed_at": "2015-05-17T17:40:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/560/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2015-01-18T20:24:28Z", "user": {"followers_url": "https://api.github.com/users/desmond-dsouza/followers", "gists_url": "https://api.github.com/users/desmond-dsouza/gists{/gist_id}", "html_url": "https://github.com/desmond-dsouza", "following_url": "https://api.github.com/users/desmond-dsouza/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4407158?v=3", "url": "https://api.github.com/users/desmond-dsouza", "organizations_url": "https://api.github.com/users/desmond-dsouza/orgs", "starred_url": "https://api.github.com/users/desmond-dsouza/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/desmond-dsouza/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/desmond-dsouza/subscriptions", "login": "desmond-dsouza", "repos_url": "https://api.github.com/users/desmond-dsouza/repos", "received_events_url": "https://api.github.com/users/desmond-dsouza/received_events", "id": 4407158, "site_admin": false}, "locked": false}, {"milestone": null, "number": 559, "html_url": "https://github.com/python/mypy/issues/559", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/559", "id": 54695513, "events_url": "https://api.github.com/repos/python/mypy/issues/559/events", "updated_at": "2015-01-19T01:08:01Z", "body": "> 17 Jan 2014: Read my blog post about PEP 484 (Type Hinting) draft, which proposes adding a standard type annotation syntax stongly inspired by mypy to the upcoming Python 3.5 release. -Jukka\r\n\r\n* should be 2015\r\n* the word \"strongly\" is missing an \"r\".\r\n\r\nVery cool to see your work getting integrated into python!\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/559/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "minor typos on the front page", "assignee": null, "closed_at": "2015-01-19T01:08:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/559/comments", "labels": [], "created_at": "2015-01-18T12:49:56Z", "user": {"followers_url": "https://api.github.com/users/tangentstorm/followers", "gists_url": "https://api.github.com/users/tangentstorm/gists{/gist_id}", "html_url": "https://github.com/tangentstorm", "following_url": "https://api.github.com/users/tangentstorm/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2150613?v=3", "url": "https://api.github.com/users/tangentstorm", "organizations_url": "https://api.github.com/users/tangentstorm/orgs", "starred_url": "https://api.github.com/users/tangentstorm/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/tangentstorm/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/tangentstorm/subscriptions", "login": "tangentstorm", "repos_url": "https://api.github.com/users/tangentstorm/repos", "received_events_url": "https://api.github.com/users/tangentstorm/received_events", "id": 2150613, "site_admin": false}, "locked": false}, {"milestone": null, "number": 558, "html_url": "https://github.com/python/mypy/issues/558", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/558", "id": 54674145, "events_url": "https://api.github.com/repos/python/mypy/issues/558/events", "updated_at": "2015-01-17T20:31:12Z", "body": "PEP 484 won't have `Any(x)`, so we should remove it from mypy (https://github.com/ambv/typehinting/issues/33). Using `cast(Any, x)` is equivalent anyway and almost as convenient.", "labels_url": "https://api.github.com/repos/python/mypy/issues/558/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove support for Any(x) as shorthand for cast(Any, x)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/558/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-01-17T20:31:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 557, "html_url": "https://github.com/python/mypy/issues/557", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/557", "id": 54673932, "events_url": "https://api.github.com/repos/python/mypy/issues/557/events", "updated_at": "2015-05-14T05:21:19Z", "body": "Add a `typing.no_type_checks` function decorator that skips type checking a function and allows arbitrary annotations for the function. This should be give no errors:\r\n\r\n```\r\nfrom typing import no_type_checks\r\n\r\n@no_type_checks\r\ndef foo(x: {'x': 2}, y: 1+2):\r\n    1 + 'x'\r\n```\r\n\r\nSee PEP 484 discussion: https://github.com/ambv/typehinting/issues/26", "labels_url": "https://api.github.com/repos/python/mypy/issues/557/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support @no_type_checks to ignore annotations for a function", "assignee": null, "closed_at": "2015-05-14T05:21:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/557/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-01-17T20:24:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 556, "html_url": "https://github.com/python/mypy/issues/556", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/556", "id": 54673741, "events_url": "https://api.github.com/repos/python/mypy/issues/556/events", "updated_at": "2016-04-06T21:11:11Z", "body": "The current PEP 484 draft does not allow writing code like this:\r\n\r\n```\r\nx = List[int]()\r\n```\r\n\r\nInstead, the recommended way is using type annotations:\r\n\r\n```\r\nx = [] # type: List[int]\r\n# or\r\ny = Undefined(List[int])\r\ny = []\r\n```\r\n\r\nSee also: https://github.com/ambv/typehinting/issues/9", "labels_url": "https://api.github.com/repos/python/mypy/issues/556/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow List[int] etc. as expressions", "assignee": null, "closed_at": "2015-03-15T21:03:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/556/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2015-01-17T20:18:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 555, "html_url": "https://github.com/python/mypy/issues/555", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/555", "id": 54673204, "events_url": "https://api.github.com/repos/python/mypy/issues/555/events", "updated_at": "2015-05-17T22:27:25Z", "body": "Using `Undefined` should only be valid as an initializer in an assignment statement (but *not* as a subexpression of an initializer). These should be disallowed:\r\n\r\n```\r\nif x is Undefined: ...\r\ny = [Undefined] # type: ...\r\ndef f(a: int = Undefined) -> int: ...\r\n```\r\n\r\nThese should still be fine:\r\n\r\n```\r\nx = Undefined # type: int\r\ny = Undefined(int)\r\n```\r\n\r\nNot sure about this one:\r\n\r\n```\r\na, b = Undefined, Undefined # type: (int, str)\r\n```\r\n\r\nCurrently `Undefined` can be used as an expression.\r\n\r\nSee also https://github.com/ambv/typehinting/issues/20#issuecomment-70133709.", "labels_url": "https://api.github.com/repos/python/mypy/issues/555/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow using Undefined in arbitrary expressions", "assignee": null, "closed_at": "2015-05-17T22:27:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/555/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2015-01-17T20:00:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 554, "html_url": "https://github.com/python/mypy/issues/554", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/554", "id": 54146369, "events_url": "https://api.github.com/repos/python/mypy/issues/554/events", "updated_at": "2015-01-14T03:30:27Z", "body": "`pip install mypy`\r\n\r\nthen\r\n\r\n```\r\nDownloading/unpacking dbutils (from sqlbean>=0.490->mypy)\r\n  Downloading DBUtils-1.1.tar.gz (109kB): 109kB downloaded\r\n  Running setup.py (path:/Users/lingchax/.virtualenvs/3.4.2/build/dbutils/setup.py) egg_info for package dbutils\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 17, in <module>\r\n      File \"/Users/lingchax/.virtualenvs/3.4.2/build/dbutils/setup.py\", line 11, in <module>\r\n        raise ImportError('Python %d.%d is not supported by DBUtils.' % py_version)\r\n    ImportError: Python 3.4 is not supported by DBUtils.\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n\r\n  File \"<string>\", line 17, in <module>\r\n\r\n  File \"/Users/lingchax/.virtualenvs/3.4.2/build/dbutils/setup.py\", line 11, in <module>\r\n\r\n    raise ImportError('Python %d.%d is not supported by DBUtils.' % py_version)\r\n\r\nImportError: Python 3.4 is not supported by DBUtils.\r\n```\r\n\r\nIt means DBUtil does not support 3.4 now !", "labels_url": "https://api.github.com/repos/python/mypy/issues/554/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 3.4.2 support ?", "assignee": null, "closed_at": "2015-01-14T03:30:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/554/comments", "labels": [], "created_at": "2015-01-13T03:19:40Z", "user": {"followers_url": "https://api.github.com/users/douglarek/followers", "gists_url": "https://api.github.com/users/douglarek/gists{/gist_id}", "html_url": "https://github.com/douglarek", "following_url": "https://api.github.com/users/douglarek/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1488134?v=3", "url": "https://api.github.com/users/douglarek", "organizations_url": "https://api.github.com/users/douglarek/orgs", "starred_url": "https://api.github.com/users/douglarek/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/douglarek/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/douglarek/subscriptions", "login": "douglarek", "repos_url": "https://api.github.com/users/douglarek/repos", "received_events_url": "https://api.github.com/users/douglarek/received_events", "id": 1488134, "site_admin": false}, "locked": false}, {"milestone": null, "number": 553, "html_url": "https://github.com/python/mypy/pull/553", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/553", "id": 53767273, "events_url": "https://api.github.com/repos/python/mypy/issues/553/events", "updated_at": "2015-01-09T05:29:43Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/553/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fixed typo: prin -> print", "assignee": null, "closed_at": "2015-01-09T05:29:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/553/comments", "labels": [], "created_at": "2015-01-08T16:09:27Z", "user": {"followers_url": "https://api.github.com/users/rvikmanis/followers", "gists_url": "https://api.github.com/users/rvikmanis/gists{/gist_id}", "html_url": "https://github.com/rvikmanis", "following_url": "https://api.github.com/users/rvikmanis/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/554108?v=3", "url": "https://api.github.com/users/rvikmanis", "organizations_url": "https://api.github.com/users/rvikmanis/orgs", "starred_url": "https://api.github.com/users/rvikmanis/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rvikmanis/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rvikmanis/subscriptions", "login": "rvikmanis", "repos_url": "https://api.github.com/users/rvikmanis/repos", "received_events_url": "https://api.github.com/users/rvikmanis/received_events", "id": 554108, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/553.patch", "html_url": "https://github.com/python/mypy/pull/553", "diff_url": "https://github.com/python/mypy/pull/553.diff", "url": "https://api.github.com/repos/python/mypy/pulls/553"}, "locked": false}, {"milestone": null, "number": 552, "html_url": "https://github.com/python/mypy/issues/552", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/552", "id": 53713668, "events_url": "https://api.github.com/repos/python/mypy/issues/552/events", "updated_at": "2015-01-25T19:28:42Z", "body": "Protocols aren't actually supported by the type checker, so the existence of `typing.Protocol` is very confusing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/552/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove typing.Protocol", "assignee": null, "closed_at": "2015-01-25T19:28:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/552/comments", "labels": [{"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2015-01-08T04:31:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 551, "html_url": "https://github.com/python/mypy/issues/551", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/551", "id": 53663126, "events_url": "https://api.github.com/repos/python/mypy/issues/551/events", "updated_at": "2015-05-17T18:08:40Z", "body": "This gets no errors:\r\n```\r\ndef words(s: str) -> Dict[str, int]:\r\n    x = Undefined(Dict[str, int])\r\n    return x\r\n```\r\nShouldn't it be an error to return an undefined value?", "labels_url": "https://api.github.com/repos/python/mypy/issues/551/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Returning Undefined value doesn't get flagged as error", "assignee": null, "closed_at": "2015-05-17T18:08:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/551/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2015-01-07T18:15:40Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 550, "html_url": "https://github.com/python/mypy/pull/550", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/550", "id": 53302393, "events_url": "https://api.github.com/repos/python/mypy/issues/550/events", "updated_at": "2015-01-05T19:56:47Z", "body": "This should fix #534.\r\n\r\nAs part of this change, I changed the parsing of int expressions to use `int(token, base=0)`. As noted in the Python [docs](https://docs.python.org/3/library/functions.html#int), \"base 0 means to interpret exactly as a code literal, so that the actual base is 2, 8, 10, or 16\". This means all four cases are handled in one, and `parse_int_expr` now looks more like `parse_float_expr` and `parse_complex_expr`.\r\n\r\nAlso, I was going to add a test similar to [`test_invalid_hex_int_literals`](https://github.com/JukkaL/mypy/blob/f319ebb743f23bc7e534fbc9ef8da1466d505d51/mypy/test/testlex.py#L375) for octal and binary literals, but I discovered the lexer currently allows invalid octal literals like `0oA`. The same is true for binary literals after this change. Is it worth updating the regular expression to only allow valid literals? I think something like `0[xX][0-9a-fA-F]+|0[oO][0-7]+|0[bB][01]+|[0-9]+` should work.\r\n\r\nThis is my first contribution to the project, so please let me know if I have missed anything or if you have any questions.", "labels_url": "https://api.github.com/repos/python/mypy/issues/550/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added support for binary int literals", "assignee": null, "closed_at": "2015-01-04T15:36:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/550/comments", "labels": [], "created_at": "2015-01-03T12:00:06Z", "user": {"followers_url": "https://api.github.com/users/andersschuller/followers", "gists_url": "https://api.github.com/users/andersschuller/gists{/gist_id}", "html_url": "https://github.com/andersschuller", "following_url": "https://api.github.com/users/andersschuller/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1851477?v=3", "url": "https://api.github.com/users/andersschuller", "organizations_url": "https://api.github.com/users/andersschuller/orgs", "starred_url": "https://api.github.com/users/andersschuller/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/andersschuller/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/andersschuller/subscriptions", "login": "andersschuller", "repos_url": "https://api.github.com/users/andersschuller/repos", "received_events_url": "https://api.github.com/users/andersschuller/received_events", "id": 1851477, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/550.patch", "html_url": "https://github.com/python/mypy/pull/550", "diff_url": "https://github.com/python/mypy/pull/550.diff", "url": "https://api.github.com/repos/python/mypy/pulls/550"}, "locked": false}, {"milestone": null, "number": 549, "html_url": "https://github.com/python/mypy/pull/549", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/549", "id": 53043740, "events_url": "https://api.github.com/repos/python/mypy/issues/549/events", "updated_at": "2015-01-19T22:50:16Z", "body": "I've removed the `ParenExpr` node form the AST. It served no purpose and was always stripped away whenever it was encountered.\r\n\r\n(Also, I've removed the unused output.py module.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/549/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Removal of ParenExpr", "assignee": null, "closed_at": "2015-01-19T22:50:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/549/comments", "labels": [], "created_at": "2014-12-29T14:17:32Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/549.patch", "html_url": "https://github.com/python/mypy/pull/549", "diff_url": "https://github.com/python/mypy/pull/549.diff", "url": "https://api.github.com/repos/python/mypy/pulls/549"}, "locked": false}, {"milestone": null, "number": 548, "html_url": "https://github.com/python/mypy/issues/548", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/548", "id": 53040941, "events_url": "https://api.github.com/repos/python/mypy/issues/548/events", "updated_at": "2015-01-04T15:44:52Z", "body": "Current cygwin python3 is 3.2.5, so I install and use the native Windows Python which is 3.4.2 installed at `C:\\Python34` (the default).\r\n\r\nAfter installing mypy via `python setup.py instal`\" it installs under `C:\\Python34`, as expected, and creates a `C:\\Python34\\Scripts\\mypy` file.  Note there is no `mypy.exe` program.  (There are such programs for `pip.exe` and `easy_install.exe`, would be helpful for mypy to do likewise.)\r\n\r\nTo run this under cygwin requires an explicit call to `python` (bash turns the script path into a unix-y one, which confuses native Windows python -- not your issue, I mention this for clarity), this:\r\n\r\n```bash\r\n$ export PATH=/cygdrive/c/Python34:$PATH\r\n$ python C:/Python34/Scripts/mypy my-file.py\r\n```\r\n\r\nOddly this complains there is no `enum` module to import, though running `python my-file.py` directly works fine.  Running the same under a native CMD prompt behaves the same.\r\n\r\nI'm unsure what about running from a Cygwin bash shell is causing the issue, perhaps it isn't mypy's fault at all but I'm at a loss how to investigate.", "labels_url": "https://api.github.com/repos/python/mypy/issues/548/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cygwin awkwardness", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/548/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-12-29T13:26:13Z", "user": {"followers_url": "https://api.github.com/users/binkley/followers", "gists_url": "https://api.github.com/users/binkley/gists{/gist_id}", "html_url": "https://github.com/binkley", "following_url": "https://api.github.com/users/binkley/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/186421?v=3", "url": "https://api.github.com/users/binkley", "organizations_url": "https://api.github.com/users/binkley/orgs", "starred_url": "https://api.github.com/users/binkley/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/binkley/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/binkley/subscriptions", "login": "binkley", "repos_url": "https://api.github.com/users/binkley/repos", "received_events_url": "https://api.github.com/users/binkley/received_events", "id": 186421, "site_admin": false}, "locked": false}, {"milestone": null, "number": 547, "html_url": "https://github.com/python/mypy/pull/547", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/547", "id": 52841344, "events_url": "https://api.github.com/repos/python/mypy/issues/547/events", "updated_at": "2014-12-29T13:50:40Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/547/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix typo in code comment", "assignee": null, "closed_at": "2014-12-29T13:50:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/547/comments", "labels": [], "created_at": "2014-12-25T00:27:02Z", "user": {"followers_url": "https://api.github.com/users/Nikerabbit/followers", "gists_url": "https://api.github.com/users/Nikerabbit/gists{/gist_id}", "html_url": "https://github.com/Nikerabbit", "following_url": "https://api.github.com/users/Nikerabbit/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1109395?v=3", "url": "https://api.github.com/users/Nikerabbit", "organizations_url": "https://api.github.com/users/Nikerabbit/orgs", "starred_url": "https://api.github.com/users/Nikerabbit/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Nikerabbit/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Nikerabbit/subscriptions", "login": "Nikerabbit", "repos_url": "https://api.github.com/users/Nikerabbit/repos", "received_events_url": "https://api.github.com/users/Nikerabbit/received_events", "id": 1109395, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/547.patch", "html_url": "https://github.com/python/mypy/pull/547", "diff_url": "https://github.com/python/mypy/pull/547.diff", "url": "https://api.github.com/repos/python/mypy/pulls/547"}, "locked": false}, {"milestone": null, "number": 546, "html_url": "https://github.com/python/mypy/pull/546", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/546", "id": 52727040, "events_url": "https://api.github.com/repos/python/mypy/issues/546/events", "updated_at": "2015-03-28T20:51:11Z", "body": "This pull request adds stubs for the difflib module in the standard library.\r\n\r\nSome notes:\r\n\r\n- Right now this causes the tests to fail with the following:\r\n\r\n  ```\r\n  In module imported in _test_stubs.py, line 21:\r\n  stubs/3.2/difflib.py, line 6: Invalid type \"difflib._T\"\r\n  ```\r\n\r\n  I'm not sure what that means or how to fix it. (Do named tuples not support polymorphic types?) Guidance would be appreciated.\r\n\r\n- It would've been nice to be able to define a type alias for the rather wordy opcode type (`Tuple[str, int, int, int, int]`). When I tried that, I got other errors I didn't quite follow.\r\n- The stubs are identical between 2.7 and 3.2. Is there a way to define them without the code duplication?", "labels_url": "https://api.github.com/repos/python/mypy/issues/546/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add difflib stubs", "assignee": null, "closed_at": "2015-03-28T20:51:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/546/comments", "labels": [], "created_at": "2014-12-23T09:47:06Z", "user": {"followers_url": "https://api.github.com/users/brodie/followers", "gists_url": "https://api.github.com/users/brodie/gists{/gist_id}", "html_url": "https://github.com/brodie", "following_url": "https://api.github.com/users/brodie/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/42407?v=3", "url": "https://api.github.com/users/brodie", "organizations_url": "https://api.github.com/users/brodie/orgs", "starred_url": "https://api.github.com/users/brodie/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/brodie/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/brodie/subscriptions", "login": "brodie", "repos_url": "https://api.github.com/users/brodie/repos", "received_events_url": "https://api.github.com/users/brodie/received_events", "id": 42407, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/546.patch", "html_url": "https://github.com/python/mypy/pull/546", "diff_url": "https://github.com/python/mypy/pull/546.diff", "url": "https://api.github.com/repos/python/mypy/pulls/546"}, "locked": false}, {"milestone": null, "number": 545, "html_url": "https://github.com/python/mypy/issues/545", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/545", "id": 52619897, "events_url": "https://api.github.com/repos/python/mypy/issues/545/events", "updated_at": "2015-03-29T20:32:52Z", "body": "I thought it used to be the case that mypy only checked modules that explicitly import [from] typing. That gave a nice \"out\" for existing code that uses annotations with different conventions. But checking with the most recent version I found that it no longer does this -- all imported modules get checked, and all annotations it doesn't understand get flagged. I worry that this will upset people who have put efforts into their own system using annotation, and I think it's at least reasonable to be able to flag such code as \"don't look here\".\r\n\r\nYou can probably do this using a stub module, but perhaps it should be possible to just write something like\r\n```\r\nimport foo  # type: Any\r\n```\r\nOr some other syntax at the importing site?\r\n\r\nWe can also think about disabling mypy checking for a smaller scope, e.g. a class or function -- maybe a class annotation @dont_type_check?\r\n\r\n(Hm... Did I already bring this up earlier? If so please just close as duplicate.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/545/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disabling mypy for certain modules?", "assignee": null, "closed_at": "2015-03-29T20:32:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/545/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2014-12-22T04:54:02Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 544, "html_url": "https://github.com/python/mypy/pull/544", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/544", "id": 52596835, "events_url": "https://api.github.com/repos/python/mypy/issues/544/events", "updated_at": "2015-01-19T22:47:39Z", "body": "Fixes #520.\r\n\r\nImplementing `__setattr__` support is considerably more tricky, so I'll do that in a separate PR.", "labels_url": "https://api.github.com/repos/python/mypy/issues/544/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support for __getattr__", "assignee": null, "closed_at": "2015-01-19T22:47:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/544/comments", "labels": [], "created_at": "2014-12-21T14:38:27Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/544.patch", "html_url": "https://github.com/python/mypy/pull/544", "diff_url": "https://github.com/python/mypy/pull/544.diff", "url": "https://api.github.com/repos/python/mypy/pulls/544"}, "locked": false}, {"milestone": null, "number": 543, "html_url": "https://github.com/python/mypy/issues/543", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/543", "id": 52583206, "events_url": "https://api.github.com/repos/python/mypy/issues/543/events", "updated_at": "2015-02-22T01:06:43Z", "body": "This is valid Python but mypy doesn't accept it (`Parse error before in`):\r\n\r\n```python\r\nfor x, in [(1,), (2,), (3,)]:\r\n    print(x)\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/543/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "For loop parse error with single-item tuple lvalue", "assignee": null, "closed_at": "2015-02-22T01:06:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/543/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-21T01:57:22Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 542, "html_url": "https://github.com/python/mypy/issues/542", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/542", "id": 52583150, "events_url": "https://api.github.com/repos/python/mypy/issues/542/events", "updated_at": "2015-02-21T22:14:44Z", "body": "Code like this should be valid, but mypy complains about it:\r\n\r\n```python\r\ny={}\r\nwith open('x.txt') as y[1]:\r\n    print(y[1])\r\n```\r\n\r\nMypy only allows a name to be on the rhs of `as`, but any lvalue should be valid.", "labels_url": "https://api.github.com/repos/python/mypy/issues/542/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "With statement 'as' target cannot be arbitrary lvalue", "assignee": null, "closed_at": "2015-02-21T22:14:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/542/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-21T01:54:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 541, "html_url": "https://github.com/python/mypy/issues/541", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/541", "id": 52583054, "events_url": "https://api.github.com/repos/python/mypy/issues/541/events", "updated_at": "2015-02-22T18:03:05Z", "body": "This is valid Python but the mypy parser doesn't like it:\r\n\r\n```python\r\nx[2:4, :, :43:, 12]\r\n```\r\n\r\nCurrently only a single slice is accepted. Any tuple of slices and ordinary expressions should be okay.", "labels_url": "https://api.github.com/repos/python/mypy/issues/541/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Multidimensional slicing ", "assignee": null, "closed_at": "2015-02-22T18:03:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/541/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-21T01:49:28Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 540, "html_url": "https://github.com/python/mypy/issues/540", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/540", "id": 52553127, "events_url": "https://api.github.com/repos/python/mypy/issues/540/events", "updated_at": "2015-05-17T17:43:11Z", "body": "I just skimmed the README for Reticulated Python (https://github.com/mvitousek/reticulated). They have a useful hack to spell the type of a function with varargs or other dynamic hacks in the argument list: a normal function type is spelled e.g. Function([Int, Int], Float); a function type with a varargs argument list is spelled e.g. Function(DynParameters, Float). In mypy this would be Function[DynParameters, float]. (Or pick some other name for DynParameters.)", "labels_url": "https://api.github.com/repos/python/mypy/issues/540/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "A possible syntax for a function type with a varargs argument list", "assignee": null, "closed_at": "2015-05-17T17:43:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/540/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-12-20T05:42:42Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 539, "html_url": "https://github.com/python/mypy/issues/539", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/539", "id": 52506950, "events_url": "https://api.github.com/repos/python/mypy/issues/539/events", "updated_at": "2015-03-09T01:54:57Z", "body": "In the typehinting PEP the proposal is to use Var() instead of typevar(), and to make the constraints just varargs, rather than a keyword parameter (and why would the keyword be 'values'?).\r\n\r\nThe semantics of typevar() are fine. The PEP currently seems to state that two Var() calls with the same name generate equivalent variables, whereas mypy treats every typevar() as unique. It also enforces that the typevar is assigned to a variable with the same name as the typevar argument. I think the mypy rules are better, and easier to implement, so I prefer those.\r\n\r\nSee also https://github.com/ambv/typehinting/issues/1 for the first issue (renaming, signature change) and https://github.com/ambv/typehinting/issues/29 for the second (uniqueness).", "labels_url": "https://api.github.com/repos/python/mypy/issues/539/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename typevar('T', values=(t1, t2, ...)) to TypeVar('T', t1, t2, ...)", "assignee": null, "closed_at": "2015-03-09T01:54:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/539/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-19T17:20:48Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 538, "html_url": "https://github.com/python/mypy/issues/538", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/538", "id": 52491566, "events_url": "https://api.github.com/repos/python/mypy/issues/538/events", "updated_at": "2014-12-21T03:33:24Z", "body": "```python\r\nimport typing\r\n\r\nx = 'Hagar Qim'\r\n\r\ndef f() -> None:\r\n  global x, y\r\n  x = 1  # Type error reported\r\n  y = 2  # Ignored\r\n\r\ny = 'Mnajdra'\r\n```\r\n\r\nNo type error is reported for the assignments to `y`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/538/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check global after function definition", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/538/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-12-19T15:01:22Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 537, "html_url": "https://github.com/python/mypy/pull/537", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/537", "id": 52467550, "events_url": "https://api.github.com/repos/python/mypy/issues/537/events", "updated_at": "2014-12-20T07:53:44Z", "body": "This PR removes the unused `OutputVisitor`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/537/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Removal of output.py", "assignee": null, "closed_at": "2014-12-20T07:53:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/537/comments", "labels": [], "created_at": "2014-12-19T10:19:41Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/537.patch", "html_url": "https://github.com/python/mypy/pull/537", "diff_url": "https://github.com/python/mypy/pull/537.diff", "url": "https://api.github.com/repos/python/mypy/pulls/537"}, "locked": false}, {"milestone": null, "number": 536, "html_url": "https://github.com/python/mypy/issues/536", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/536", "id": 52404470, "events_url": "https://api.github.com/repos/python/mypy/issues/536/events", "updated_at": "2014-12-20T07:59:41Z", "body": "The only usage of `OutputVisitor` (and indeed the whole output.py file) is the testoutput test. Can this file, noderepr.py, and all references thereof be removed? That would cleanup the parser code and make refactoring easier.", "labels_url": "https://api.github.com/repos/python/mypy/issues/536/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove OutputVisitor and <node>Repr classes?", "assignee": null, "closed_at": "2014-12-20T07:59:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/536/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-12-18T19:13:46Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 535, "html_url": "https://github.com/python/mypy/pull/535", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/535", "id": 52390242, "events_url": "https://api.github.com/repos/python/mypy/issues/535/events", "updated_at": "2014-12-20T08:00:38Z", "body": "While browsing through the code I found a few small bits of unused code, which I removed.", "labels_url": "https://api.github.com/repos/python/mypy/issues/535/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Small fixes", "assignee": null, "closed_at": "2014-12-20T08:00:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/535/comments", "labels": [], "created_at": "2014-12-18T17:08:06Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/535.patch", "html_url": "https://github.com/python/mypy/pull/535", "diff_url": "https://github.com/python/mypy/pull/535.diff", "url": "https://api.github.com/repos/python/mypy/pulls/535"}, "locked": false}, {"milestone": null, "number": 534, "html_url": "https://github.com/python/mypy/issues/534", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/534", "id": 52388165, "events_url": "https://api.github.com/repos/python/mypy/issues/534/events", "updated_at": "2015-01-04T15:36:18Z", "body": "Binary int literals such as `0b0` are not supported.", "labels_url": "https://api.github.com/repos/python/mypy/issues/534/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support 0b int literals", "assignee": null, "closed_at": "2015-01-04T15:36:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/534/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-18T16:50:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 533, "html_url": "https://github.com/python/mypy/issues/533", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/533", "id": 52387734, "events_url": "https://api.github.com/repos/python/mypy/issues/533/events", "updated_at": "2015-02-21T22:10:57Z", "body": "Mypy complains about this code, even though it should be valid:\r\n\r\n```python\r\nif type in ('d', 'D'): cmd = 'TYPE A'; isdir = 1\r\nelse: cmd = 'TYPE ' + type; isdir = 0\r\n```\r\n\r\n(this is from Python 3.2 `Lib/urllib/request.py`)", "labels_url": "https://api.github.com/repos/python/mypy/issues/533/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "if/else block parse problem", "assignee": null, "closed_at": "2015-02-21T22:10:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/533/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-18T16:47:04Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 532, "html_url": "https://github.com/python/mypy/issues/532", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/532", "id": 52387424, "events_url": "https://api.github.com/repos/python/mypy/issues/532/events", "updated_at": "2015-02-08T23:17:39Z", "body": "Escapes are not processed correctly in triple-quoted raw string literals. Mypy complains about $ even though it's within a string literal:\r\n\r\n```python\r\nr\"\"\"\\\"\"\"$\"\"\"\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/532/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Problem with escapes within raw string literals", "assignee": null, "closed_at": "2015-02-08T23:17:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/532/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-18T16:44:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 531, "html_url": "https://github.com/python/mypy/issues/531", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/531", "id": 51938130, "events_url": "https://api.github.com/repos/python/mypy/issues/531/events", "updated_at": "2015-05-17T18:07:48Z", "body": "Current overload variants are often considered to be overlapping, unless argument types use `disjointclass` or are built-in types. However, `disjointclass` is only marginally useful and pretty unintuitive. I'd say that it's is generally better to assume that unrelated types are not overlapping, even though this is not generally true due to multiple inheritance.\r\n\r\nIn summary, we'd make the type system more flexible at the cost of unsoundness in the presence of multiple inheritance + overloading.\r\n\r\nExample affected by this:\r\n\r\n```python\r\nfrom typing import overload\r\nclass A: pass\r\nclass B: pass\r\n@overload\r\ndef f(x: A) -> int: ...\r\n@overload\r\ndef f(x: B) -> str: ...\r\n```\r\n\r\nCurrently this is rejected, but I argue that this should be fine, even though a class that extends both `A` and `C` means (some) trouble. The rationale is simplicity and the fact that this case (overloading with different return types + multiple inheritance) is sufficiently rare.\r\n\r\nCurrently we'd need to mark classes `A` and `B` disjoint to make the code valid:\r\n\r\n```python\r\nfrom typing import overload, disjointclass\r\nclass A: pass\r\n@disjointclass(A)\r\nclass B: pass\r\n@overload\r\ndef f(x: A) -> int: ...\r\n@overload\r\ndef f(x: B) -> str: ...\r\n```\r\n\r\nAlternatively, we could the warning about overlapping overload variants optional (and make sure that no built-in stubs generate the warning) and still remove `disjointclass`.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/531/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove typing.disjointclass and make overloads more flexible", "assignee": null, "closed_at": "2015-05-17T18:07:48Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/531/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-12-15T00:23:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 530, "html_url": "https://github.com/python/mypy/issues/530", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/530", "id": 51899762, "events_url": "https://api.github.com/repos/python/mypy/issues/530/events", "updated_at": "2015-03-26T04:43:00Z", "body": "The current implementation erases type information from __annotations__ and friends at runtime:\r\n\r\nIn [2]: def f(x: List[int]) -> int:\r\n   ...:     pass\r\n\r\nIn [3]: f.__annotations__\r\nOut[3]: {'return': int, 'x': list}  ## lost x: List[int]\r\n\r\nIs this by design, and if so, why? Is there some reason to not keep an accurate run-time representation of type annotations? Could that information be made available uniformly on every typeable thing?\r\n\r\nIn [4]: class A:\r\n   ...:     i = Undefined(int)\r\n\r\nIn [5]: A.__annotations__  ## lost i: int\r\n\r\nPerhaps even include a run-time representation of some inferred types e.g. all types of all instance attributes might be made available via class.__annotations__ (or something like it), regardless of how those types were declared (on __init__ or via class attributes), or even inferred (by mypy from body of __init__ or otherwise).\r\n\r\nThoughts?", "labels_url": "https://api.github.com/repos/python/mypy/issues/530/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Runtime access to type annotations", "assignee": null, "closed_at": "2015-03-26T04:43:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/530/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-13T21:10:11Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 529, "html_url": "https://github.com/python/mypy/issues/529", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/529", "id": 51774446, "events_url": "https://api.github.com/repos/python/mypy/issues/529/events", "updated_at": "2015-06-24T19:05:07Z", "body": "This requires some special casing in the type checker.", "labels_url": "https://api.github.com/repos/python/mypy/issues/529/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support Python 3.4 Enum", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/529/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-12-12T06:23:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 528, "html_url": "https://github.com/python/mypy/pull/528", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/528", "id": 51603372, "events_url": "https://api.github.com/repos/python/mypy/issues/528/events", "updated_at": "2014-12-18T16:26:34Z", "body": "Added Python 3 specific support for ellipsis. See test cases for examples.\r\n\r\nI have some doubt about the way I introduced the `ellipsis` class, which is the type of `...` and `Ellipsis`. I've added it as a class to `builtins.py`, however, that makes code like `a = ellipsis()` legal, which it is not. I don't know how to have `ellipsis` as a class, while at the same time hiding it.\r\n\r\nFixes #524.", "labels_url": "https://api.github.com/repos/python/mypy/issues/528/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support for Ellipsis and ...", "assignee": null, "closed_at": "2014-12-18T16:26:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/528/comments", "labels": [], "created_at": "2014-12-10T19:57:03Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/528.patch", "html_url": "https://github.com/python/mypy/pull/528", "diff_url": "https://github.com/python/mypy/pull/528.diff", "url": "https://api.github.com/repos/python/mypy/pulls/528"}, "locked": false}, {"milestone": null, "number": 527, "html_url": "https://github.com/python/mypy/pull/527", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/527", "id": 51337938, "events_url": "https://api.github.com/repos/python/mypy/issues/527/events", "updated_at": "2014-12-21T03:41:14Z", "body": "For example, this passes mypy now:\r\n```python\r\nclass A:\r\n    def __call__(self, x: int) -> str: pass\r\n\r\na = A()\r\ns = 'string'\r\ns = a(3)\r\n```\r\n\r\nFixes #519.", "labels_url": "https://api.github.com/repos/python/mypy/issues/527/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support for calls to objects with __call__ member", "assignee": null, "closed_at": "2014-12-21T03:41:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/527/comments", "labels": [], "created_at": "2014-12-08T18:56:20Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/527.patch", "html_url": "https://github.com/python/mypy/pull/527", "diff_url": "https://github.com/python/mypy/pull/527.diff", "url": "https://api.github.com/repos/python/mypy/pulls/527"}, "locked": false}, {"milestone": null, "number": 526, "html_url": "https://github.com/python/mypy/issues/526", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/526", "id": 51242766, "events_url": "https://api.github.com/repos/python/mypy/issues/526/events", "updated_at": "2014-12-08T03:10:01Z", "body": "Currently the arguments in `super()` calls are not checked.", "labels_url": "https://api.github.com/repos/python/mypy/issues/526/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check super() arguments", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/526/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-12-08T02:32:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 525, "html_url": "https://github.com/python/mypy/issues/525", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/525", "id": 51239625, "events_url": "https://api.github.com/repos/python/mypy/issues/525/events", "updated_at": "2015-03-29T20:20:49Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/525/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document the alternative stub extension .pyi", "assignee": null, "closed_at": "2015-03-29T20:20:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/525/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-08T01:07:23Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 524, "html_url": "https://github.com/python/mypy/issues/524", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/524", "id": 51239462, "events_url": "https://api.github.com/repos/python/mypy/issues/524/events", "updated_at": "2014-12-18T16:26:34Z", "body": "The expression `...` is valid in Python 3. Mypy should support it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/524/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support ... (ellipsis)", "assignee": null, "closed_at": "2014-12-18T16:26:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/524/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-08T01:02:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 523, "html_url": "https://github.com/python/mypy/issues/523", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/523", "id": 51239441, "events_url": "https://api.github.com/repos/python/mypy/issues/523/events", "updated_at": "2015-03-17T04:21:37Z", "body": "Mypy should perform name mangling in classes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/523/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Double underscore name mangling in classes", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/523/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-12-08T01:01:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 522, "html_url": "https://github.com/python/mypy/issues/522", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/522", "id": 51239383, "events_url": "https://api.github.com/repos/python/mypy/issues/522/events", "updated_at": "2015-02-22T21:02:53Z", "body": "Parse the source file encoding and check that the file can be decoded. Mypy currently ignores the  source file encoding. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/522/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Source file encodings", "assignee": null, "closed_at": "2015-02-22T21:02:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/522/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-08T01:00:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 521, "html_url": "https://github.com/python/mypy/issues/521", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/521", "id": 51238902, "events_url": "https://api.github.com/repos/python/mypy/issues/521/events", "updated_at": "2015-03-29T20:12:27Z", "body": "See https://github.com/JukkaL/mypy/issues/520", "labels_url": "https://api.github.com/repos/python/mypy/issues/521/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support __setattr__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/521/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-12-08T00:45:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 520, "html_url": "https://github.com/python/mypy/issues/520", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/520", "id": 51238887, "events_url": "https://api.github.com/repos/python/mypy/issues/520/events", "updated_at": "2015-01-19T22:47:39Z", "body": "Support overloading attribute access by defining a `__getattr__` method. If a class has a `__getattr__` method, mypy should let programs access any attributes, and the type would be the return type of `__getattr__`. Example:\r\n\r\n```python\r\nclass A:\r\n    def __getattr__(self, name: str) -> int: return 2\r\na = A()\r\nprint(a.foobar)   # okay, type is int\r\n```\r\n\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/520/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support __getattr__", "assignee": null, "closed_at": "2015-01-19T22:47:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/520/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-08T00:44:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 519, "html_url": "https://github.com/python/mypy/issues/519", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/519", "id": 51238332, "events_url": "https://api.github.com/repos/python/mypy/issues/519/events", "updated_at": "2014-12-21T03:41:14Z", "body": "Add support for overloading calls by implementing a `__call__` method.", "labels_url": "https://api.github.com/repos/python/mypy/issues/519/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support __call__", "assignee": null, "closed_at": "2014-12-21T03:41:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/519/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-08T00:27:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 518, "html_url": "https://github.com/python/mypy/issues/518", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/518", "id": 51231120, "events_url": "https://api.github.com/repos/python/mypy/issues/518/events", "updated_at": "2014-12-07T22:49:11Z", "body": "The following semantic analysis test case causes an unhandled exception (reported in https://github.com/JukkaL/mypy/pull/379 by @mason-bially):\r\n\r\n```\r\n[case testImportFromSameModule]\r\nimport m.x\r\n[file m/__init__.py]\r\n[file m/x.py]\r\nfrom m.x import nonexistent\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/518/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Importing from the same module causes a crash", "assignee": null, "closed_at": "2014-12-07T22:49:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/518/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-12-07T20:53:10Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 517, "html_url": "https://github.com/python/mypy/issues/517", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/517", "id": 51229492, "events_url": "https://api.github.com/repos/python/mypy/issues/517/events", "updated_at": "2014-12-07T20:06:49Z", "body": "Currently to look up the mypy type of a std lib function, for example, you have to open the stub file and search for the function. It would be handier if we'd included the stubs in the mypy documentation, so that it would be easier to search and browse. As a bonus, it would look nicer and there wouldn't be any TODO comments, etc.\r\n\r\nThe tool could be implemented like this:\r\n\r\n* Type check the target stub so that all the type names are bound, and we have inferred types for variables.\r\n* Write a visitor that finds all classes, functions and variables in the AST and pretty-prints them. Create cross references for types in annotations.\r\n* Integrate with the mypy documentation build process. Only regenerate docs for a stub if the stub has been changed since the previous run to keep build times short.\r\n\r\nNot sure if we'd hit some limitations with Sphinx formatting features, since Sphinx doesn't have built-in support for Python function annotations, AFAIK. First experiment by manually writing .rst documentation for a few functions/classes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/517/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Write a tool that pretty-prints stub files into Sphinx docs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/517/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2014-12-07T20:06:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 516, "html_url": "https://github.com/python/mypy/issues/516", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/516", "id": 51228436, "events_url": "https://api.github.com/repos/python/mypy/issues/516/events", "updated_at": "2014-12-07T20:08:02Z", "body": "Many Python built-in functions accept no keyword arguments:\r\n\r\n```python\r\n>>> ord(c='c')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: ord() takes no keyword arguments\r\n```\r\n\r\nCurrently there is no way to represent this in stubs. I propose using the convention of prefixing all argument names with an underscore for functions that can't be called using keyword arguments. Here is an example for `ord`:\r\n\r\n```python\r\n# can only call using positional args!\r\ndef ord(_c: Union[str, bytes, bytearray]) -> int: pass\r\n```\r\n\r\nThe implementation would be in two phases:\r\n\r\n1. Disallow names starting with `_` as keyword arguments, and report errors such as `\"foo\" takes no keyword arguments` when trying to pass keyword arguments to a function that has all arguments prefixed with `_`.\r\n2. Update stubs to use `_` argument name prefixes when it makes sense.\r\n\r\nThis has a problem with calls to functions which legitimately take arguments with a `_` prefix. To address this, we could only use this convention for stub files. For regular Python files, argument names with a `_` prefix would be fine. For stubs, we could also use **two** underscores to represent argument names which should have a `_` (single underscore) prefix but should still be valid as keyword arguments. However, we can implement these refinements only later, and only if there seems to be an actual need for them.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/516/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Representing functions that take no keyword arguments", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/516/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-12-07T19:42:25Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 515, "html_url": "https://github.com/python/mypy/pull/515", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/515", "id": 51215093, "events_url": "https://api.github.com/repos/python/mypy/issues/515/events", "updated_at": "2014-12-08T00:40:47Z", "body": "Fixes #59.", "labels_url": "https://api.github.com/repos/python/mypy/issues/515/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support for complex literals and extension of the stub for complex()", "assignee": null, "closed_at": "2014-12-08T00:40:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/515/comments", "labels": [], "created_at": "2014-12-07T11:27:35Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/515.patch", "html_url": "https://github.com/python/mypy/pull/515", "diff_url": "https://github.com/python/mypy/pull/515.diff", "url": "https://api.github.com/repos/python/mypy/pulls/515"}, "locked": false}, {"milestone": null, "number": 514, "html_url": "https://github.com/python/mypy/pull/514", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/514", "id": 51211804, "events_url": "https://api.github.com/repos/python/mypy/issues/514/events", "updated_at": "2014-12-07T18:52:13Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/514/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fixed mismatch in variable names", "assignee": null, "closed_at": "2014-12-07T18:52:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/514/comments", "labels": [], "created_at": "2014-12-07T08:41:16Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/514.patch", "html_url": "https://github.com/python/mypy/pull/514", "diff_url": "https://github.com/python/mypy/pull/514.diff", "url": "https://api.github.com/repos/python/mypy/pulls/514"}, "locked": false}, {"milestone": null, "number": 513, "html_url": "https://github.com/python/mypy/issues/513", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/513", "id": 51188324, "events_url": "https://api.github.com/repos/python/mypy/issues/513/events", "updated_at": "2015-05-17T17:34:19Z", "body": "Currently, the allowed syntax for function type annotations  is `Function[[Ti1, ...], Tr]`. So, it is not possible to specify keyword arguments, keyword argument dictionaries (`**kwargs`), and arbitrary argument lists (`*args`).\r\n\r\nI propose to extend the syntax as follows:\r\n\r\n```c\r\nfunction_type = 'Function[{' arguments '}, '  type  ']'\r\narguments = pos_arg [',' arguments]\r\n          | star_arg\r\npos_arg = [id ':'] type\r\nstar_arg = '*' ':' type [',' kwargs]\r\n         | kwargs\r\nkwargs = id ':' type [',' kwargs]\r\n       | kwdict\r\nkwdict = '**' ':' type\r\n```\r\n\r\nInstead of curly brackets, we could retain square brackets. However, it is not a simple list of types anymore but reminiscent of a dictionary, so the curly brackets make more sense to me,\r\n\r\n### Some examples\r\n\r\nThe type of\r\n```python\r\ndef f(x: int, y: int, *args: str) -> int: pass\r\n```\r\nwould be `Function[{x: int, y: int, *: str}, int]`, which would be a subtype of `Function[{int, int, *: str}, int]`.\r\n\r\nThe type of\r\n```python\r\ndef g(*args: int, p: str) -> int: pass\r\n```\r\n\r\nwould be `Function[{*: int, p: str}, int]`.\r\n\r\nThe type of\r\n```python\r\ndef h(a: str, **kwargs: int) -> str: pass\r\n```\r\n\r\nwould be `Function[{a: str, **: int}, str]`. Here `int` refers to the type of the values of the keyword argument dictionary (the keys are always strings).", "labels_url": "https://api.github.com/repos/python/mypy/issues/513/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Proposal for new syntax for function types", "assignee": null, "closed_at": "2015-05-17T17:34:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/513/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-12-06T16:37:26Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 512, "html_url": "https://github.com/python/mypy/pull/512", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/512", "id": 51185756, "events_url": "https://api.github.com/repos/python/mypy/issues/512/events", "updated_at": "2015-01-25T20:48:05Z", "body": "Hi, would something like this be acceptable as a fix for issue #505?\r\n\r\nThis is what I tested with:\r\n```python\r\ndef a(x, y): pass\r\na(x=1)\r\n\r\ndef b(x, y): pass\r\nb(y=1)\r\n\r\ndef c(x, y, z): pass\r\nc(x=1)\r\n\r\ndef d(x, y, z): pass\r\nd(y=1)\r\n\r\ndef e(x, y, z): pass\r\ne(z=1)\r\n```\r\nAnd these are the results:\r\n```shell\r\n$ mypy test.py \r\ntest.py, line 4: Missing positional argument(s) \"y\" in call to \"a\"\r\ntest.py, line 7: Missing positional argument(s) \"x\" in call to \"b\"\r\ntest.py, line 10: Missing positional argument(s) \"y\", \"z\" in call to \"c\"\r\ntest.py, line 13: Missing positional argument(s) \"x\", \"z\" in call to \"d\"\r\ntest.py, line 16: Missing positional argument(s) \"x\", \"y\" in call to \"e\"\r\n```\r\nI haven't updated the test cases that rely on the current output, so 20 or so tests are failing at the moment, I can update those as well if this is acceptable.", "labels_url": "https://api.github.com/repos/python/mypy/issues/512/labels{/name}", "comments": 23, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix for issue #505 (Better error message for missing keyword argument)", "assignee": null, "closed_at": "2015-01-20T02:41:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/512/comments", "labels": [], "created_at": "2014-12-06T15:12:23Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/512.patch", "html_url": "https://github.com/python/mypy/pull/512", "diff_url": "https://github.com/python/mypy/pull/512.diff", "url": "https://api.github.com/repos/python/mypy/pulls/512"}, "locked": false}, {"milestone": null, "number": 511, "html_url": "https://github.com/python/mypy/issues/511", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/511", "id": 51183632, "events_url": "https://api.github.com/repos/python/mypy/issues/511/events", "updated_at": "2014-12-07T18:50:31Z", "body": "The type of the starred argument is incorrectly inferred to be a `List` instead of a `Tuple`. For example:\r\n\r\n```python\r\ndef f(*y: int) -> None:\r\n    p = 1, 2\r\n    p = y\r\n```\r\n\r\nmypy incorrectly reports:\r\n```\r\nline 3: Incompatible types in assignment (expression has type List[int], variable has type \"Tuple[int, int]\")\r\n```\r\n\r\nSee [documentation](https://docs.python.org/2/tutorial/controlflow.html#arbitrary-argument-lists).", "labels_url": "https://api.github.com/repos/python/mypy/issues/511/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Incorrect type of starred argument in function definition", "assignee": null, "closed_at": "2014-12-07T18:50:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/511/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}], "created_at": "2014-12-06T14:12:35Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 510, "html_url": "https://github.com/python/mypy/issues/510", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/510", "id": 51183345, "events_url": "https://api.github.com/repos/python/mypy/issues/510/events", "updated_at": "2014-12-07T21:20:46Z", "body": "A common beginners mistake is to use an object as a default argument while assuming it will be evaluated every function call again, like the `[]` in:\r\n\r\n```python\r\ndef f(a, L=[]):\r\n    L.append(a)\r\n    return L\r\n```\r\n\r\nMypy could give a warning for code like this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/510/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Warning for object as default argument", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/510/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-12-06T14:00:57Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 509, "html_url": "https://github.com/python/mypy/pull/509", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/509", "id": 51020572, "events_url": "https://api.github.com/repos/python/mypy/issues/509/events", "updated_at": "2014-12-08T00:20:29Z", "body": "This PR implements both set and dictionary comprehensions, so it fixes #508 and fixes #461.", "labels_url": "https://api.github.com/repos/python/mypy/issues/509/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Set and dictionary comprehension", "assignee": null, "closed_at": "2014-12-08T00:20:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/509/comments", "labels": [], "created_at": "2014-12-04T19:54:05Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/509.patch", "html_url": "https://github.com/python/mypy/pull/509", "diff_url": "https://github.com/python/mypy/pull/509.diff", "url": "https://api.github.com/repos/python/mypy/pulls/509"}, "locked": false}, {"milestone": null, "number": 508, "html_url": "https://github.com/python/mypy/issues/508", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/508", "id": 50718015, "events_url": "https://api.github.com/repos/python/mypy/issues/508/events", "updated_at": "2014-12-08T00:20:28Z", "body": "For:\r\n\r\n```python\r\nimport typing\r\na = {i for i in range(10)}\r\na = 1\r\n```\r\n\r\nmypy reports:\r\n```\r\nline 3: Incompatible types in assignment (expression has type \"int\", \r\nvariable has type Set[Iterator[int]])\r\n```\r\n\r\nThe set should have type `Set[int]` instead.", "labels_url": "https://api.github.com/repos/python/mypy/issues/508/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Set comprehension unsupported", "assignee": null, "closed_at": "2014-12-08T00:20:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/508/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-12-02T20:52:07Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 507, "html_url": "https://github.com/python/mypy/issues/507", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/507", "id": 50550424, "events_url": "https://api.github.com/repos/python/mypy/issues/507/events", "updated_at": "2015-02-08T23:04:40Z", "body": "Seeing \"Undefined\" in code misses the main purpose of the type declaration. I understand that the value is undefined, and Undefined(...) provides that required behavior, but that is **not** the intent of the declaration.\r\n\r\nProposal : use something like below, with exactly the same semantics.\r\n\r\n```i = TypeDecl(int)```\r\n\r\nor \r\n\r\n```i = Type(int)```\r\n\r\nand not:\r\n\r\n```i = Undefined(int)```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/507/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename \"Undefined\" to \"TypeDecl\" or similar", "assignee": null, "closed_at": "2015-02-08T23:04:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/507/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "wontfix", "color": "ffffff", "url": "https://api.github.com/repos/python/mypy/labels/wontfix"}], "created_at": "2014-12-01T17:26:33Z", "user": {"followers_url": "https://api.github.com/users/Dedoig/followers", "gists_url": "https://api.github.com/users/Dedoig/gists{/gist_id}", "html_url": "https://github.com/Dedoig", "following_url": "https://api.github.com/users/Dedoig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/8269863?v=3", "url": "https://api.github.com/users/Dedoig", "organizations_url": "https://api.github.com/users/Dedoig/orgs", "starred_url": "https://api.github.com/users/Dedoig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Dedoig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Dedoig/subscriptions", "login": "Dedoig", "repos_url": "https://api.github.com/users/Dedoig/repos", "received_events_url": "https://api.github.com/users/Dedoig/received_events", "id": 8269863, "site_admin": false}, "locked": false}, {"milestone": null, "number": 506, "html_url": "https://github.com/python/mypy/issues/506", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/506", "id": 50472949, "events_url": "https://api.github.com/repos/python/mypy/issues/506/events", "updated_at": "2015-02-08T23:17:39Z", "body": "Currently `typing.Sequence` does not define the methods `index` and `count`, but `collections.abc.Sequence` defines these. Add the missing definitions.\r\n\r\nSince we want `typing.Sequence[T]` to have covariant subtyping (such that `Sequence[int]` is a subtype of `Sequence[Union[int, str]]`, for example) the argument types should be `Any` instead of `T`. This opens a hole to our type system, since `str.count` and `str.index` don't accept arbitrary argument types but require strings. I think covariance is more important than having precise argument types. We will potentially come up with another way of dealing with the type system hole, such as special casing these methods in the type checker (though this would be a bit ugly).", "labels_url": "https://api.github.com/repos/python/mypy/issues/506/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add index and count to Sequence", "assignee": null, "closed_at": "2015-02-08T23:17:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/506/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-11-30T22:16:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 505, "html_url": "https://github.com/python/mypy/issues/505", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/505", "id": 50471054, "events_url": "https://api.github.com/repos/python/mypy/issues/505/events", "updated_at": "2014-11-30T21:18:26Z", "body": "The error message for this code is not very helpful:\r\n\r\n```python\r\ndef f(x, y): pass\r\nf(y=1)  # Mypy error: Too few arguments for \"f\"\r\n```\r\n\r\nIt would be better to say something like `Missing positional argument \"x\" in call to \"f\"`. CPython can do this:\r\n\r\n```python\r\n>>> def f(x, y): pass\r\n... \r\n>>> f(y=1)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: f() missing 1 required positional argument: 'x'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/505/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Better error message for missing keyword argument", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/505/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-11-30T21:18:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 504, "html_url": "https://github.com/python/mypy/pull/504", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/504", "id": 50463292, "events_url": "https://api.github.com/repos/python/mypy/issues/504/events", "updated_at": "2014-12-03T07:17:58Z", "body": "This PR implements #494.\r\n\r\nThere is one note I should make: An error message is generated when `nonlocal x` follows a definition of `x`, like in this case:\r\n\r\n```python\r\ndef outer():\r\n    x = 1\r\n    def inner():\r\n        x = 2\r\n        nonlocal x\r\n    inner()\r\n    print(x)\r\n```\r\n\r\nHowever, Python 3.4 reports just a warning. I made this choice, because it was the easiest way to report an error (as it should) when there is a `nonlocal` declaration of a variable with the same name as a function parameter:\r\n\r\n```python\r\ndef outer():\r\n    x = 1\r\n    def inner(x):\r\n        nonlocal x\r\n```\r\n\r\nI don't think it is such a bad idea to report an error in the first case too. In the first code snippet, the output is `2`. Which is (at least to me) a bit counter intuitive as the `nonlocal x` apparently affects an earlier statement. Furthermore, generating an error message in this case does not exclude any uses of `nonlocal` as it can be moved to the front of the function with changing the semantics.\r\n\r\nNevertheless, if you feel this is overly restrictive, let me know and I will try to find another way of dealing with this.", "labels_url": "https://api.github.com/repos/python/mypy/issues/504/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support for nonlocal declaration", "assignee": null, "closed_at": "2014-12-03T07:17:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/504/comments", "labels": [], "created_at": "2014-11-30T16:58:06Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/504.patch", "html_url": "https://github.com/python/mypy/pull/504", "diff_url": "https://github.com/python/mypy/pull/504.diff", "url": "https://api.github.com/repos/python/mypy/pulls/504"}, "locked": false}, {"milestone": null, "number": 503, "html_url": "https://github.com/python/mypy/pull/503", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/503", "id": 50423924, "events_url": "https://api.github.com/repos/python/mypy/issues/503/events", "updated_at": "2015-03-29T19:34:17Z", "body": "This implements @JukkaL's suggestion of adding `# mypy: ignore` annotations in #500.\r\n\r\nIn this PR, only ignore annotations on import statements are allowed, but I think it would be easily extendable to other statements as well. Every statement `Node` could have an `annotations` field that could be used during semantic analysis or type checking.", "labels_url": "https://api.github.com/repos/python/mypy/issues/503/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added parsing of ignore annotation for import statements.", "assignee": null, "closed_at": "2015-03-29T19:34:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/503/comments", "labels": [], "created_at": "2014-11-29T12:04:14Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/503.patch", "html_url": "https://github.com/python/mypy/pull/503", "diff_url": "https://github.com/python/mypy/pull/503.diff", "url": "https://api.github.com/repos/python/mypy/pulls/503"}, "locked": false}, {"milestone": null, "number": 502, "html_url": "https://github.com/python/mypy/pull/502", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/502", "id": 50326321, "events_url": "https://api.github.com/repos/python/mypy/issues/502/events", "updated_at": "2014-12-07T23:49:38Z", "body": "Pull Request for  #345 that now is in \"priority\"\r\n\r\nI had to make some decisions, like that \\_\\_init\\_\\_.py don't change the extension, shouldn't be a stub, and python use it to know the modules.\r\n\r\nAlso, to allow import scripts, the script sometimes look just .pyi files, and other times look .py and .pyi (first .py).\r\n\r\nIf don't if that's the solution you want.", "labels_url": "https://api.github.com/repos/python/mypy/issues/502/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added support to .pyi stubs.", "assignee": null, "closed_at": "2014-12-07T23:49:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/502/comments", "labels": [], "created_at": "2014-11-27T22:19:54Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/502.patch", "html_url": "https://github.com/python/mypy/pull/502", "diff_url": "https://github.com/python/mypy/pull/502.diff", "url": "https://api.github.com/repos/python/mypy/pulls/502"}, "locked": false}, {"milestone": null, "number": 501, "html_url": "https://github.com/python/mypy/issues/501", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/501", "id": 49850842, "events_url": "https://api.github.com/repos/python/mypy/issues/501/events", "updated_at": "2014-11-26T07:48:52Z", "body": "We should detect the common error of using `print` with Python 2 (statement) syntax and give an informative error message.", "labels_url": "https://api.github.com/repos/python/mypy/issues/501/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "More informative error message if print used in python 2 statement style", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/501/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-11-24T02:29:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 500, "html_url": "https://github.com/python/mypy/issues/500", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/500", "id": 49283967, "events_url": "https://api.github.com/repos/python/mypy/issues/500/events", "updated_at": "2015-03-29T19:31:05Z", "body": "I don't know if this is intentionally omitted, or if I'm just not aware of the functionality, but is there any way to ignore mypy errors line-by-line?\r\n\r\nFor instance, one of the files I'm using mypy on works, but for certain lines...\r\n\r\n````\r\ngraph.py, line 3: No module named 'numpy'\r\ngraph.py, line 4: No module named 'matplotlib.pyplot'\r\ngraph.py, line 5: No module named 'scipy.stats'\r\ngraph.py, line 155: Unexpected keyword argument \"key\" for \"max\"\r\n````\r\n\r\n...mypy gives errors incorrectly that I'd like to ignore (the modules do exist, and max does take the 'key' argument).\r\n\r\nIs there any way to skip these lines, such as in a linter, or a way to hint to mypy that these are valid?", "labels_url": "https://api.github.com/repos/python/mypy/issues/500/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ignore specific lines", "assignee": null, "closed_at": "2015-03-29T19:30:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/500/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2014-11-18T19:41:41Z", "user": {"followers_url": "https://api.github.com/users/Shookit/followers", "gists_url": "https://api.github.com/users/Shookit/gists{/gist_id}", "html_url": "https://github.com/Shookit", "following_url": "https://api.github.com/users/Shookit/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1091025?v=3", "url": "https://api.github.com/users/Shookit", "organizations_url": "https://api.github.com/users/Shookit/orgs", "starred_url": "https://api.github.com/users/Shookit/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Shookit/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Shookit/subscriptions", "login": "Shookit", "repos_url": "https://api.github.com/users/Shookit/repos", "received_events_url": "https://api.github.com/users/Shookit/received_events", "id": 1091025, "site_admin": false}, "locked": false}, {"milestone": null, "number": 499, "html_url": "https://github.com/python/mypy/issues/499", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/499", "id": 49024617, "events_url": "https://api.github.com/repos/python/mypy/issues/499/events", "updated_at": "2014-11-24T02:24:33Z", "body": "I am just starting to use `mypy` and I don't seem to be able to typecheck any module that imports any other module:\r\n\r\n```bash\r\n$ echo import datetime > foo.py\r\n$ mypy foo.py \r\nfoo.py, line 1: No module named 'datetime'\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/499/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot import any module", "assignee": null, "closed_at": "2014-11-24T02:24:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/499/comments", "labels": [], "created_at": "2014-11-17T01:44:33Z", "user": {"followers_url": "https://api.github.com/users/roldugin/followers", "gists_url": "https://api.github.com/users/roldugin/gists{/gist_id}", "html_url": "https://github.com/roldugin", "following_url": "https://api.github.com/users/roldugin/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/749698?v=3", "url": "https://api.github.com/users/roldugin", "organizations_url": "https://api.github.com/users/roldugin/orgs", "starred_url": "https://api.github.com/users/roldugin/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/roldugin/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/roldugin/subscriptions", "login": "roldugin", "repos_url": "https://api.github.com/users/roldugin/repos", "received_events_url": "https://api.github.com/users/roldugin/received_events", "id": 749698, "site_admin": false}, "locked": false}, {"milestone": null, "number": 498, "html_url": "https://github.com/python/mypy/issues/498", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/498", "id": 48500041, "events_url": "https://api.github.com/repos/python/mypy/issues/498/events", "updated_at": "2016-01-20T23:23:39Z", "body": "In python 3.X yield is a statement (currently supported) but also an expression.\r\nYou can do something like this:\r\n\r\n```python\r\nfrom typing import Iterator\r\n\r\ndef test_yield() -> Iterator[int]:\r\n    value = 1\r\n    try:\r\n        value = yield value  # Here is the yield expression\r\n        yield value\r\n        yield value + 1\r\n    except TypeError as e:\r\n        print(e)\r\n\r\ngen = test_yield()\r\nx1 = next(gen)\r\nx2 = gen.send(2)\r\nprint(x1)  # 1\r\nprint(x2)  # 2\r\ngen.throw(TypeError, 'ERROR')\r\ngen.close()\r\n```\r\n\r\nRight now, mypy complains in the expression:\r\n\r\n    _program.py: In function \"test_yield\":\r\n    _program.py, line 6: Parse error before \"value\"\r\n\r\nAnd, also, the Iterator type need the functions send, throw and close, but I think this go in typing project:\r\n\r\n    _program.py, line 14: Iterator[int] has no attribute \"send\" \r\n    _program.py, line 17: Iterator[int] has no attribute \"throw\" \r\n    _program.py, line 18: Iterator[int] has no attribute \"close\"\r\n\r\n\r\nThe reference is here: [https://docs.python.org/3.4/reference/expressions.html#yieldexpr](https://docs.python.org/3.4/reference/expressions.html#yieldexpr)", "labels_url": "https://api.github.com/repos/python/mypy/issues/498/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Full yield support, including yield expressions", "assignee": null, "closed_at": "2016-01-20T23:23:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/498/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-11-12T11:26:32Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "locked": false}, {"milestone": null, "number": 497, "html_url": "https://github.com/python/mypy/issues/497", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/497", "id": 48185690, "events_url": "https://api.github.com/repos/python/mypy/issues/497/events", "updated_at": "2014-11-09T04:40:12Z", "body": "I love mypy and think it's a great addition to every Python developers toolkit. One thing I think could be a nice addition is lightweight interfaces such as exist in Go:\r\n\r\nhttps://golang.org/ref/spec#Interface_types\r\n\r\nFor those unfamiliar with that language, the salient part (IMO) is that in Go you can declare an interface, and use it in place of a type declaration, and any object that implements all methods (with the right type signature) that make up the interface will be a valid value for arguments with that type declaration, so as an example:\r\n\r\n```python\r\nfrom typing import Interface\r\n\r\nclass StringJoiner(Interface):\r\n\r\n    def join_two_strings(self, string1: str, string2: str) -> str:\r\n        \"\"\"Join two strings together.\"\"\"\r\n        pass\r\n\r\n\r\nclass ImplementsStringJoiner(object):\r\n    \"\"\"Implicitly implements the interface.\"\"\"\r\n\r\n    def join_two_strings(self, string1: str, string2: str) -> str:\r\n        \"\"\"Join two strings together.\"\"\"\r\n        return string1 + string2\r\n\r\n\r\nclass DoesNotImplementStringJoiner(object):\r\n    \"\"\"Does not have the required method.\"\"\"\r\n\r\n    pass\r\n\r\n\r\ndef some_function(joiner: StringJoiner, string1: str, string2: str) -> str:\r\n    return joiner.join_two_strings(string1, string2)\r\n\r\n\r\n#  this should be fine\r\nsome_function(ImplementsStringJoiner(), 'foo', 'bar')\r\n# this should not\r\nsome_function(DoesNotImplementStringJoiner(), 'foo', 'bar')\r\n```\r\n\r\nWhat I like about these is that they really embody a static version of Python's ducktyping, where it matters what the object does, rather than what type it is, or what it inherits from.\r\n\r\nHere is a very naive first stab, definitely not ready for a PR, (really just a proof of concept, no tests, likely some broken edge cases, and less than pretty code):\r\n\r\nhttps://github.com/thisfred/mypy/compare/golang-style-interfaces?expand=1\r\n\r\nIf you think these are a good idea at all, I would love to hear feedback on what these interfaces could look like (a base class works, but they could also be class decorators,) and where in mypy the best place to implement them would be.", "labels_url": "https://api.github.com/repos/python/mypy/issues/497/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Feature proposal: Golang style interfaces", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/497/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-11-09T00:22:12Z", "user": {"followers_url": "https://api.github.com/users/thisfred/followers", "gists_url": "https://api.github.com/users/thisfred/gists{/gist_id}", "html_url": "https://github.com/thisfred", "following_url": "https://api.github.com/users/thisfred/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/32273?v=3", "url": "https://api.github.com/users/thisfred", "organizations_url": "https://api.github.com/users/thisfred/orgs", "starred_url": "https://api.github.com/users/thisfred/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/thisfred/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/thisfred/subscriptions", "login": "thisfred", "repos_url": "https://api.github.com/users/thisfred/repos", "received_events_url": "https://api.github.com/users/thisfred/received_events", "id": 32273, "site_admin": false}, "locked": false}, {"milestone": null, "number": 496, "html_url": "https://github.com/python/mypy/issues/496", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/496", "id": 48179342, "events_url": "https://api.github.com/repos/python/mypy/issues/496/events", "updated_at": "2014-11-09T00:05:42Z", "body": "Mypy complains about the following code even though it should be valid:\r\n\r\n```\r\nfrom typing import typevar, overload, Function\r\n\r\nT = typevar('T', values=(int, str))\r\ndef f(x: T) -> None:\r\n     m(g, x)  # Error: Argument 1 to \"m\" has incompatible type functionlike; expected Function[[\"str\"] -> \"int\"]\r\n\r\nA = typevar('A')\r\nR = typevar('R')\r\ndef m(f: Function[[A], R], it: A) -> None: pass\r\n\r\n@overload\r\ndef g(x: int) -> int: return x\r\n@overload\r\ndef g(x: str) -> str: return x\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/496/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type checking problem with overloaded function, higher order function and typevar values", "assignee": null, "closed_at": "2014-11-09T00:05:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/496/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-11-08T20:11:39Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 495, "html_url": "https://github.com/python/mypy/issues/495", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/495", "id": 48177797, "events_url": "https://api.github.com/repos/python/mypy/issues/495/events", "updated_at": "2014-11-08T19:48:08Z", "body": "This code should probably be valid:\r\n\r\n```python\r\ndef f(fn: Function[[Union[int, str]], Union[int, str]]) -> None: pass\r\n\r\n@overload\r\ndef g(x: int) -> int: return 0\r\n@overload\r\ndef g(x: str) -> str: return ''\r\n\r\nf(g)   # Currently error\r\n```\r\n\r\nI.e., an overloaded function should be a subtype of a suitable function with union type arguments and return value.", "labels_url": "https://api.github.com/repos/python/mypy/issues/495/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Overloaded function as a subtype of function with union types args/return", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/495/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-11-08T19:48:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 494, "html_url": "https://github.com/python/mypy/issues/494", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/494", "id": 48174815, "events_url": "https://api.github.com/repos/python/mypy/issues/494/events", "updated_at": "2014-12-03T07:23:57Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/494/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support nonlocal", "assignee": null, "closed_at": "2014-12-03T07:23:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/494/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-11-08T18:28:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 493, "html_url": "https://github.com/python/mypy/pull/493", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/493", "id": 47750163, "events_url": "https://api.github.com/repos/python/mypy/issues/493/events", "updated_at": "2014-11-21T06:13:04Z", "body": "I've added double backticks around inline code snippets (mostly just types) to better distinguish code from text.", "labels_url": "https://api.github.com/repos/python/mypy/issues/493/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Changed the style of inline code snippets in tutorial", "assignee": null, "closed_at": "2014-11-21T06:13:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/493/comments", "labels": [], "created_at": "2014-11-04T18:52:22Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/493.patch", "html_url": "https://github.com/python/mypy/pull/493", "diff_url": "https://github.com/python/mypy/pull/493.diff", "url": "https://api.github.com/repos/python/mypy/pulls/493"}, "locked": false}, {"milestone": null, "number": 492, "html_url": "https://github.com/python/mypy/pull/492", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/492", "id": 47697930, "events_url": "https://api.github.com/repos/python/mypy/issues/492/events", "updated_at": "2015-04-29T16:37:52Z", "body": "It would be beneficial to mention ease of installation in the README.", "labels_url": "https://api.github.com/repos/python/mypy/issues/492/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mention pip in Quick start.", "assignee": null, "closed_at": "2014-11-24T02:27:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/492/comments", "labels": [], "created_at": "2014-11-04T10:25:56Z", "user": {"followers_url": "https://api.github.com/users/lrem/followers", "gists_url": "https://api.github.com/users/lrem/gists{/gist_id}", "html_url": "https://github.com/lrem", "following_url": "https://api.github.com/users/lrem/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/276708?v=3", "url": "https://api.github.com/users/lrem", "organizations_url": "https://api.github.com/users/lrem/orgs", "starred_url": "https://api.github.com/users/lrem/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lrem/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lrem/subscriptions", "login": "lrem", "repos_url": "https://api.github.com/users/lrem/repos", "received_events_url": "https://api.github.com/users/lrem/received_events", "id": 276708, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/492.patch", "html_url": "https://github.com/python/mypy/pull/492", "diff_url": "https://github.com/python/mypy/pull/492.diff", "url": "https://api.github.com/repos/python/mypy/pulls/492"}, "locked": false}, {"milestone": null, "number": 491, "html_url": "https://github.com/python/mypy/issues/491", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/491", "id": 47696503, "events_url": "https://api.github.com/repos/python/mypy/issues/491/events", "updated_at": "2014-11-05T07:21:50Z", "body": "Currently mypy does not support full Python 3 syntax. When importing a module with unsupported syntax, it stops running. A better strategy could be to bail for the unparsable module, but continue for the importing one, marking everything imported as untyped.", "labels_url": "https://api.github.com/repos/python/mypy/issues/491/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Ignore modules with parse errors", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/491/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-11-04T10:09:03Z", "user": {"followers_url": "https://api.github.com/users/lrem/followers", "gists_url": "https://api.github.com/users/lrem/gists{/gist_id}", "html_url": "https://github.com/lrem", "following_url": "https://api.github.com/users/lrem/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/276708?v=3", "url": "https://api.github.com/users/lrem", "organizations_url": "https://api.github.com/users/lrem/orgs", "starred_url": "https://api.github.com/users/lrem/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lrem/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lrem/subscriptions", "login": "lrem", "repos_url": "https://api.github.com/users/lrem/repos", "received_events_url": "https://api.github.com/users/lrem/received_events", "id": 276708, "site_admin": false}, "locked": false}, {"milestone": null, "number": 490, "html_url": "https://github.com/python/mypy/issues/490", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/490", "id": 47696106, "events_url": "https://api.github.com/repos/python/mypy/issues/490/events", "updated_at": "2014-11-04T10:05:46Z", "body": "`/usr/local/lib/python3.4/site-packages/robobrowser/__init__.py, line 3: Parse error before .`\r\nOffending line:\r\n`from .browser import RoboBrowser`", "labels_url": "https://api.github.com/repos/python/mypy/issues/490/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parse error on relative import", "assignee": null, "closed_at": "2014-11-04T10:05:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/490/comments", "labels": [], "created_at": "2014-11-04T10:04:36Z", "user": {"followers_url": "https://api.github.com/users/lrem/followers", "gists_url": "https://api.github.com/users/lrem/gists{/gist_id}", "html_url": "https://github.com/lrem", "following_url": "https://api.github.com/users/lrem/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/276708?v=3", "url": "https://api.github.com/users/lrem", "organizations_url": "https://api.github.com/users/lrem/orgs", "starred_url": "https://api.github.com/users/lrem/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lrem/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lrem/subscriptions", "login": "lrem", "repos_url": "https://api.github.com/users/lrem/repos", "received_events_url": "https://api.github.com/users/lrem/received_events", "id": 276708, "site_admin": false}, "locked": false}, {"milestone": null, "number": 489, "html_url": "https://github.com/python/mypy/issues/489", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/489", "id": 47553681, "events_url": "https://api.github.com/repos/python/mypy/issues/489/events", "updated_at": "2014-11-30T22:20:59Z", "body": "Now that we have sphinx documentation, we should probably host it on http://readthedocs.org to simplify maintenance and to make the documentation more discoverable.", "labels_url": "https://api.github.com/repos/python/mypy/issues/489/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Host documentation on readthedocs.org", "assignee": null, "closed_at": "2014-11-30T22:20:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/489/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-11-02T23:46:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 488, "html_url": "https://github.com/python/mypy/issues/488", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/488", "id": 47553617, "events_url": "https://api.github.com/repos/python/mypy/issues/488/events", "updated_at": "2014-11-02T23:45:03Z", "body": "Split sphinx documentation into multiple pages. Explain more features:\r\n\r\n* `ducktype` class decorator\r\n* `typevar` with `values`\r\n* library stubs", "labels_url": "https://api.github.com/repos/python/mypy/issues/488/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Restructure documentation and explain more features", "assignee": null, "closed_at": "2014-11-02T23:45:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/488/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2014-11-02T23:44:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 487, "html_url": "https://github.com/python/mypy/issues/487", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/487", "id": 47553366, "events_url": "https://api.github.com/repos/python/mypy/issues/487/events", "updated_at": "2016-01-13T19:05:02Z", "body": "The mypy parser still doesn't support all of Python 3 syntax. Run the parser against a corpus of Python code and file tasks for any remaining parser issues. Note that there are open 2 pull requests that implement some new syntax (#367 and #483).", "labels_url": "https://api.github.com/repos/python/mypy/issues/487/labels{/name}", "comments": 24, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Run mypy parser against a lot of Python code and file bugs for errors", "assignee": null, "closed_at": "2016-01-13T19:05:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/487/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-11-02T23:34:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 486, "html_url": "https://github.com/python/mypy/issues/486", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/486", "id": 47548288, "events_url": "https://api.github.com/repos/python/mypy/issues/486/events", "updated_at": "2015-05-17T17:51:17Z", "body": "Mypy refuses to cooperate with any code importing things not in standard library. I see that it doesn't search in sys.path. Any particular reason for that? A single line change like https://github.com/lrem/mypy/commit/6e363a06c866ec3859275308f4e05df2ca6607a3 lets mypy pick up all modules from current environment (not that it parses all of them, looking into that separately from this issue). ", "labels_url": "https://api.github.com/repos/python/mypy/issues/486/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Include Python's sys.path into build.default_lib_path?", "assignee": null, "closed_at": "2015-05-17T17:51:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/486/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-11-02T20:49:47Z", "user": {"followers_url": "https://api.github.com/users/lrem/followers", "gists_url": "https://api.github.com/users/lrem/gists{/gist_id}", "html_url": "https://github.com/lrem", "following_url": "https://api.github.com/users/lrem/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/276708?v=3", "url": "https://api.github.com/users/lrem", "organizations_url": "https://api.github.com/users/lrem/orgs", "starred_url": "https://api.github.com/users/lrem/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lrem/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lrem/subscriptions", "login": "lrem", "repos_url": "https://api.github.com/users/lrem/repos", "received_events_url": "https://api.github.com/users/lrem/received_events", "id": 276708, "site_admin": false}, "locked": false}, {"milestone": null, "number": 485, "html_url": "https://github.com/python/mypy/pull/485", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/485", "id": 47210642, "events_url": "https://api.github.com/repos/python/mypy/issues/485/events", "updated_at": "2014-10-30T05:19:34Z", "body": "I had to do a little fix to solve #484.\r\nChanging name to *mypy-lang* to be consistent with domain name\r\nand because *mypy* is already taken...", "labels_url": "https://api.github.com/repos/python/mypy/issues/485/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Small fixes in setup.py to be able to submit to PyPI.", "assignee": null, "closed_at": "2014-10-30T05:19:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/485/comments", "labels": [], "created_at": "2014-10-29T22:14:05Z", "user": {"followers_url": "https://api.github.com/users/lrem/followers", "gists_url": "https://api.github.com/users/lrem/gists{/gist_id}", "html_url": "https://github.com/lrem", "following_url": "https://api.github.com/users/lrem/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/276708?v=3", "url": "https://api.github.com/users/lrem", "organizations_url": "https://api.github.com/users/lrem/orgs", "starred_url": "https://api.github.com/users/lrem/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lrem/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lrem/subscriptions", "login": "lrem", "repos_url": "https://api.github.com/users/lrem/repos", "received_events_url": "https://api.github.com/users/lrem/received_events", "id": 276708, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/485.patch", "html_url": "https://github.com/python/mypy/pull/485", "diff_url": "https://github.com/python/mypy/pull/485.diff", "url": "https://api.github.com/repos/python/mypy/pulls/485"}, "locked": false}, {"milestone": null, "number": 484, "html_url": "https://github.com/python/mypy/issues/484", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/484", "id": 47005957, "events_url": "https://api.github.com/repos/python/mypy/issues/484/events", "updated_at": "2014-10-30T09:16:23Z", "body": "I couldn't find this project on pypi. The obvious upside of being there is the ability to install by simply invoking pip. Is there a reason not to?", "labels_url": "https://api.github.com/repos/python/mypy/issues/484/labels{/name}", "comments": 13, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Submit to Python Package Index?", "assignee": null, "closed_at": "2014-10-30T09:16:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/484/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2014-10-28T09:43:29Z", "user": {"followers_url": "https://api.github.com/users/lrem/followers", "gists_url": "https://api.github.com/users/lrem/gists{/gist_id}", "html_url": "https://github.com/lrem", "following_url": "https://api.github.com/users/lrem/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/276708?v=3", "url": "https://api.github.com/users/lrem", "organizations_url": "https://api.github.com/users/lrem/orgs", "starred_url": "https://api.github.com/users/lrem/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lrem/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lrem/subscriptions", "login": "lrem", "repos_url": "https://api.github.com/users/lrem/repos", "received_events_url": "https://api.github.com/users/lrem/received_events", "id": 276708, "site_admin": false}, "locked": false}, {"milestone": null, "number": 483, "html_url": "https://github.com/python/mypy/pull/483", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/483", "id": 46844455, "events_url": "https://api.github.com/repos/python/mypy/issues/483/events", "updated_at": "2014-11-21T06:36:08Z", "body": "This PR brings type checking of starred expressions in assignments (`*rest, last = 1,2,3`) and as index of for-statements (`[head for head, *tail in L]`).\r\n\r\nIn 9986cef, I have replaced the index of for-statements and generator expressions from being a list of `Node`s to a single `Node` (which will be a tuple, of course, when the list would have had more than one element before the change). Consequently, several testcases have changed in that commit, because the AST/parse tree changed a bit.", "labels_url": "https://api.github.com/repos/python/mypy/issues/483/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Checking of starred expressions", "assignee": null, "closed_at": "2014-11-21T06:32:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/483/comments", "labels": [], "created_at": "2014-10-26T14:37:49Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/483.patch", "html_url": "https://github.com/python/mypy/pull/483", "diff_url": "https://github.com/python/mypy/pull/483.diff", "url": "https://api.github.com/repos/python/mypy/pulls/483"}, "locked": false}, {"milestone": null, "number": 482, "html_url": "https://github.com/python/mypy/issues/482", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/482", "id": 46825276, "events_url": "https://api.github.com/repos/python/mypy/issues/482/events", "updated_at": "2014-10-25T22:18:58Z", "body": "Switching to setuptools could have benefits, but it's not obvious how to do it because mypy has .py files as data.\r\n\r\nThis pull request contains more discussion:\r\n\r\nhttps://github.com/JukkaL/mypy/pull/346", "labels_url": "https://api.github.com/repos/python/mypy/issues/482/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Consider switching to setuptools", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/482/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-10-25T22:18:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 481, "html_url": "https://github.com/python/mypy/issues/481", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/481", "id": 46822879, "events_url": "https://api.github.com/repos/python/mypy/issues/481/events", "updated_at": "2016-04-05T21:46:48Z", "body": "It's sometimes painful to work around issues related to circular module dependencies. Some examples:\r\n\r\n * Mypy complains about not being able to infer a type because of a circular dependency.\r\n * Mypy type checks okay but at runtime something is undefined because of a circular dependency.\r\n * A type annotation introduces a circular module dependency where there was none before.\r\n\r\nNot sure how these should be resolved. Some ideas:\r\n\r\n * Add a flag that dumps information about any circular module dependencies in the target program. This should help with debugging.\r\n * Warn about 'from imports' that are part of a circular module dependency, as these could fail at runtime.", "labels_url": "https://api.github.com/repos/python/mypy/issues/481/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make it easier to work with circular module dependencies", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/481/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-10-25T20:39:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 480, "html_url": "https://github.com/python/mypy/issues/480", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/480", "id": 46817731, "events_url": "https://api.github.com/repos/python/mypy/issues/480/events", "updated_at": "2016-02-08T14:15:11Z", "body": "The functions in `base64` stubs (https://github.com/JukkaL/mypy/blob/master/stubs/3.2/base64.py) only allow `bytes` arguments, even though at least many of the functions also accept `bytearray` arguments. Update the stubs by using `Union[bytes, bytearray]` wherever it makes sense.\r\n\r\nExample:\r\n\r\n```python\r\n>>> import base64\r\n>>> base64.b64encode(bytearray(b'foo'))\r\nb'Zm9v'\r\n>>> \r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/480/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow bytearray in base64 stubs", "assignee": null, "closed_at": "2016-02-08T14:15:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/480/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-10-25T17:26:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 479, "html_url": "https://github.com/python/mypy/pull/479", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/479", "id": 45907681, "events_url": "https://api.github.com/repos/python/mypy/issues/479/events", "updated_at": "2014-10-20T06:31:35Z", "body": "This PR adds support for nested tuples in the index of for-stamtenents and generator expressions\r\n\r\n```python\r\ncharacters = [('Havelock', 'Vetinari'), ('Samuel', 'Vines'), ('Carrot', 'Ironfoundersson')]\r\nfirstname = 0\r\n\r\nfor nr, (firstname, lastname) in enumerate(characters): # 4\r\n    print(firstname)\r\n    print(lastname + nr) # 6\r\n\r\nnames = [nr + firstname for nr, (firstname, lastname) in enumerate(characters)] # 8\r\n```\r\nmypy output:\r\n```\r\nline 4: Incompatible types in assignment (expression has type \"str\", variable has type \"int\")\r\nline 6: Unsupported operand types for + (\"str\" and \"int\")\r\nline 8: Unsupported operand types for + (\"int\" and \"str\")\r\n```\r\n\r\nFixes #310.", "labels_url": "https://api.github.com/repos/python/mypy/issues/479/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Nested tuples in for-statement's and generator expression's index", "assignee": null, "closed_at": "2014-10-20T06:28:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/479/comments", "labels": [], "created_at": "2014-10-15T19:26:00Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/479.patch", "html_url": "https://github.com/python/mypy/pull/479", "diff_url": "https://github.com/python/mypy/pull/479.diff", "url": "https://api.github.com/repos/python/mypy/pulls/479"}, "locked": false}, {"milestone": null, "number": 478, "html_url": "https://github.com/python/mypy/pull/478", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/478", "id": 45674084, "events_url": "https://api.github.com/repos/python/mypy/issues/478/events", "updated_at": "2014-10-25T22:14:17Z", "body": "I fixed all the rendering errors/highlighting errors. BTW, if you want to see it like it'll look in the end, install [sphinx_rtd_theme](https://github.com/snide/sphinx_rtd_theme).", "labels_url": "https://api.github.com/repos/python/mypy/issues/478/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Sphinx docs (take 2)", "assignee": null, "closed_at": "2014-10-25T22:14:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/478/comments", "labels": [], "created_at": "2014-10-13T18:54:04Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/478.patch", "html_url": "https://github.com/python/mypy/pull/478", "diff_url": "https://github.com/python/mypy/pull/478.diff", "url": "https://api.github.com/repos/python/mypy/pulls/478"}, "locked": false}, {"milestone": null, "number": 477, "html_url": "https://github.com/python/mypy/issues/477", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/477", "id": 45596640, "events_url": "https://api.github.com/repos/python/mypy/issues/477/events", "updated_at": "2015-02-09T00:07:53Z", "body": "In preparation for strict checking of `None` values, `Optional[T]` should be an alias for `Union[T, None]` (for arbitrary `T`). \r\n\r\nThere are at least two valid ways to implement this:\r\n\r\n1. Special case `Optional[T]` in the semantic analyzer.\r\n2. Support generic type aliases of form `Optional = Union[T, None]`, and use this to define `Optional`.\r\n\r\nIn the latter case, the fact that `Optional` takes a type argument would be inferred from the right hand side -- I assume that `T` is a free (unbound) type variable, so it is inferred as an argument of the left hand side. The second case is also complicated by the fact that the result of `Union[...]` should support indexing.\r\n\r\nThe first approach is okay as well, even though eventually we might want generic type aliases.\r\n\r\nIn either case, the `typing` module must be modified as well so that `Optional` can be used at runtime.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/477/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement Optional[T] as an alias for Union[T, None]", "assignee": null, "closed_at": "2015-02-09T00:07:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/477/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-10-12T23:09:25Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 476, "html_url": "https://github.com/python/mypy/issues/476", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/476", "id": 45588519, "events_url": "https://api.github.com/repos/python/mypy/issues/476/events", "updated_at": "2015-10-10T20:51:55Z", "body": "Code like this currently fails but should be okay:\r\n\r\n```python\r\ndef f(x: Union[int, str]) -> None:\r\n    if not isinstance(x, int):\r\n        return\r\n    x + 2   # x must be int here so this is okay, but mypy complains\r\n```\r\n\r\nNote that this works currently (without the `not` operator):\r\n\r\n```python\r\ndef f(x: Union[int, str]) -> None:\r\n    if isinstance(x, str):\r\n        return\r\n    x + 2  # this is considered valid, as it should be\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/476/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference with 'not isinstance' checks", "assignee": null, "closed_at": "2015-10-10T20:51:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/476/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-10-12T18:15:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 475, "html_url": "https://github.com/python/mypy/issues/475", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/475", "id": 45588334, "events_url": "https://api.github.com/repos/python/mypy/issues/475/events", "updated_at": "2016-04-08T18:59:52Z", "body": "This code should be accepted by mypy:\r\n\r\n```python\r\ndef f(x: Union[int, str]) -> None:\r\n    assert isinstance(x, int)\r\n    x + 1  # type of x is int, so this should be okay\r\n```\r\n\r\nThe type type checker should know about type assertions.", "labels_url": "https://api.github.com/repos/python/mypy/issues/475/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "assert and isinstance type inference", "assignee": null, "closed_at": "2016-04-08T18:59:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/475/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-10-12T18:10:02Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 474, "html_url": "https://github.com/python/mypy/issues/474", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/474", "id": 45560266, "events_url": "https://api.github.com/repos/python/mypy/issues/474/events", "updated_at": "2014-10-13T05:46:10Z", "body": "Consider this snippet:\r\n```python\r\nfrom typing import *\r\n\r\nclass A:\r\n    class B:\r\n        pass\r\n\r\n    def f() -> None:\r\n        x = []  # type: List[B]\r\n```\r\nmypy outputs:\r\n```\r\nIn function \"f\":\r\nline 8: Name 'B' is not defined\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/474/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Inner class not recognised", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/474/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-10-11T19:41:05Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 473, "html_url": "https://github.com/python/mypy/issues/473", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/473", "id": 45560164, "events_url": "https://api.github.com/repos/python/mypy/issues/473/events", "updated_at": "2014-10-13T00:21:24Z", "body": "After a guard with `isinstance`, mypy should consider the variable to be of that type.\r\n\r\nFor example:\r\n```python\r\ndef f(x: A) -> None:\r\n    if isinstance(x, B) and x.value:\r\n        pass\r\n\r\nclass A:\r\n    pass\r\nclass B(A):\r\n    value = 0\r\n```\r\nHere, mypy reports that `x` doesn't have a field `value`. This can of course be solved with a cast, but that is annoying to type and clutters the code. At least in simple case, mypy could infer that `x` is of type `B` in the rhs of the and-statement and in the block following the if-statement.", "labels_url": "https://api.github.com/repos/python/mypy/issues/473/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type of variable after isinstance check with 'and'", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/473/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-10-11T19:36:21Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 472, "html_url": "https://github.com/python/mypy/pull/472", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/472", "id": 45409100, "events_url": "https://api.github.com/repos/python/mypy/issues/472/events", "updated_at": "2014-10-20T06:31:55Z", "body": "This PR adds type checking of [printf-style string formatting](https://docs.python.org/3.4/library/stdtypes.html#printf-style-string-formatting) and fixes #469.\r\n\r\n# Simple examples\r\n\r\nFor each conversion specifier present in the formatting string, the replacement tuple must contain a replacement of the right type.\r\n\r\n```python\r\n'%d' % 1\r\n'%d' % 's'  # E: Incompatible types in string interpolation (expression has type \"str\", placeholder has type \"int\")\r\n'%d %d' % 1  # E: Not enough arguments for format string\r\n'%d %d' % (1, 2)\r\n'%d %d' % (1, 2, 3)  # E: Not all arguments converted during string formatting\r\nt = 1, 's'\r\n'%d %s' % t\r\n'%s %d' % t  # E: Incompatible types in string interpolation (expression has type \"str\", placeholder has type \"int\")\r\n'%d' % t  # E: Not all arguments converted during string formatting\r\n```\r\n\r\n# Variable minimum field width and precision\r\n\r\nA conversion specifier may contain a minimum field width (`%3d`) and a precision (`%.3f`). Both may be a `*`. When a `*` is specified, the width or precision is taken from the replacement tuple and must be and integer. Both the presence and type of these are checked:\r\n\r\n```python\r\n'%.*f' % 3.14 # E: Not enough arguments for format string\r\n'%.*f' % (4, 3.14)\r\n'%.*f' % (1.1, 3.14) # E: * wants int\r\n'%*.*f' % (4, 2, 3.14)\r\n'%*%' % 4 # OK\r\n```\r\n\r\n(The behaviour of the last example depends on the version of Python. On my Mac, Python 3.4 just prints a `%`, while Python 2.7 prints '   %'. However, both expect an `int` in the replacement tuple, so type checking is identical.)\r\n\r\n# Key mapping\r\n\r\nA conversion specifier may contain a key mapping, like the `foo` in `%(foo)s`. Specifiers with key mappings may not be mixed with specifiers without mappings. In addition, when key mappings are used, the minimum field with and precision components must not be a star. These errors are checked for:\r\n\r\n```python\r\n'%(a)d %d' % 1  # E: String interpolation mixes specifier with and without mapping keys\r\n'%(b)*d' % 1  # E: String interpolation contains both stars and mapping keys\r\n'%(b).*d' % 1  # E: String interpolation contains both stars and mapping keys\r\n```\r\n\r\nWhen key mappings are used, the replacement must be a dictionary. When a dictionary expression is supplied and all keys are string literals, then also the presence and type of the mapping is checked:\r\n\r\n```python\r\n'%(a)d' % {'a': 1, 'b': 2, 'c': 3}\r\n'%(q)d' % {'a': 1, 'b': 2, 'c': 3}  # E: Key 'q' not found in mapping\r\n'%(a)d %(b)s' % {'a': 's', 'b': 1}  # E: Incompatible types in string interpolation (expression has type \"str\", placeholder has type \"int\")\r\n```\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/472/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type checking of string interpolation using %", "assignee": null, "closed_at": "2014-10-20T05:30:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/472/comments", "labels": [], "created_at": "2014-10-09T19:49:27Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/472.patch", "html_url": "https://github.com/python/mypy/pull/472", "diff_url": "https://github.com/python/mypy/pull/472.diff", "url": "https://api.github.com/repos/python/mypy/pulls/472"}, "locked": false}, {"milestone": null, "number": 471, "html_url": "https://github.com/python/mypy/issues/471", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/471", "id": 45258511, "events_url": "https://api.github.com/repos/python/mypy/issues/471/events", "updated_at": "2014-11-21T06:37:15Z", "body": "mypy should support starred expressions, like:\r\n```python\r\na, *b = [1,2,3,4]\r\n```\r\ncurrently, mypy reports a parse error: `Parse error before *`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/471/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Starred expressions", "assignee": null, "closed_at": "2014-11-21T06:37:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/471/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-10-08T15:31:00Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 470, "html_url": "https://github.com/python/mypy/issues/470", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/470", "id": 45204415, "events_url": "https://api.github.com/repos/python/mypy/issues/470/events", "updated_at": "2014-10-08T05:17:51Z", "body": "We should type check that the arguments to `str.format` agree with the format string (assuming it's a literal string):\r\n\r\n```python\r\nprint('{} {}'.format(1))   # Too few arguments to format\r\n```\r\n\r\nThis has similar rationale as #469.", "labels_url": "https://api.github.com/repos/python/mypy/issues/470/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check string format method", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/470/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-10-08T05:17:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 469, "html_url": "https://github.com/python/mypy/issues/469", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/469", "id": 45204304, "events_url": "https://api.github.com/repos/python/mypy/issues/469/events", "updated_at": "2014-10-20T05:30:58Z", "body": "We should flag cases like these as errors:\r\n\r\n```\r\nprint('%d %d' % (1, 2, 3))   # Too many items in the right operand\r\nprint('%d' % 'foo')   # A number is required not str\r\n```\r\n\r\nThis is actually pretty important, since `%` is often used in exception handlers to create exception error messages, and exception handlers are often difficult to test.", "labels_url": "https://api.github.com/repos/python/mypy/issues/469/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check string % operator", "assignee": null, "closed_at": "2014-10-20T05:30:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/469/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-10-08T05:15:23Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 468, "html_url": "https://github.com/python/mypy/pull/468", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/468", "id": 44729652, "events_url": "https://api.github.com/repos/python/mypy/issues/468/events", "updated_at": "2014-10-13T05:21:41Z", "body": "For this snippet:\r\n```python\r\n() = 1\r\n```\r\nmypy used to report `Incompatible types in assignment`, which is not very accurate.\r\n\r\nWith this PR, the message becomes `Can't assign to ()`, which is in line with Pythons error message.", "labels_url": "https://api.github.com/repos/python/mypy/issues/468/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added semanal error message for assignment to empty tuple", "assignee": null, "closed_at": "2014-10-13T00:23:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/468/comments", "labels": [], "created_at": "2014-10-02T19:36:28Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/468.patch", "html_url": "https://github.com/python/mypy/pull/468", "diff_url": "https://github.com/python/mypy/pull/468.diff", "url": "https://api.github.com/repos/python/mypy/pulls/468"}, "locked": false}, {"milestone": null, "number": 467, "html_url": "https://github.com/python/mypy/issues/467", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/467", "id": 44235049, "events_url": "https://api.github.com/repos/python/mypy/issues/467/events", "updated_at": "2014-10-12T23:12:43Z", "body": "For this snippet,\r\n\r\n```python\r\nfor i in [None]:\r\n    pass\r\n```\r\n\r\nmypy reports `line 2: Need type annotation for variable`. However type annotations are not supported for the index variables of for-statements anymore (see #464).\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/467/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Wrong message when for-statement's index variable cannot be inferred", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/467/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-09-28T16:43:33Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 466, "html_url": "https://github.com/python/mypy/pull/466", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/466", "id": 44184325, "events_url": "https://api.github.com/repos/python/mypy/issues/466/events", "updated_at": "2014-10-12T19:13:17Z", "body": "This PR fixes #248 and #464.\r\n\r\nI have tried to stay close to the error messages given my Python.\r\n\r\nI've added a number of tests, but please let me know if there are corner cases that I've missed.\r\n\r\nI extended the syntax for type annotations to allow nested tuples, like `type: int, (int, str)`. A tuple with only a single value can be made with a trailing comma, like in the Python syntax.\r\n\r\nAs an example of what can be handled now:\r\n\r\n```python\r\nt = 42, ('Douglas', 'Adams')  # type: int, (str, str)\r\n\r\na, (b, (c, d)) = 3.14, t\r\n\r\na, b = t[1]  # 5\r\nc, d = 4 # 6\r\nx, y, z = t # 7\r\n```\r\nmypy output:\r\n```\r\nexample.py, line 5: Incompatible types in assignment (expression has type \"str\", variable has type \"float\")\r\nexample.py, line 5: Incompatible types in assignment (expression has type \"str\", variable has type \"int\")\r\nexample.py, line 6: 'builtins.int' object is not iterable\r\nexample.py, line 7: Need more than 2 values to unpack (3 expected)\r\n```\r\n\r\nSupport for nested tuples/list in for-statement is fairly easy now and I have that working too. However, I thought it best to have this PR (only assignments to nested tuples) reviewed first, since it's already a substantial change.", "labels_url": "https://api.github.com/repos/python/mypy/issues/466/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Assignment to and from nested tuples (or lists)", "assignee": null, "closed_at": "2014-10-12T19:12:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/466/comments", "labels": [], "created_at": "2014-09-27T18:14:27Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/466.patch", "html_url": "https://github.com/python/mypy/pull/466", "diff_url": "https://github.com/python/mypy/pull/466.diff", "url": "https://api.github.com/repos/python/mypy/pulls/466"}, "locked": false}, {"milestone": null, "number": 465, "html_url": "https://github.com/python/mypy/issues/465", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/465", "id": 44094215, "events_url": "https://api.github.com/repos/python/mypy/issues/465/events", "updated_at": "2015-09-01T02:49:04Z", "body": "Consider the following code:\r\n\r\n```python\r\nfrom typing import Tuple\r\n\r\nclass A: pass\r\nclass B: pass\r\nclass C: pass\r\n\r\ndef f() -> Tuple[A, B, C]:\r\n    pass\r\n\r\na = A()\r\na, _, _ = f()\r\n```\r\n\r\nmypy reports: `line 11: Incompatible types in assignment (expression has type \"C\", variable has type \"B\")`\r\n\r\nSeems like mypy treats `_` as just a variable. That prevents it from being used as a dummy in assignments like the one above.\r\n\r\nA solution might be to always give `_` the Any type.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/465/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type error due to repeated use of underscore as dummy assignment target", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/465/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-09-26T18:48:51Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 464, "html_url": "https://github.com/python/mypy/issues/464", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/464", "id": 43710528, "events_url": "https://api.github.com/repos/python/mypy/issues/464/events", "updated_at": "2014-10-13T00:47:41Z", "body": "There's no way to annotate for statement index variables any more, so `is_annotated()` of `ForStmt` is obsolete and should be removed. Also refactor `mypy/parse.py` to not return types in `parse_for_index_variables`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/464/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove is_annotated() from ForStmt", "assignee": null, "closed_at": "2014-10-13T00:47:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/464/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2014-09-24T03:36:59Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 463, "html_url": "https://github.com/python/mypy/pull/463", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/463", "id": 43431465, "events_url": "https://api.github.com/repos/python/mypy/issues/463/events", "updated_at": "2014-10-24T06:22:16Z", "body": "Fix #337 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/463/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement raise from type checking", "assignee": null, "closed_at": "2014-10-08T05:11:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/463/comments", "labels": [], "created_at": "2014-09-22T07:48:15Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/463.patch", "html_url": "https://github.com/python/mypy/pull/463", "diff_url": "https://github.com/python/mypy/pull/463.diff", "url": "https://api.github.com/repos/python/mypy/pulls/463"}, "locked": false}, {"milestone": null, "number": 462, "html_url": "https://github.com/python/mypy/issues/462", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/462", "id": 43349499, "events_url": "https://api.github.com/repos/python/mypy/issues/462/events", "updated_at": "2014-10-25T18:21:29Z", "body": "Consider this code:\r\n\r\n```python\r\nfrom typing import typevar, List\r\nT = typevar('T')\r\ndef f(x: List[T]) -> T: return x[0]\r\ndef g(y: object) -> None: pass\r\na = [1]\r\ng(f(a))  # Argument 1 to \"f\" has incompatible type List[int]; expected List[object]\r\n```\r\n\r\nThe code should not be rejected. We should not infer `T` from the context of the `f` invocation.\r\n\r\nThis is a generalization of #360.", "labels_url": "https://api.github.com/repos/python/mypy/issues/462/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference problem with generic function with type variable type as return type", "assignee": null, "closed_at": "2014-10-25T18:21:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/462/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-09-22T00:01:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 461, "html_url": "https://github.com/python/mypy/issues/461", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/461", "id": 42889693, "events_url": "https://api.github.com/repos/python/mypy/issues/461/events", "updated_at": "2014-12-08T00:20:29Z", "body": "dictcomptest.py:\r\n\r\n    a = [('a', 1), ('b', 2)]\r\n    d = {k: v for k, v in a}\r\n\r\nResult:\r\n\r\n    $ mypy /tmp/dictcomptest.py \r\n    /tmp/doctcomptest.py, line 2: Name 'k' is not defined\r\n\r\nWork-around (familiar from older Python 2 versions):\r\n\r\n    a = [('a', 1), ('b', 2)]\r\n    d = dict((k, v) for k, v in a)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/461/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dictionary comprehensions not supported", "assignee": null, "closed_at": "2014-12-08T00:20:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/461/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-09-16T14:41:26Z", "user": {"followers_url": "https://api.github.com/users/akaihola/followers", "gists_url": "https://api.github.com/users/akaihola/gists{/gist_id}", "html_url": "https://github.com/akaihola", "following_url": "https://api.github.com/users/akaihola/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/13725?v=3", "url": "https://api.github.com/users/akaihola", "organizations_url": "https://api.github.com/users/akaihola/orgs", "starred_url": "https://api.github.com/users/akaihola/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/akaihola/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/akaihola/subscriptions", "login": "akaihola", "repos_url": "https://api.github.com/users/akaihola/repos", "received_events_url": "https://api.github.com/users/akaihola/received_events", "id": 13725, "site_admin": false}, "locked": false}, {"milestone": null, "number": 460, "html_url": "https://github.com/python/mypy/issues/460", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/460", "id": 42868995, "events_url": "https://api.github.com/repos/python/mypy/issues/460/events", "updated_at": "2015-05-12T04:48:38Z", "body": "namedtupletest.py:\r\n\r\n    from collections import namedtuple\r\n\r\nTest:\r\n\r\n    $ mypy namedtupletest.py\r\n    /tmp/namedtupletest.py, line 1: Module has no attribute 'namedtuple'", "labels_url": "https://api.github.com/repos/python/mypy/issues/460/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add support for collections.namedtuple", "assignee": null, "closed_at": "2014-12-18T16:19:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/460/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-09-16T11:00:29Z", "user": {"followers_url": "https://api.github.com/users/akaihola/followers", "gists_url": "https://api.github.com/users/akaihola/gists{/gist_id}", "html_url": "https://github.com/akaihola", "following_url": "https://api.github.com/users/akaihola/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/13725?v=3", "url": "https://api.github.com/users/akaihola", "organizations_url": "https://api.github.com/users/akaihola/orgs", "starred_url": "https://api.github.com/users/akaihola/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/akaihola/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/akaihola/subscriptions", "login": "akaihola", "repos_url": "https://api.github.com/users/akaihola/repos", "received_events_url": "https://api.github.com/users/akaihola/received_events", "id": 13725, "site_admin": false}, "locked": false}, {"milestone": null, "number": 459, "html_url": "https://github.com/python/mypy/pull/459", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/459", "id": 42835992, "events_url": "https://api.github.com/repos/python/mypy/issues/459/events", "updated_at": "2014-10-13T18:52:22Z", "body": "Please tell me if I missed anything. I ended up splitting it into multiple files because RTD's side panel wouldn't put the links right otherwise.\r\n\r\n`cd` into the docs folder and run `make html` to build it. If the index page looks to messy, I can change it to only put one level of links.", "labels_url": "https://api.github.com/repos/python/mypy/issues/459/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Sphinx docs", "assignee": null, "closed_at": "2014-10-13T18:52:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/459/comments", "labels": [], "created_at": "2014-09-16T01:21:58Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/459.patch", "html_url": "https://github.com/python/mypy/pull/459", "diff_url": "https://github.com/python/mypy/pull/459.diff", "url": "https://api.github.com/repos/python/mypy/pulls/459"}, "locked": false}, {"milestone": null, "number": 458, "html_url": "https://github.com/python/mypy/pull/458", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/458", "id": 42808165, "events_url": "https://api.github.com/repos/python/mypy/issues/458/events", "updated_at": "2014-09-22T03:41:57Z", "body": "Currently, this:\r\n\r\n```python\r\nclass X(): pass\r\n```\r\n\r\nis a syntax error. This PR fixes that by checking for a closing parenthesis first.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/458/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix parsing empty base class lists", "assignee": null, "closed_at": "2014-09-22T03:41:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/458/comments", "labels": [], "created_at": "2014-09-15T19:16:21Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/458.patch", "html_url": "https://github.com/python/mypy/pull/458", "diff_url": "https://github.com/python/mypy/pull/458.diff", "url": "https://api.github.com/repos/python/mypy/pulls/458"}, "locked": false}, {"milestone": null, "number": 457, "html_url": "https://github.com/python/mypy/issues/457", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/457", "id": 42800798, "events_url": "https://api.github.com/repos/python/mypy/issues/457/events", "updated_at": "2014-09-15T19:14:21Z", "body": "There are some types that need to reference themselves. For instance:\r\n\r\n```python\r\nclass X():\r\n    def some_func() -> X:\r\n        ...\r\n```\r\n\r\nHowever, this is NOT valid Python 3 (X has not yet been fully declared at this point). Mypy should have a way for types to self-reference themselves (maybe a ThisType type?).\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/457/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Self-referencing types", "assignee": null, "closed_at": "2014-09-15T19:14:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/457/comments", "labels": [], "created_at": "2014-09-15T18:02:33Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "locked": false}, {"milestone": null, "number": 456, "html_url": "https://github.com/python/mypy/issues/456", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/456", "id": 42734960, "events_url": "https://api.github.com/repos/python/mypy/issues/456/events", "updated_at": "2014-09-21T23:24:37Z", "body": "The `mypy.types.BasicTypes` collection of types is pretty awkward. It's currently needed for some type operations, and passing it around is painful. Instead, we should be able to modify `TupleType` and `Callable` to contain a reference to the corresponding instance base type. Also, we can get `object` via the MRO from an `Instance` type.\r\n\r\nThis should be a net win and simplify code a bit, especially as `is_subtype` will probably need to use `BasicTypes` otherwise.", "labels_url": "https://api.github.com/repos/python/mypy/issues/456/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Get rid of mypy.types.BasicTypes", "assignee": null, "closed_at": "2014-09-21T23:24:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/456/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2014-09-15T00:39:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 455, "html_url": "https://github.com/python/mypy/pull/455", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/455", "id": 42716889, "events_url": "https://api.github.com/repos/python/mypy/issues/455/events", "updated_at": "2014-09-15T19:49:38Z", "body": "I renamed the local type vars in the stubs to start with an underscore.\r\n\r\nResolves #452.", "labels_url": "https://api.github.com/repos/python/mypy/issues/455/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Made local type vars in stubs private", "assignee": null, "closed_at": "2014-09-15T00:46:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/455/comments", "labels": [], "created_at": "2014-09-14T09:35:31Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/455.patch", "html_url": "https://github.com/python/mypy/pull/455", "diff_url": "https://github.com/python/mypy/pull/455.diff", "url": "https://api.github.com/repos/python/mypy/pulls/455"}, "locked": false}, {"milestone": null, "number": 454, "html_url": "https://github.com/python/mypy/issues/454", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/454", "id": 42711831, "events_url": "https://api.github.com/repos/python/mypy/issues/454/events", "updated_at": "2014-09-14T03:52:01Z", "body": "At least sometimes travis.sh reports success if there are test failures. See #447.", "labels_url": "https://api.github.com/repos/python/mypy/issues/454/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "travis.sh does not report failure if tests fail", "assignee": null, "closed_at": "2014-09-14T03:51:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/454/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-09-14T03:41:47Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 453, "html_url": "https://github.com/python/mypy/issues/453", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/453", "id": 42711751, "events_url": "https://api.github.com/repos/python/mypy/issues/453/events", "updated_at": "2015-10-18T23:37:46Z", "body": "If a stub for module `x` imports something from `typing`, for example, currently `from x import *` also imports that name, which is wrong, since generally the module implementation does not import anything from `typing`, and besides it's just a bad idea in general.\r\n\r\nHowever, we don't want to define `__all__` for every stub, as that would be painful and redundant, since stubs mostly contain only exported features. Maybe we should not export any imported names by default, unless the import uses `as`. For example:\r\n\r\n```python\r\nfrom typing import List    # Not exported\r\nimport os.path as path   # Exported\r\nimport os as os   # Also exported\r\n```\r\n\r\nThis would only affect stubs. We need a way of knowing which files are stubs. Initially, just anything that is under `stubs/` should be considered a stub.", "labels_url": "https://api.github.com/repos/python/mypy/issues/453/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not export imported names in stubs unless using 'as'", "assignee": null, "closed_at": "2015-10-18T23:37:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/453/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-14T03:35:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 452, "html_url": "https://github.com/python/mypy/issues/452", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/452", "id": 42711637, "events_url": "https://api.github.com/repos/python/mypy/issues/452/events", "updated_at": "2014-09-15T00:46:07Z", "body": "If a stub contains a local definition that should not be exported, it should be named with an underscore prefix so that `from x import *` does not import the definition.\r\n\r\nFor example, `stubs/3.2/itertools.py` defines these type variables:\r\n\r\n```\r\nT = typevar('T')\r\nS = typevar('S')\r\n```\r\n\r\nIt should be refactored like this:\r\n\r\n```\r\n_T = typevar('_T')\r\n_S = typevar('_S')\r\n```\r\n\r\n(and all references to `T` and `S` should be fixed, of course)\r\n\r\nNo need to fix all of these in one go; this can be fixed gradually. The most important module is `typing`, since it would be nice to be able to use `from typing import *` without namespace pollution.", "labels_url": "https://api.github.com/repos/python/mypy/issues/452/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename local definitions in stubs (such as T) to use underscores (_T)", "assignee": null, "closed_at": "2014-09-15T00:46:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/452/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-14T03:27:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 34, "number": 2, "html_url": "https://github.com/python/mypy/milestones/Future", "state": "open", "id": 1616625, "url": "https://api.github.com/repos/python/mypy/milestones/2", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/2/labels", "description": "", "closed_at": null, "title": "Future", "updated_at": "2016-04-13T11:56:00Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:14:37Z"}, "number": 451, "html_url": "https://github.com/python/mypy/issues/451", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/451", "id": 42706239, "events_url": "https://api.github.com/repos/python/mypy/issues/451/events", "updated_at": "2016-03-02T01:55:10Z", "body": "Sample:\r\n\r\n```python\r\nfrom abc import abstractmethod\r\nfrom typing import *\r\n\r\nT = typevar('T')\r\n\r\nclass Rnd(Protocol[T]):\r\n    @abstractmethod\r\n    def some_method(x: T) -> T:\r\n        pass\r\n```\r\n\r\nThat gives:\r\n\r\n```\r\nerr.py, line 2: Name 'T' already defined\r\nerr.py, line 2: Name 'abstractmethod' already defined\r\nerr.py, line 6: Name 'Protocol' is not defined\r\n```\r\n\r\nRemoving the top line solves the second error, but it obviously doesn't run under Python 3:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"err.py\", line 6, in <module>\r\n    class Rnd(Protocol[T]):\r\n  File \"err.py\", line 7, in Rnd\r\n    @abstractmethod\r\nNameError: name 'abstractmethod' is not defined\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/451/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid undefined variable errors (mypy not considering __all__?)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/451/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-09-13T21:33:16Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "locked": false}, {"milestone": null, "number": 450, "html_url": "https://github.com/python/mypy/issues/450", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/450", "id": 42701039, "events_url": "https://api.github.com/repos/python/mypy/issues/450/events", "updated_at": "2014-10-25T21:26:54Z", "body": "Mypy complains about this code even though is should be valid:\r\n\r\n```\r\nfrom typing import AnyStr, Function\r\ndef f(x: AnyStr) -> AnyStr: pass\r\ndef g(f: Function[[str], str]) -> None: pass\r\ng(f)\r\n```\r\n\r\nThe problem is that a generic function is not considered a subtype of a non-generic function, even if it is possible to substitute types to make them compatible.\r\n\r\nType checking the above code gives this error:\r\n\r\n```\r\nt.py, line 4: Argument 1 to \"g\" has incompatible type Function[[\"AnyStr\"] -> \"AnyStr\"]; expected Function[[\"str\"] -> \"str\"]\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/450/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Subtyping broken for generic function types", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-10-25T21:26:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/450/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-09-13T17:27:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 449, "html_url": "https://github.com/python/mypy/issues/449", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/449", "id": 42700580, "events_url": "https://api.github.com/repos/python/mypy/issues/449/events", "updated_at": "2014-09-21T23:36:25Z", "body": "There is a bunch of code related to the now obsolete C and Java back end prototypes that performs a transformation of ASTs. This include files such as `mypy/transform.py` and `mypy/transformtype.py`. Also remove dependencies not used anywhere else in the implementation and remove the related tests. Remove references to removed stuff in places such as `mypy/pprinter.py`.\r\n\r\nNote that `mypy/treetransform.py` is used by the type checker and is still useful and should not be removed.\r\n\r\nHere is a partial list of affected files:\r\n\r\n * `mypy/test/testdyncheck.py`\r\n * `mypy/test/data/dyncheck-*.test`\r\n * `mypy/transform.py`\r\n * `mypy/transformfunc.py`\r\n * `mypy/transformtype.py`\r\n * `mypy/compilemapd.py`\r\n * `mypy/rttypevars.py`\r\n * `mypy/coerce.py`\r\n * `mypy/compileslotmap`\r\n * `mypy/opgen.py`\r\n * at least much of `mypy/transutil.py`\r\n * at least much of `mypy/maptypevar`\r\n * `JavaCast`, `CoerceExpr` and `TypeExpr` in `mypy/nodes.py`\r\n\r\nIt probably makes sense to implement this as a series of changes, as this would be a pretty huge single change.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/449/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove transform-related code", "assignee": null, "closed_at": "2014-09-21T23:36:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/449/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-09-13T17:07:15Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 448, "html_url": "https://github.com/python/mypy/issues/448", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/448", "id": 42700142, "events_url": "https://api.github.com/repos/python/mypy/issues/448/events", "updated_at": "2014-11-30T22:21:18Z", "body": "Currently the sources for mypy documentation are not public and they use some fairly ad hoc scripts that I wrote. Migrate the documentation to [Sphinx](http://sphinx-doc.org/) and add the source code to this repo. Maybe use https://readthedocs.org/ to host the documentation.", "labels_url": "https://api.github.com/repos/python/mypy/issues/448/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Migrate mypy documentation to sphinx and add to repo", "assignee": null, "closed_at": "2014-11-30T22:21:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/448/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2014-09-13T16:47:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 447, "html_url": "https://github.com/python/mypy/pull/447", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/447", "id": 42694959, "events_url": "https://api.github.com/repos/python/mypy/issues/447/events", "updated_at": "2014-09-15T19:35:41Z", "body": "For type vars, `ConstraintBuilderVisitor` always created a constraint in the `SUPERTYPE_OF` direction for type vars, irrespective of its `direction` field, which is wrong. This fixes both issue #360 as well as the errors reported by Travis in #443.\r\n\r\nCurrently, 15 tests are failing because the error messages changed due to the fix. Sometimes they became more accurate; sometimes they became wrong (reporting incompatible types of an _assignment_ instead of _arguments_). Before I fix the messages and test cases, I'd like someone to look at the fix and confirm that it is indeed correct now.\r\n\r\nThe following example (extension of the one from #360) shows that this pull request fixes that issue and correctly reports a type error in the last line.\r\n\r\n```python\r\nfrom typing import AnyStr\r\n\r\ndef f(x: AnyStr) -> AnyStr:\r\n    if isinstance(x, str):\r\n        return 'foo'\r\n    else:\r\n        return b'zar'\r\n\r\ndef g(s: str): pass\r\n\r\nf('')  # OK\r\nrepr(f(''))   # OK: repr expect object and get str. Used to give an incorrect type error\r\n\r\ng(f('string'))\r\ng(f(b'bytes'))   # E: Argument 1 to \"g\" has incompatible type \"bytes\"; expected \"str\"\r\n```\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/447/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fixes type inference of type var from context", "assignee": null, "closed_at": "2014-09-15T03:10:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/447/comments", "labels": [], "created_at": "2014-09-13T12:37:06Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/447.patch", "html_url": "https://github.com/python/mypy/pull/447", "diff_url": "https://github.com/python/mypy/pull/447.diff", "url": "https://api.github.com/repos/python/mypy/pulls/447"}, "locked": false}, {"milestone": null, "number": 446, "html_url": "https://github.com/python/mypy/pull/446", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/446", "id": 42531109, "events_url": "https://api.github.com/repos/python/mypy/issues/446/events", "updated_at": "2014-10-25T22:07:59Z", "body": "Fix #435 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/446/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor away overloads in 'os' stubs", "assignee": null, "closed_at": "2014-10-25T22:07:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/446/comments", "labels": [], "created_at": "2014-09-11T14:38:23Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/446.patch", "html_url": "https://github.com/python/mypy/pull/446", "diff_url": "https://github.com/python/mypy/pull/446.diff", "url": "https://api.github.com/repos/python/mypy/pulls/446"}, "locked": false}, {"milestone": null, "number": 445, "html_url": "https://github.com/python/mypy/pull/445", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/445", "id": 42489762, "events_url": "https://api.github.com/repos/python/mypy/issues/445/events", "updated_at": "2014-09-11T14:35:25Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/445/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #435.Refactor away overloads in 'os' stubs", "assignee": null, "closed_at": "2014-09-11T14:35:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/445/comments", "labels": [], "created_at": "2014-09-11T05:19:54Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/445.patch", "html_url": "https://github.com/python/mypy/pull/445", "diff_url": "https://github.com/python/mypy/pull/445.diff", "url": "https://api.github.com/repos/python/mypy/pulls/445"}, "locked": false}, {"milestone": null, "number": 444, "html_url": "https://github.com/python/mypy/pull/444", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/444", "id": 42484027, "events_url": "https://api.github.com/repos/python/mypy/issues/444/events", "updated_at": "2014-09-11T03:54:59Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/444/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #433. Refactor overloads away in zipfile stubs", "assignee": null, "closed_at": "2014-09-11T03:54:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/444/comments", "labels": [], "created_at": "2014-09-11T02:55:31Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/444.patch", "html_url": "https://github.com/python/mypy/pull/444", "diff_url": "https://github.com/python/mypy/pull/444.diff", "url": "https://api.github.com/repos/python/mypy/pulls/444"}, "locked": false}, {"milestone": null, "number": 443, "html_url": "https://github.com/python/mypy/pull/443", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/443", "id": 42445807, "events_url": "https://api.github.com/repos/python/mypy/issues/443/events", "updated_at": "2014-09-15T19:50:00Z", "body": "Resolves #436 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/443/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Replaced overload with AnyStr or Union type in os/path module", "assignee": null, "closed_at": "2014-09-15T03:26:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/443/comments", "labels": [], "created_at": "2014-09-10T18:42:40Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/443.patch", "html_url": "https://github.com/python/mypy/pull/443", "diff_url": "https://github.com/python/mypy/pull/443.diff", "url": "https://api.github.com/repos/python/mypy/pulls/443"}, "locked": false}, {"milestone": null, "number": 442, "html_url": "https://github.com/python/mypy/pull/442", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/442", "id": 42445723, "events_url": "https://api.github.com/repos/python/mypy/issues/442/events", "updated_at": "2014-09-11T06:43:44Z", "body": "Per issue #434 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/442/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Replaced overload with Union types in time module", "assignee": null, "closed_at": "2014-09-11T03:53:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/442/comments", "labels": [], "created_at": "2014-09-10T18:41:48Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/442.patch", "html_url": "https://github.com/python/mypy/pull/442", "diff_url": "https://github.com/python/mypy/pull/442.diff", "url": "https://api.github.com/repos/python/mypy/pulls/442"}, "locked": false}, {"milestone": null, "number": 441, "html_url": "https://github.com/python/mypy/issues/441", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/441", "id": 42323956, "events_url": "https://api.github.com/repos/python/mypy/issues/441/events", "updated_at": "2014-09-16T04:08:52Z", "body": "The following sound python code causes mypy parser errors.\r\n\r\n```python\r\nts = [(1,2), (3,4)]\r\nxs = ['a', 'b']\r\n\r\nfor (t1, t2), x in zip(ts, xs):\r\n\tprint(t1, t2, x)\r\n```\r\n\r\nThe python grammar allows for expression lists before the 'in':\r\n```\r\nfor_stmt: 'for' exprlist 'in' testlist ':' suite ['else' ':' suite]\r\n```\r\n\r\nCurrently, mypy's parser only accepts a comma separated list of named expressions. The list may be enclosed by a pair of parenthesis.", "labels_url": "https://api.github.com/repos/python/mypy/issues/441/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Expression list in for-statements", "assignee": null, "closed_at": "2014-09-16T04:08:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/441/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-09-09T16:13:03Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 440, "html_url": "https://github.com/python/mypy/pull/440", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/440", "id": 42279082, "events_url": "https://api.github.com/repos/python/mypy/issues/440/events", "updated_at": "2014-09-10T14:48:58Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/440/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #429.Refactor overloads away in 'random' stubs", "assignee": null, "closed_at": "2014-09-10T03:35:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/440/comments", "labels": [], "created_at": "2014-09-09T07:40:02Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/440.patch", "html_url": "https://github.com/python/mypy/pull/440", "diff_url": "https://github.com/python/mypy/pull/440.diff", "url": "https://api.github.com/repos/python/mypy/pulls/440"}, "locked": false}, {"milestone": null, "number": 439, "html_url": "https://github.com/python/mypy/pull/439", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/439", "id": 42228890, "events_url": "https://api.github.com/repos/python/mypy/issues/439/events", "updated_at": "2014-09-15T19:50:16Z", "body": "This fixes #309 \r\n\r\nI've added a new AST node, `ComparisonExpr`, for (chained) comparison expressions. This node is type checked as were it a boolean-and expression of pair-wise comparisons of all consecutive operands.", "labels_url": "https://api.github.com/repos/python/mypy/issues/439/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Comparison chaining", "assignee": null, "closed_at": "2014-09-15T01:11:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/439/comments", "labels": [], "created_at": "2014-09-08T18:43:22Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/439.patch", "html_url": "https://github.com/python/mypy/pull/439", "diff_url": "https://github.com/python/mypy/pull/439.diff", "url": "https://api.github.com/repos/python/mypy/pulls/439"}, "locked": false}, {"milestone": null, "number": 438, "html_url": "https://github.com/python/mypy/issues/438", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/438", "id": 42157902, "events_url": "https://api.github.com/repos/python/mypy/issues/438/events", "updated_at": "2014-09-08T01:18:51Z", "body": "There are no Python 2 stubs for the `time` module. It should be straightforward to port the Python 3 stubs to Python 2.\r\n\r\nFirst refactor the Python 3 stubs: https://github.com/JukkaL/mypy/issues/434", "labels_url": "https://api.github.com/repos/python/mypy/issues/438/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Port Python 3 'time' stubs to Python 2", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/438/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:18:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 437, "html_url": "https://github.com/python/mypy/issues/437", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/437", "id": 42157850, "events_url": "https://api.github.com/repos/python/mypy/issues/437/events", "updated_at": "2014-09-08T01:19:14Z", "body": "There are no Python 2 stubs for `os` and `os.path`. The Python 3 variants should mostly be suitable after changing `str`/`bytes` to suitable Python 2 equivalents (`unicode`/`str`), but I remember that there might be some new definitions in the Python 3 stubs not present in Python 2 (can't remember exactly what, though).\r\n\r\nFirst complete #436 and #435, which will simplify the process.", "labels_url": "https://api.github.com/repos/python/mypy/issues/437/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Port Python 3 'os' and 'os.path' stubs to Python 2", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/437/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:17:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 436, "html_url": "https://github.com/python/mypy/issues/436", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/436", "id": 42157766, "events_url": "https://api.github.com/repos/python/mypy/issues/436/events", "updated_at": "2014-09-15T03:26:50Z", "body": "At least many of the function overloads in `stubs/3.2/os/path.py` can be simplified away by using `AnyStr` and/or union types.", "labels_url": "https://api.github.com/repos/python/mypy/issues/436/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor away overloads in 'os.path' stubs", "assignee": null, "closed_at": "2014-09-15T03:26:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/436/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:13:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 435, "html_url": "https://github.com/python/mypy/issues/435", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/435", "id": 42157726, "events_url": "https://api.github.com/repos/python/mypy/issues/435/events", "updated_at": "2015-05-12T04:15:28Z", "body": "At least many of the `@overload` decorators in `stubs/3.2/os/__init__.py` can be refactored away by using features such as union types, `AnyStr` and/or default argument values.", "labels_url": "https://api.github.com/repos/python/mypy/issues/435/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor away overloads in 'os' stubs", "assignee": null, "closed_at": "2015-05-12T04:15:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/435/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:12:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 434, "html_url": "https://github.com/python/mypy/issues/434", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/434", "id": 42157667, "events_url": "https://api.github.com/repos/python/mypy/issues/434/events", "updated_at": "2014-09-11T03:53:55Z", "body": "At least most of the `@overload` decorators in `stubs/3.2/time.py` can be refactored to use union types and/or default argument values.", "labels_url": "https://api.github.com/repos/python/mypy/issues/434/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor away overloads in 'time' stubs", "assignee": null, "closed_at": "2014-09-11T03:53:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/434/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:09:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 433, "html_url": "https://github.com/python/mypy/issues/433", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/433", "id": 42157638, "events_url": "https://api.github.com/repos/python/mypy/issues/433/events", "updated_at": "2014-09-11T03:54:56Z", "body": "It seems that all the `@overload` decorators in `stubs/3.2/zipfile.py` are redundant and could be replaced with normal functions and union types.", "labels_url": "https://api.github.com/repos/python/mypy/issues/433/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor overloads away in zipfile stubs", "assignee": null, "closed_at": "2014-09-11T03:54:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/433/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:08:39Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 432, "html_url": "https://github.com/python/mypy/issues/432", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/432", "id": 42157599, "events_url": "https://api.github.com/repos/python/mypy/issues/432/events", "updated_at": "2015-05-16T03:10:55Z", "body": "It seems that all overloads in `stubs/3.2/struct.py` can be refactored to use `AnyStr`, which would be much cleaner.", "labels_url": "https://api.github.com/repos/python/mypy/issues/432/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use typevar with values rather than overloading in 'struct' stubs", "assignee": null, "closed_at": "2015-05-16T03:10:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/432/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:07:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 431, "html_url": "https://github.com/python/mypy/issues/431", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/431", "id": 42157558, "events_url": "https://api.github.com/repos/python/mypy/issues/431/events", "updated_at": "2014-09-08T01:05:34Z", "body": "All of the overloads seem to be redundant and can be replaced with `AnyStr`, I think.", "labels_url": "https://api.github.com/repos/python/mypy/issues/431/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use typevar with values rather than overloading in fnmatch stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/431/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:05:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 430, "html_url": "https://github.com/python/mypy/issues/430", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/430", "id": 42157536, "events_url": "https://api.github.com/repos/python/mypy/issues/430/events", "updated_at": "2014-09-08T01:04:31Z", "body": "This is similar to https://github.com/JukkaL/mypy/issues/429\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/430/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor overloads away in 'socket' stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/430/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:04:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 429, "html_url": "https://github.com/python/mypy/issues/429", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/429", "id": 42157482, "events_url": "https://api.github.com/repos/python/mypy/issues/429/events", "updated_at": "2014-09-10T03:35:59Z", "body": "It seems that all the `@overload` decorators in `stubs/3.2/random.py` could be represented without overloading, such as by using union types.", "labels_url": "https://api.github.com/repos/python/mypy/issues/429/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor overloads away in 'random' stubs", "assignee": null, "closed_at": "2014-09-10T03:35:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/429/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-09-08T01:01:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 428, "html_url": "https://github.com/python/mypy/issues/428", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/428", "id": 42156664, "events_url": "https://api.github.com/repos/python/mypy/issues/428/events", "updated_at": "2014-09-08T00:25:42Z", "body": "Code like this should be valid, since the union types can't be overlapping:\r\n\r\n```\r\nfrom typing import overload, Union, List\r\n@overload\r\ndef f(x: Union[int, str]) -> int: return 0\r\n@overload\r\ndef f(x: Union[bytes, List[int]]) -> str: return 'x'\r\n```\r\n\r\nThe type checker thinks that these overlap:\r\n\r\n```\r\nt.py, line 3: Overloaded function signatures 1 and 2 overlap with incompatible return types\r\n```\r\n\r\nHowever, this should fail, since both unions have the `int` item:\r\n\r\n```\r\nfrom typing import overload, Union, List\r\n@overload\r\ndef f(x: Union[int, str]) -> int: return 0\r\n@overload\r\ndef f(x: Union[bytes, int]) -> str: return 'x'\r\n```\r\n\r\nSee also this issue, which needs to fixed first:\r\n\r\nhttps://github.com/JukkaL/typing/issues/22", "labels_url": "https://api.github.com/repos/python/mypy/issues/428/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Overlapping overload checks don't know about union types", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/428/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-09-08T00:25:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 427, "html_url": "https://github.com/python/mypy/pull/427", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/427", "id": 42154102, "events_url": "https://api.github.com/repos/python/mypy/issues/427/events", "updated_at": "2014-12-06T00:27:56Z", "body": "This is based on what is available in testCallingVariableWithFunctionType, I hope I got it right.\r\n\r\nThere are quite a few types missing from mypy/test/data/check-functions.test, is this acceptable as a start towards resolving issue #426?", "labels_url": "https://api.github.com/repos/python/mypy/issues/427/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add missing types for testSubtypingFunctionTypes in check-functions.test", "assignee": null, "closed_at": "2014-11-24T04:29:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/427/comments", "labels": [], "created_at": "2014-09-07T22:21:46Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/427.patch", "html_url": "https://github.com/python/mypy/pull/427", "diff_url": "https://github.com/python/mypy/pull/427.diff", "url": "https://api.github.com/repos/python/mypy/pulls/427"}, "locked": false}, {"milestone": null, "number": 426, "html_url": "https://github.com/python/mypy/issues/426", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/426", "id": 42152959, "events_url": "https://api.github.com/repos/python/mypy/issues/426/events", "updated_at": "2014-11-24T04:28:12Z", "body": "The test case `test_check.testSubtypingFunctionTypes` contains an example where function types are not included in type error messages, for example:\r\n\r\n```\r\ng = h  # E: Incompatible types in assignment (expression has type , variable has type )\r\n```\r\n\r\nNote that there is no type after `type`, just a space. Both `g` and `h` have function types.", "labels_url": "https://api.github.com/repos/python/mypy/issues/426/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Function types missing in error messages", "assignee": null, "closed_at": "2014-11-24T04:28:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/426/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2014-09-07T21:35:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 425, "html_url": "https://github.com/python/mypy/issues/425", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/425", "id": 42152455, "events_url": "https://api.github.com/repos/python/mypy/issues/425/events", "updated_at": "2014-09-07T21:14:11Z", "body": "Mypy rejects assignments to functions, mostly due to historical reasons. Maybe we should allow such assignments, as long the the rvalue has a compatible type. For example, this whould be valid:\r\n\r\n```\r\ndef f() -> None: pass\r\ndef g() -> None: pass\r\nf = g  # Should be fine, but currently flagged as an error\r\n```\r\n\r\nThis should be rejected:\r\n\r\n```\r\ndef f() -> None: pass\r\ndef g(x: int) -> None: pass\r\nf = g  # Error, incompatible types\r\n```\r\n\r\nI propose that this would be unsound in the sense that the type checker would not check that argument names are compatible (keyword-only arguments names should be checked, however). Argument names are often used/documented inconsistently in existing Python code, including the standard library. This is similar how argument name compatibility is not enforced in method overriding. Thus this would be accepted:\r\n\r\n```\r\ndef f(x: int) -> None: pass\r\ndef g(y: int) -> None: pass\r\nf = g  # Ok, even though argument names are different (x vs y)\r\n```\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/425/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow assignments to functions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/425/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-09-07T21:14:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 424, "html_url": "https://github.com/python/mypy/issues/424", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/424", "id": 42138545, "events_url": "https://api.github.com/repos/python/mypy/issues/424/events", "updated_at": "2014-09-08T00:31:39Z", "body": "Consider these classes:\r\n\r\n```python\r\nclass X:\r\n        pass\r\nclass Y(X):\r\n        pass\r\nclass Z(Y):\r\n        pass\r\n\r\nclass A:\r\n        def f(self, x: Y) -> None:\r\n                pass\r\n\r\nclass B(A):\r\n        def f(self, x: Z) -> None:\r\n                pass\r\n```\r\n\r\nHere mypy, correctly, gives a type error, saying that, in class `B`, the first argument of `f` is incompatible with supertype `A`.\r\n\r\nNow consider this class: \r\n\r\n```python\r\nclass C(A):\r\n        def f(self, x: X) -> None:\r\n                pass\r\n```\r\n\r\nmypy reports the same type error as for `B`. Is that correct? In a statically typed language, the definition of `C` should be okay. I'm still not completely familiar with gradual typing, so maybe I'm missing something again.", "labels_url": "https://api.github.com/repos/python/mypy/issues/424/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Compatibility of method parameters of subclasses", "assignee": null, "closed_at": "2014-09-08T00:30:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/424/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-09-07T09:38:10Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 423, "html_url": "https://github.com/python/mypy/issues/423", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/423", "id": 42071768, "events_url": "https://api.github.com/repos/python/mypy/issues/423/events", "updated_at": "2014-09-05T18:08:17Z", "body": "Currently, mypy allows the assignment of a value of the Any type to a typed variable, like in this example of the tutorial:\r\n\r\n```python\r\na, s = Undefined(Any), Undefined(str)\r\na = 2      # OK\r\ns = a      # OK\r\n```\r\n\r\nTo me that makes no sense. I think the Any type should be at the top of the type hierarchy. So in the example, only assignment of `s` to `a` should be allowed. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/423/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Assignment of value of Any type to a typed variable should not be allowed", "assignee": null, "closed_at": "2014-09-05T18:08:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/423/comments", "labels": [], "created_at": "2014-09-05T17:48:15Z", "user": {"followers_url": "https://api.github.com/users/spkersten/followers", "gists_url": "https://api.github.com/users/spkersten/gists{/gist_id}", "html_url": "https://github.com/spkersten", "following_url": "https://api.github.com/users/spkersten/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4456832?v=3", "url": "https://api.github.com/users/spkersten", "organizations_url": "https://api.github.com/users/spkersten/orgs", "starred_url": "https://api.github.com/users/spkersten/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/spkersten/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/spkersten/subscriptions", "login": "spkersten", "repos_url": "https://api.github.com/users/spkersten/repos", "received_events_url": "https://api.github.com/users/spkersten/received_events", "id": 4456832, "site_admin": false}, "locked": false}, {"milestone": null, "number": 422, "html_url": "https://github.com/python/mypy/pull/422", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/422", "id": 41653545, "events_url": "https://api.github.com/repos/python/mypy/issues/422/events", "updated_at": "2014-09-07T20:24:27Z", "body": "Moves all tests that have '*_python2' in their names from mypy/test/data/pythoneval.test to mypy/test/data/python2eval.test.\r\n\r\nIs this acceptable as a solution for issue #356?", "labels_url": "https://api.github.com/repos/python/mypy/issues/422/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move Python 2 evaluation tests into python2eval.test", "assignee": null, "closed_at": "2014-09-07T20:18:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/422/comments", "labels": [], "created_at": "2014-09-01T17:22:09Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/422.patch", "html_url": "https://github.com/python/mypy/pull/422", "diff_url": "https://github.com/python/mypy/pull/422.diff", "url": "https://api.github.com/repos/python/mypy/pulls/422"}, "locked": false}, {"milestone": null, "number": 421, "html_url": "https://github.com/python/mypy/pull/421", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/421", "id": 41597863, "events_url": "https://api.github.com/repos/python/mypy/issues/421/events", "updated_at": "2014-08-31T23:27:11Z", "body": "Bug #373", "labels_url": "https://api.github.com/repos/python/mypy/issues/421/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove logic for running a file after translation", "assignee": null, "closed_at": "2014-08-31T23:27:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/421/comments", "labels": [], "created_at": "2014-08-31T22:36:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/421.patch", "html_url": "https://github.com/python/mypy/pull/421", "diff_url": "https://github.com/python/mypy/pull/421.diff", "url": "https://api.github.com/repos/python/mypy/pulls/421"}, "locked": false}, {"milestone": null, "number": 420, "html_url": "https://github.com/python/mypy/pull/420", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/420", "id": 41581602, "events_url": "https://api.github.com/repos/python/mypy/issues/420/events", "updated_at": "2014-09-08T01:03:14Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/420/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix#271.Allow explicit return None in function returning None.", "assignee": null, "closed_at": "2014-09-07T20:58:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/420/comments", "labels": [], "created_at": "2014-08-31T08:40:20Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/420.patch", "html_url": "https://github.com/python/mypy/pull/420", "diff_url": "https://github.com/python/mypy/pull/420.diff", "url": "https://api.github.com/repos/python/mypy/pulls/420"}, "locked": false}, {"milestone": null, "number": 419, "html_url": "https://github.com/python/mypy/pull/419", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/419", "id": 41488689, "events_url": "https://api.github.com/repos/python/mypy/issues/419/events", "updated_at": "2014-09-01T17:18:14Z", "body": "PEP 8 fixes for samples/* and scripts/mypy.", "labels_url": "https://api.github.com/repos/python/mypy/issues/419/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "PEP 8 fixes", "assignee": null, "closed_at": "2014-08-31T22:20:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/419/comments", "labels": [], "created_at": "2014-08-29T10:33:02Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/419.patch", "html_url": "https://github.com/python/mypy/pull/419", "diff_url": "https://github.com/python/mypy/pull/419.diff", "url": "https://api.github.com/repos/python/mypy/pulls/419"}, "locked": false}, {"milestone": null, "number": 418, "html_url": "https://github.com/python/mypy/pull/418", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/418", "id": 41389702, "events_url": "https://api.github.com/repos/python/mypy/issues/418/events", "updated_at": "2014-09-10T14:50:03Z", "body": "Filtering out names that start with only one underscore when looking them up.", "labels_url": "https://api.github.com/repos/python/mypy/issues/418/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #413.Do not allow implicit access to internal definitions in builtins", "assignee": null, "closed_at": "2014-08-29T05:45:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/418/comments", "labels": [], "created_at": "2014-08-28T13:28:29Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/418.patch", "html_url": "https://github.com/python/mypy/pull/418", "diff_url": "https://github.com/python/mypy/pull/418.diff", "url": "https://api.github.com/repos/python/mypy/pulls/418"}, "locked": false}, {"milestone": null, "number": 417, "html_url": "https://github.com/python/mypy/pull/417", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/417", "id": 41383391, "events_url": "https://api.github.com/repos/python/mypy/issues/417/events", "updated_at": "2014-08-29T10:13:14Z", "body": "PEP 8 fixes for pinfer/pinfer.py, pinfer/p.py, pinfer/test_pinfer.py and pinfer/test_pinfer.py.", "labels_url": "https://api.github.com/repos/python/mypy/issues/417/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "PEP 8 fixes", "assignee": null, "closed_at": "2014-08-29T05:40:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/417/comments", "labels": [], "created_at": "2014-08-28T12:09:41Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/417.patch", "html_url": "https://github.com/python/mypy/pull/417", "diff_url": "https://github.com/python/mypy/pull/417.diff", "url": "https://api.github.com/repos/python/mypy/pulls/417"}, "locked": false}, {"milestone": null, "number": 416, "html_url": "https://github.com/python/mypy/pull/416", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/416", "id": 41382547, "events_url": "https://api.github.com/repos/python/mypy/issues/416/events", "updated_at": "2014-08-28T13:30:52Z", "body": "Filter out names that start with only one underscore when looking them up.", "labels_url": "https://api.github.com/repos/python/mypy/issues/416/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #413.Do not allow implicit access to internal definitions in builtin...", "assignee": null, "closed_at": "2014-08-28T13:22:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/416/comments", "labels": [], "created_at": "2014-08-28T11:58:26Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/416.patch", "html_url": "https://github.com/python/mypy/pull/416", "diff_url": "https://github.com/python/mypy/pull/416.diff", "url": "https://api.github.com/repos/python/mypy/pulls/416"}, "locked": false}, {"milestone": null, "number": 415, "html_url": "https://github.com/python/mypy/pull/415", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/415", "id": 41330949, "events_url": "https://api.github.com/repos/python/mypy/issues/415/events", "updated_at": "2014-08-28T10:00:28Z", "body": "PEP 8 fixes for lib-typing/2.7/* and lib-typing/3.2/* folders.", "labels_url": "https://api.github.com/repos/python/mypy/issues/415/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "PEP 8 fixes", "assignee": null, "closed_at": "2014-08-28T03:47:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/415/comments", "labels": [], "created_at": "2014-08-27T21:09:22Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/415.patch", "html_url": "https://github.com/python/mypy/pull/415", "diff_url": "https://github.com/python/mypy/pull/415.diff", "url": "https://api.github.com/repos/python/mypy/pulls/415"}, "locked": false}, {"milestone": null, "number": 414, "html_url": "https://github.com/python/mypy/pull/414", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/414", "id": 41085598, "events_url": "https://api.github.com/repos/python/mypy/issues/414/events", "updated_at": "2014-08-28T13:23:15Z", "body": "Fix #413.Do not allow implicit access to internal definitions in builtins.", "labels_url": "https://api.github.com/repos/python/mypy/issues/414/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix #413.Do not allow implicit access to internal definitions in builtins.", "assignee": null, "closed_at": "2014-08-28T13:23:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/414/comments", "labels": [], "created_at": "2014-08-25T17:43:57Z", "user": {"followers_url": "https://api.github.com/users/yczhu/followers", "gists_url": "https://api.github.com/users/yczhu/gists{/gist_id}", "html_url": "https://github.com/yczhu", "following_url": "https://api.github.com/users/yczhu/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3633348?v=3", "url": "https://api.github.com/users/yczhu", "organizations_url": "https://api.github.com/users/yczhu/orgs", "starred_url": "https://api.github.com/users/yczhu/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/yczhu/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/yczhu/subscriptions", "login": "yczhu", "repos_url": "https://api.github.com/users/yczhu/repos", "received_events_url": "https://api.github.com/users/yczhu/received_events", "id": 3633348, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/414.patch", "html_url": "https://github.com/python/mypy/pull/414", "diff_url": "https://github.com/python/mypy/pull/414.diff", "url": "https://api.github.com/repos/python/mypy/pulls/414"}, "locked": false}, {"milestone": null, "number": 413, "html_url": "https://github.com/python/mypy/issues/413", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/413", "id": 41028432, "events_url": "https://api.github.com/repos/python/mypy/issues/413/events", "updated_at": "2014-08-29T05:45:00Z", "body": "All internal definitions in builtins (such as type variables, aliases) should not be visible outside builtins. Currently, for example, it is possible to refer to `_byte_types`:\r\n\r\n    from typing import Undefined\r\n    x = Undefined(_byte_types)   # No error, but will fail at runtime\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/413/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not allow implicit access to internal definitions in builtins", "assignee": null, "closed_at": "2014-08-29T05:45:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/413/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-25T02:44:15Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 412, "html_url": "https://github.com/python/mypy/issues/412", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/412", "id": 41027840, "events_url": "https://api.github.com/repos/python/mypy/issues/412/events", "updated_at": "2014-08-25T03:18:27Z", "body": "Stubs for builtins don't follow conventions for stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/412/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update builtins stubs to follow conventions", "assignee": null, "closed_at": "2014-08-25T03:18:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/412/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2014-08-25T02:24:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 411, "html_url": "https://github.com/python/mypy/issues/411", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/411", "id": 41026961, "events_url": "https://api.github.com/repos/python/mypy/issues/411/events", "updated_at": "2014-08-25T02:03:00Z", "body": "Currently the definition of abs in builtins uses overloading, even though we should be able to just use SupportsAbs if int and float would subclass it.\r\n\r\nThis would fix type checking issue with int arguments. For example, this does not generate a type check error:\r\n\r\n    abs(1) + 'x'\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/411/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix definition of abs to not use overloading", "assignee": null, "closed_at": "2014-08-25T02:03:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/411/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-25T01:54:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 410, "html_url": "https://github.com/python/mypy/issues/410", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/410", "id": 41025830, "events_url": "https://api.github.com/repos/python/mypy/issues/410/events", "updated_at": "2014-11-08T19:22:19Z", "body": "The line with the first call to f is accepted by the type checker, even though it should be rejected similar to the second call:\r\n\r\n    from typing import overload\r\n\r\n    @overload\r\n    def f(n: int) -> int:\r\n        return 0\r\n\r\n    @overload\r\n    def f(n: float) -> float:\r\n        return 1.1\r\n\r\n    f(1) + 'x'   # PROBLEM: No error reported!\r\n    f(1.1) + 'x'\r\n\r\nI believe that this is due to int being duck type compatible with float.\r\n\r\nThis is related to #39.", "labels_url": "https://api.github.com/repos/python/mypy/issues/410/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "No type error when overloading with int+float", "assignee": null, "closed_at": "2014-11-08T19:22:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/410/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-25T01:13:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 409, "html_url": "https://github.com/python/mypy/issues/409", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/409", "id": 41025546, "events_url": "https://api.github.com/repos/python/mypy/issues/409/events", "updated_at": "2014-08-25T01:01:26Z", "body": "Type checking this program results in a confusing error message `x.py, line 2: \"object\" not callable`:\r\n\r\n    from typing import overload\r\n    @overload\r\n    def f() -> None: pass\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/409/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Confusing error message for overload with only a single variant", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/409/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-25T01:01:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 408, "html_url": "https://github.com/python/mypy/issues/408", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/408", "id": 41023798, "events_url": "https://api.github.com/repos/python/mypy/issues/408/events", "updated_at": "2014-09-22T05:21:49Z", "body": "Write a script that removes trailing whitespace (at end of line, potentially also empty lines at end of file) within all files in the repo, including subdirectories. We should eventually run it periodically. It should apply to non-source files such as .test files as well but it should skip binary files (though I'm not sure if we have any in the repo right now). Potentially also skip files under lib-python, as we want to keep them as close as possible to the corresponding files in stock Python 3.2 files.\r\n\r\nDiscussion: Some editors remove trailing whitespace by default when saving, and this adds a lot of noise to pull requests. The github UI is not great with a lot of whitespace-only changes. I recently configured my editor to strip trailing whitespace. I don't think that we need to enforce no trailing blanks for all commits as long as we periodically clean up extra whitespace.", "labels_url": "https://api.github.com/repos/python/mypy/issues/408/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Script for removing/normalizing trailing whitespace", "assignee": null, "closed_at": "2014-09-22T05:20:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/408/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-08-24T23:53:24Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 407, "html_url": "https://github.com/python/mypy/issues/407", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/407", "id": 40980755, "events_url": "https://api.github.com/repos/python/mypy/issues/407/events", "updated_at": "2014-08-25T02:23:25Z", "body": "We should have more formal conventions for stub files, as they don't follow PEP 8. Add them to the wiki:\r\n\r\nhttp://www.mypy-lang.org/wiki/CodeConventions", "labels_url": "https://api.github.com/repos/python/mypy/issues/407/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Define style conventions for stubs", "assignee": null, "closed_at": "2014-08-25T02:23:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/407/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-08-23T17:43:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 406, "html_url": "https://github.com/python/mypy/issues/406", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/406", "id": 40950276, "events_url": "https://api.github.com/repos/python/mypy/issues/406/events", "updated_at": "2015-05-17T17:49:00Z", "body": "The following code appends a str to a list of ints.\r\n\r\n```Python\r\nfrom typing import Iterable, List\r\n\r\ndef modify(l: Iterable[object]) -> None:\r\n    if isinstance(l, List[object]):\r\n        l.append(\"abc\")\r\n\r\nl = List[int]()\r\nmodify(l)\r\nprint(l)  # ['abc']\r\n1 + l[0]  # TypeError: unsupported operand type(s) for +: 'int' and 'str'\r\n```\r\n\r\n(without mypy errors/warnings)", "labels_url": "https://api.github.com/repos/python/mypy/issues/406/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Wrong type in list after isinstance check", "assignee": null, "closed_at": "2015-05-17T17:49:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/406/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-08-22T21:05:19Z", "user": {"followers_url": "https://api.github.com/users/AlexElvers/followers", "gists_url": "https://api.github.com/users/AlexElvers/gists{/gist_id}", "html_url": "https://github.com/AlexElvers", "following_url": "https://api.github.com/users/AlexElvers/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/515230?v=3", "url": "https://api.github.com/users/AlexElvers", "organizations_url": "https://api.github.com/users/AlexElvers/orgs", "starred_url": "https://api.github.com/users/AlexElvers/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/AlexElvers/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/AlexElvers/subscriptions", "login": "AlexElvers", "repos_url": "https://api.github.com/users/AlexElvers/repos", "received_events_url": "https://api.github.com/users/AlexElvers/received_events", "id": 515230, "site_admin": false}, "locked": false}, {"milestone": null, "number": 405, "html_url": "https://github.com/python/mypy/issues/405", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/405", "id": 40633111, "events_url": "https://api.github.com/repos/python/mypy/issues/405/events", "updated_at": "2014-08-25T00:39:28Z", "body": "I was playing with some maps and lambdas, and I found this (I think) error:\r\n```python\r\nfrom typing import List, Iterator\r\ndef f(x: List[List[int]]) -> Iterator[List[int]]:\r\n    return map(lambda y: [y[1], y[0]], x)\r\n\r\nf([[1,2], [2,3]])\r\n```\r\nThe error is:\r\n\r\n    errors.py: In function \"f\":\r\n    errors.py, line 7: Value of type object is not indexable\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/405/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "lambda uses vars as objects.", "assignee": null, "closed_at": "2014-08-25T00:39:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/405/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-19T20:27:37Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "locked": false}, {"milestone": null, "number": 404, "html_url": "https://github.com/python/mypy/issues/404", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/404", "id": 40632054, "events_url": "https://api.github.com/repos/python/mypy/issues/404/events", "updated_at": "2015-05-17T17:32:23Z", "body": "Right now, is not possible to do a recursive typevar, for example:\r\n```python\r\nT = typevar('T', values=(int, 'List[T]'))\r\n```\r\n\r\nAlso, should be interesant (less than the recursive, but still have some uses) to reference another typevar inside one:\r\n```python\r\nS = typevar('S', values=(int, float))\r\nT = typevar('T', values=(S, 'List[T]'))\r\n```\r\n\r\nIt's not necesary, and don't know if it's hard to implement, but I think it's useful.", "labels_url": "https://api.github.com/repos/python/mypy/issues/404/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Recursive typevars", "assignee": null, "closed_at": "2015-05-17T17:32:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/404/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-08-19T20:16:59Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "locked": false}, {"milestone": null, "number": 403, "html_url": "https://github.com/python/mypy/issues/403", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/403", "id": 40507673, "events_url": "https://api.github.com/repos/python/mypy/issues/403/events", "updated_at": "2015-09-12T20:29:18Z", "body": "There seems to be a dependency chain that makes mypy unable to install from pip in Python 3.4:\r\n\r\n```\r\nDownloading/unpacking dbutils (from sqlbean>=0.490->mypy)\r\n  Downloading DBUtils-1.1.tar.gz (109kB): 109kB downloaded\r\n  Running setup.py (path:/home/rspeer/.virtualenvs/lum3/build/dbutils/setup.py) egg_info for package dbutils\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 17, in <module>\r\n      File \"/home/rspeer/.virtualenvs/lum3/build/dbutils/setup.py\", line 11, in <module>\r\n        raise ImportError('Python %d.%d is not supported by DBUtils.' % py_version)\r\n    ImportError: Python 3.4 is not supported by DBUtils.\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n\r\n  File \"<string>\", line 17, in <module>\r\n\r\n  File \"/home/rspeer/.virtualenvs/lum3/build/dbutils/setup.py\", line 11, in <module>\r\n\r\n    raise ImportError('Python %d.%d is not supported by DBUtils.' % py_version)\r\n\r\nImportError: Python 3.4 is not supported by DBUtils.\r\n```\r\n\r\nI'd also report this as a DBUtils bug except I don't think they have a bug tracker. Is the dependency on DBUtils strictly necessary?", "labels_url": "https://api.github.com/repos/python/mypy/issues/403/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Doesn't install in Python 3.4", "assignee": null, "closed_at": "2014-08-18T17:24:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/403/comments", "labels": [], "created_at": "2014-08-18T16:43:46Z", "user": {"followers_url": "https://api.github.com/users/rspeer/followers", "gists_url": "https://api.github.com/users/rspeer/gists{/gist_id}", "html_url": "https://github.com/rspeer", "following_url": "https://api.github.com/users/rspeer/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/234227?v=3", "url": "https://api.github.com/users/rspeer", "organizations_url": "https://api.github.com/users/rspeer/orgs", "starred_url": "https://api.github.com/users/rspeer/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rspeer/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rspeer/subscriptions", "login": "rspeer", "repos_url": "https://api.github.com/users/rspeer/repos", "received_events_url": "https://api.github.com/users/rspeer/received_events", "id": 234227, "site_admin": false}, "locked": false}, {"milestone": null, "number": 402, "html_url": "https://github.com/python/mypy/pull/402", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/402", "id": 40472662, "events_url": "https://api.github.com/repos/python/mypy/issues/402/events", "updated_at": "2014-08-24T07:54:35Z", "body": "PEP 8 fixes for mypy/codec/* and mypy/test/* files. The mypy/test/data/* folder is not included.", "labels_url": "https://api.github.com/repos/python/mypy/issues/402/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "PEP 8 fixes", "assignee": null, "closed_at": "2014-08-23T18:36:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/402/comments", "labels": [], "created_at": "2014-08-18T10:12:17Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/402.patch", "html_url": "https://github.com/python/mypy/pull/402", "diff_url": "https://github.com/python/mypy/pull/402.diff", "url": "https://api.github.com/repos/python/mypy/pulls/402"}, "locked": false}, {"milestone": null, "number": 401, "html_url": "https://github.com/python/mypy/issues/401", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/401", "id": 40447757, "events_url": "https://api.github.com/repos/python/mypy/issues/401/events", "updated_at": "2014-08-18T05:58:49Z", "body": "The tests  fail because they tried to run Python 2 tests using a Python 3 interpreter.", "labels_url": "https://api.github.com/repos/python/mypy/issues/401/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not run travis Python 2 tests if no Python 2 interpreter found", "assignee": null, "closed_at": "2014-08-18T05:58:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/401/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-18T00:39:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 400, "html_url": "https://github.com/python/mypy/pull/400", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/400", "id": 40445047, "events_url": "https://api.github.com/repos/python/mypy/issues/400/events", "updated_at": "2014-08-18T08:57:47Z", "body": "PEP 8 fixes for files under mypy/* directory. Note that mypy/codec/* and mypy/test/* are not included.", "labels_url": "https://api.github.com/repos/python/mypy/issues/400/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "PEP 8 fixes", "assignee": null, "closed_at": "2014-08-17T23:59:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/400/comments", "labels": [], "created_at": "2014-08-17T22:20:45Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/400.patch", "html_url": "https://github.com/python/mypy/pull/400", "diff_url": "https://github.com/python/mypy/pull/400.diff", "url": "https://api.github.com/repos/python/mypy/pulls/400"}, "locked": false}, {"milestone": null, "number": 399, "html_url": "https://github.com/python/mypy/issues/399", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/399", "id": 40439613, "events_url": "https://api.github.com/repos/python/mypy/issues/399/events", "updated_at": "2014-08-23T17:45:28Z", "body": "Currently we use a non-PEP 8 style for library stubs that looks like this:\r\n\r\n    class Foo:\r\n        def bar(self, x: int) -> str: pass\r\n        def frobnicate(self) -> None: pass\r\n\r\n    class Zar: pass\r\n\r\nIn PEP 8 style this would look something like this:\r\n\r\n    class Foo:\r\n        def bar(self, x: int) -> str: \r\n            pass\r\n\r\n        def frobnicate(self) -> None: \r\n            pass\r\n\r\n\r\n    class Zar: \r\n        pass\r\n\r\nThe most obvious differences from PEP 8 style are these:\r\n\r\n  1. no newline before `pass`\r\n  2. no empty lines between methods or module-level functions\r\n  3. single empty line between module-level definitions\r\n\r\nThe rationale for the custom style is that as the stubs have no function bodies, using PEP 8 would use lots of vertical space with not that much extra benefit.\r\n\r\nHowever, it can be argued that consistency is more important than saving vertical space, and following PEP 8 would allow existing code formatting tools to be used without any tweaking. Also, it is easier for contributors to follow PEP 8 than a custom style, making it easier to remain consistent.\r\n\r\nWhat do you think? Which style do you perfer (or maybe something else altogether)?\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/399/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use PEP 8 style for library stubs?", "assignee": null, "closed_at": "2014-08-23T17:45:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/399/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2014-08-17T18:08:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 398, "html_url": "https://github.com/python/mypy/pull/398", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/398", "id": 40428790, "events_url": "https://api.github.com/repos/python/mypy/issues/398/events", "updated_at": "2014-08-18T00:21:30Z", "body": "Removes the C back end and all icode intermediary representation logic.\r\nFixes issue #384 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/398/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove c backend  Issue #384", "assignee": null, "closed_at": "2014-08-18T00:20:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/398/comments", "labels": [], "created_at": "2014-08-17T07:30:15Z", "user": {"followers_url": "https://api.github.com/users/iankronquist/followers", "gists_url": "https://api.github.com/users/iankronquist/gists{/gist_id}", "html_url": "https://github.com/iankronquist", "following_url": "https://api.github.com/users/iankronquist/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5192353?v=3", "url": "https://api.github.com/users/iankronquist", "organizations_url": "https://api.github.com/users/iankronquist/orgs", "starred_url": "https://api.github.com/users/iankronquist/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/iankronquist/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/iankronquist/subscriptions", "login": "iankronquist", "repos_url": "https://api.github.com/users/iankronquist/repos", "received_events_url": "https://api.github.com/users/iankronquist/received_events", "id": 5192353, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/398.patch", "html_url": "https://github.com/python/mypy/pull/398", "diff_url": "https://github.com/python/mypy/pull/398.diff", "url": "https://api.github.com/repos/python/mypy/pulls/398"}, "locked": false}, {"milestone": null, "number": 397, "html_url": "https://github.com/python/mypy/issues/397", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/397", "id": 40428741, "events_url": "https://api.github.com/repos/python/mypy/issues/397/events", "updated_at": "2014-08-23T18:01:43Z", "body": "In `collections.abc`, `Sequence`, `Mapping`, and `Set` all inherit from `Container`.\r\n\r\nIn `typing`, `Sequence[T]` inherits from `Container[T]`, while `Mapping[T]` and `AbstractSet[T]` do not, and instead define `__contains__`, which means `Container` picks them up as a `Protocol`. Unless there's a reason these have to work differently, it seems like they should all inherit.\r\n\r\nAlso, `Container` doesn't annotate its `__contains__` method at all, and `Mapping` and `AbstractSet` annotate it as taking an `object`. Shouldn't these all be requiring `T`?", "labels_url": "https://api.github.com/repos/python/mypy/issues/397/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Inconsistency over `Container`", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/397/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-08-17T07:26:41Z", "user": {"followers_url": "https://api.github.com/users/abarnert/followers", "gists_url": "https://api.github.com/users/abarnert/gists{/gist_id}", "html_url": "https://github.com/abarnert", "following_url": "https://api.github.com/users/abarnert/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1808250?v=3", "url": "https://api.github.com/users/abarnert", "organizations_url": "https://api.github.com/users/abarnert/orgs", "starred_url": "https://api.github.com/users/abarnert/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/abarnert/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/abarnert/subscriptions", "login": "abarnert", "repos_url": "https://api.github.com/users/abarnert/repos", "received_events_url": "https://api.github.com/users/abarnert/received_events", "id": 1808250, "site_admin": false}, "locked": false}, {"milestone": null, "number": 396, "html_url": "https://github.com/python/mypy/issues/396", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/396", "id": 40428654, "events_url": "https://api.github.com/repos/python/mypy/issues/396/events", "updated_at": "2015-04-06T01:58:30Z", "body": "There's no way to specify that a function takes and returns a `MutableSequence[T]`; you can specify `Sequence[T]` and have it fail to catch immutable sequences, or `List[T]` and fail to accept a `bytearray` or `array.array`.\r\n\r\nIf `typing` is going to try to build a parallel hierarchy of ABCs and protocols to the ones already defined in the stdlib, it needs to include at least all of the important ones.\r\n\r\nFor the ones that aren't generic (like `numbers.Number`), at least as far as I understand it, you can just use the ABC itself without a problem. And for the ones that are pretty much pure mixins rather than adding any interface (like `collections.abc.KeyView`) this probably isn't important. But that doesn't help for `MutableSequence[T]` and the others that are missing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/396/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Various ABCs missing from `typing`", "assignee": null, "closed_at": "2015-04-06T01:58:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/396/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-17T07:19:44Z", "user": {"followers_url": "https://api.github.com/users/abarnert/followers", "gists_url": "https://api.github.com/users/abarnert/gists{/gist_id}", "html_url": "https://github.com/abarnert", "following_url": "https://api.github.com/users/abarnert/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1808250?v=3", "url": "https://api.github.com/users/abarnert", "organizations_url": "https://api.github.com/users/abarnert/orgs", "starred_url": "https://api.github.com/users/abarnert/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/abarnert/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/abarnert/subscriptions", "login": "abarnert", "repos_url": "https://api.github.com/users/abarnert/repos", "received_events_url": "https://api.github.com/users/abarnert/received_events", "id": 1808250, "site_admin": false}, "locked": false}, {"milestone": null, "number": 395, "html_url": "https://github.com/python/mypy/issues/395", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/395", "id": 40428520, "events_url": "https://api.github.com/repos/python/mypy/issues/395/events", "updated_at": "2015-02-08T23:03:14Z", "body": "Currently, `typing` supports only a subset of the ABCs defined in the stdlib (e.g., no `collections.abc.MutableSequence`), doesn't exactly match the ABC interfaces in a few cases, and renames a few of them arbitrarily (e.g., `TextIO` instead of `io.TextIOBase`). While all of that could be fixed, I'm not sure why it needs to be.\r\n\r\nI can't imagine there's any code that relies on the fact that `collections.abc.Sequence['foo']` raises a `TypeError`. So why not modify it to be subscriptable? Then all you need to do in `typing` is `from spam imports eggs` each of the types, instead of trying to create a parallel hierarchy.\r\n\r\nIf this is doable, a few of the ABCs in the stdlib (e.g., `collections.abc.Iterator`) are \"auto ABCs\"\u2014they define a `__subclasshook__` that does structural matching. This is the same thing `typing.Protocol` does, but without specifying the types for the methods. Would it be possible to change them to use `Protocol`? This should have the exact same effect as the existing code when run with standard Python, but remove the need for `typing` wrappers.\r\n\r\nI realize that for 2.7-3.4, the only way to make any of this work would be to monkeypatch `collections.abc`, `io`, `numbers`, etc. from within `typing`, which is not exactly beautiful\u2026 but for 3.5, the stdlib itself can be edited, right?", "labels_url": "https://api.github.com/repos/python/mypy/issues/395/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make existing ABCs generic instead of defining separate `typing` types for each (maybe only in 3.5)", "assignee": null, "closed_at": "2015-02-08T23:03:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/395/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-08-17T07:08:47Z", "user": {"followers_url": "https://api.github.com/users/abarnert/followers", "gists_url": "https://api.github.com/users/abarnert/gists{/gist_id}", "html_url": "https://github.com/abarnert", "following_url": "https://api.github.com/users/abarnert/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1808250?v=3", "url": "https://api.github.com/users/abarnert", "organizations_url": "https://api.github.com/users/abarnert/orgs", "starred_url": "https://api.github.com/users/abarnert/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/abarnert/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/abarnert/subscriptions", "login": "abarnert", "repos_url": "https://api.github.com/users/abarnert/repos", "received_events_url": "https://api.github.com/users/abarnert/received_events", "id": 1808250, "site_admin": false}, "locked": false}, {"milestone": null, "number": 394, "html_url": "https://github.com/python/mypy/issues/394", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/394", "id": 40428383, "events_url": "https://api.github.com/repos/python/mypy/issues/394/events", "updated_at": "2015-01-25T18:42:06Z", "body": "The thing that matches `collections.abc.Sequence` is called `Sequence`, while the thing that matches the concrete type `tuple` is called `Tuple`. And the same goes for almost every type in `typing.py`.\r\n\r\nThe one exception is that the thing that matches `collections.abc.Callable` is called `Function`, even though it matches methods, objects with `__call__` methods, builtins, etc., not just functions. Why isn't this called `Callable`, while `Function` is the generic version of `types.FunctionType`?", "labels_url": "https://api.github.com/repos/python/mypy/issues/394/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "`Function` is a misleading name for `Callable`", "assignee": null, "closed_at": "2015-01-25T18:42:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/394/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-17T06:58:01Z", "user": {"followers_url": "https://api.github.com/users/abarnert/followers", "gists_url": "https://api.github.com/users/abarnert/gists{/gist_id}", "html_url": "https://github.com/abarnert", "following_url": "https://api.github.com/users/abarnert/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1808250?v=3", "url": "https://api.github.com/users/abarnert", "organizations_url": "https://api.github.com/users/abarnert/orgs", "starred_url": "https://api.github.com/users/abarnert/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/abarnert/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/abarnert/subscriptions", "login": "abarnert", "repos_url": "https://api.github.com/users/abarnert/repos", "received_events_url": "https://api.github.com/users/abarnert/received_events", "id": 1808250, "site_admin": false}, "locked": false}, {"milestone": null, "number": 393, "html_url": "https://github.com/python/mypy/issues/393", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/393", "id": 40428136, "events_url": "https://api.github.com/repos/python/mypy/issues/393/events", "updated_at": "2015-06-01T00:54:40Z", "body": "It would be handy to be able to specify a callable whose argument types are not checked but whose return type is, e.g., by specifying the argument types as `None` instead of a list. \r\n\r\nFor example, consider `map`:\r\n\r\n    def map(function, *iterables):\r\n\r\nHow would you annotate that? Trying to actually specify the argument types to `function` to match the element types of the iterables in `iterables` would require something horrible like C++11's parameter packs and variable-length type tuples. But just specifying `Function` means there's no way to know that the result iterates values of the same type the function returns, which seems like a pity.\r\n\r\nIf you could just use `None` or `Any` instead of a list, you could do this:\r\n\r\n    def map(function: Function[None, T], *iterables: Iterable[Iterable]) -> Iterator[T]:\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/393/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support Callable[..., t] (with literal ellipsis, unspecified argument types and specified return type)", "assignee": null, "closed_at": "2015-06-01T00:54:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/393/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-17T06:37:31Z", "user": {"followers_url": "https://api.github.com/users/abarnert/followers", "gists_url": "https://api.github.com/users/abarnert/gists{/gist_id}", "html_url": "https://github.com/abarnert", "following_url": "https://api.github.com/users/abarnert/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1808250?v=3", "url": "https://api.github.com/users/abarnert", "organizations_url": "https://api.github.com/users/abarnert/orgs", "starred_url": "https://api.github.com/users/abarnert/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/abarnert/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/abarnert/subscriptions", "login": "abarnert", "repos_url": "https://api.github.com/users/abarnert/repos", "received_events_url": "https://api.github.com/users/abarnert/received_events", "id": 1808250, "site_admin": false}, "locked": false}, {"milestone": null, "number": 392, "html_url": "https://github.com/python/mypy/pull/392", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/392", "id": 40425341, "events_url": "https://api.github.com/repos/python/mypy/issues/392/events", "updated_at": "2014-08-19T03:21:51Z", "body": "Bug #331\r\nI did this entirely with automated tools, but the tests pass.", "labels_url": "https://api.github.com/repos/python/mypy/issues/392/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename byte variable 331", "assignee": null, "closed_at": "2014-08-19T03:21:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/392/comments", "labels": [], "created_at": "2014-08-17T02:37:32Z", "user": {"followers_url": "https://api.github.com/users/iankronquist/followers", "gists_url": "https://api.github.com/users/iankronquist/gists{/gist_id}", "html_url": "https://github.com/iankronquist", "following_url": "https://api.github.com/users/iankronquist/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5192353?v=3", "url": "https://api.github.com/users/iankronquist", "organizations_url": "https://api.github.com/users/iankronquist/orgs", "starred_url": "https://api.github.com/users/iankronquist/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/iankronquist/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/iankronquist/subscriptions", "login": "iankronquist", "repos_url": "https://api.github.com/users/iankronquist/repos", "received_events_url": "https://api.github.com/users/iankronquist/received_events", "id": 5192353, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/392.patch", "html_url": "https://github.com/python/mypy/pull/392", "diff_url": "https://github.com/python/mypy/pull/392.diff", "url": "https://api.github.com/repos/python/mypy/pulls/392"}, "locked": false}, {"milestone": null, "number": 391, "html_url": "https://github.com/python/mypy/pull/391", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/391", "id": 40422234, "events_url": "https://api.github.com/repos/python/mypy/issues/391/events", "updated_at": "2014-08-17T18:30:45Z", "body": "PEP 8  fixes for mypy/build.py, mypy/cgen.py and mypy/checker.py.", "labels_url": "https://api.github.com/repos/python/mypy/issues/391/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "PEP 8 fixes", "assignee": null, "closed_at": "2014-08-17T18:16:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/391/comments", "labels": [], "created_at": "2014-08-16T22:43:21Z", "user": {"followers_url": "https://api.github.com/users/ivuk/followers", "gists_url": "https://api.github.com/users/ivuk/gists{/gist_id}", "html_url": "https://github.com/ivuk", "following_url": "https://api.github.com/users/ivuk/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/681816?v=3", "url": "https://api.github.com/users/ivuk", "organizations_url": "https://api.github.com/users/ivuk/orgs", "starred_url": "https://api.github.com/users/ivuk/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ivuk/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ivuk/subscriptions", "login": "ivuk", "repos_url": "https://api.github.com/users/ivuk/repos", "received_events_url": "https://api.github.com/users/ivuk/received_events", "id": 681816, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/391.patch", "html_url": "https://github.com/python/mypy/pull/391", "diff_url": "https://github.com/python/mypy/pull/391.diff", "url": "https://api.github.com/repos/python/mypy/pulls/391"}, "locked": false}, {"milestone": null, "number": 390, "html_url": "https://github.com/python/mypy/issues/390", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/390", "id": 40414235, "events_url": "https://api.github.com/repos/python/mypy/issues/390/events", "updated_at": "2014-11-08T20:16:10Z", "body": "I'm playing with mypy, trying to do some things, and I've getted some strange behaviour (I think).\r\n\r\nI'm trying to do a function that takes a list and then apply map function. The trick is that the list can be of two different types.\r\n\r\nThe first try was something like that:\r\n\r\n    def f(L: Union[List[int], List[str]]) -> None:\r\n        l = map(t, L)\r\n    \r\n    @overload\r\n    def t(L: int) -> List[int]:\r\n        return [L]\r\n    @overload\r\n    def t(L: str) -> List[str]:\r\n        return [L]\r\n\r\nThe fail that getted was this one:\r\n\r\n    test.py, line 8: Argument 2 to \"map\" has incompatible type \"Union[List[int], List[str]]\"; expected Iterable[None]\r\n\r\nThen, I tried to do it with a typevar:\r\n\r\n    T = typevar('T', values=(int, str))\r\n    def f(L: List[T]) -> None:\r\n        l = map(t, L)\r\n    \r\n    @overload\r\n    def t(L: int) -> List[int]:\r\n        return [L]\r\n    @overload\r\n    def t(L: str) -> List[str]:\r\n        return [L]\r\n\r\nAnd now I've getted that error:\r\n\r\n    test.py, line 8: Argument 1 to \"map\" has incompatible type functionlike; expected Function[[\"str\"] -> List[int]]\r\n\r\nIf I add the function that 'mypy' says:\r\n\r\n    @overload\r\n    def t(L: str) -> List[int]:\r\n        return [1]\r\n\r\nAnd now the typecheck pass. \r\nIf I write the overloaded functions backwards, mypy expects other thing:\r\n\r\n\r\n    @overload\r\n    def t(L: str) -> List[str]:\r\n        return [L]\r\n    @overload\r\n    def t(L: int) -> List[int]:\r\n        return [L]\r\n\r\nExpected:\r\n\r\n    test.py, line 8: Argument 1 to \"map\" has incompatible type functionlike; expected Function[[\"int\"] -> List[str]]\r\n\r\n\r\nI don't really know why that's going on, but I think that is a strange behaviour :)", "labels_url": "https://api.github.com/repos/python/mypy/issues/390/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference problems with unions, overloads and map", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/390/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-16T16:21:19Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "locked": false}, {"milestone": null, "number": 389, "html_url": "https://github.com/python/mypy/issues/389", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/389", "id": 40410231, "events_url": "https://api.github.com/repos/python/mypy/issues/389/events", "updated_at": "2014-08-16T18:25:33Z", "body": "I just clones the Git repository and dis a \"python3 setup.py install\". I think everything got installed correctly. Certainly:\r\n\r\n|> which mypy\r\n/usr/local/bin/mypy\r\n|> mypy\r\nUsage: mypy [options] [-m mod | file] [args]\r\n\r\nOptions:\r\n  -m mod      check and run module as a script (terminates option list)\r\n  -S          only check; do not run program or module\r\n  --verbose   more verbose messages\r\n  --html-report dir\r\n              type check and generate a report of type checking precision\r\n              under dir/, do not run the program\r\n\r\nEnvironment variables:\r\n  MYPYPATH    additional module search path\r\n\r\nHowever when I try and execute a trivial script:\r\n\r\n|> python3 helloWorld_python_text.py\r\nHello World!\r\n|> mypy helloWorld_python_text.py \r\nhelloWorld_python_text.py, line 1: Could not find builtins\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/389/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot run script with mypy", "assignee": null, "closed_at": "2014-08-16T18:25:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/389/comments", "labels": [], "created_at": "2014-08-16T12:57:34Z", "user": {"followers_url": "https://api.github.com/users/russel/followers", "gists_url": "https://api.github.com/users/russel/gists{/gist_id}", "html_url": "https://github.com/russel", "following_url": "https://api.github.com/users/russel/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/24420?v=3", "url": "https://api.github.com/users/russel", "organizations_url": "https://api.github.com/users/russel/orgs", "starred_url": "https://api.github.com/users/russel/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/russel/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/russel/subscriptions", "login": "russel", "repos_url": "https://api.github.com/users/russel/repos", "received_events_url": "https://api.github.com/users/russel/received_events", "id": 24420, "site_admin": false}, "locked": false}, {"milestone": null, "number": 388, "html_url": "https://github.com/python/mypy/issues/388", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/388", "id": 40406189, "events_url": "https://api.github.com/repos/python/mypy/issues/388/events", "updated_at": "2016-01-08T18:21:10Z", "body": "In a lot of typed languages, the compiler can be told to check if a function is *total*, handles all cases.\r\n\r\nFor Example:\r\n```python\r\ndef foo(x: Union[int, str]) -> str:\r\n    if isinstance(x, int):\r\n        return \"bar\"\r\n```\r\nIs only a partial function. If `x` is a `str`, then this function actually returns `None`.\r\nThus the output type should really be `Union[str, NoneType]`\r\n\r\nI tested this snippet and mypy doesn't seem to catch this.\r\nI'm not 100% sure, but I think if a function is partial, `NoneType` is a potential return type.", "labels_url": "https://api.github.com/repos/python/mypy/issues/388/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Totality Checks", "assignee": null, "closed_at": "2016-01-08T18:21:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/388/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-16T07:55:52Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "locked": false}, {"milestone": null, "number": 387, "html_url": "https://github.com/python/mypy/pull/387", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/387", "id": 40402744, "events_url": "https://api.github.com/repos/python/mypy/issues/387/events", "updated_at": "2014-08-19T03:09:34Z", "body": "Reference bug #368", "labels_url": "https://api.github.com/repos/python/mypy/issues/387/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "No space in arrows 368", "assignee": null, "closed_at": "2014-08-19T03:09:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/387/comments", "labels": [], "created_at": "2014-08-16T03:56:37Z", "user": {"followers_url": "https://api.github.com/users/iankronquist/followers", "gists_url": "https://api.github.com/users/iankronquist/gists{/gist_id}", "html_url": "https://github.com/iankronquist", "following_url": "https://api.github.com/users/iankronquist/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5192353?v=3", "url": "https://api.github.com/users/iankronquist", "organizations_url": "https://api.github.com/users/iankronquist/orgs", "starred_url": "https://api.github.com/users/iankronquist/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/iankronquist/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/iankronquist/subscriptions", "login": "iankronquist", "repos_url": "https://api.github.com/users/iankronquist/repos", "received_events_url": "https://api.github.com/users/iankronquist/received_events", "id": 5192353, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/387.patch", "html_url": "https://github.com/python/mypy/pull/387", "diff_url": "https://github.com/python/mypy/pull/387.diff", "url": "https://api.github.com/repos/python/mypy/pulls/387"}, "locked": false}, {"milestone": null, "number": 386, "html_url": "https://github.com/python/mypy/issues/386", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/386", "id": 40358384, "events_url": "https://api.github.com/repos/python/mypy/issues/386/events", "updated_at": "2014-08-16T18:33:26Z", "body": "This `os.path` stub fragment:\r\n\r\n    @overload\r\n    def abspath(path: str) -> str: pass\r\n    @overload\r\n    def abspath(path: bytes) -> bytes: pass\r\n\r\ncan be rewritten as:\r\n\r\n    from typing import AnyStr\r\n    def abspath(path: AnyStr) -> AnyStr: pass\r\n\r\ngiven the definition of `AnyStr`:\r\n\r\n    AnyStr = typevar('AnyStr', values=(str, bytes))\r\n\r\nand the fact that type bounds in `typevar`'s `values` can narrow the return type (e.g. the return type `abspath(b'/foo/bar')` would be inferred as `bytes`).\r\n\r\nWould it be simpler to use functions parameterized via `typevar` instead of `@overload` functions in stubs?\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/386/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "AnyStr-style typevars vs @overload functions in stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/386/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-15T15:43:49Z", "user": {"followers_url": "https://api.github.com/users/vlasovskikh/followers", "gists_url": "https://api.github.com/users/vlasovskikh/gists{/gist_id}", "html_url": "https://github.com/vlasovskikh", "following_url": "https://api.github.com/users/vlasovskikh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/126891?v=3", "url": "https://api.github.com/users/vlasovskikh", "organizations_url": "https://api.github.com/users/vlasovskikh/orgs", "starred_url": "https://api.github.com/users/vlasovskikh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/vlasovskikh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/vlasovskikh/subscriptions", "login": "vlasovskikh", "repos_url": "https://api.github.com/users/vlasovskikh/repos", "received_events_url": "https://api.github.com/users/vlasovskikh/received_events", "id": 126891, "site_admin": false}, "locked": false}, {"milestone": null, "number": 385, "html_url": "https://github.com/python/mypy/issues/385", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/385", "id": 40327246, "events_url": "https://api.github.com/repos/python/mypy/issues/385/events", "updated_at": "2015-02-08T23:01:14Z", "body": "Python's `ast` module does a lot what `mypy.parse` does.\r\nIt'd be nice to build mypy's `parse` ontop of `ast`.\r\n\r\nFunction annotations are easy to extract, and it may be useful for integrating with tools that use python's AST.", "labels_url": "https://api.github.com/repos/python/mypy/issues/385/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use Python's ast module for parsing", "assignee": null, "closed_at": "2015-02-08T23:01:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/385/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "wontfix", "color": "ffffff", "url": "https://api.github.com/repos/python/mypy/labels/wontfix"}], "created_at": "2014-08-15T06:55:26Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "locked": false}, {"milestone": null, "number": 384, "html_url": "https://github.com/python/mypy/issues/384", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/384", "id": 40323502, "events_url": "https://api.github.com/repos/python/mypy/issues/384/events", "updated_at": "2014-08-19T03:10:44Z", "body": "The C back end never did anything useful and it's now completely deprecated. We should get rid of all traces of it. This affects at least build.py, cgen.py, lib/ and vm/, I think.", "labels_url": "https://api.github.com/repos/python/mypy/issues/384/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove traces of C back end", "assignee": null, "closed_at": "2014-08-19T03:10:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/384/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-08-15T05:18:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 383, "html_url": "https://github.com/python/mypy/issues/383", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/383", "id": 40323463, "events_url": "https://api.github.com/repos/python/mypy/issues/383/events", "updated_at": "2014-08-16T05:06:58Z", "body": "Playing around with logos for another project.....this popped into my head\r\n\r\n![mypy](https://cloud.githubusercontent.com/assets/388723/3936084/1df44cae-249d-11e4-8ece-1afc148c0125.png)\r\n\r\nIts the normal Python Logo transformed to make an M for mypy", "labels_url": "https://api.github.com/repos/python/mypy/issues/383/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "MyPy Logo", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/383/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-08-15T05:16:39Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "locked": false}, {"milestone": null, "number": 382, "html_url": "https://github.com/python/mypy/issues/382", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/382", "id": 40322484, "events_url": "https://api.github.com/repos/python/mypy/issues/382/events", "updated_at": "2014-08-16T18:28:02Z", "body": "Greg P. Smith pointed out that pytypedecl has a large collection of stubs for builtins and parts of the stdlib that were generated via code analysis, and that more are on the way. It should be easy to convert this collection to mypy stubs and thus augment (or at least verify) the mypy stubs collection.", "labels_url": "https://api.github.com/repos/python/mypy/issues/382/labels{/name}", "comments": 12, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Write a tool to convert pytypedecl stubs to mypy stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/382/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-15T04:40:38Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 381, "html_url": "https://github.com/python/mypy/issues/381", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/381", "id": 40321855, "events_url": "https://api.github.com/repos/python/mypy/issues/381/events", "updated_at": "2014-08-15T06:54:23Z", "body": "unittest is part of the python standard library, and is the preferred method of writing unit tests in python.", "labels_url": "https://api.github.com/repos/python/mypy/issues/381/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Port test suite to unittest", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/381/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-08-15T04:15:38Z", "user": {"followers_url": "https://api.github.com/users/iankronquist/followers", "gists_url": "https://api.github.com/users/iankronquist/gists{/gist_id}", "html_url": "https://github.com/iankronquist", "following_url": "https://api.github.com/users/iankronquist/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5192353?v=3", "url": "https://api.github.com/users/iankronquist", "organizations_url": "https://api.github.com/users/iankronquist/orgs", "starred_url": "https://api.github.com/users/iankronquist/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/iankronquist/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/iankronquist/subscriptions", "login": "iankronquist", "repos_url": "https://api.github.com/users/iankronquist/repos", "received_events_url": "https://api.github.com/users/iankronquist/received_events", "id": 5192353, "site_admin": false}, "locked": false}, {"milestone": null, "number": 380, "html_url": "https://github.com/python/mypy/issues/380", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/380", "id": 40321258, "events_url": "https://api.github.com/repos/python/mypy/issues/380/events", "updated_at": "2014-08-15T22:44:43Z", "body": "I believe it would be beneficial to use a test runner like py.test or nose. Test runners provide more detailed feedback, and will run all of the tests even if one fails. Test runners also show test progress instead of leaving developers wondering whether anything is happening.\r\nThis would replace `test.py` and would require updating the readme accordingly.", "labels_url": "https://api.github.com/repos/python/mypy/issues/380/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use a real test runner", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/380/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-08-15T03:56:53Z", "user": {"followers_url": "https://api.github.com/users/iankronquist/followers", "gists_url": "https://api.github.com/users/iankronquist/gists{/gist_id}", "html_url": "https://github.com/iankronquist", "following_url": "https://api.github.com/users/iankronquist/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/5192353?v=3", "url": "https://api.github.com/users/iankronquist", "organizations_url": "https://api.github.com/users/iankronquist/orgs", "starred_url": "https://api.github.com/users/iankronquist/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/iankronquist/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/iankronquist/subscriptions", "login": "iankronquist", "repos_url": "https://api.github.com/users/iankronquist/repos", "received_events_url": "https://api.github.com/users/iankronquist/received_events", "id": 5192353, "site_admin": false}, "locked": false}, {"milestone": null, "number": 379, "html_url": "https://github.com/python/mypy/pull/379", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/379", "id": 40310425, "events_url": "https://api.github.com/repos/python/mypy/issues/379/events", "updated_at": "2014-12-07T22:50:59Z", "body": "This provides #60.\r\n\r\n* Changing the `all_imported_modules_in_file(self, file)` projection in build which gathers imports from file ASTs root nodes.\r\n* Adding support for the relative import syntax in noderepr.py and output.py.\r\n* Adding a relative counter int to the AST nodes and fixing up treetransform.py.\r\n* Changing the `parse_import_from(self)` function to parse relative imports.", "labels_url": "https://api.github.com/repos/python/mypy/issues/379/labels{/name}", "comments": 18, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Adding relative import support (#60)", "assignee": null, "closed_at": "2014-12-07T22:49:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/379/comments", "labels": [], "created_at": "2014-08-14T23:28:40Z", "user": {"followers_url": "https://api.github.com/users/mason-bially/followers", "gists_url": "https://api.github.com/users/mason-bially/gists{/gist_id}", "html_url": "https://github.com/mason-bially", "following_url": "https://api.github.com/users/mason-bially/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1072924?v=3", "url": "https://api.github.com/users/mason-bially", "organizations_url": "https://api.github.com/users/mason-bially/orgs", "starred_url": "https://api.github.com/users/mason-bially/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mason-bially/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mason-bially/subscriptions", "login": "mason-bially", "repos_url": "https://api.github.com/users/mason-bially/repos", "received_events_url": "https://api.github.com/users/mason-bially/received_events", "id": 1072924, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/379.patch", "html_url": "https://github.com/python/mypy/pull/379", "diff_url": "https://github.com/python/mypy/pull/379.diff", "url": "https://api.github.com/repos/python/mypy/pulls/379"}, "locked": false}, {"milestone": null, "number": 378, "html_url": "https://github.com/python/mypy/pull/378", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/378", "id": 40303611, "events_url": "https://api.github.com/repos/python/mypy/issues/378/events", "updated_at": "2014-08-17T18:22:07Z", "body": "Take 1! (I probably did at least one thing wrong, but I guess I'll find out...)", "labels_url": "https://api.github.com/repos/python/mypy/issues/378/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added .travis.yml", "assignee": null, "closed_at": "2014-08-17T18:22:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/378/comments", "labels": [], "created_at": "2014-08-14T21:52:09Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/378.patch", "html_url": "https://github.com/python/mypy/pull/378", "diff_url": "https://github.com/python/mypy/pull/378.diff", "url": "https://api.github.com/repos/python/mypy/pulls/378"}, "locked": false}, {"milestone": null, "number": 377, "html_url": "https://github.com/python/mypy/issues/377", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/377", "id": 40267939, "events_url": "https://api.github.com/repos/python/mypy/issues/377/events", "updated_at": "2014-09-01T08:14:12Z", "body": "The typing module could be more generally useful even outside mypy, such as for annotating code for documentation purposes. Also, other tools such as IDEs, documentation tools could more easily use it.\r\n\r\nThis discussion on python-ideas is relevant:\r\n\r\nhttps://mail.python.org/pipermail/python-ideas/2014-August/028618.html\r\n\r\n**EDIT**: Changed from 'separate project' to a 'separate installation package'", "labels_url": "https://api.github.com/repos/python/mypy/issues/377/labels{/name}", "comments": 9, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move the typing module to a separate installation package", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/377/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-08-14T15:41:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 376, "html_url": "https://github.com/python/mypy/pull/376", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/376", "id": 40218039, "events_url": "https://api.github.com/repos/python/mypy/issues/376/events", "updated_at": "2014-09-15T01:12:02Z", "body": "Fixes #286", "labels_url": "https://api.github.com/repos/python/mypy/issues/376/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix 1-based indexing error message", "assignee": null, "closed_at": "2014-09-15T01:12:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/376/comments", "labels": [], "created_at": "2014-08-14T02:28:11Z", "user": {"followers_url": "https://api.github.com/users/adolfosilva/followers", "gists_url": "https://api.github.com/users/adolfosilva/gists{/gist_id}", "html_url": "https://github.com/adolfosilva", "following_url": "https://api.github.com/users/adolfosilva/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/7690147?v=3", "url": "https://api.github.com/users/adolfosilva", "organizations_url": "https://api.github.com/users/adolfosilva/orgs", "starred_url": "https://api.github.com/users/adolfosilva/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/adolfosilva/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/adolfosilva/subscriptions", "login": "adolfosilva", "repos_url": "https://api.github.com/users/adolfosilva/repos", "received_events_url": "https://api.github.com/users/adolfosilva/received_events", "id": 7690147, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/376.patch", "html_url": "https://github.com/python/mypy/pull/376", "diff_url": "https://github.com/python/mypy/pull/376.diff", "url": "https://api.github.com/repos/python/mypy/pulls/376"}, "locked": false}, {"milestone": null, "number": 375, "html_url": "https://github.com/python/mypy/issues/375", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/375", "id": 40205881, "events_url": "https://api.github.com/repos/python/mypy/issues/375/events", "updated_at": "2015-05-17T18:11:14Z", "body": "On python-ideas, Antoine Pitrou wrote\r\n\r\n\"\"\"\r\nactually, I'm a bit worried when I see that \"List[int]()\" instantiates an actual list; calling a type description class should give you a parametered type description, not an object; the [] notation is in general not powerful enough if you want several type parameters, possibly keyword-only\r\n\"\"\"\r\n\r\nHe may be right, and we may have to spell \"create a concrete instance\" as e.g. List[int].new(). OTOH maybe the thing he'd like to spell with __call__() might be spelled with an explicit method name, as long as we don't assume a correspondence between class and instance attributes for these types (that correspondence is often broken at the metaclass level anyway).", "labels_url": "https://api.github.com/repos/python/mypy/issues/375/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Maybe reserve calling a type declaration class for something other than creating an instance?", "assignee": null, "closed_at": "2015-05-17T18:11:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/375/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2014-08-13T22:24:47Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 374, "html_url": "https://github.com/python/mypy/issues/374", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/374", "id": 40124482, "events_url": "https://api.github.com/repos/python/mypy/issues/374/events", "updated_at": "2015-10-13T05:59:11Z", "body": "Currently we don't type check functions without type annotations, even in modules that import `typing`. However, it might be better to run type checker for all functions. In functions without annotations every local variable (and argument) would have implicit `Any` types. This would let us catch some simple type errors within expressions, at least.", "labels_url": "https://api.github.com/repos/python/mypy/issues/374/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do some type checking in functions without annotations", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/374/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-08-13T05:36:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 373, "html_url": "https://github.com/python/mypy/issues/373", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/373", "id": 40124291, "events_url": "https://api.github.com/repos/python/mypy/issues/373/events", "updated_at": "2014-08-31T23:28:57Z", "body": "The mypy script should probably just type check the program, rather than first type checking and then running it. This way it would be more obvious that mypy is a static type checker rather than a Python implementation.", "labels_url": "https://api.github.com/repos/python/mypy/issues/373/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not run program, only type check", "assignee": null, "closed_at": "2014-08-31T23:28:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/373/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-13T05:31:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 372, "html_url": "https://github.com/python/mypy/issues/372", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/372", "id": 40123679, "events_url": "https://api.github.com/repos/python/mypy/issues/372/events", "updated_at": "2014-08-14T20:46:30Z", "body": "There should be an easy to way to check that all of the following are okay on different versions of CPython and also PyPy:\r\n\r\n * Unit tests pass.\r\n * Type checker can type check itself without warnings.\r\n * pythoneval integration test cases pass (unit test suite does not run them).\r\n * All available stubs (both 3.x and 2.7) can be imported without errors.\r\n * All modules under lib-python can be type checked without errors.\r\n\r\nWrite a script that does all of the above things. It would be nice if it'd be possible to configure the locations of different Python implementations (and disable some if they are not available).", "labels_url": "https://api.github.com/repos/python/mypy/issues/372/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Script for running all tests on supported versions of Python", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/372/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-08-13T05:12:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 371, "html_url": "https://github.com/python/mypy/issues/371", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/371", "id": 39951844, "events_url": "https://api.github.com/repos/python/mypy/issues/371/events", "updated_at": "2015-11-23T23:31:30Z", "body": "Currently the project does not have a travis build.\r\nI'm willing to contribute a .travis.yml file if travis was enabled.\r\n\r\nOptionally, enabling coveralls.io and landscape.io for more metrics is also a good idea.", "labels_url": "https://api.github.com/repos/python/mypy/issues/371/labels{/name}", "comments": 18, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Travis Build", "assignee": null, "closed_at": "2015-11-23T23:31:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/371/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-08-11T12:06:17Z", "user": {"followers_url": "https://api.github.com/users/thedrow/followers", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "html_url": "https://github.com/thedrow", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/48936?v=3", "url": "https://api.github.com/users/thedrow", "organizations_url": "https://api.github.com/users/thedrow/orgs", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "login": "thedrow", "repos_url": "https://api.github.com/users/thedrow/repos", "received_events_url": "https://api.github.com/users/thedrow/received_events", "id": 48936, "site_admin": false}, "locked": false}, {"milestone": null, "number": 370, "html_url": "https://github.com/python/mypy/issues/370", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/370", "id": 39921437, "events_url": "https://api.github.com/repos/python/mypy/issues/370/events", "updated_at": "2014-08-11T00:54:51Z", "body": "mypy.codec.pytokenize is Python 2 only, which is somewhat awkward. Make it possible to at least import it in Python 3. No need to verify that it works correctly in Python 3 yet, since it's only used in Python 2.", "labels_url": "https://api.github.com/repos/python/mypy/issues/370/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy.codec.pytokenize is not Python 3 compatible", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-11T00:54:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/370/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-08-11T00:53:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 369, "html_url": "https://github.com/python/mypy/issues/369", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/369", "id": 39921302, "events_url": "https://api.github.com/repos/python/mypy/issues/369/events", "updated_at": "2014-08-11T00:48:35Z", "body": "stubs/3.2/encodings.py has `- > codecs.CodecInfo` (an extra space after -) which is not valid Python (even though mypy accepts it).", "labels_url": "https://api.github.com/repos/python/mypy/issues/369/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix - > in encodings stubs", "assignee": null, "closed_at": "2014-08-11T00:48:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/369/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2014-08-11T00:47:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 368, "html_url": "https://github.com/python/mypy/issues/368", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/368", "id": 39921271, "events_url": "https://api.github.com/repos/python/mypy/issues/368/events", "updated_at": "2014-08-19T03:11:47Z", "body": "Currently specifying a return type using `- >` (with a space) is allowed in a function annotation, even though Python rejects it. Make this consistent with Python and require `->` to be used.", "labels_url": "https://api.github.com/repos/python/mypy/issues/368/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not allow - > in function annotation", "assignee": null, "closed_at": "2014-08-19T03:11:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/368/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2014-08-11T00:46:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 367, "html_url": "https://github.com/python/mypy/pull/367", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/367", "id": 39886848, "events_url": "https://api.github.com/repos/python/mypy/issues/367/events", "updated_at": "2014-11-24T03:55:54Z", "body": "This is a text to explain how yield from works, and why I took some decisions :-)\r\n(In the commits, are so much \"white lines\" changed, that's because in the original source code are lines with just spaces, or spaces at the end of the line, and my editor (Subl3) remove that) \r\n\r\nYield From\r\n====\r\n\r\n**yield from** can be applied to **Iterables** and **Futures** (A kind of Iterable).\r\n\r\nAnd can be applied in two ways:\r\n\r\n\r\n* Statement:\r\n```python\r\ndef h():\r\n    yield from x()\r\n```\r\n* Expression:\r\n```python\r\ndef h():\r\n    y = yield from x()\r\n```\r\n\r\nAbout Iterables:\r\n------\r\n\r\n##### Statement:\r\nCheck if the return type of the function is an iterable and the infered of the iterable applied is compatible with the return type.\r\nEx:\r\n```python\r\ndef h() -> Iterator[int]:\r\n    yield from [1, 2, 3]   # Here, List is an Iterable, and have ints inside.\r\n\r\nx = h() # the type will be Iterator[int]\r\nfor i in x:\r\n    print(i)\r\n```\r\nIn the example above, the function return a Iterator of ints, that is a supertype of Iterable.\r\nHere another example with a function Iterator:\r\n```python\r\ndef h() -> Iterator[int]:\r\n    yield from h2()\r\ndef h2() -> Iterator[int]:\r\n    yield 1\r\n    yield 2\r\n    yield 3\r\nx = h() # the type will be Iterator[int]\r\nfor i in x:\r\n    print(i)\r\n```\r\n\r\n##### Expression:\r\n\r\nRight now just checks if the applied is an Iterable.\r\nIn the future, when other things are added to mypy, here should check the\r\nreturn type, and check the types (just like in statement).\r\nThe things that mypy needs to add this to the expression type check:\r\n\r\n* Function with yields have a return.\r\n```python\r\ndef h() -> Iterator[int]:\r\n    yield 1\r\n    return 2 # Here now fail, but this is a valid syntax\r\n\r\ndef h2() -> Iterator[int]:\r\n    x = yield from h() # Here when iterate will send the h() iterator\r\n                       # and when the iterator is finished,\r\n                       # will get the return value in x\r\n```\r\n* yield statement can be an expression assignment.\r\n```python\r\ndef h() -> Iterator[int]:\r\n    y = yield 1\r\n```\r\n\r\nThis two things have interaction with the new **send()**, **close()** and **throw()** method of the iterables (this should have added too)\r\n\r\n\r\nAbout Futures.\r\n--------\r\n\r\nI said that Futures are a \"kind\" of iterables, because it have an \\_\\_iter\\_\\_ function but we never iterate over there (we just can do one next(), if try to do any more raises an error). The main loop will catch the futures that had been \"yielded from\" or that are inserted directly (call_soon, run_until_complete, ...)\r\n\r\nSo, the idea that I had to write the Future type, and that I've implemented is that one:\r\n\r\n* Future type is writed like Iterator: 'Future[Some]'\r\n* But also can be a instance, but have to say the type inside:\r\n```python\r\nx = Future()  # type: Future[int]\r\n```\r\n* If the function have a Future type as type returned, that function can be \"yielded from\".\r\n* If a function have the @coroutine decorator, or **\"yield from\"** a Future inside, then, that function can be \"yielded from\", and the type must be 'Future[Some]'. You can always return 'Some', and will be wrapped inside a Future type. (Examples after)\r\n* When yield from a 'Future[Some]', the type returned to a variable assignment will be 'Some', and not the 'Future[Some]'. Right here an example, using **asyncio.sleep(float, T)**, that have this return type: **'Future[T]'**:\r\n\r\n```python\r\nx = asyncio.sleep(100, '1') # the function will return the type:'Future[str]'\r\n                            # (and x will be of that type)\r\n                            # won't sleep (just called, not \"yielded from\",\r\n                            # but we doesn't care about that)\r\ny = yield from x   # 'x' is a 'Future[str]',and we do a \"yield from\" to it\r\n                   # so, 'y' will be 'str' type (take out the Future)\r\n                   # (When executed the code, will sleep here, because we\r\n                   # give the future to the main loop and execute it)\r\n```\r\n\r\nSo, if \"yield from\" is applied to a Future, we won't get it (the loop will).\r\nBut if we wan't to do a function that can be \"yielded from\" (this is called coroutine), then the function need to have the return type as Future[Some], and the @asyncio.coroutine decorator (this is explained after)\r\n\r\n\r\n##### Statement:\r\n\r\nWe just don't care about it, we won't get the Future, the loop will, so we don't need to check anything.\r\nEx:\r\n```python\r\n@asyncio.coroutine\r\ndef h() -> 'Future[int]':\r\n    yield from asyncio.sleep(2)\r\n    return 1\r\n```\r\n\r\nWe set the return type as **Future[int]** because we want to let know that this is a coroutine and can be yielded from but, also, that will return an int.\r\nIf you do: **\"y = yield from h()\"**, the program will sleep 2 seconds, and then y will be 1 (the return value).\r\n\r\nActually, if you just call the function, and not \"yield from\" it, you will have a generator (but can't iterate over there, that raises an exception)\r\n```python\r\ny = yield from h()  # type: int # this is infered\r\nz = h()             # type: Future[int] # this is infered too\r\n# now you can \"yield from z\" because it's a Future\r\nfor i in z:         # This raises an exception, we can't iterate\r\n    print(i)\r\n```\r\n\r\n##### Expression:\r\n\r\nWhen we check the expression yield from, if we see that the type applied is a **Future[Some]**, then, the type to return (to assignment_stmt) won't be **Future[Some]**, instead of that, we'll return the type **Some**, because, as said, the Future is just for know where are a coroutine, or where can be \"yielded from\", but in the assignment expression, the variable get the type returned, not the Future.\r\nEx:\r\n\r\n```python\r\n@asyncio.coroutine        # say that is a coroutine\r\ndef h() -> 'Future[str]': # this will be a future, so must be yielded from\r\n                          # and is a coroutine too\r\n    return 'hello!'       # Here we return a str, but see that\r\n                          # is a coroutine, and will wrap the\r\n                          # str in a Future[str]\r\n\r\n@asyncio.coroutine\r\ndef h2() -> 'Future[None]':\r\n    x = yield from h()    # Here, we can yield from because h is a Future,\r\n                          # but 'x' won't be 'Future[str]', it will\r\n                          # be str\r\n    print(x)\r\n```\r\n\r\n\r\nOther things of Futures\r\n--------\r\n\r\n* Can I **\"yield from\"** a func?.\r\n    * If the function returns **Future[Some]**, yes, you can.\r\n* How wrap the return type into a Future in a function.\r\n    * The **@asyncio.coroutine** decorator or **yield from** a Future is needed, when some of that happens, the function is setted as coroutine, and the return type will try to wrap it in a Future.\r\n    * Count how many **\"Futures\"** have the function return type against the type returned, and if the difference is up to one, will wrap the type returned.\r\n    Ex:\r\n```python\r\ndef h() -> Future[int]:\r\n    return 1  # Here, the difference of \"Futures\" is one, so the\r\n              # int returned will be wrapped\r\n              # inside a Future as Future[int]\r\n\r\ndef h() -> Future[int]:\r\n    return asyncio.Future() # type: Future[int]\r\n    # Here nothing is wrapped because the difference is 0\r\n    # but the type check will fail, because the first\r\n    # Future[] of the return type is removed when \"yielded from\"\r\n    # so, that function would need another Future[] in the function type\r\n\r\ndef h() -> Future[int]:\r\n    a = asyncio.Future()  # type: Future[Future[int]]\r\n    return a\r\n    # Here nothing is wrapped, but the type check will fail\r\n    # because a Future with an int was expected\r\n    # and a Future with a Future was given.\r\n```\r\n* The **Future** type used comes from **asyncio.futures.Future**, and the type definition is in **\"stubs/3.4/asyncio/futures.py\"** so, you will need to do **\"from asyncio import Future\"**, or use **\"asyncio.Future\"** instead of **\"Future\"**.\r\nFor that reason, the type have to be writted as string ( **'Future[int]'** ), if it's not writted in that way, the script will fail when try to run it, because the real Future type is not subscritable.\r\nI think that in the future, can be a type in **\"typing\"**, called **Futur** or some like that, to can write the type without the string.\r\nBecause of that (**Future** comes from **asyncio**), now the tests to Futures can't be written (fails trying to import all things)\r\nAnyway, in **stubs/3.4/asyncio** I added a directory called **\"examples\"** where are so much examples about **Futures**.\r\n* What if I want a Future that have a Future inside, that have a Future inside, ...?\r\nYou have to do it like if you have a Iterator that return an Iterator, ...:\r\n\r\n```python\r\nfrom typing import Iterator\r\n\r\ndef h4(x: int) -> Iterator[int]:\r\n    yield x\r\n    yield x+1\r\n\r\ndef h3(x: int) -> Iterator[Iterator[int]]:\r\n    yield h4(x)\r\n    yield h4(x+2)\r\n\r\ndef h() -> Iterator[Iterator[Iterator[int]]]:\r\n    yield h3(1)\r\n    yield h3(5)\r\n\r\nx = h()\r\nfor i in x:   # First Iterator\r\n    for j in i:  # Second Iterator\r\n        for k in j:  # Third Iterator\r\n            print(k)  # Here get the ints\r\n```\r\n\r\nBut with Futures!\r\n\r\n```python\r\nimport typing\r\nimport asyncio\r\nfrom asyncio import Future\r\n\r\n@asyncio.coroutine\r\ndef h4() -> 'Future[Future[int]]':\r\n    \"\"\"\r\n    Return a Future[int], and have one more Future anotation saying\r\n    that can be \"yielded from\".\r\n    \"\"\"\r\n    yield from asyncio.sleep(1)  # Just to wait a little bit :)\r\n    f = asyncio.Future() #type: Future[int]\r\n    return f   # Here Future[int] is wrapped in Future[Future[int]]\r\n\r\n@asyncio.coroutine\r\ndef h3() -> 'Future[Future[Future[int]]]':\r\n    \"\"\"\r\n    Same as h4() but with one more Future :P\r\n    \"\"\"\r\n    x = yield from h4()    # Get the Future[int] of h4()\r\n    x.set_result(42)       # set 42 as result\r\n    f = asyncio.Future() #type: Future[Future[int]]  # Create a new Future\r\n    f.set_result(x)      # set the result as the Future taked from h4\r\n    return f            # return it\r\n\r\n@asyncio.coroutine\r\ndef h() -> 'Future[None]':\r\n    print(\"Before\")\r\n    x = yield from h3()   # Get the Future[Future[int]] from h3()\r\n    y = yield from x      # Get the Future[int] from the Future[Future[int]]\r\n    z = yield from y      # Get the int from the Future[int]\r\n    print(z)              # Prints 42\r\n    print(y)              # Prints Future<result=42>\r\n    print(x)              # Prints Future<result=Future<result=42>>\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(h())\r\nloop.close()\r\n```\r\n\r\nSummary\r\n--------\r\nTo say that a function can be **\"yielded from\"**, the return type need to have a **Future[Some]**\r\n\r\nThe first Future of the type, is just to indicate that can be yielded from, so, if you\r\nare going to return an int, the type of the function is Future[int] and if you are going to return a Future\r\nthat have inside an int, the type of the function is: Future[Future[int]]\r\n\r\nThe type in the function have to be writted in string.\r\n```python\r\n    def h() -> 'Future[None]':\r\n        pass\r\n```\r\n\r\nSee all the examples in **\"stubs/3.4/asyncio/examples\"**\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/367/labels{/name}", "comments": 15, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Yield from", "assignee": null, "closed_at": "2014-11-24T03:55:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/367/comments", "labels": [], "created_at": "2014-08-09T14:53:11Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/367.patch", "html_url": "https://github.com/python/mypy/pull/367", "diff_url": "https://github.com/python/mypy/pull/367.diff", "url": "https://api.github.com/repos/python/mypy/pulls/367"}, "locked": false}, {"milestone": null, "number": 366, "html_url": "https://github.com/python/mypy/issues/366", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/366", "id": 39767380, "events_url": "https://api.github.com/repos/python/mypy/issues/366/events", "updated_at": "2015-05-17T17:30:13Z", "body": "While trying to model the output of product from itertools #358, its become apparent that the mypy type system lacks the strength to model value defined types. \r\n\r\nThis will happen with any kind of n-vector and is and could be potentially solved statically using dependent types.\r\n\r\nThis would likely be a massive endeavor, but the conversation is likely worth having.", "labels_url": "https://api.github.com/repos/python/mypy/issues/366/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dependent Types", "assignee": null, "closed_at": "2015-05-17T17:30:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/366/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-08-07T20:56:16Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "locked": false}, {"milestone": null, "number": 365, "html_url": "https://github.com/python/mypy/issues/365", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/365", "id": 39585940, "events_url": "https://api.github.com/repos/python/mypy/issues/365/events", "updated_at": "2014-08-17T12:24:51Z", "body": "Looking through  the code, it looks like there are multiple PEP8 violations. I was wondering if it might be useful to set down a style guideline to make contribution easier?", "labels_url": "https://api.github.com/repos/python/mypy/issues/365/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "PEP8 compliance + Style Guidlines", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/365/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-08-06T03:09:15Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "locked": false}, {"milestone": null, "number": 364, "html_url": "https://github.com/python/mypy/issues/364", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/364", "id": 39383236, "events_url": "https://api.github.com/repos/python/mypy/issues/364/events", "updated_at": "2014-08-04T00:29:25Z", "body": "```python\r\ndef f() -> str:\r\n    return '1'\r\n    return 1\r\n```\r\n\r\nIn my opinion, this still should cause an error, not exit silently.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/364/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid return after valid return generates no error", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/364/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-04T00:13:16Z", "user": {"followers_url": "https://api.github.com/users/kirbyfan64/followers", "gists_url": "https://api.github.com/users/kirbyfan64/gists{/gist_id}", "html_url": "https://github.com/kirbyfan64", "following_url": "https://api.github.com/users/kirbyfan64/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1690697?v=3", "url": "https://api.github.com/users/kirbyfan64", "organizations_url": "https://api.github.com/users/kirbyfan64/orgs", "starred_url": "https://api.github.com/users/kirbyfan64/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/kirbyfan64/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/kirbyfan64/subscriptions", "login": "kirbyfan64", "repos_url": "https://api.github.com/users/kirbyfan64/repos", "received_events_url": "https://api.github.com/users/kirbyfan64/received_events", "id": 1690697, "site_admin": false}, "locked": false}, {"milestone": null, "number": 363, "html_url": "https://github.com/python/mypy/issues/363", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/363", "id": 39383094, "events_url": "https://api.github.com/repos/python/mypy/issues/363/events", "updated_at": "2014-08-04T00:04:54Z", "body": "NotImplemented should be implicitly a valid return value of operator methods such as `__lt__`, `__add__`, but it should be flagged as an error to return it elsewhere (unless, maybe, the return type includes a suitable type such as typing.NotImplementedType).\r\n\r\nCurrently NotImplemented has type Any which allows it to be used in any context, which is wrong.\r\n\r\nThis should be fine:\r\n\r\n    def __lt__(self, x: int) -> bool:\r\n        if isinstance(x, int):\r\n            return ...\r\n        return NotImplemented\r\n\r\nThis should not be fine:\r\n\r\n    def f() -> bool:\r\n        return NotImplemented\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/363/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "More precise type checking of NotImplemented and operator overloading", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/363/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-04T00:04:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 362, "html_url": "https://github.com/python/mypy/issues/362", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/362", "id": 39381953, "events_url": "https://api.github.com/repos/python/mypy/issues/362/events", "updated_at": "2014-08-03T23:35:37Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/362/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add IO to Python 2.7 typing.__all__", "assignee": null, "closed_at": "2014-08-03T23:35:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/362/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-03T23:11:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 361, "html_url": "https://github.com/python/mypy/issues/361", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/361", "id": 39381047, "events_url": "https://api.github.com/repos/python/mypy/issues/361/events", "updated_at": "2014-08-03T23:35:05Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/361/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add AnyStr to __all__ in 3.2 typing", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/361/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-03T22:27:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 360, "html_url": "https://github.com/python/mypy/issues/360", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/360", "id": 39380940, "events_url": "https://api.github.com/repos/python/mypy/issues/360/events", "updated_at": "2014-09-22T00:01:00Z", "body": "The type checker may use context to infer an invalid type variable value for a type variable such as AnyStr:\r\n\r\n    from typing import AnyStr\r\n\r\n    def f(x: AnyStr) -> AnyStr:\r\n        if isinstance(x, str):\r\n            return 'foo'\r\n        else:\r\n            return b'zar'\r\n\r\n    print(repr(f(''))) # Type argument 1 of \"f\" has incompatible value \"object\"\r\n\r\nWe should probably not use type context in cases like this when the type variable is not used within a generic type.", "labels_url": "https://api.github.com/repos/python/mypy/issues/360/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Context causes invalid type argument value to be inferred", "assignee": null, "closed_at": "2014-09-15T03:10:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/360/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-03T22:22:28Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 359, "html_url": "https://github.com/python/mypy/issues/359", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/359", "id": 39380927, "events_url": "https://api.github.com/repos/python/mypy/issues/359/events", "updated_at": "2015-10-01T13:03:49Z", "body": "A common pattern in alot of functions is to use None to signify something alternative behavior.\r\nIt might be beneficial to include a convenience Maybe type that is a partial application of Union with None. \r\n\r\nI'm still familiarizing myself with the code and am not 100% what to do yet", "labels_url": "https://api.github.com/repos/python/mypy/issues/359/labels{/name}", "comments": 12, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type checking of None values", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/359/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2014-08-03T22:21:56Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "locked": false}, {"milestone": null, "number": 358, "html_url": "https://github.com/python/mypy/pull/358", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/358", "id": 39380863, "events_url": "https://api.github.com/repos/python/mypy/issues/358/events", "updated_at": "2014-08-14T16:02:51Z", "body": "Can use Union type to model Maybes and Products.", "labels_url": "https://api.github.com/repos/python/mypy/issues/358/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Restrict types for stubs in itertools", "assignee": null, "closed_at": "2014-08-14T16:02:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/358/comments", "labels": [], "created_at": "2014-08-03T22:18:36Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/358.patch", "html_url": "https://github.com/python/mypy/pull/358", "diff_url": "https://github.com/python/mypy/pull/358.diff", "url": "https://api.github.com/repos/python/mypy/pulls/358"}, "locked": false}, {"milestone": null, "number": 357, "html_url": "https://github.com/python/mypy/issues/357", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/357", "id": 39380823, "events_url": "https://api.github.com/repos/python/mypy/issues/357/events", "updated_at": "2014-08-03T23:35:05Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/357/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support typevar with values in Python 2.7 typing module", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/357/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-08-03T22:16:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 356, "html_url": "https://github.com/python/mypy/issues/356", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/356", "id": 39380744, "events_url": "https://api.github.com/repos/python/mypy/issues/356/events", "updated_at": "2014-09-01T17:22:09Z", "body": "Currenty all Python evaluation tests are in mypy/test/data/pythoneval.test. Add a separate file for Python 2 evaluation tests and all existing evaluation tests to that file.", "labels_url": "https://api.github.com/repos/python/mypy/issues/356/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Split Python 2 and Python 3 evaluation tests into separate test files", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/356/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2014-08-03T22:12:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 355, "html_url": "https://github.com/python/mypy/issues/355", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/355", "id": 39380661, "events_url": "https://api.github.com/repos/python/mypy/issues/355/events", "updated_at": "2014-08-03T22:08:17Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/355/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "bytes should be usable as a type alias for str in Python 2", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/355/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-08-03T22:08:17Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 354, "html_url": "https://github.com/python/mypy/issues/354", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/354", "id": 39380553, "events_url": "https://api.github.com/repos/python/mypy/issues/354/events", "updated_at": "2014-08-03T23:35:05Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/354/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove getvalue from io.TextIOWrapper stub", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/354/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-03T22:01:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 353, "html_url": "https://github.com/python/mypy/issues/353", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/353", "id": 39380426, "events_url": "https://api.github.com/repos/python/mypy/issues/353/events", "updated_at": "2014-08-03T23:35:05Z", "body": "Add io.open to Python 2 + 3 stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/353/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add io.open to stubs", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/353/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-03T21:56:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 352, "html_url": "https://github.com/python/mypy/issues/352", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/352", "id": 39380416, "events_url": "https://api.github.com/repos/python/mypy/issues/352/events", "updated_at": "2014-08-03T23:35:05Z", "body": "Implement as much functionality as in Python 3 io stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/352/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add partial Python 2.7 io stub", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/352/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-03T21:56:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 351, "html_url": "https://github.com/python/mypy/issues/351", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/351", "id": 39380361, "events_url": "https://api.github.com/repos/python/mypy/issues/351/events", "updated_at": "2014-08-03T23:35:05Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/351/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "In Python 2.7 stubs, allow print function to be used with both text and binary files", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/351/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-03T21:53:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 350, "html_url": "https://github.com/python/mypy/issues/350", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/350", "id": 39380137, "events_url": "https://api.github.com/repos/python/mypy/issues/350/events", "updated_at": "2014-08-03T23:35:05Z", "body": "Define typing.AnyStr in Python 2.7.", "labels_url": "https://api.github.com/repos/python/mypy/issues/350/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Python 2.7 AnyStr", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/350/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-03T21:43:22Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 349, "html_url": "https://github.com/python/mypy/issues/349", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/349", "id": 39380092, "events_url": "https://api.github.com/repos/python/mypy/issues/349/events", "updated_at": "2014-08-03T23:35:05Z", "body": "Make Python 2 Pattern and Match be similar to Python 3. In particular, use generic classes and define the classes in the typing module.", "labels_url": "https://api.github.com/repos/python/mypy/issues/349/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix Python 2.7 regular expression Pattern and Match types", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/349/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-03T21:41:38Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 348, "html_url": "https://github.com/python/mypy/issues/348", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/348", "id": 39379964, "events_url": "https://api.github.com/repos/python/mypy/issues/348/events", "updated_at": "2014-08-03T23:35:05Z", "body": "IO types are not used consistently in Python 2.7 stubs.\r\n\r\nFigure out the best types to use and implement them.\r\n\r\nIn particular, add open() return type.", "labels_url": "https://api.github.com/repos/python/mypy/issues/348/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix Python 2.7 IO types", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/348/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-08-03T21:35:01Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 347, "html_url": "https://github.com/python/mypy/pull/347", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/347", "id": 39378855, "events_url": "https://api.github.com/repos/python/mypy/issues/347/events", "updated_at": "2014-08-03T23:50:40Z", "body": "I get the error:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 29, in <module>\r\n    stub_dirs = [''] + [name for name in os.listdir(base)\r\nFileNotFoundError: [Errno 2] No such file or directory: 'stubs/3.3'\r\n```\r\n\r\nThis is because 3.3 doesn't exist (either because its empty or was omitted).\r\nI considered just skipping it, but it appears in build.py that it is implicitly assumed to exist.", "labels_url": "https://api.github.com/repos/python/mypy/issues/347/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "create empty stub dir if it does not exist", "assignee": null, "closed_at": "2014-08-03T23:50:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/347/comments", "labels": [], "created_at": "2014-08-03T20:37:20Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/347.patch", "html_url": "https://github.com/python/mypy/pull/347", "diff_url": "https://github.com/python/mypy/pull/347.diff", "url": "https://api.github.com/repos/python/mypy/pulls/347"}, "locked": false}, {"milestone": null, "number": 346, "html_url": "https://github.com/python/mypy/pull/346", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/346", "id": 39378173, "events_url": "https://api.github.com/repos/python/mypy/issues/346/events", "updated_at": "2014-10-25T22:20:02Z", "body": "From my experience setuptools is abit easier to develop with (install vs develop). \r\n\r\nIt also has great virtualenv integration.", "labels_url": "https://api.github.com/repos/python/mypy/issues/346/labels{/name}", "comments": 27, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Switch to setuptools", "assignee": null, "closed_at": "2014-10-25T22:20:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/346/comments", "labels": [], "created_at": "2014-08-03T20:07:56Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/346.patch", "html_url": "https://github.com/python/mypy/pull/346", "diff_url": "https://github.com/python/mypy/pull/346.diff", "url": "https://api.github.com/repos/python/mypy/pulls/346"}, "locked": false}, {"milestone": null, "number": 345, "html_url": "https://github.com/python/mypy/issues/345", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/345", "id": 39375869, "events_url": "https://api.github.com/repos/python/mypy/issues/345/events", "updated_at": "2014-12-08T00:51:37Z", "body": "In addition to looking for for python files in the stubs folder or specified by MYPYPATH, it'd be nice to a alternative extension .py.s or something that signified it's a stub for the matching module. \r\n\r\nThis would be particularly nice for python2.x support since one could define .py and .py.s or have mypy compile to both (like typescript -> javascript)\r\n\r\nThis would have a similar goal as #25 ", "labels_url": "https://api.github.com/repos/python/mypy/issues/345/labels{/name}", "comments": 7, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Alternative extension for stubs", "assignee": null, "closed_at": "2014-12-08T00:51:37Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/345/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-08-03T18:30:31Z", "user": {"followers_url": "https://api.github.com/users/mvcisback/followers", "gists_url": "https://api.github.com/users/mvcisback/gists{/gist_id}", "html_url": "https://github.com/mvcisback", "following_url": "https://api.github.com/users/mvcisback/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/388723?v=3", "url": "https://api.github.com/users/mvcisback", "organizations_url": "https://api.github.com/users/mvcisback/orgs", "starred_url": "https://api.github.com/users/mvcisback/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/mvcisback/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/mvcisback/subscriptions", "login": "mvcisback", "repos_url": "https://api.github.com/users/mvcisback/repos", "received_events_url": "https://api.github.com/users/mvcisback/received_events", "id": 388723, "site_admin": false}, "locked": false}, {"milestone": null, "number": 344, "html_url": "https://github.com/python/mypy/pull/344", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/344", "id": 38950991, "events_url": "https://api.github.com/repos/python/mypy/issues/344/events", "updated_at": "2014-08-03T09:33:02Z", "body": "Commit's log\r\n=======\r\n\r\nFirst commit\r\n---------\r\n\r\n**nodes.py** ->\r\n\r\n    - Added YieldFromStmt\r\n\r\n**traverser.py** ->\r\n\r\n    - Add import YieldFromStmt\r\n    - Added visit_yield_from function\r\n\r\n**visitor.py** ->\r\n\r\n    - Added visit_yield_from function\r\n\r\n**parse.py** ->\r\n\r\n    - Add import YieldFromStmt\r\n    - Modified parse_yield_stmt to allow yield from statements (here comes when there is not assigntment, just a yield from wait)\r\n    - Added parse_yield_from_expr to allow a yield from assigned to a var, return the callExpr of the yield from\r\n    - Modified parse_expresssion, changed the self.current() to t (there is no reason to call it when saved it before) and added a clausule that checks that a assignment expression can go through yield from\r\n\r\nSecond commit\r\n---------\r\n\r\n**nodes.py** ->\r\n\r\n    - Modified YieldFromStmt\r\n\r\n**output.py** ->\r\n\r\n    - Added visit_yield_from_stmt()\r\n\r\n**semanal.py** ->\r\n\r\n    - Added YieldFromStmt import\r\n    - Added visit_yield_from_stmt()\r\n\r\n**strconv.py** ->\r\n\r\n    - Added visit_yield_from_stmt()\r\n\r\n**treetransform.py** ->\r\n\r\n    - Added YieldFromStmt import\r\n    - Added visit_yield_from_stmt()\r\n\r\n**tests/parse-errors.test** ->\r\n\r\n    - Add error yield from without right expression\r\n\r\n**tests/parse.test** ->\r\n\r\n    - Add yield from stmt test\r\n    - Add yield from expression test\r\n\r\n\r\nThird commit\r\n---------\r\n\r\n**checker.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Add visit_yield_from_expr\r\n\r\n**checkexpr.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Add visit_yield_from_expr\r\n\r\n**icode.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Add visit_yield_from_expr\r\n\r\n**nodes.py** ->\r\n\r\n    - Add YieldFromExpr class\r\n\r\n**output.py** ->\r\n\r\n    - Add visit_yield_from_expr\r\n\r\n**parse.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Modify return check to fail if is continued by YieldFromExpr\r\n    - Modify visit_yield_from_expr to return a YieldFromExpr instance\r\n\r\n**pprinter.py** ->\r\n\r\n    - Add visit_yield_from_expr\r\n\r\n**semanal.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Add visit_yield_from_expr\r\n\r\n**stats.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Add visit_yield_from_expr\r\n\r\n**strconv.py** ->\r\n\r\n    - Add visit_yield_from_expr\r\n\r\n**transform.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Add visit_yield_from_expr\r\n\r\n**traverser.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Add visit_yield_from_expr\r\n\r\n**treetransform.py** ->\r\n\r\n    - Add import YieldFromExpr\r\n    - Add visit_yield_from_expr\r\n\r\n**visitor.py** ->\r\n\r\n    - Add visit_yield_from_expr\r\n\r\n\r\n**test/data/parse-errors.test** ->\r\n\r\n\r\n    - Add testYieldFromAfterReturn\r\n**test/data/parse.test** ->\r\n\r\n    - Modify testYieldFromExpr with the new representation.\r\n\r\n\r\nFour commit\r\n---------\r\n\r\n    Merge with master to do a clean pull request", "labels_url": "https://api.github.com/repos/python/mypy/issues/344/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Yield From Statement and Expression.", "assignee": null, "closed_at": "2014-08-03T09:33:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/344/comments", "labels": [], "created_at": "2014-07-29T01:35:07Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/344.patch", "html_url": "https://github.com/python/mypy/pull/344", "diff_url": "https://github.com/python/mypy/pull/344.diff", "url": "https://api.github.com/repos/python/mypy/pulls/344"}, "locked": false}, {"milestone": null, "number": 343, "html_url": "https://github.com/python/mypy/issues/343", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/343", "id": 38862733, "events_url": "https://api.github.com/repos/python/mypy/issues/343/events", "updated_at": "2014-07-28T05:38:43Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/343/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document pinfer", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/343/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2014-07-28T05:38:43Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 342, "html_url": "https://github.com/python/mypy/issues/342", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/342", "id": 38862457, "events_url": "https://api.github.com/repos/python/mypy/issues/342/events", "updated_at": "2015-04-05T19:29:15Z", "body": "Figure out some way to install pinfer in setup.py.", "labels_url": "https://api.github.com/repos/python/mypy/issues/342/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Install pinfer in setup.py", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/342/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-28T05:28:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 341, "html_url": "https://github.com/python/mypy/issues/341", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/341", "id": 38862431, "events_url": "https://api.github.com/repos/python/mypy/issues/341/events", "updated_at": "2014-12-21T03:46:37Z", "body": "This is non-trivial due to Python 2/3 issues...", "labels_url": "https://api.github.com/repos/python/mypy/issues/341/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Install mypy.codec in setup.py", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/341/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-28T05:27:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 340, "html_url": "https://github.com/python/mypy/issues/340", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/340", "id": 38862324, "events_url": "https://api.github.com/repos/python/mypy/issues/340/events", "updated_at": "2014-07-28T05:24:28Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/340/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document mypy.codec", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/340/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2014-07-28T05:24:28Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 339, "html_url": "https://github.com/python/mypy/pull/339", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/339", "id": 38836172, "events_url": "https://api.github.com/repos/python/mypy/issues/339/events", "updated_at": "2014-07-28T04:16:15Z", "body": "Changes:\r\nbuild.py ->\r\n    - Added the path of stubs/3.3 if the version is up or eq. to 3.3\r\nsetup.py ->\r\n    - Added '3.3' to the stub's version list\r\nstubs/3.3/asyncio -> all new\r\n\r\nP.S: Sorry for the blank lines, Sublime added and don't know how to not commit them.\r\nTo see better on github add ?w=1 in the url :)", "labels_url": "https://api.github.com/repos/python/mypy/issues/339/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Added stubs for Python > 3.3 and asyncio module (Incomplete)", "assignee": null, "closed_at": "2014-07-28T04:16:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/339/comments", "labels": [], "created_at": "2014-07-27T10:09:14Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/339.patch", "html_url": "https://github.com/python/mypy/pull/339", "diff_url": "https://github.com/python/mypy/pull/339.diff", "url": "https://api.github.com/repos/python/mypy/pulls/339"}, "locked": false}, {"milestone": null, "number": 338, "html_url": "https://github.com/python/mypy/issues/338", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/338", "id": 38826986, "events_url": "https://api.github.com/repos/python/mypy/issues/338/events", "updated_at": "2014-07-26T21:47:52Z", "body": "Currently the typing.IO[AnyStr] ABC only has operations that are valid for both binary and text files. This is sometimes awkward. Potentially add the entire file object interface to IO[AnyStr] so that IO[Any] supports both the text and binary file interfaces. We might then be able to get rid of TextIO and BinaryIO classes. This would simplify the programming model at the cost of some type checking precision. However, some code that is currently not statically typable would be (more) typable, so there might actually even be a net benefit in static typing precision.", "labels_url": "https://api.github.com/repos/python/mypy/issues/338/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Include all file object operations in IO[AnyStr]", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/338/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-07-26T21:47:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 337, "html_url": "https://github.com/python/mypy/issues/337", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/337", "id": 38781854, "events_url": "https://api.github.com/repos/python/mypy/issues/337/events", "updated_at": "2014-10-08T05:11:54Z", "body": "Python 3 supports raise from.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/337/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement type checking \"raise from\"", "assignee": null, "closed_at": "2014-10-08T05:11:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/337/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-26T00:15:17Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 336, "html_url": "https://github.com/python/mypy/issues/336", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/336", "id": 38781758, "events_url": "https://api.github.com/repos/python/mypy/issues/336/events", "updated_at": "2014-07-26T00:15:36Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/336/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement \"raise from", "assignee": null, "closed_at": "2014-07-26T00:15:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/336/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}], "created_at": "2014-07-26T00:14:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 335, "html_url": "https://github.com/python/mypy/issues/335", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/335", "id": 38777107, "events_url": "https://api.github.com/repos/python/mypy/issues/335/events", "updated_at": "2014-07-25T23:56:43Z", "body": "In the builtins, the class `tuple` extends `Iterable` rather than `Sequence`. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/335/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "tuple is not compatible with Sequence[...]", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-07-25T23:56:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/335/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-07-25T22:49:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 334, "html_url": "https://github.com/python/mypy/issues/334", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/334", "id": 38765240, "events_url": "https://api.github.com/repos/python/mypy/issues/334/events", "updated_at": "2014-08-25T01:49:28Z", "body": "Some error messages (see commit 5c9cbc73a8110c879455a60af58de60264d2f4cf) use the internal type representation, which looks confusing. For example:\r\n\r\n    Incompatible return value type: expected __main__.p[T`-2, __main__.A], got __main__.p[S`-1, __main__.A*]\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/334/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Internal type representation used for invalid return value type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/334/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-25T20:04:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 333, "html_url": "https://github.com/python/mypy/issues/333", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/333", "id": 38764730, "events_url": "https://api.github.com/repos/python/mypy/issues/333/events", "updated_at": "2014-09-01T01:34:32Z", "body": "Add tests for this commit: f5b5623a8c203ae7c04fbfb4f7ecf599c6228a25", "labels_url": "https://api.github.com/repos/python/mypy/issues/333/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add tests for List/Iterable (etc) subtyping", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/333/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-07-25T19:57:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 332, "html_url": "https://github.com/python/mypy/issues/332", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/332", "id": 38762513, "events_url": "https://api.github.com/repos/python/mypy/issues/332/events", "updated_at": "2014-07-25T23:56:43Z", "body": "This code is not accepted due to the union type argument with type variable reference within the union items:\r\n\r\n    from typing import List, Union, typevar\r\n    T = typevar('T')\r\n    def f(a: Union[List[T], str]) -> None: pass\r\n    f([1]) # Argument 1 to \"f\" has incompatible type List[int]; expected \"Union[List[None], str]\"\r\n\r\nAnother example:\r\n\r\n    from typing import Union, typevar\r\n    T = typevar('T')\r\n    def f(a: Union[T, str]) -> None: pass\r\n    f(1)  # Not accepted\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/332/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generic function type inference broken for arguments with union types", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-07-25T23:56:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/332/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-25T19:28:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 331, "html_url": "https://github.com/python/mypy/issues/331", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/331", "id": 38762040, "events_url": "https://api.github.com/repos/python/mypy/issues/331/events", "updated_at": "2014-10-25T18:28:26Z", "body": "(This applies to the type-system-features branch.)\r\n\r\nThe byte_types alias in builtins.py should probably be named with a leading undescore, since it's not a Python-visible name.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/331/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename byte_types in builtins.py", "assignee": null, "closed_at": "2014-10-25T18:28:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/331/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-25T19:22:17Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 330, "html_url": "https://github.com/python/mypy/issues/330", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/330", "id": 38761952, "events_url": "https://api.github.com/repos/python/mypy/issues/330/events", "updated_at": "2015-01-31T22:01:16Z", "body": "It would be good to have more test cases for type aliases. In particular, we should test aliases of union types and tuple types.", "labels_url": "https://api.github.com/repos/python/mypy/issues/330/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Test cases for type aliases", "assignee": null, "closed_at": "2015-01-31T22:01:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/330/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-07-25T19:21:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 329, "html_url": "https://github.com/python/mypy/issues/329", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/329", "id": 38761834, "events_url": "https://api.github.com/repos/python/mypy/issues/329/events", "updated_at": "2015-01-31T22:02:50Z", "body": "Type aliases can be used in expressions without issues:\r\n\r\n    from typing import Union\r\n    x = Union[int, str]\r\n    x.foo # No error\r\n    x = [1] # No error\r\n\r\nI think using a Union type alias in an expression should probably be disallowed, or it should have a narrow type. Aliases to simple types such as \"x = int\" should be equivalent to the alias target.", "labels_url": "https://api.github.com/repos/python/mypy/issues/329/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Union type aliases valid as expressions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/329/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-25T19:20:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 328, "html_url": "https://github.com/python/mypy/issues/328", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/328", "id": 38753817, "events_url": "https://api.github.com/repos/python/mypy/issues/328/events", "updated_at": "2014-07-25T17:45:28Z", "body": "Overloaded classmethods don't work correctly in the type checker:\r\n\r\n    from typing import overload\r\n    class A:\r\n        @overload\r\n        @classmethod\r\n        def f(cls, x: int) -> None: pass\r\n        @overload\r\n        @classmethod\r\n        def f(cls, x: str) -> None: pass\r\n    A.f(1)  # No overload variant matches argument types\r\n    A.f('')  # No overload variant matches argument types\r\n\r\nThis affects dict.fromkeys.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/328/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Overloaded classmethods don't work", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/328/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-25T17:45:28Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 327, "html_url": "https://github.com/python/mypy/issues/327", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/327", "id": 38753582, "events_url": "https://api.github.com/repos/python/mypy/issues/327/events", "updated_at": "2014-07-25T23:59:07Z", "body": "It would sometimes be useful to be able to use at least simple type aliases as variables. For example, this code should probably be accepted:\r\n\r\n    import typing\r\n    try:\r\n        x = WindowsError\r\n    except NameError:\r\n        x = None\r\n\r\nThis affects lib-python/3.2/shutil.py.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/327/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow type aliases be used as variables", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/327/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-25T17:42:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 326, "html_url": "https://github.com/python/mypy/issues/326", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/326", "id": 38746568, "events_url": "https://api.github.com/repos/python/mypy/issues/326/events", "updated_at": "2014-07-25T17:55:19Z", "body": "Here an easy one :)\r\n\r\nIn the tutorial (http://www.mypy-lang.org/tutorial.html) in the example of \"User-defined Types\" section are a little error:\r\n\r\na = B() # type: A  # OK (explicit type for a; override type inference)\r\na = A()            # OK\r\nprint(a.f())       # 3\r\n\r\nThat print(a.f()) will print 2 and not 3 like the comment says :)", "labels_url": "https://api.github.com/repos/python/mypy/issues/326/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Little error in the tutorial.", "assignee": null, "closed_at": "2014-07-25T17:55:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/326/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2014-07-25T16:15:15Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "locked": false}, {"milestone": null, "number": 325, "html_url": "https://github.com/python/mypy/pull/325", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/325", "id": 38737181, "events_url": "https://api.github.com/repos/python/mypy/issues/325/events", "updated_at": "2014-07-25T22:19:32Z", "body": "Fixes #13\r\n\r\nI think there may be some other nuances here with regard to keyword only arguments but I'm wrapping up for the day and wanted to go ahead and send this through as it's an incremental improvement that doesn't appear to cause any regressions.", "labels_url": "https://api.github.com/repos/python/mypy/issues/325/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error for bare asterisk after *args", "assignee": null, "closed_at": "2014-07-25T22:19:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/325/comments", "labels": [], "created_at": "2014-07-25T14:39:41Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/325.patch", "html_url": "https://github.com/python/mypy/pull/325", "diff_url": "https://github.com/python/mypy/pull/325.diff", "url": "https://api.github.com/repos/python/mypy/pulls/325"}, "locked": false}, {"milestone": null, "number": 324, "html_url": "https://github.com/python/mypy/pull/324", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/324", "id": 38721406, "events_url": "https://api.github.com/repos/python/mypy/issues/324/events", "updated_at": "2014-07-31T04:40:35Z", "body": "I identified this issue when investigating #11, but wanted to fix something small before attempting a larger refactoring. Changing an AST node seems to touch a lot of code all over the place!", "labels_url": "https://api.github.com/repos/python/mypy/issues/324/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generator and list comprehensions now accept multiple conditions", "assignee": null, "closed_at": "2014-07-27T20:57:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/324/comments", "labels": [], "created_at": "2014-07-25T11:38:56Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/324.patch", "html_url": "https://github.com/python/mypy/pull/324", "diff_url": "https://github.com/python/mypy/pull/324.diff", "url": "https://api.github.com/repos/python/mypy/pulls/324"}, "locked": false}, {"milestone": null, "number": 323, "html_url": "https://github.com/python/mypy/pull/323", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/323", "id": 38515431, "events_url": "https://api.github.com/repos/python/mypy/issues/323/events", "updated_at": "2014-07-24T03:50:35Z", "body": "Fixes #283\r\n\r\nI didn't implement `__pos__` on the complex stub as that is better done in #322", "labels_url": "https://api.github.com/repos/python/mypy/issues/323/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unary + accepts operands that implement __pos__", "assignee": null, "closed_at": "2014-07-24T03:50:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/323/comments", "labels": [], "created_at": "2014-07-23T10:14:12Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/323.patch", "html_url": "https://github.com/python/mypy/pull/323", "diff_url": "https://github.com/python/mypy/pull/323.diff", "url": "https://api.github.com/repos/python/mypy/pulls/323"}, "locked": false}, {"milestone": null, "number": 322, "html_url": "https://github.com/python/mypy/issues/322", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/322", "id": 38514391, "events_url": "https://api.github.com/repos/python/mypy/issues/322/events", "updated_at": "2015-01-07T06:35:29Z", "body": "See ./stubs/2.7/builtins.py and ./stubs/3.2/builtins.py\r\n\r\n```python\r\n@builtinclass\r\nclass complex:\r\n    # TODO this is just a placeholder; add more members\r\n    def __init__(self, re: float, im: float = 0.0) -> None: pass\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/322/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement stubs for complex", "assignee": null, "closed_at": "2015-01-07T06:35:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/322/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-07-23T10:00:04Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "locked": false}, {"milestone": null, "number": 321, "html_url": "https://github.com/python/mypy/pull/321", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/321", "id": 38513156, "events_url": "https://api.github.com/repos/python/mypy/issues/321/events", "updated_at": "2014-07-24T04:15:54Z", "body": "Fixes #203", "labels_url": "https://api.github.com/repos/python/mypy/issues/321/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Let in operator be used with any Iterable", "assignee": null, "closed_at": "2014-07-24T04:15:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/321/comments", "labels": [], "created_at": "2014-07-23T09:43:31Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/321.patch", "html_url": "https://github.com/python/mypy/pull/321", "diff_url": "https://github.com/python/mypy/pull/321.diff", "url": "https://api.github.com/repos/python/mypy/pulls/321"}, "locked": false}, {"milestone": null, "number": 320, "html_url": "https://github.com/python/mypy/issues/320", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/320", "id": 38491679, "events_url": "https://api.github.com/repos/python/mypy/issues/320/events", "updated_at": "2014-08-17T21:44:20Z", "body": "Currently a function does not need an explicit return statement, since falling off the end of the function results in an implicit None return value, which is compatible with all types. This might be sometimes used for functions with empty bodies, but it should not be accepted at least for functions with non-empty bodies, since forgetting to return a value in some code paths is a fairly common programming error.\r\n\r\nFor example, this should not be accepted:\r\n\r\n    def f(x: int) -> int:\r\n        if x > 5:\r\n            return 1\r\n\r\nWe could probably disallow a missing return for empty function bodies as well. For abstract methods, we'd require either raising NotImplementedError or providing a default implementation that returns a value.", "labels_url": "https://api.github.com/repos/python/mypy/issues/320/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Require explicit return if return type is something other than Any or None", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/320/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-23T04:34:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 319, "html_url": "https://github.com/python/mypy/issues/319", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/319", "id": 38416975, "events_url": "https://api.github.com/repos/python/mypy/issues/319/events", "updated_at": "2014-07-29T01:36:50Z", "body": "I'm trying to do it, but I don't realize how to add the type (I've checked and try it in lib-typing/3.2/typing.py but when try to use it the from-import checker don't get it, and I'm a little bit lost in the code :) )\r\n\r\nCheers!", "labels_url": "https://api.github.com/repos/python/mypy/issues/319/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add Future type.", "assignee": null, "closed_at": "2014-07-29T01:36:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/319/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2014-07-22T16:23:17Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "locked": false}, {"milestone": null, "number": 318, "html_url": "https://github.com/python/mypy/pull/318", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/318", "id": 38398907, "events_url": "https://api.github.com/repos/python/mypy/issues/318/events", "updated_at": "2014-07-23T04:07:16Z", "body": "Fixes #144", "labels_url": "https://api.github.com/repos/python/mypy/issues/318/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "lex now checks indentation after trailing semicolon", "assignee": null, "closed_at": "2014-07-23T04:07:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/318/comments", "labels": [], "created_at": "2014-07-22T13:21:23Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/318.patch", "html_url": "https://github.com/python/mypy/pull/318", "diff_url": "https://github.com/python/mypy/pull/318.diff", "url": "https://api.github.com/repos/python/mypy/pulls/318"}, "locked": false}, {"milestone": null, "number": 317, "html_url": "https://github.com/python/mypy/issues/317", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/317", "id": 38393374, "events_url": "https://api.github.com/repos/python/mypy/issues/317/events", "updated_at": "2014-11-28T01:02:17Z", "body": "The keywords added in python 3.3+ \"yield from\" is not supported and necessary to work with the new module tulip/asyncio.", "labels_url": "https://api.github.com/repos/python/mypy/issues/317/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add support to PEP 380 (yield from)", "assignee": null, "closed_at": "2014-11-28T01:02:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/317/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-22T12:05:51Z", "user": {"followers_url": "https://api.github.com/users/rockneurotiko/followers", "gists_url": "https://api.github.com/users/rockneurotiko/gists{/gist_id}", "html_url": "https://github.com/rockneurotiko", "following_url": "https://api.github.com/users/rockneurotiko/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1377584?v=3", "url": "https://api.github.com/users/rockneurotiko", "organizations_url": "https://api.github.com/users/rockneurotiko/orgs", "starred_url": "https://api.github.com/users/rockneurotiko/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/rockneurotiko/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/rockneurotiko/subscriptions", "login": "rockneurotiko", "repos_url": "https://api.github.com/users/rockneurotiko/repos", "received_events_url": "https://api.github.com/users/rockneurotiko/received_events", "id": 1377584, "site_admin": false}, "locked": false}, {"milestone": null, "number": 316, "html_url": "https://github.com/python/mypy/pull/316", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/316", "id": 38392863, "events_url": "https://api.github.com/repos/python/mypy/issues/316/events", "updated_at": "2014-07-23T04:17:55Z", "body": "Fixes #133", "labels_url": "https://api.github.com/repos/python/mypy/issues/316/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "yield without an expression has type Void", "assignee": null, "closed_at": "2014-07-23T04:17:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/316/comments", "labels": [], "created_at": "2014-07-22T11:57:12Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/316.patch", "html_url": "https://github.com/python/mypy/pull/316", "diff_url": "https://github.com/python/mypy/pull/316.diff", "url": "https://api.github.com/repos/python/mypy/pulls/316"}, "locked": false}, {"milestone": null, "number": 315, "html_url": "https://github.com/python/mypy/pull/315", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/315", "id": 38391711, "events_url": "https://api.github.com/repos/python/mypy/issues/315/events", "updated_at": "2014-07-23T04:44:10Z", "body": "Fixes #108\r\n\r\nNot entirely sure this is the best way to go, but it passes the tests. Also, I don't understand the type of these `visit_*` methods. How do they return `Type` without any return statements?", "labels_url": "https://api.github.com/repos/python/mypy/issues/315/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow lambda with Void return", "assignee": null, "closed_at": "2014-07-23T04:44:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/315/comments", "labels": [], "created_at": "2014-07-22T11:38:35Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/315.patch", "html_url": "https://github.com/python/mypy/pull/315", "diff_url": "https://github.com/python/mypy/pull/315.diff", "url": "https://api.github.com/repos/python/mypy/pulls/315"}, "locked": false}, {"milestone": null, "number": 314, "html_url": "https://github.com/python/mypy/pull/314", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/314", "id": 38383672, "events_url": "https://api.github.com/repos/python/mypy/issues/314/events", "updated_at": "2014-07-24T03:49:07Z", "body": "Is there a better place to put these tests?", "labels_url": "https://api.github.com/repos/python/mypy/issues/314/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fix list builtin to handle all py3 operators and methods", "assignee": null, "closed_at": "2014-07-24T03:49:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/314/comments", "labels": [], "created_at": "2014-07-22T09:37:26Z", "user": {"followers_url": "https://api.github.com/users/etrepum/followers", "gists_url": "https://api.github.com/users/etrepum/gists{/gist_id}", "html_url": "https://github.com/etrepum", "following_url": "https://api.github.com/users/etrepum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/26596?v=3", "url": "https://api.github.com/users/etrepum", "organizations_url": "https://api.github.com/users/etrepum/orgs", "starred_url": "https://api.github.com/users/etrepum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/etrepum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/etrepum/subscriptions", "login": "etrepum", "repos_url": "https://api.github.com/users/etrepum/repos", "received_events_url": "https://api.github.com/users/etrepum/received_events", "id": 26596, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/314.patch", "html_url": "https://github.com/python/mypy/pull/314", "diff_url": "https://github.com/python/mypy/pull/314.diff", "url": "https://api.github.com/repos/python/mypy/pulls/314"}, "locked": false}, {"milestone": null, "number": 313, "html_url": "https://github.com/python/mypy/issues/313", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/313", "id": 38344241, "events_url": "https://api.github.com/repos/python/mypy/issues/313/events", "updated_at": "2014-07-25T03:44:20Z", "body": "It would be nice if text colored red or yellow in the report showed the reason for this color when you hover the mouse over a highlighted area.", "labels_url": "https://api.github.com/repos/python/mypy/issues/313/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add hover text with explanations to html report", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/313/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-21T20:58:55Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 312, "html_url": "https://github.com/python/mypy/issues/312", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/312", "id": 38334588, "events_url": "https://api.github.com/repos/python/mypy/issues/312/events", "updated_at": "2014-08-03T23:35:05Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/312/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "lib-typing/2.7/typing.py doesn't have Union", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-08-03T23:35:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/312/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2014-07-21T19:12:33Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 311, "html_url": "https://github.com/python/mypy/issues/311", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/311", "id": 38334553, "events_url": "https://api.github.com/repos/python/mypy/issues/311/events", "updated_at": "2014-07-24T05:02:15Z", "body": "When I write from typing import * I don't get Function. It seems the __all__ variable doesn't have it. Probably a few others too.", "labels_url": "https://api.github.com/repos/python/mypy/issues/311/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Function not in __all__ in lib-typing's typing.py", "assignee": null, "closed_at": "2014-07-24T05:02:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/311/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-21T19:12:11Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 310, "html_url": "https://github.com/python/mypy/issues/310", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/310", "id": 38331095, "events_url": "https://api.github.com/repos/python/mypy/issues/310/events", "updated_at": "2014-10-20T06:28:44Z", "body": "E.g.\r\n\r\n    for index, (bin_value, bin_count) in enumerate(self.bins):\r\n\r\nThis gives an error message at the '(':\r\n\r\n    In module imported in dropbox/tests/base_tests/approximate_histogram_tests.py, line 8,\r\n                       in runmypy.py, line 11:\r\n    dropbox/base/approximate_histogram.py: In member \"to_dict\" of class \"ApproximateHistogram\":\r\n    dropbox/base/approximate_histogram.py, line 147: Parse error before (\r\n    dropbox/base/approximate_histogram.py, line 147: Parse error before :\r\n    dropbox/base/approximate_histogram.py, line 149: Inconsistent indentation\r\n    dropbox/base/approximate_histogram.py: At top level:\r\n    dropbox/base/approximate_histogram.py, line 318: Inconsistent indentation\r\n    make: *** [mypy] Error 1\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/310/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "mypy parser doesn't understand nested tuples in for-loop variable", "assignee": null, "closed_at": "2014-10-20T06:28:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/310/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-07-21T18:36:43Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 309, "html_url": "https://github.com/python/mypy/issues/309", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/309", "id": 38247053, "events_url": "https://api.github.com/repos/python/mypy/issues/309/events", "updated_at": "2014-09-15T01:11:13Z", "body": "I have this one-liner:\r\n\r\n    assert 0.0 < 0.5 < 1.0\r\n\r\nThis gives the following error:\r\n\r\n    /tmp/x.py, line 1: Unsupported operand types for > (\"float\" and \"bool\")\r\n\r\nEh?!?!", "labels_url": "https://api.github.com/repos/python/mypy/issues/309/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Comparison chaining bug", "assignee": null, "closed_at": "2014-09-15T01:11:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/309/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-07-19T23:17:07Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 308, "html_url": "https://github.com/python/mypy/issues/308", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/308", "id": 38246736, "events_url": "https://api.github.com/repos/python/mypy/issues/308/events", "updated_at": "2015-05-31T21:26:44Z", "body": "I have to write code like this:\r\n\r\n    MYPY = False\r\n    if MYPY:\r\n       # do mypy stuff\r\n\r\nI think it would be more elegant if I could write\r\n\r\n    from typing import MYPY\r\n\r\ninstead. That way the values can actually be defined properly in the stubs and lib-typing files.", "labels_url": "https://api.github.com/repos/python/mypy/issues/308/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Maybe MYPY, PY2 and PY3 can be imported from typing instead of having to set them?", "assignee": null, "closed_at": "2015-05-31T21:26:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/308/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-07-19T22:53:22Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 307, "html_url": "https://github.com/python/mypy/issues/307", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/307", "id": 38246524, "events_url": "https://api.github.com/repos/python/mypy/issues/307/events", "updated_at": "2014-10-12T23:30:06Z", "body": "I have a class that defines some constants and uses those constants as defaults for some method arguments. This is fine in Python, but mypy complains that the constant isn't defined. Example:\r\n\r\n    bash-3.2$ cat /tmp/x.py\r\n    import typing\r\n\r\n    class C:\r\n        DEFAULT_LEVEL = 1\r\n        def set_level(self, level: int = DEFAULT_LEVEL) -> int:\r\n            return level\r\n    bash-3.2$ PYTHONPATH=lib-typing/3.2/ python3 /tmp/x.py\r\n    bash-3.2$ PYTHONPATH=. python3 scripts/mypy /tmp/x.py\r\n    /tmp/x.py: In function \"set_level\":\r\n    /tmp/x.py, line 5: Name 'DEFAULT_LEVEL' is not defined\r\n    bash-3.2$ \r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/307/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Typechecker doesn't see variables defined in class when typechecking default values for method args", "assignee": null, "closed_at": "2014-10-12T23:30:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/307/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-07-19T22:39:49Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 306, "html_url": "https://github.com/python/mypy/issues/306", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/306", "id": 38246456, "events_url": "https://api.github.com/repos/python/mypy/issues/306/events", "updated_at": "2016-01-13T19:01:59Z", "body": "After running mypy --html-report <dir> <args> I find several html files looking like reports in the stubs directory. E.g.\r\n\r\n    $ git status\r\n    On branch master\r\n    Your branch is up-to-date with 'origin/master'.\r\n    \r\n    Untracked files:\r\n      (use \"git add <file>...\" to include in what will be committed)\r\n    \r\n            stubs/3.2/itertools.html\r\n            stubs/3.2/sys.html\r\n            stubs/3.2/unittest.html\r\n\r\n    nothing added to commit but untracked files present (use \"git add\" to track)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/306/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "--html-report leaves html files in stubs directory", "assignee": null, "closed_at": "2016-01-13T19:01:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/306/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-19T22:34:58Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 305, "html_url": "https://github.com/python/mypy/issues/305", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/305", "id": 38208755, "events_url": "https://api.github.com/repos/python/mypy/issues/305/events", "updated_at": "2014-08-04T01:00:21Z", "body": "If we define a custom source codec, we can support Python 3 type annotations in Python 2 code. We just strip annotations away.", "labels_url": "https://api.github.com/repos/python/mypy/issues/305/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support Python 3 annotations in Python 2 via a custom source codec", "assignee": null, "closed_at": "2014-08-04T01:00:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/305/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-18T20:19:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 304, "html_url": "https://github.com/python/mypy/issues/304", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/304", "id": 38208673, "events_url": "https://api.github.com/repos/python/mypy/issues/304/events", "updated_at": "2015-11-30T20:41:12Z", "body": "I type checked this code:\r\n\r\n    from typing import Undefined, Dict\r\n    x = Undefined(Dict[int, str])\r\n    x = {'x': 1}\r\n\r\nI got this error message:\r\n\r\n    x.py, line 3: List item 1 has incompatible type \"Tuple[str, int]\"\r\n\r\nThis is confusing since I'm not creating a list and I'm not using tuples.", "labels_url": "https://api.github.com/repos/python/mypy/issues/304/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Confusing error message for dict literal", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/304/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-18T20:17:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 303, "html_url": "https://github.com/python/mypy/issues/303", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/303", "id": 38206802, "events_url": "https://api.github.com/repos/python/mypy/issues/303/events", "updated_at": "2014-07-25T03:44:20Z", "body": "Input:\r\n\r\n    class LazyList(Iterator[T], ...):\r\n        @overload\r\n        def __getitem__(self, arg: int): ...\r\n        @overload\r\n        def __getitem__(self, arg: slice): ...\r\n\r\nOutput:\r\n\r\n    class LazyList(...):\r\n        def __getitem__(args: Either[LazyList, int]) -> int\r\n\r\nNote that the inferred type is missing a 'self'. It is also missing a '*' in front of 'args'.", "labels_url": "https://api.github.com/repos/python/mypy/issues/303/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "pinfer does a poor job with @overload-decorated methods", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/303/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-18T19:50:48Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 302, "html_url": "https://github.com/python/mypy/issues/302", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/302", "id": 38137042, "events_url": "https://api.github.com/repos/python/mypy/issues/302/events", "updated_at": "2016-04-07T18:47:34Z", "body": "Currently I have to write:\r\n\r\n    class LazyList(Iterable[T], Generic[T]):\r\n\r\nI'd like to be able to write just:\r\n\r\n    class LazyList(Iterable[T]):\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/302/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow omitting redundant Generic[T] base class", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/302/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}], "created_at": "2014-07-17T23:44:23Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 301, "html_url": "https://github.com/python/mypy/issues/301", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/301", "id": 38136311, "events_url": "https://api.github.com/repos/python/mypy/issues/301/events", "updated_at": "2015-02-08T22:32:17Z", "body": "Currently we accept Generic as base class even if it fails at runtime. Direct the programmer to using the right base class.", "labels_url": "https://api.github.com/repos/python/mypy/issues/301/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give error if using Generic when AbstractGeneric is needed", "assignee": null, "closed_at": "2015-02-08T22:32:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/301/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}, {"name": "wontfix", "color": "ffffff", "url": "https://api.github.com/repos/python/mypy/labels/wontfix"}], "created_at": "2014-07-17T23:29:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 300, "html_url": "https://github.com/python/mypy/issues/300", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/300", "id": 38136258, "events_url": "https://api.github.com/repos/python/mypy/issues/300/events", "updated_at": "2016-04-07T18:47:25Z", "body": "Give a useful error message if the Generic base class is missing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/300/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Explain if Generic base class is missing", "assignee": null, "closed_at": "2016-04-07T18:47:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/300/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-17T23:28:03Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 299, "html_url": "https://github.com/python/mypy/issues/299", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/299", "id": 38046847, "events_url": "https://api.github.com/repos/python/mypy/issues/299/events", "updated_at": "2016-03-07T21:08:58Z", "body": "The following fragment generates a confusing error message:\r\n\r\n    def f(x: None) -> None:\r\n        x.f()   # Function does not return a value\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/299/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "None is accepted as a type but it behaves erratically", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/299/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2014-07-17T04:15:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 298, "html_url": "https://github.com/python/mypy/issues/298", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/298", "id": 38038900, "events_url": "https://api.github.com/repos/python/mypy/issues/298/events", "updated_at": "2015-01-31T22:01:16Z", "body": "It should be possible to define type aliases for all types, not just non-generic instance types. For example, these should be valid:\r\n\r\n    X = List[int]\r\n    def () -> X: ...\r\n    a = X()\r\n    Y = Tuple[int, str]\r\n    F = Function[[int, str], bool]\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/298/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "General type aliases", "assignee": null, "closed_at": "2015-01-31T22:01:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/298/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-07-17T00:41:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 297, "html_url": "https://github.com/python/mypy/issues/297", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/297", "id": 37929312, "events_url": "https://api.github.com/repos/python/mypy/issues/297/events", "updated_at": "2014-07-24T04:50:45Z", "body": "It looks to me like the type for the lambda is inferred as `def (o: builtins.object) -> builtins.str`, but the type as seen when analyzing the call is erased.\r\n\r\n```python\r\n...\r\n  File \"/usr/lib/python3.3/site-packages/mypy/checkexpr.py\", line 115, in check_call_expr_with_callee_type\r\n    e.arg_names, callable_node=e.callee)[0]\r\n  File \"/usr/lib/python3.3/site-packages/mypy/checkexpr.py\", line 183, in check_call\r\n    messages=arg_messages)\r\n  File \"/usr/lib/python3.3/site-packages/mypy/checkexpr.py\", line 520, in overload_call_target\r\n    if self.matches_signature_erased(arg_types, is_var_arg, typ):\r\n  File \"/usr/lib/python3.3/site-packages/mypy/checkexpr.py\", line 573, in matches_signature_erased\r\n    if not is_subtype(self.erase(arg_types[i]),\r\n  File \"/usr/lib/python3.3/site-packages/mypy/checkexpr.py\", line 1205, in erase\r\n    return erasetype.erase_type(type, self.chk.basic_types())\r\n  File \"/usr/lib/python3.3/site-packages/mypy/erasetype.py\", line 23, in erase_type\r\n    return typ.accept(EraseTypeVisitor(basic))\r\n  File \"/usr/lib/python3.3/site-packages/mypy/types.py\", line 158, in accept\r\n    return visitor.visit_erased_type(self)\r\n  File \"/usr/lib/python3.3/site-packages/mypy/erasetype.py\", line 50, in visit_erased_type\r\n    raise RuntimeError()\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/297/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "map(lambda x: str(x), [1]) raises RuntimeError", "assignee": null, "closed_at": "2014-07-24T04:50:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/297/comments", "labels": [], "created_at": "2014-07-15T21:47:33Z", "user": {"followers_url": "https://api.github.com/users/jswalden/followers", "gists_url": "https://api.github.com/users/jswalden/gists{/gist_id}", "html_url": "https://github.com/jswalden", "following_url": "https://api.github.com/users/jswalden/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/4139753?v=3", "url": "https://api.github.com/users/jswalden", "organizations_url": "https://api.github.com/users/jswalden/orgs", "starred_url": "https://api.github.com/users/jswalden/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jswalden/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jswalden/subscriptions", "login": "jswalden", "repos_url": "https://api.github.com/users/jswalden/repos", "received_events_url": "https://api.github.com/users/jswalden/received_events", "id": 4139753, "site_admin": false}, "locked": false}, {"milestone": null, "number": 296, "html_url": "https://github.com/python/mypy/issues/296", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/296", "id": 37905616, "events_url": "https://api.github.com/repos/python/mypy/issues/296/events", "updated_at": "2014-07-25T23:57:22Z", "body": "Currently, Tuple[int, int] is not compatible with Iterable[int] and Sequence[int], but it should obviously be. Also, update type join to support this (join of Tuple[int, int] and Tuple[int] should be Sequence[int]).\r\n\r\nFor example, this program is rejected:\r\n\r\n    from typing import Iterable\r\n    def f(x: Iterable[int]) -> None: pass\r\n    f([1,2])  # OK\r\n    f((1,2))  # Argument 1 to \"f\" has incompatible type \"Tuple[int, int]\"\r\n\r\nSee also #184 (it's very closely related).", "labels_url": "https://api.github.com/repos/python/mypy/issues/296/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Tuple[...] should be compatible with Iterable[...] and Sequence[...]", "assignee": null, "closed_at": "2014-07-25T23:57:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/296/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-15T17:18:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 295, "html_url": "https://github.com/python/mypy/issues/295", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/295", "id": 37904179, "events_url": "https://api.github.com/repos/python/mypy/issues/295/events", "updated_at": "2015-08-09T23:03:47Z", "body": "It should be possible to define a type variable as covariant. For example, the type variable of Iterable[t] could be covariant, and then Iterable[x] would a subtype of Iterable[y] if x is a subtype of y. Currently this is not the case, which is sometimes awkward, and this would even more awkward with union types.\r\n\r\nNot sure about the syntax. Maybe something like this:\r\n\r\n    T = typevar('T', covariant=True)   \r\n\r\n(Ouch, looks pretty technical.)\r\n\r\nCovariant type variables must not appear within method argument types or instance variable types, i.e. they are only valid as return types. Also, only read-only properties can have types with covariant type variables.", "labels_url": "https://api.github.com/repos/python/mypy/issues/295/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Variance of generics", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/295/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-15T17:01:23Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 294, "html_url": "https://github.com/python/mypy/issues/294", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/294", "id": 37903765, "events_url": "https://api.github.com/repos/python/mypy/issues/294/events", "updated_at": "2014-07-25T23:58:18Z", "body": "Currently, only the first assignment or declaration is used to determine the type of a variable. For example, this is not accepted:\r\n\r\n    def f(x: Iterable[str]) -> None:\r\n        x = list(x)\r\n        x.append('y')   # Ouch, Iterable has no append\r\n\r\nInstead, the assignment on the second line should redefine `x` as `List[str]` and the code should be accepted.\r\n\r\nIf a redefinition would change the type to something that is not narrower than the previous type, we should give an error. For example, redefining an int variable as str should not be allowed.\r\n\r\nInitially, only redefinition within the same block needs to be supported. Conditional redefinition is a separate feature. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/294/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow redefinition of a variable with a narrower type", "assignee": null, "closed_at": "2014-07-25T23:58:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/294/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-15T16:56:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 293, "html_url": "https://github.com/python/mypy/issues/293", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/293", "id": 37903226, "events_url": "https://api.github.com/repos/python/mypy/issues/293/events", "updated_at": "2014-07-25T23:57:11Z", "body": "Add support for union types. \r\n\r\nSuggested syntax: use `typing.Union[T1, T2, ...]`.\r\n\r\nAlso, `isinstance` type inference needs to know about union types. For example, this should be valid:\r\n\r\n    def f(x: Union[int, str]) -> int:\r\n        if isinstance(x, int):\r\n            return x + 1\r\n        else:\r\n            return int(x + '1')", "labels_url": "https://api.github.com/repos/python/mypy/issues/293/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Union types", "assignee": null, "closed_at": "2014-07-25T23:57:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/293/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-15T16:50:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 20, "number": 3, "html_url": "https://github.com/python/mypy/milestones/0.3.2", "state": "open", "id": 1616628, "url": "https://api.github.com/repos/python/mypy/milestones/3", "closed_issues": 21, "labels_url": "https://api.github.com/repos/python/mypy/milestones/3/labels", "description": "", "closed_at": null, "title": "0.3.2", "updated_at": "2016-04-14T11:39:04Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:15:21Z"}, "number": 292, "html_url": "https://github.com/python/mypy/issues/292", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/292", "id": 37902652, "events_url": "https://api.github.com/repos/python/mypy/issues/292/events", "updated_at": "2016-04-04T17:09:07Z", "body": "Add support for classmethod. Currently we support staticmethod.", "labels_url": "https://api.github.com/repos/python/mypy/issues/292/labels{/name}", "comments": 8, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Infer the 'cls' argument of a classmethod as the defining class, not Any", "assignee": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "closed_at": "2016-04-04T17:09:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/292/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-15T16:44:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 291, "html_url": "https://github.com/python/mypy/issues/291", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/291", "id": 37849043, "events_url": "https://api.github.com/repos/python/mypy/issues/291/events", "updated_at": "2016-01-28T19:50:40Z", "body": "```\r\nfrom typing import List, Tuple, overload\r\n\r\n@overload\r\ndef add(x: int) -> str:\r\n    return 'moo'\r\n\r\n@overload\r\ndef add(x: int, y: int) -> int:\r\n    return x + y\r\n\r\nadd(*(1, 2))\r\nx = add(*[1, 2]) # type: int\r\nzip(*((1, 2), (3, 4)))\r\ny = zip(*[(1, 2), (3, 4)]) #type: List[Tuple[int, int]]\r\n```\r\n\r\nall give errors but should be valid.", "labels_url": "https://api.github.com/repos/python/mypy/issues/291/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "f(*args) doesn't have proper inferred type for overloaded functions", "assignee": null, "closed_at": "2016-01-28T19:50:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/291/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-15T03:46:06Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "locked": false}, {"milestone": null, "number": 290, "html_url": "https://github.com/python/mypy/issues/290", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/290", "id": 37827683, "events_url": "https://api.github.com/repos/python/mypy/issues/290/events", "updated_at": "2014-07-24T04:58:36Z", "body": "Currently error message often have no types or just a generic type such as 'function'. We should show more complete (though still pretty-printed) types.", "labels_url": "https://api.github.com/repos/python/mypy/issues/290/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Show more complete types in error messages", "assignee": null, "closed_at": "2014-07-24T04:58:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/290/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-14T21:00:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 289, "html_url": "https://github.com/python/mypy/issues/289", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/289", "id": 37827439, "events_url": "https://api.github.com/repos/python/mypy/issues/289/events", "updated_at": "2014-08-04T01:01:21Z", "body": "Display the types of lvalue and/or rvalue for assignment statements with incompatible types.\r\n\r\nAlso, either update test cases or disable this feature when running tests.", "labels_url": "https://api.github.com/repos/python/mypy/issues/289/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Display better error message for assignment with incompatible types", "assignee": null, "closed_at": "2014-08-04T01:01:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/289/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-07-14T20:57:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 288, "html_url": "https://github.com/python/mypy/issues/288", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/288", "id": 37826378, "events_url": "https://api.github.com/repos/python/mypy/issues/288/events", "updated_at": "2014-11-02T19:40:29Z", "body": "```\r\nfrom typing import Function, typevar\r\n\r\nA = typevar('A')\r\nB = typevar('B')\r\n\r\ndef square(n: int) -> int:\r\n    return n*n\r\n\r\ndef id(f: Function[[A], B]) -> Function[[A], B]:\r\n    return f\r\n\r\ng = id(square)\r\n\r\nprint(g(1))\r\n```\r\nthe internal representation of the type of g seems to be \"def ('None') -> builtins.int*\" which isn't valid.", "labels_url": "https://api.github.com/repos/python/mypy/issues/288/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Applying functions to generic functions doesn't seem to work properly", "assignee": null, "closed_at": "2014-11-02T19:40:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/288/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-07-14T20:45:54Z", "user": {"followers_url": "https://api.github.com/users/ecprice/followers", "gists_url": "https://api.github.com/users/ecprice/gists{/gist_id}", "html_url": "https://github.com/ecprice", "following_url": "https://api.github.com/users/ecprice/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/140334?v=3", "url": "https://api.github.com/users/ecprice", "organizations_url": "https://api.github.com/users/ecprice/orgs", "starred_url": "https://api.github.com/users/ecprice/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ecprice/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ecprice/subscriptions", "login": "ecprice", "repos_url": "https://api.github.com/users/ecprice/repos", "received_events_url": "https://api.github.com/users/ecprice/received_events", "id": 140334, "site_admin": false}, "locked": false}, {"milestone": null, "number": 287, "html_url": "https://github.com/python/mypy/issues/287", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/287", "id": 37820329, "events_url": "https://api.github.com/repos/python/mypy/issues/287/events", "updated_at": "2014-08-19T02:05:54Z", "body": "This gives the expected error::\r\n\r\n    from typing import List, Tuple\r\n    x = [\r\n        ('', [''], 0),\r\n        ]  # type: List[Tuple[str, List[str], str]]\r\n\r\nError::\r\n\r\n    z.py, line 2: List item 1 has incompatible type \"Tuple[str, List[str], str]\"\r\n\r\nBut this shortens the type to just 'tuple'::\r\n\r\n    from typing import List, Tuple\r\n    x = [\r\n        ('', '', [''], 0),\r\n        ]  # type: List[Tuple[str, str, List[str], str]]\r\n\r\nError::\r\n\r\n    z.py, line 2: List item 1 has incompatible type tuple\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/287/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error \"List item 1 has incompatible type tuple\" (instead of showing the expected type)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/287/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2014-07-14T19:42:14Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 286, "html_url": "https://github.com/python/mypy/issues/286", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/286", "id": 37819947, "events_url": "https://api.github.com/repos/python/mypy/issues/286/events", "updated_at": "2014-08-23T18:53:41Z", "body": "Input::\r\n\r\n    from typing import List, Tuple\r\n    foo = [('x', 'x'),\r\n           ('y', 1),\r\n           ]  # type: List[Tuple[str, str]]\r\n\r\nErrors::\r\n\r\n    y.py, line 2: List item 2 has incompatible type \"Tuple[str, int]\"\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/286/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Error message uses 1-based indexing", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/286/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2014-07-14T19:37:36Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 285, "html_url": "https://github.com/python/mypy/issues/285", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/285", "id": 37818547, "events_url": "https://api.github.com/repos/python/mypy/issues/285/events", "updated_at": "2014-07-25T03:44:20Z", "body": "Example: for these three lines::\r\n\r\n    import typing\r\n    def foo(x: (int, str)) -> int:\r\n        return int(x)\r\n\r\nI get these errors::\r\n\r\n    x.py: In function \"foo\":\r\n    x.py, line 2: Parse error before (\r\n    x.py, line 2: Parse error before \"int\"\r\n    x.py: At top level:\r\n    x.py, line 2: Parse error before :\r\n    x.py, line 3: Inconsistent indentation\r\n    x.py, line 4: Inconsistent indentation\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/285/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parser gives \"inconsistent indentation\" errors when it cannot parse an annotation", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/285/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-14T19:21:18Z", "user": {"followers_url": "https://api.github.com/users/gvanrossum/followers", "gists_url": "https://api.github.com/users/gvanrossum/gists{/gist_id}", "html_url": "https://github.com/gvanrossum", "following_url": "https://api.github.com/users/gvanrossum/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/2894642?v=3", "url": "https://api.github.com/users/gvanrossum", "organizations_url": "https://api.github.com/users/gvanrossum/orgs", "starred_url": "https://api.github.com/users/gvanrossum/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gvanrossum/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gvanrossum/subscriptions", "login": "gvanrossum", "repos_url": "https://api.github.com/users/gvanrossum/repos", "received_events_url": "https://api.github.com/users/gvanrossum/received_events", "id": 2894642, "site_admin": false}, "locked": false}, {"milestone": null, "number": 284, "html_url": "https://github.com/python/mypy/issues/284", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/284", "id": 37752443, "events_url": "https://api.github.com/repos/python/mypy/issues/284/events", "updated_at": "2014-07-14T05:54:08Z", "body": "List[int] is not accepted on the second line:\r\n\r\n    from typing import *\r\n    x = Undefined(List[int])\r\n\r\nReported by Eric Price.", "labels_url": "https://api.github.com/repos/python/mypy/issues/284/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "After from typing import *, List[...] is not accepted as a type", "assignee": null, "closed_at": "2014-07-14T05:54:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/284/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2014-07-14T00:17:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 283, "html_url": "https://github.com/python/mypy/issues/283", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/283", "id": 37752045, "events_url": "https://api.github.com/repos/python/mypy/issues/283/events", "updated_at": "2014-07-24T03:50:35Z", "body": "It seems that unary + should only accept operands with the `__pos__` method, and the type should be inferred from the return type of the method. Currently anything is valid, and the type of the expression is the type of the operand.", "labels_url": "https://api.github.com/repos/python/mypy/issues/283/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unary + accepted with any operand type", "assignee": null, "closed_at": "2014-07-24T03:50:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/283/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2014-07-13T23:53:24Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 282, "html_url": "https://github.com/python/mypy/issues/282", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/282", "id": 32323871, "events_url": "https://api.github.com/repos/python/mypy/issues/282/events", "updated_at": "2014-04-27T23:46:48Z", "body": "We currently use -- for comments in test case descriptions (.test files). This is a leftover from the original Alore implementation and we should use # for consistency.", "labels_url": "https://api.github.com/repos/python/mypy/issues/282/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use # for comments in test cases", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/282/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2014-04-27T23:46:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 281, "html_url": "https://github.com/python/mypy/pull/281", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/281", "id": 27778380, "events_url": "https://api.github.com/repos/python/mypy/issues/281/events", "updated_at": "2014-07-13T22:46:11Z", "body": "Running the typechecker on code like\r\n```\r\ndef foo():\r\n  return +1\r\n```\r\nwill result in an exception.", "labels_url": "https://api.github.com/repos/python/mypy/issues/281/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "add op + for unary expressions", "assignee": null, "closed_at": "2014-07-13T22:46:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/281/comments", "labels": [], "created_at": "2014-02-18T09:03:02Z", "user": {"followers_url": "https://api.github.com/users/FlorianLudwig/followers", "gists_url": "https://api.github.com/users/FlorianLudwig/gists{/gist_id}", "html_url": "https://github.com/FlorianLudwig", "following_url": "https://api.github.com/users/FlorianLudwig/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/432263?v=3", "url": "https://api.github.com/users/FlorianLudwig", "organizations_url": "https://api.github.com/users/FlorianLudwig/orgs", "starred_url": "https://api.github.com/users/FlorianLudwig/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/FlorianLudwig/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/FlorianLudwig/subscriptions", "login": "FlorianLudwig", "repos_url": "https://api.github.com/users/FlorianLudwig/repos", "received_events_url": "https://api.github.com/users/FlorianLudwig/received_events", "id": 432263, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/281.patch", "html_url": "https://github.com/python/mypy/pull/281", "diff_url": "https://github.com/python/mypy/pull/281.diff", "url": "https://api.github.com/repos/python/mypy/pulls/281"}, "locked": false}, {"milestone": null, "number": 280, "html_url": "https://github.com/python/mypy/issues/280", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/280", "id": 25661941, "events_url": "https://api.github.com/repos/python/mypy/issues/280/events", "updated_at": "2014-07-24T05:04:36Z", "body": "git clone  python3 setpy.py install\r\nuse mypy -c samples/for.py \r\nsamples/for.py, line 1: Could not find builtins\r\nsamples/for.py, line 1: No module named 'typing'\r\n\r\nI have try this to make builtins can import \r\nfirst uncomment import typing.\r\n\r\nadd stubs when target in C\r\n```\r\ndef default_lib_path(data_dir: str, target: int, pyversion: int) -> List[str]:\r\n    if target in [ICODE, C]:\r\n        # Add C back end library directory.\r\n        path.append(os.path.join(data_dir, 'lib'))\r\n        version_dir = '3.2'\r\n        # add stubs\r\n        path.append(os.path.join(data_dir, 'stubs', version_dir))\r\n```\r\nthen install and run \r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/mypy\", line 189, in <module>\r\n    main()\r\n  File \"/usr/local/bin/mypy\", line 41, in main\r\n    compile_to_c(path, module, bin_dir, args, options)\r\n  File \"/usr/local/bin/mypy\", line 110, in compile_to_c\r\n    flags=options.build_flags)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/build.py\", line 172, in build\r\n    return manager.process(UnprocessedFile(info, program_text))\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/build.py\", line 368, in process\r\n    self.final_passes(trees, self.type_checker.type_map)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/build.py\", line 488, in final_passes\r\n    self.transform(files)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/build.py\", line 518, in transform\r\n    f.accept(v)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/nodes.py\", line 131, in accept\r\n    return visitor.visit_mypy_file(self)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/transform.py\", line 88, in visit_mypy_file\r\n    res.extend(self.type_tf.transform_class_def(d))\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/transformtype.py\", line 112, in transform_class_def\r\n    dyn_wrapper = self.make_type_object_wrapper(tdef)\r\n  File \"/usr/local/lib/python3.2/dist-packages/mypy/transformtype.py\", line 611, in make_type_object_wrapper\r\n    arg_kinds = type_sig.arg_kinds\r\nAttributeError: 'NoneType' object has no attribute 'arg_kinds'\r\n```\r\nwhere i find .\r\n\r\nin types.py  class TypeTranslator don't implement  func  : visit_overload  \r\n\r\n\r\nSo What i need to do can make mypy -c samples/for.py work ?\r\n\r\n \r\n\r\n\r\n\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/280/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "-c mode build error", "assignee": null, "closed_at": "2014-07-24T05:04:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/280/comments", "labels": [], "created_at": "2014-01-15T16:55:30Z", "user": {"followers_url": "https://api.github.com/users/jiamo/followers", "gists_url": "https://api.github.com/users/jiamo/gists{/gist_id}", "html_url": "https://github.com/jiamo", "following_url": "https://api.github.com/users/jiamo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/732751?v=3", "url": "https://api.github.com/users/jiamo", "organizations_url": "https://api.github.com/users/jiamo/orgs", "starred_url": "https://api.github.com/users/jiamo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jiamo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jiamo/subscriptions", "login": "jiamo", "repos_url": "https://api.github.com/users/jiamo/repos", "received_events_url": "https://api.github.com/users/jiamo/received_events", "id": 732751, "site_admin": false}, "locked": false}, {"milestone": null, "number": 279, "html_url": "https://github.com/python/mypy/issues/279", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/279", "id": 25377165, "events_url": "https://api.github.com/repos/python/mypy/issues/279/events", "updated_at": "2015-09-02T03:49:04Z", "body": "While it is possible to subclass `tuple`, subclassing `Tuple` doesn't actually yield a subclass of `Tuple`.\r\n\r\nThe following gives the error `Argument 1 to \"fn\" has incompatible type Test[int]`:\r\n```python\r\nfrom typing import typevar, Generic, Tuple\r\n\r\nT = typevar('T')\r\n\r\nclass Test(Generic[T], Tuple[T]):\r\n    pass\r\n\r\ndef fn(arg: Tuple[int]) -> None:\r\n    pass\r\n\r\nfn(Test[int]())\r\n```\r\n\r\nI would expect this to work because `Test` inherits `Tuple`.\r\n\r\nAdditionally, the following doesn't work because `Tuple` is an object and can't be indexed:\r\n```python\r\nfrom typing import typevar, Generic, Tuple\r\n\r\nT = typevar('T')\r\n\r\nclass Test(Generic[T], Tuple[T]):\r\n    pass\r\n\r\nassert isinstance(Test[int](), Tuple[int])\r\n```\r\n\r\nBoth of these examples work with `List`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/279/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Subclassing Tuple", "assignee": null, "closed_at": "2015-09-02T03:48:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/279/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2014-01-10T06:16:06Z", "user": {"followers_url": "https://api.github.com/users/Stebalien/followers", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "html_url": "https://github.com/Stebalien", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=3", "url": "https://api.github.com/users/Stebalien", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "login": "Stebalien", "repos_url": "https://api.github.com/users/Stebalien/repos", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "id": 310393, "site_admin": false}, "locked": false}, {"milestone": null, "number": 278, "html_url": "https://github.com/python/mypy/pull/278", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/278", "id": 25370318, "events_url": "https://api.github.com/repos/python/mypy/issues/278/events", "updated_at": "2014-07-13T23:35:51Z", "body": "Here is a stub for `urllib.parse`. It appears to work but should probably be tested more thoroughly.", "labels_url": "https://api.github.com/repos/python/mypy/issues/278/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add urllib.parse", "assignee": null, "closed_at": "2014-07-13T23:35:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/278/comments", "labels": [], "created_at": "2014-01-10T01:48:58Z", "user": {"followers_url": "https://api.github.com/users/Stebalien/followers", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "html_url": "https://github.com/Stebalien", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=3", "url": "https://api.github.com/users/Stebalien", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "login": "Stebalien", "repos_url": "https://api.github.com/users/Stebalien/repos", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "id": 310393, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/278.patch", "html_url": "https://github.com/python/mypy/pull/278", "diff_url": "https://github.com/python/mypy/pull/278.diff", "url": "https://api.github.com/repos/python/mypy/pulls/278"}, "locked": false}, {"milestone": null, "number": 277, "html_url": "https://github.com/python/mypy/issues/277", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/277", "id": 24963270, "events_url": "https://api.github.com/repos/python/mypy/issues/277/events", "updated_at": "2014-07-25T03:54:11Z", "body": "The following line raises a parse error in mypy but is legit in python:\r\nprint([i for i in range(2) for j in range(3)])\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/277/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fix nested list comprehension", "assignee": null, "closed_at": "2014-07-25T03:54:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/277/comments", "labels": [{"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2014-01-02T13:19:11Z", "user": {"followers_url": "https://api.github.com/users/jt-xx/followers", "gists_url": "https://api.github.com/users/jt-xx/gists{/gist_id}", "html_url": "https://github.com/jt-xx", "following_url": "https://api.github.com/users/jt-xx/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/15243?v=3", "url": "https://api.github.com/users/jt-xx", "organizations_url": "https://api.github.com/users/jt-xx/orgs", "starred_url": "https://api.github.com/users/jt-xx/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jt-xx/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jt-xx/subscriptions", "login": "jt-xx", "repos_url": "https://api.github.com/users/jt-xx/repos", "received_events_url": "https://api.github.com/users/jt-xx/received_events", "id": 15243, "site_admin": false}, "locked": false}, {"milestone": null, "number": 276, "html_url": "https://github.com/python/mypy/issues/276", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/276", "id": 24756498, "events_url": "https://api.github.com/repos/python/mypy/issues/276/events", "updated_at": "2014-07-25T03:35:12Z", "body": "Stubs for Python 2 builtins are broken in various ways -- for example, `str` should be duck type compatible with `unicode`, and we should use duck type compatibility rather than overloading for str/unicode polymorphism. Review the stubs and fix them to conform to Python 2.7 more closely.", "labels_url": "https://api.github.com/repos/python/mypy/issues/276/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix Python 2 builtins stubs", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-07-25T03:35:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/276/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-12-24T21:07:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 275, "html_url": "https://github.com/python/mypy/issues/275", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/275", "id": 24756381, "events_url": "https://api.github.com/repos/python/mypy/issues/275/events", "updated_at": "2014-08-03T18:38:40Z", "body": "Currently if neither the implementation of a module nor the stubs cannot be found, the analysis is terminated before type checking. However, often it would be useful to be able to type check a program even if some modules are unknown -- we would only generate warnings for imports of these modules, and infer the type of the module object as `Any`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/275/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check code when some module stubs missing", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-12-25T02:34:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/275/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-12-24T20:59:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 274, "html_url": "https://github.com/python/mypy/issues/274", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/274", "id": 24756281, "events_url": "https://api.github.com/repos/python/mypy/issues/274/events", "updated_at": "2014-07-24T05:00:27Z", "body": "Type check class methods. Currently only static methods are supported.", "labels_url": "https://api.github.com/repos/python/mypy/issues/274/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type check class methods", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-07-24T05:00:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/274/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-12-24T20:52:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 273, "html_url": "https://github.com/python/mypy/issues/273", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/273", "id": 23485025, "events_url": "https://api.github.com/repos/python/mypy/issues/273/events", "updated_at": "2015-05-17T17:44:10Z", "body": "Dynamic typing is what limits python from being verified from purity , because functions called is dependent on type. Once everything is static , it's possible to determine exact call graph and test for purity.  ", "labels_url": "https://api.github.com/repos/python/mypy/issues/273/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add checking for purity", "assignee": null, "closed_at": "2015-05-17T17:44:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/273/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-11-29T10:30:45Z", "user": {"followers_url": "https://api.github.com/users/ghost/followers", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "html_url": "https://github.com/ghost", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=3", "url": "https://api.github.com/users/ghost", "organizations_url": "https://api.github.com/users/ghost/orgs", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "login": "ghost", "repos_url": "https://api.github.com/users/ghost/repos", "received_events_url": "https://api.github.com/users/ghost/received_events", "id": 10137, "site_admin": false}, "locked": false}, {"milestone": null, "number": 272, "html_url": "https://github.com/python/mypy/issues/272", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/272", "id": 20387553, "events_url": "https://api.github.com/repos/python/mypy/issues/272/events", "updated_at": "2014-07-25T04:43:59Z", "body": "The very first example of a statically-typed function in the tutorial ([here](http://www.mypy-lang.org/tutorial.html#signatures) and again [here](http://www.mypy-lang.org/tutorial.html#typing)) reads:\r\n\r\n```\r\n# Statically typed (still valid Python)\r\n\r\ndef greeting(name: str) -> None:\r\n    return 'Hello, {}'.format(name)\r\n```\r\n\r\nThis is confusing (I guess it is even invalid) because the return value is  a `str` while the annotation indicates that the function returns `None`.\r\n\r\nAs a side note, I would gladly make a change to the tutorial myself and submit a pull request, but I couldn't find the source for the website.", "labels_url": "https://api.github.com/repos/python/mypy/issues/272/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Confusing example in the tutorial.", "assignee": null, "closed_at": "2014-07-25T04:43:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/272/comments", "labels": [], "created_at": "2013-10-02T11:07:17Z", "user": {"followers_url": "https://api.github.com/users/jrioux/followers", "gists_url": "https://api.github.com/users/jrioux/gists{/gist_id}", "html_url": "https://github.com/jrioux", "following_url": "https://api.github.com/users/jrioux/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1246890?v=3", "url": "https://api.github.com/users/jrioux", "organizations_url": "https://api.github.com/users/jrioux/orgs", "starred_url": "https://api.github.com/users/jrioux/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jrioux/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jrioux/subscriptions", "login": "jrioux", "repos_url": "https://api.github.com/users/jrioux/repos", "received_events_url": "https://api.github.com/users/jrioux/received_events", "id": 1246890, "site_admin": false}, "locked": false}, {"milestone": null, "number": 271, "html_url": "https://github.com/python/mypy/issues/271", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/271", "id": 19985586, "events_url": "https://api.github.com/repos/python/mypy/issues/271/events", "updated_at": "2014-09-07T20:58:39Z", "body": "We can let a function to return an explicit `None` if the return type is `None`:\r\n\r\n    def f() -> None: return None  # should be fine\r\n\r\nThis is to remain compatible with existing Python code (code like this exists).", "labels_url": "https://api.github.com/repos/python/mypy/issues/271/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow explicit return None in function returning None", "assignee": null, "closed_at": "2014-09-07T20:58:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/271/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-09-24T15:27:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 270, "html_url": "https://github.com/python/mypy/issues/270", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/270", "id": 19983253, "events_url": "https://api.github.com/repos/python/mypy/issues/270/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Generic function is not accepted as a subtype of a function type:\r\n\r\n    from typing import typevar, Function, Any\r\n    def f(x: Function[[Any], Any]) -> None: pass\r\n    T = typevar('T')\r\n    def g(x: T) -> None: pass\r\n    f(g)  # Ouch: Argument 1 to \"f\" has incompatible type\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/270/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generic function type compatibility", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/270/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-09-24T14:55:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 269, "html_url": "https://github.com/python/mypy/issues/269", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/269", "id": 19976879, "events_url": "https://api.github.com/repos/python/mypy/issues/269/events", "updated_at": "2013-12-25T02:34:07Z", "body": "There should be a type for traceback objects (`typing.Traceback`).", "labels_url": "https://api.github.com/repos/python/mypy/issues/269/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add type for traceback objects", "assignee": null, "closed_at": "2013-12-25T02:34:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/269/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-09-24T13:23:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 268, "html_url": "https://github.com/python/mypy/issues/268", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/268", "id": 19976353, "events_url": "https://api.github.com/repos/python/mypy/issues/268/events", "updated_at": "2013-12-25T02:34:07Z", "body": "File-like objects should be iterable.", "labels_url": "https://api.github.com/repos/python/mypy/issues/268/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make IO objects iterable", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-12-25T02:34:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/268/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-09-24T13:15:26Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 267, "html_url": "https://github.com/python/mypy/issues/267", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/267", "id": 19975970, "events_url": "https://api.github.com/repos/python/mypy/issues/267/events", "updated_at": "2013-12-25T02:34:07Z", "body": "`__exit__` methods return a boolean. This should be reflected in the stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/267/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "__exit__ methods should return bool", "assignee": null, "closed_at": "2013-12-25T02:34:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/267/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-09-24T13:09:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 266, "html_url": "https://github.com/python/mypy/issues/266", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/266", "id": 19873269, "events_url": "https://api.github.com/repos/python/mypy/issues/266/events", "updated_at": "2014-07-25T03:31:03Z", "body": "IO and TextIO properties are concrete, since abc.abstractproperty is not supported. Fix this.\r\n\r\nDepends on #263.", "labels_url": "https://api.github.com/repos/python/mypy/issues/266/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make IO and TextIO properties abstract", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/266/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-09-22T14:07:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 265, "html_url": "https://github.com/python/mypy/issues/265", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/265", "id": 19873135, "events_url": "https://api.github.com/repos/python/mypy/issues/265/events", "updated_at": "2013-09-24T08:18:01Z", "body": "Add name and mode properties to typing.IO.", "labels_url": "https://api.github.com/repos/python/mypy/issues/265/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "IO name and mode properties", "assignee": null, "closed_at": "2013-09-24T08:18:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/265/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-09-22T13:57:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 264, "html_url": "https://github.com/python/mypy/issues/264", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/264", "id": 19873055, "events_url": "https://api.github.com/repos/python/mypy/issues/264/events", "updated_at": "2014-07-25T03:43:12Z", "body": "If you try to make a class duck type compatible with a generic type using the typing.ducktype decorator, the type checker fails in a subtype check with an unhandled exception if you omit the type arguments:\r\n\r\n    from typing import ducktype, List\r\n    @ducktype(list)  # works if List[int] instead\r\n    class A: pass\r\n    def f(x: List[int]) -> None: pass\r\n    f(A())\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/264/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Duck type compatibility with a generic type using implicit type args", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/264/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-09-22T13:52:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 263, "html_url": "https://github.com/python/mypy/issues/263", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/263", "id": 19872489, "events_url": "https://api.github.com/repos/python/mypy/issues/263/events", "updated_at": "2016-02-04T16:13:40Z", "body": "Add support for abc.abstractproperty.", "labels_url": "https://api.github.com/repos/python/mypy/issues/263/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Abstract properties", "assignee": null, "closed_at": "2016-02-04T15:51:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/263/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-09-22T13:01:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 262, "html_url": "https://github.com/python/mypy/issues/262", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/262", "id": 19872483, "events_url": "https://api.github.com/repos/python/mypy/issues/262/events", "updated_at": "2013-09-24T08:18:01Z", "body": "Add read-only properties encoding, buffer, errors, line_buffering and newlines to typing.TextIO.", "labels_url": "https://api.github.com/repos/python/mypy/issues/262/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "TextIO properties", "assignee": null, "closed_at": "2013-09-24T08:18:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/262/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-09-22T13:01:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 261, "html_url": "https://github.com/python/mypy/issues/261", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/261", "id": 19870316, "events_url": "https://api.github.com/repos/python/mypy/issues/261/events", "updated_at": "2015-02-22T18:43:41Z", "body": "The type of a *args argument is a list (a leftover from Alore), even though it is actually a tuple (i.e. a Sequence until we add support for TupleSequence). For example, this program is accepted even though it fails at runtime:\r\n\r\n    def f(*x: int) -> None:\r\n        x.append(1)  # Ouch\r\n    f(1)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/261/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "*args argument should be a Sequence, not a list", "assignee": null, "closed_at": "2015-02-22T18:43:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/261/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-09-22T09:24:15Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 260, "html_url": "https://github.com/python/mypy/issues/260", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/260", "id": 19860234, "events_url": "https://api.github.com/repos/python/mypy/issues/260/events", "updated_at": "2015-05-17T18:21:18Z", "body": "The following call is rejected by the type checker:\r\n\r\n    open(\"...\", \"w\", errors=\"surrogateescape\")", "labels_url": "https://api.github.com/repos/python/mypy/issues/260/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Call to overloaded function with keyword argument rejected", "assignee": null, "closed_at": "2015-05-17T18:21:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/260/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-09-21T17:45:06Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 259, "html_url": "https://github.com/python/mypy/issues/259", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/259", "id": 19857676, "events_url": "https://api.github.com/repos/python/mypy/issues/259/events", "updated_at": "2014-10-25T21:30:37Z", "body": "The type checker complains about the `self.B()` call in the program below:\r\n\r\n    class A:\r\n        class B: pass\r\n        def f(self) -> None:\r\n            self.B()\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/259/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot access nested class", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/259/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-09-21T14:56:47Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 258, "html_url": "https://github.com/python/mypy/issues/258", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/258", "id": 19856434, "events_url": "https://api.github.com/repos/python/mypy/issues/258/events", "updated_at": "2013-09-24T08:18:01Z", "body": "Indexing a tuple with a negative integer should be allowed. Example:\r\n\r\n    (1, 'x')[-1]\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/258/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow negative integer as tuple index", "assignee": null, "closed_at": "2013-09-24T08:18:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/258/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-09-21T13:18:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 257, "html_url": "https://github.com/python/mypy/issues/257", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/257", "id": 19855938, "events_url": "https://api.github.com/repos/python/mypy/issues/257/events", "updated_at": "2013-09-21T12:52:55Z", "body": "Any iterable value should be fine as *args. Currently only lists are accepted.", "labels_url": "https://api.github.com/repos/python/mypy/issues/257/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support arbitrary iterable as varargs", "assignee": null, "closed_at": "2013-09-21T12:52:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/257/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "duplicate", "color": "cccccc", "url": "https://api.github.com/repos/python/mypy/labels/duplicate"}], "created_at": "2013-09-21T12:29:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 256, "html_url": "https://github.com/python/mypy/issues/256", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/256", "id": 17289492, "events_url": "https://api.github.com/repos/python/mypy/issues/256/events", "updated_at": "2016-03-06T21:30:29Z", "body": "I was excited by the prospect that mypy would bring algebraic data types to python...\r\n\r\n\"A general algebraic data type is a possibly recursive sum type of product types.\"\r\n  - https://en.wikipedia.org/wiki/Algebraic_data_type\r\n\r\nThe tuple type is clearly a product type, and mypy has union types, but the tutorial makes them look like something other than ordinary sum types.\r\n\r\nhttp://www.mypy-lang.org/tutorial.html#uniontypes\r\n\r\nAre sum types and recursive types planned?\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/256/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "sum types, recursive types, algebraic datatypes", "assignee": null, "closed_at": "2015-05-17T18:10:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/256/comments", "labels": [{"name": "question", "color": "cc317c", "url": "https://api.github.com/repos/python/mypy/labels/question"}], "created_at": "2013-07-26T23:23:33Z", "user": {"followers_url": "https://api.github.com/users/dckc/followers", "gists_url": "https://api.github.com/users/dckc/gists{/gist_id}", "html_url": "https://github.com/dckc", "following_url": "https://api.github.com/users/dckc/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/150986?v=3", "url": "https://api.github.com/users/dckc", "organizations_url": "https://api.github.com/users/dckc/orgs", "starred_url": "https://api.github.com/users/dckc/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/dckc/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/dckc/subscriptions", "login": "dckc", "repos_url": "https://api.github.com/users/dckc/repos", "received_events_url": "https://api.github.com/users/dckc/received_events", "id": 150986, "site_admin": false}, "locked": false}, {"milestone": null, "number": 255, "html_url": "https://github.com/python/mypy/issues/255", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/255", "id": 17133355, "events_url": "https://api.github.com/repos/python/mypy/issues/255/events", "updated_at": "2014-08-17T23:37:10Z", "body": "Hey. First, I have Ubuntu, and an up-to-date fork of mypy development repo. After installing an egg via `sudo python3 setup.py install`, a `mypy` link is created. Problem is that it points to a wrong location (`driver.py`, which doesn't exist)\r\n    \r\n    $ where mypy\r\n    mypy: aliased to python3 path/to/mypy/driver.py\r\n    /usr/local/bin/mypy\r\n\r\nI believe it should point to `scripts/mypy`. Didn't find any mention of `driver.py` in the codebase, so don't know how to fix. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/255/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Wrong mypy alias is created on setup", "assignee": null, "closed_at": "2014-08-17T23:37:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/255/comments", "labels": [], "created_at": "2013-07-24T00:20:37Z", "user": {"followers_url": "https://api.github.com/users/bogdan-kulynych/followers", "gists_url": "https://api.github.com/users/bogdan-kulynych/gists{/gist_id}", "html_url": "https://github.com/bogdan-kulynych", "following_url": "https://api.github.com/users/bogdan-kulynych/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1592918?v=3", "url": "https://api.github.com/users/bogdan-kulynych", "organizations_url": "https://api.github.com/users/bogdan-kulynych/orgs", "starred_url": "https://api.github.com/users/bogdan-kulynych/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/bogdan-kulynych/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/bogdan-kulynych/subscriptions", "login": "bogdan-kulynych", "repos_url": "https://api.github.com/users/bogdan-kulynych/repos", "received_events_url": "https://api.github.com/users/bogdan-kulynych/received_events", "id": 1592918, "site_admin": false}, "locked": false}, {"milestone": null, "number": 254, "html_url": "https://github.com/python/mypy/issues/254", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/254", "id": 17101743, "events_url": "https://api.github.com/repos/python/mypy/issues/254/events", "updated_at": "2015-12-31T14:43:16Z", "body": "Improve type inference by making it possible to infer the type of a variable from multiple (conditional) assignments. \r\n\r\nThis should be valid:\r\n\r\n    x = None\r\n    if c:\r\n        x = 'a'\r\n    # type of x is str\r\n\r\nAnother example:\r\n\r\n    if c:\r\n        x = None\r\n    else:\r\n        x = 'a'\r\n    # type of x is str\r\n\r\nLater on, we could extend this to precise typing of None values using union types.\r\n\r\n**Edit: restricted this issue to multiple initialization.**", "labels_url": "https://api.github.com/repos/python/mypy/issues/254/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference for multi-statement initialization", "assignee": null, "closed_at": "2015-12-31T14:43:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/254/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-07-23T13:50:55Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 253, "html_url": "https://github.com/python/mypy/issues/253", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/253", "id": 17093623, "events_url": "https://api.github.com/repos/python/mypy/issues/253/events", "updated_at": "2013-07-23T12:07:24Z", "body": "The stub return type of BytesMatch.group should be bytes, not str.", "labels_url": "https://api.github.com/repos/python/mypy/issues/253/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "BytesMatch.group has invalid return type str", "assignee": null, "closed_at": "2013-07-23T12:07:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/253/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-23T10:23:18Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 252, "html_url": "https://github.com/python/mypy/pull/252", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/252", "id": 17007556, "events_url": "https://api.github.com/repos/python/mypy/issues/252/events", "updated_at": "2014-07-06T12:03:32Z", "body": ".", "labels_url": "https://api.github.com/repos/python/mypy/issues/252/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fixed #183. Added check for python3 installation with brew on OS X.", "assignee": null, "closed_at": "2013-07-21T10:06:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/252/comments", "labels": [], "created_at": "2013-07-20T15:22:18Z", "user": {"followers_url": "https://api.github.com/users/gennad/followers", "gists_url": "https://api.github.com/users/gennad/gists{/gist_id}", "html_url": "https://github.com/gennad", "following_url": "https://api.github.com/users/gennad/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/394648?v=3", "url": "https://api.github.com/users/gennad", "organizations_url": "https://api.github.com/users/gennad/orgs", "starred_url": "https://api.github.com/users/gennad/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/gennad/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/gennad/subscriptions", "login": "gennad", "repos_url": "https://api.github.com/users/gennad/repos", "received_events_url": "https://api.github.com/users/gennad/received_events", "id": 394648, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/252.patch", "html_url": "https://github.com/python/mypy/pull/252", "diff_url": "https://github.com/python/mypy/pull/252.diff", "url": "https://api.github.com/repos/python/mypy/pulls/252"}, "locked": false}, {"milestone": null, "number": 251, "html_url": "https://github.com/python/mypy/issues/251", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/251", "id": 16984683, "events_url": "https://api.github.com/repos/python/mypy/issues/251/events", "updated_at": "2013-07-19T18:21:38Z", "body": "This is invalid in Python, but the parser accepts it:\r\n\r\n    1 if 1, 2 else 3", "labels_url": "https://api.github.com/repos/python/mypy/issues/251/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid conditional expression not rejected", "assignee": null, "closed_at": "2013-07-19T18:21:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/251/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-19T18:14:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 250, "html_url": "https://github.com/python/mypy/issues/250", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/250", "id": 16984135, "events_url": "https://api.github.com/repos/python/mypy/issues/250/events", "updated_at": "2013-07-19T18:11:44Z", "body": "Conditional expression in a list comprehension may result in a parse error. The following is not accepted even though it's valid Python:\r\n\r\n    print([1 if x else 2 for x in [0, 1]])\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/250/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditional expression parse problem", "assignee": null, "closed_at": "2013-07-19T18:11:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/250/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-19T18:01:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 249, "html_url": "https://github.com/python/mypy/issues/249", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/249", "id": 16968904, "events_url": "https://api.github.com/repos/python/mypy/issues/249/events", "updated_at": "2013-07-19T12:43:23Z", "body": "We could simplify code by renaming WhileStmt => While, AssignmentStmt => Assignment, etc. without making the code any less clear. However, IntExpr => Int may not be a wise change, since Int is ambiguous: it can mean a literal or a type. Perhaps rename IntExpr => IntLiteral so improve clarity.", "labels_url": "https://api.github.com/repos/python/mypy/issues/249/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename WhileStmt => While etc.", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/249/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-19T12:43:23Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 248, "html_url": "https://github.com/python/mypy/issues/248", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/248", "id": 16913173, "events_url": "https://api.github.com/repos/python/mypy/issues/248/events", "updated_at": "2014-10-12T19:12:54Z", "body": "Support lvalues such as `x, (y, z)`. These should be supported for assignment statements, for loops, list comprehensions, etc. Example:\r\n\r\n    x, (y, z) = 1, ('x', 2.0)  # should be accepted\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/248/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Nested tuple lvalues", "assignee": null, "closed_at": "2014-10-12T19:12:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/248/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-18T10:26:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 247, "html_url": "https://github.com/python/mypy/issues/247", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/247", "id": 16911378, "events_url": "https://api.github.com/repos/python/mypy/issues/247/events", "updated_at": "2013-07-18T09:37:58Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/247/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move typefixture.py to mypy/test/", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/247/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-18T09:37:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 246, "html_url": "https://github.com/python/mypy/issues/246", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/246", "id": 16809576, "events_url": "https://api.github.com/repos/python/mypy/issues/246/events", "updated_at": "2015-05-17T20:19:27Z", "body": "Replace all uses of VarDef with AssignmentStmt and remove VarDef.", "labels_url": "https://api.github.com/repos/python/mypy/issues/246/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove mypy.nodes.VarDef", "assignee": null, "closed_at": "2015-05-17T20:19:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/246/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-16T13:35:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 245, "html_url": "https://github.com/python/mypy/issues/245", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/245", "id": 16808437, "events_url": "https://api.github.com/repos/python/mypy/issues/245/events", "updated_at": "2013-09-21T12:50:19Z", "body": "The type checker should know about `isinstance` checks. For example, this code should be valid:\r\n\r\n    def f(x: object) -> None:\r\n        if isinstance(x, str):\r\n            # x has type str here.\r\n            print(x + 'foo')  # ok\r\n\r\nInitially only support cases where the first argument is a variable and the 'if' condition only contains an `isinstance` check. Later, consider extending this to more complex cases.", "labels_url": "https://api.github.com/repos/python/mypy/issues/245/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Basic isinstance() type inference", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-09-21T12:50:19Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/245/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-16T13:09:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 244, "html_url": "https://github.com/python/mypy/issues/244", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/244", "id": 16808219, "events_url": "https://api.github.com/repos/python/mypy/issues/244/events", "updated_at": "2016-02-02T03:32:18Z", "body": "Support descriptors in the type checker.", "labels_url": "https://api.github.com/repos/python/mypy/issues/244/labels{/name}", "comments": 19, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Descriptors", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/244/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-16T13:04:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 243, "html_url": "https://github.com/python/mypy/issues/243", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/243", "id": 16808186, "events_url": "https://api.github.com/repos/python/mypy/issues/243/events", "updated_at": "2014-07-24T05:10:05Z", "body": "It should be possible to type check code that uses conditional Python version checks.\r\n\r\nConsider this code:\r\n\r\n    if PY3:\r\n        # python 3\r\n        ...\r\n    else:\r\n        # python 2\r\n        ...\r\n\r\nIf type checking in Python 3 mode, we should only type check the if block and ignore the else block, and vice versa in Python 2 mode.\r\n\r\nOpen questions:\r\n\r\n * How do we determine which flag/constant the code uses to check for Python version?\r\n * Should we also have special support for `six`?", "labels_url": "https://api.github.com/repos/python/mypy/issues/243/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2/3 version checks", "assignee": null, "closed_at": "2014-07-24T05:10:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/243/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-07-16T13:03:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 242, "html_url": "https://github.com/python/mypy/issues/242", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/242", "id": 16753369, "events_url": "https://api.github.com/repos/python/mypy/issues/242/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Several messages in mypy.messages are obsolete and no longer used. Remove them.", "labels_url": "https://api.github.com/repos/python/mypy/issues/242/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Remove obsolete messages from mypy.messages", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/242/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-15T13:19:09Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 241, "html_url": "https://github.com/python/mypy/issues/241", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/241", "id": 16751173, "events_url": "https://api.github.com/repos/python/mypy/issues/241/events", "updated_at": "2014-07-25T03:43:12Z", "body": "When using multiple inheritance, the type checker does not complain if base classes have incompatible definitions. For example, this is not rejected:\r\n\r\n    import typing\r\n    class A:\r\n        def f(self, x: int) -> None: pass\r\n    class B:\r\n        def f(self, x: str) -> None: pass\r\n    class C(A, B): pass # No error, but should complain about f\r\n\r\nVerify that all inherited definitions are compatible.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/241/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Reject incompatible baseclass definitions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/241/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-15T12:20:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 240, "html_url": "https://github.com/python/mypy/issues/240", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/240", "id": 16750952, "events_url": "https://api.github.com/repos/python/mypy/issues/240/events", "updated_at": "2015-10-13T06:01:24Z", "body": "Currently an instance variable can be accessed using the class, which is wrong. For example, this code is accepted by the type checker:\r\n\r\n    class A:\r\n        def f(self) -> None:\r\n            self.x = 1\r\n    A.x = 1 # accepted, but should be an error\r\n\r\nClass variables need to be assigned in the class body:\r\n\r\n    class A:\r\n        x = 1\r\n    A.x = 1 # ok, and should be ok", "labels_url": "https://api.github.com/repos/python/mypy/issues/240/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow access to instance variable via class", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/240/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "postponed", "color": "bfd4f2", "url": "https://api.github.com/repos/python/mypy/labels/postponed"}], "created_at": "2013-07-15T12:12:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 239, "html_url": "https://github.com/python/mypy/issues/239", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/239", "id": 16747887, "events_url": "https://api.github.com/repos/python/mypy/issues/239/events", "updated_at": "2015-11-22T18:03:29Z", "body": "Support `dict(name=x, ...)` in the type checker. Infer key type as `str` and value type based on keyword argument types.\r\n\r\nWe can't represent the signature of `dict` precisely using current functionality alone, i.e. we need some new type checker functionality.", "labels_url": "https://api.github.com/repos/python/mypy/issues/239/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support dict(name=x, ...)", "assignee": null, "closed_at": "2015-11-22T17:56:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/239/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-07-15T10:37:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 238, "html_url": "https://github.com/python/mypy/issues/238", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/238", "id": 16730432, "events_url": "https://api.github.com/repos/python/mypy/issues/238/events", "updated_at": "2016-03-01T01:28:18Z", "body": "Using a string in *args call is not accepted by the type checker, even though it's valid in Python:\r\n\r\n    import typing\r\n    def f(*x: str) -> None: pass\r\n    f(*'foo') # error\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/238/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Only list and tuple accepted in *args call", "assignee": null, "closed_at": "2016-03-01T01:27:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/238/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-07-14T17:10:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 237, "html_url": "https://github.com/python/mypy/issues/237", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/237", "id": 16730274, "events_url": "https://api.github.com/repos/python/mypy/issues/237/events", "updated_at": "2013-07-14T17:30:47Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/237/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support assertGreater etc. in unittest", "assignee": null, "closed_at": "2013-07-14T17:30:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/237/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T16:53:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 236, "html_url": "https://github.com/python/mypy/issues/236", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/236", "id": 16730239, "events_url": "https://api.github.com/repos/python/mypy/issues/236/events", "updated_at": "2013-07-14T17:30:47Z", "body": "The shutil stub has no return value for make_archive.", "labels_url": "https://api.github.com/repos/python/mypy/issues/236/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "shutil.make_archive returns a string", "assignee": null, "closed_at": "2013-07-14T17:30:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/236/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-14T16:51:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 235, "html_url": "https://github.com/python/mypy/issues/235", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/235", "id": 16729973, "events_url": "https://api.github.com/repos/python/mypy/issues/235/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Accessing a nested class is not possible via an instance (in statically typed code), even though it's fine in Python:\r\n\r\n    import typing\r\n    class A:\r\n        class B: pass\r\n        def f(self) -> None:\r\n            self.B()   # error\r\n            A.B()  # ok\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/235/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow access to nested class using instance", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/235/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T16:33:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 234, "html_url": "https://github.com/python/mypy/issues/234", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/234", "id": 16729634, "events_url": "https://api.github.com/repos/python/mypy/issues/234/events", "updated_at": "2015-05-17T18:03:59Z", "body": "Support indexing values with tuple types using negative indices:\r\n\r\n    import typing\r\n    t = (1, 'x')\r\n    print(t[-1])  # error: not supported, but should work\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/234/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Negative tuple indices", "assignee": null, "closed_at": "2015-05-17T18:03:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/234/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T16:06:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 233, "html_url": "https://github.com/python/mypy/issues/233", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/233", "id": 16729090, "events_url": "https://api.github.com/repos/python/mypy/issues/233/events", "updated_at": "2014-07-25T03:43:12Z", "body": "The type checker rejects the call to list2 below (\"argument 1 to list2 has incompatible type List[int]\"):\r\n\r\n    import typing\r\n    class list2(list):\r\n        pass\r\n    list2([1]) # error\r\n\r\nThe call should be fine.", "labels_url": "https://api.github.com/repos/python/mypy/issues/233/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Inheriting list breaks __init__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/233/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-14T15:23:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 232, "html_url": "https://github.com/python/mypy/issues/232", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/232", "id": 16728980, "events_url": "https://api.github.com/repos/python/mypy/issues/232/events", "updated_at": "2014-08-03T22:31:48Z", "body": "Cannot infer a list of types:\r\n\r\n    import typing\r\n    for type in [object, int]: pass  \r\n\r\n\"List items 1+2 have incompatible types\"\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/232/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Infer list of types", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/232/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T15:13:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 231, "html_url": "https://github.com/python/mypy/issues/231", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/231", "id": 16728704, "events_url": "https://api.github.com/repos/python/mypy/issues/231/events", "updated_at": "2014-11-02T19:21:45Z", "body": "The call to map() below is not accepted (\"argument 1 has incompatible type\"), even though it should be fine:\r\n\r\n    import typing\r\n    def f(*args: str) -> str: return args[0]\r\n    map(f, ['x'])\r\n\r\nThe call is accepted if the *args argument is switched to an ordinary argument.", "labels_url": "https://api.github.com/repos/python/mypy/issues/231/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference problem with map() and function that takes *args", "assignee": null, "closed_at": "2014-11-02T19:21:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/231/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-07-14T14:46:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 24, "number": 5, "html_url": "https://github.com/python/mypy/milestones/0.3.3", "state": "open", "id": 1616634, "url": "https://api.github.com/repos/python/mypy/milestones/5", "closed_issues": 6, "labels_url": "https://api.github.com/repos/python/mypy/milestones/5/labels", "description": "", "closed_at": null, "title": "0.3.3", "updated_at": "2016-04-08T20:06:17Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:19:26Z"}, "number": 230, "html_url": "https://github.com/python/mypy/issues/230", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/230", "id": 16728642, "events_url": "https://api.github.com/repos/python/mypy/issues/230/events", "updated_at": "2016-03-02T01:55:10Z", "body": "The type checker can't infer the type argument in the call to f below, even though there seems to be no reason why it shouldn't be able to do it:\r\n\r\n```\r\nfrom typing import List, TypeVar\r\nT = TypeVar('T')\r\ndef f(a: List[T], b: List[T]) -> None: pass\r\nx = ['']\r\nf(x, [])  # Cannot infer type argument 1 of \"f\"\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/230/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generic function type argument inference problem", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/230/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-14T14:40:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 229, "html_url": "https://github.com/python/mypy/issues/229", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/229", "id": 16728006, "events_url": "https://api.github.com/repos/python/mypy/issues/229/events", "updated_at": "2014-07-25T03:43:12Z", "body": "The assertRaises call below (in a subclass of unittest.TestCase) is rejected by the type checker (\"no overload variant matches argument types\"), even though the code should be accepted:\r\n\r\n    def assertError(self, *args: Any, **kwargs: Any) -> None:\r\n        self.assertRaises(getopt.GetoptError, *args, **kwargs)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/229/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Problem with *args and overloaded function", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/229/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-14T13:42:59Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 228, "html_url": "https://github.com/python/mypy/issues/228", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/228", "id": 16727765, "events_url": "https://api.github.com/repos/python/mypy/issues/228/events", "updated_at": "2013-07-14T17:30:47Z", "body": "Add assertIs, assertIsNone, assertIsInstance and assertInt + Not variants.", "labels_url": "https://api.github.com/repos/python/mypy/issues/228/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add more unittest.TestCase assert methods", "assignee": null, "closed_at": "2013-07-14T17:30:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/228/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T13:16:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 227, "html_url": "https://github.com/python/mypy/issues/227", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/227", "id": 16727614, "events_url": "https://api.github.com/repos/python/mypy/issues/227/events", "updated_at": "2013-07-14T17:30:47Z", "body": "The set, frozenset and AbstractSet classes have incomplete stubs. Update the stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/227/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add set methods to stubs", "assignee": null, "closed_at": "2013-07-14T17:30:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/227/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T12:59:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 226, "html_url": "https://github.com/python/mypy/issues/226", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/226", "id": 16726935, "events_url": "https://api.github.com/repos/python/mypy/issues/226/events", "updated_at": "2013-07-14T17:30:47Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/226/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add dict.fromkeys stub", "assignee": null, "closed_at": "2013-07-14T17:30:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/226/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T11:43:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 225, "html_url": "https://github.com/python/mypy/issues/225", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/225", "id": 16726549, "events_url": "https://api.github.com/repos/python/mypy/issues/225/events", "updated_at": "2013-07-14T17:30:47Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/225/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add assertSequenceEqual to unittest stubs", "assignee": null, "closed_at": "2013-07-14T17:30:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/225/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T11:05:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 224, "html_url": "https://github.com/python/mypy/issues/224", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/224", "id": 16726508, "events_url": "https://api.github.com/repos/python/mypy/issues/224/events", "updated_at": "2013-07-14T11:00:52Z", "body": "Concatenation of tuples should be supported by the type checker. \r\n\r\nA few alternatives:\r\n\r\n * Concatenating homogeneous tuples results in `TupleSequence[T]`.\r\n * Arbitrary tuples can be concatenated, such as `Tuple[int, str] + Tuple[bool]` results in\r\n    `Tuple[int, str, bool]`.\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/224/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Concatenation of tuples", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/224/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-07-14T11:00:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 223, "html_url": "https://github.com/python/mypy/issues/223", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/223", "id": 16726490, "events_url": "https://api.github.com/repos/python/mypy/issues/223/events", "updated_at": "2013-07-14T17:30:46Z", "body": "Update stubs to make it possible to use `assertRaises` as a context manager.", "labels_url": "https://api.github.com/repos/python/mypy/issues/223/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "unittest.TestCase.assertRaises as context manager", "assignee": null, "closed_at": "2013-07-14T17:30:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/223/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T10:58:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 222, "html_url": "https://github.com/python/mypy/issues/222", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/222", "id": 16726322, "events_url": "https://api.github.com/repos/python/mypy/issues/222/events", "updated_at": "2013-07-14T17:30:46Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/222/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "unittest.TestCase.assertRaises does not support **kwargs", "assignee": null, "closed_at": "2013-07-14T17:30:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/222/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-14T10:44:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 221, "html_url": "https://github.com/python/mypy/issues/221", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/221", "id": 16726269, "events_url": "https://api.github.com/repos/python/mypy/issues/221/events", "updated_at": "2013-07-15T11:21:12Z", "body": "Add support for conditional expressions to the type checker.\r\n\r\nExample:\r\n\r\n    y = 'small' if x < 5 else 'large'\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/221/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditional expressions", "assignee": null, "closed_at": "2013-07-15T11:21:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/221/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-14T10:40:15Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": {"due_on": null, "open_issues": 31, "number": 6, "html_url": "https://github.com/python/mypy/milestones/0.4.0", "state": "open", "id": 1616659, "url": "https://api.github.com/repos/python/mypy/milestones/6", "closed_issues": 0, "labels_url": "https://api.github.com/repos/python/mypy/milestones/6/labels", "description": "", "closed_at": null, "title": "0.4.0", "updated_at": "2016-04-07T18:59:42Z", "creator": {"followers_url": "https://api.github.com/users/ddfisher/followers", "gists_url": "https://api.github.com/users/ddfisher/gists{/gist_id}", "html_url": "https://github.com/ddfisher", "following_url": "https://api.github.com/users/ddfisher/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/245905?v=3", "url": "https://api.github.com/users/ddfisher", "organizations_url": "https://api.github.com/users/ddfisher/orgs", "starred_url": "https://api.github.com/users/ddfisher/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ddfisher/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ddfisher/subscriptions", "login": "ddfisher", "repos_url": "https://api.github.com/users/ddfisher/repos", "received_events_url": "https://api.github.com/users/ddfisher/received_events", "id": 245905, "site_admin": false}, "created_at": "2016-03-01T23:42:18Z"}, "number": 220, "html_url": "https://github.com/python/mypy/issues/220", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/220", "id": 16712687, "events_url": "https://api.github.com/repos/python/mypy/issues/220/events", "updated_at": "2016-03-02T01:55:09Z", "body": "Add support for type checking properties.\r\n\r\nWe should initially support at least the decorator syntax for read-only properties and the assignment syntax for both read-only and read-write properties, as these seem to be the most frequently used variants:\r\n\r\n    class A:\r\n        @property\r\n        def foo(self) -> int: return 2\r\n\r\n        def get_bar(self) -> int: return 3\r\n        def set_bar(self, value: int) -> None: ...\r\n        bar = property(get_bar, set_bar)\r\n\r\nAlso support defining a deleter and a docstring, at least when using the call syntax.", "labels_url": "https://api.github.com/repos/python/mypy/issues/220/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Properties", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/220/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-13T08:48:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 219, "html_url": "https://github.com/python/mypy/issues/219", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/219", "id": 16712551, "events_url": "https://api.github.com/repos/python/mypy/issues/219/events", "updated_at": "2013-07-13T08:35:20Z", "body": "We should have test cases for library stubs. Currently `pythoneval.test` has some library stub test cases, but they are not systematic at all.\r\n\r\nThere have been several mistakes in stub files, and insufficient testing is likely one of the main reasons.\r\n\r\nHere is a sketch of how this could work:\r\n\r\n * Add `mypy/test/data/stub-foo.test` for each library stub `foo`.\r\n * The `.test` file can have tests that pass type checking and can be run and\r\n   tests that expect type errors.\r\n\r\nHaving to develop and maintain complete test cases for libs may not be the most efficient approach. Instead, we could additionally do this:\r\n\r\n * Adapt Python stdlib unit tests to static typing instead and use them as  \r\n   wide-coverage tests. \r\n\r\nHowever, the stdlib unit tests would invariably miss some static typing related corner cases, for which it makes sense to have additional, separate test cases. Also, stdlib unit tests can't easily be adapted to test static type error reporting.\r\n\r\nEven the latter is not problem-free, as we would have to maintain a statically typed fork of CPython library test suites as part of mypy. However, there doesn't seem to be an easier alternative.", "labels_url": "https://api.github.com/repos/python/mypy/issues/219/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Test cases for stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/219/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-07-13T08:34:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 218, "html_url": "https://github.com/python/mypy/issues/218", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/218", "id": 16692315, "events_url": "https://api.github.com/repos/python/mypy/issues/218/events", "updated_at": "2016-01-27T21:13:06Z", "body": "Valid static method signatures are not accepted in Python 2 mode. Consider this code:\r\n\r\n    class Foo:\r\n        @staticmethod\r\n        def f(x): # type: (str) -> int\r\n            return 1\r\n\r\nThe type checker gives the error \"Type signature has too many arguments\".\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/218/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Signatures not accepted for Python 2 static methods", "assignee": null, "closed_at": "2016-01-27T21:13:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/218/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-07-12T17:16:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 217, "html_url": "https://github.com/python/mypy/issues/217", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/217", "id": 16679128, "events_url": "https://api.github.com/repos/python/mypy/issues/217/events", "updated_at": "2014-07-25T03:35:52Z", "body": "Add missing static/class methods to library stubs, such as `int.from_bytes`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/217/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add static methods to library stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/217/comments", "labels": [{"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2013-07-12T12:26:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 216, "html_url": "https://github.com/python/mypy/issues/216", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/216", "id": 16679055, "events_url": "https://api.github.com/repos/python/mypy/issues/216/events", "updated_at": "2013-09-21T12:54:38Z", "body": "Support static methods. For example:\r\n\r\n    class A:\r\n        @staticmethod\r\n        def foo(x: int) -> None: print(x * 2)\r\n    A.foo(3)  # 6\r\n    A().foo(4)  # 8\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/216/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Static methods", "assignee": null, "closed_at": "2013-09-21T12:54:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/216/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-12T12:25:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 215, "html_url": "https://github.com/python/mypy/issues/215", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/215", "id": 16656124, "events_url": "https://api.github.com/repos/python/mypy/issues/215/events", "updated_at": "2013-07-12T09:08:16Z", "body": "Symlinking mypy into path causes execution to fail with 'Could not find builtins' (centos 6, compiled python 3.3).\r\n\r\nRunning directly with correct path works.", "labels_url": "https://api.github.com/repos/python/mypy/issues/215/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Symlinking mypy into path causes execution to fail", "assignee": null, "closed_at": "2013-07-12T09:08:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/215/comments", "labels": [], "created_at": "2013-07-11T21:54:23Z", "user": {"followers_url": "https://api.github.com/users/jamespo/followers", "gists_url": "https://api.github.com/users/jamespo/gists{/gist_id}", "html_url": "https://github.com/jamespo", "following_url": "https://api.github.com/users/jamespo/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1472544?v=3", "url": "https://api.github.com/users/jamespo", "organizations_url": "https://api.github.com/users/jamespo/orgs", "starred_url": "https://api.github.com/users/jamespo/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/jamespo/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/jamespo/subscriptions", "login": "jamespo", "repos_url": "https://api.github.com/users/jamespo/repos", "received_events_url": "https://api.github.com/users/jamespo/received_events", "id": 1472544, "site_admin": false}, "locked": false}, {"milestone": null, "number": 214, "html_url": "https://github.com/python/mypy/issues/214", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/214", "id": 16623003, "events_url": "https://api.github.com/repos/python/mypy/issues/214/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Consider this code:\r\n\r\n    def f() -> int: return 1\r\n    def f() -> int: return 2\r\n\r\nThe type checker gives this type error:\r\n\r\n    t.py, line 2: Name 'f' already defined (overload variants \r\n    must be next to each other)\r\n\r\nThis is misleading, since the functions are next to each other and this is not a case of overloading but redefinition.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/214/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Misleading error message for multiple defined function", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/214/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-07-11T10:05:22Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 213, "html_url": "https://github.com/python/mypy/issues/213", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/213", "id": 16622408, "events_url": "https://api.github.com/repos/python/mypy/issues/213/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Currently modules are special names. Assignment does not propagate this:\r\n\r\n    import os\r\n    os.getcwd() # ok\r\n    x = os\r\n    x.getcwd() # error\r\n\r\nAliases to modules should be supported.", "labels_url": "https://api.github.com/repos/python/mypy/issues/213/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow type checking modules assigned to variables", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/213/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-11T09:49:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 212, "html_url": "https://github.com/python/mypy/issues/212", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/212", "id": 16621210, "events_url": "https://api.github.com/repos/python/mypy/issues/212/events", "updated_at": "2015-11-25T23:12:28Z", "body": "It would be useful to be able to import modules conditionally. Here is an example:\r\n\r\n    try:\r\n        import _thread\r\n    except ImportError:\r\n        import _dummy_thread as _thread\r\n\r\nTo implement this we would probably need union module types and the ability to infer them in cases such as the above.", "labels_url": "https://api.github.com/repos/python/mypy/issues/212/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Conditional module imports", "assignee": null, "closed_at": "2015-11-25T22:50:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/212/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-11T09:18:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 211, "html_url": "https://github.com/python/mypy/issues/211", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/211", "id": 16591335, "events_url": "https://api.github.com/repos/python/mypy/issues/211/events", "updated_at": "2013-07-15T10:27:55Z", "body": "Mypy should support iteration over a tuple literal with for:\r\n\r\n    for x in 1, 2, 3: print(x)\r\n    for s in ('x', 'y', 'z'): ...\r\n\r\nCurrently this only works for a list literal, not a tuple literal. This is currently valid:\r\n\r\n    for x in [1, 2, 3]: print(x)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/211/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support for x in y, z, ... and variants", "assignee": null, "closed_at": "2013-07-15T10:27:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/211/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-10T17:59:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 210, "html_url": "https://github.com/python/mypy/issues/210", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/210", "id": 16591240, "events_url": "https://api.github.com/repos/python/mypy/issues/210/events", "updated_at": "2015-05-17T17:54:36Z", "body": "Currently mypy doesn't support del statements of form `del x` or `del x.y`. These should work if the target is a valid name / attribute in the Python semantics. The runtime definedness of a name and its static type or existence in a namespace should be orthogonal.\r\n\r\nFor example, this code should be accepted by the type checker:\r\n\r\n    x = 2\r\n    del x\r\n    print(x)  # runtime error, not a static error\r\n\r\nLater, we can support namespace management using the del statement or give a warning for the above code, but initially it's sufficient let del be used without any effect on namespaces.", "labels_url": "https://api.github.com/repos/python/mypy/issues/210/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Let del statement be used with any valid name", "assignee": null, "closed_at": "2015-05-17T17:54:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/210/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-10T17:57:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 209, "html_url": "https://github.com/python/mypy/issues/209", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/209", "id": 16571178, "events_url": "https://api.github.com/repos/python/mypy/issues/209/events", "updated_at": "2013-07-10T17:47:32Z", "body": "We should include definitions available on any platform in the os module stubs. This will improve compatibility with Python.", "labels_url": "https://api.github.com/repos/python/mypy/issues/209/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Uncomment platform-specific definitions is os stubs", "assignee": null, "closed_at": "2013-07-10T17:47:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/209/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-10T10:54:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 208, "html_url": "https://github.com/python/mypy/issues/208", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/208", "id": 16482811, "events_url": "https://api.github.com/repos/python/mypy/issues/208/events", "updated_at": "2013-07-08T17:15:23Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/208/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add dict.has_key to Python 2 builtins", "assignee": null, "closed_at": "2013-07-08T17:15:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/208/comments", "labels": [], "created_at": "2013-07-08T17:15:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 207, "html_url": "https://github.com/python/mypy/issues/207", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/207", "id": 16482737, "events_url": "https://api.github.com/repos/python/mypy/issues/207/events", "updated_at": "2013-07-08T17:13:52Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/207/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use next instead of __next__ in Python 2", "assignee": null, "closed_at": "2013-07-08T17:13:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/207/comments", "labels": [], "created_at": "2013-07-08T17:13:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 206, "html_url": "https://github.com/python/mypy/issues/206", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/206", "id": 16482720, "events_url": "https://api.github.com/repos/python/mypy/issues/206/events", "updated_at": "2013-07-08T17:13:33Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/206/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add xrange to Python 2 builtins", "assignee": null, "closed_at": "2013-07-08T17:13:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/206/comments", "labels": [], "created_at": "2013-07-08T17:13:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 205, "html_url": "https://github.com/python/mypy/issues/205", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/205", "id": 16481667, "events_url": "https://api.github.com/repos/python/mypy/issues/205/events", "updated_at": "2013-07-08T17:09:30Z", "body": "`int.__truediv__` is broken in Python 3 stubs (return value is int for an int argument).", "labels_url": "https://api.github.com/repos/python/mypy/issues/205/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "__truediv__ should never return int", "assignee": null, "closed_at": "2013-07-08T17:09:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/205/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-08T16:50:36Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 204, "html_url": "https://github.com/python/mypy/issues/204", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/204", "id": 16481428, "events_url": "https://api.github.com/repos/python/mypy/issues/204/events", "updated_at": "2013-07-08T17:09:30Z", "body": "Use `__div__` instead of `__truediv__` for the / operator in Python 2 mode.", "labels_url": "https://api.github.com/repos/python/mypy/issues/204/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use __div__ for division in Python 2", "assignee": null, "closed_at": "2013-07-08T17:09:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/204/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-08T16:44:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 203, "html_url": "https://github.com/python/mypy/issues/203", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/203", "id": 16481018, "events_url": "https://api.github.com/repos/python/mypy/issues/203/events", "updated_at": "2014-07-24T04:15:54Z", "body": "Currently the `in` only works with collections that define `__contains__`. Python also lets any iterable be used as the right operand of `in`. Implement this.\r\n\r\nFor example:\r\n\r\n    >>> 'f' in iter('foo')\r\n    True\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/203/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Let in operator be used with any Iterable", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-07-24T04:15:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/203/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-08T16:34:51Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 202, "html_url": "https://github.com/python/mypy/issues/202", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/202", "id": 16480627, "events_url": "https://api.github.com/repos/python/mypy/issues/202/events", "updated_at": "2014-07-25T03:55:27Z", "body": "Integers should be accepted wherever floats are expected, similar to Python.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/202/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make int compatible with float", "assignee": null, "closed_at": "2014-07-25T03:55:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/202/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-07-08T16:27:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 201, "html_url": "https://github.com/python/mypy/issues/201", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/201", "id": 16476975, "events_url": "https://api.github.com/repos/python/mypy/issues/201/events", "updated_at": "2014-11-30T20:48:03Z", "body": "The lexer should recognize `True`, `False`, `None` and `nonlocal` as keywords in Python 3 code.", "labels_url": "https://api.github.com/repos/python/mypy/issues/201/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add True, False, None and nonlocal as keywords in Python 3 only", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/201/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-07-08T15:24:18Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 200, "html_url": "https://github.com/python/mypy/issues/200", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/200", "id": 16476831, "events_url": "https://api.github.com/repos/python/mypy/issues/200/events", "updated_at": "2014-07-25T21:54:16Z", "body": "Make `print` and `exec` keywords in Python 2 but not in Python 3.", "labels_url": "https://api.github.com/repos/python/mypy/issues/200/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make print and exec keywords in Python 2 mode", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/200/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-08T15:21:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 199, "html_url": "https://github.com/python/mypy/issues/199", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/199", "id": 16469537, "events_url": "https://api.github.com/repos/python/mypy/issues/199/events", "updated_at": "2013-07-08T17:09:29Z", "body": "Write error messages in `scripts/mypy` to `stderr` instead of `stdout`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/199/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update mypy driver to write error messages to stderr", "assignee": null, "closed_at": "2013-07-08T17:09:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/199/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-08T12:56:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 198, "html_url": "https://github.com/python/mypy/issues/198", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/198", "id": 16469251, "events_url": "https://api.github.com/repos/python/mypy/issues/198/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Currently there are some hard coded references to Python versions (`'2.7'` and `'3.2'`), which should be defined as constants.", "labels_url": "https://api.github.com/repos/python/mypy/issues/198/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not hard code references to Python versions", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/198/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-08T12:49:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 197, "html_url": "https://github.com/python/mypy/issues/197", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/197", "id": 16461494, "events_url": "https://api.github.com/repos/python/mypy/issues/197/events", "updated_at": "2013-07-08T17:12:01Z", "body": "Similar to stubs, it seems best to have separate Python 2.x and 3.x variants of the typing module. Note that the contents of the modules will be different -- Mapping has iterkeys etc. in Python 2.x but not in Python 3.x.\r\n\r\nOrganize the files as lib-typing/2.7/*.py and lib-typing/3.2/*.py.\r\n\r\nA possible alternative would be to use 2to3 and conditional definitions based on Python version. However, the rest of the code base is available directly in Python 3, so this would be inconsistent.\r\n\r\nAnother alternative would be to use 3to2, but I don't know how mature the tool is, and the tool would have to be added as an external dependency, which does not seem justified for such as a small need.\r\n\r\nSo even though this causes some code duplication, it seems like the best approach for now. We can reconsider this later.", "labels_url": "https://api.github.com/repos/python/mypy/issues/197/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Have separate Python 2.x and 3.x typing modules", "assignee": null, "closed_at": "2013-07-08T17:12:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/197/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-08T09:07:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 196, "html_url": "https://github.com/python/mypy/issues/196", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/196", "id": 16428581, "events_url": "https://api.github.com/repos/python/mypy/issues/196/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Flag Python 3 function annotation in Python 2 code as an error. Stubs are an exception: they can freely use Python 3 annotation syntax for convenience, since they are never run.", "labels_url": "https://api.github.com/repos/python/mypy/issues/196/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow Python 3 function annotations in Python 2 mode", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/196/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-06T08:45:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 195, "html_url": "https://github.com/python/mypy/issues/195", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/195", "id": 16411515, "events_url": "https://api.github.com/repos/python/mypy/issues/195/events", "updated_at": "2013-07-05T17:03:59Z", "body": "In Python 3.3, u'foo' is the same as 'foo'. We should support this functionality.", "labels_url": "https://api.github.com/repos/python/mypy/issues/195/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support u'foo' literals in Python 3 mode as well", "assignee": null, "closed_at": "2013-07-05T17:03:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/195/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-05T17:03:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 194, "html_url": "https://github.com/python/mypy/issues/194", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/194", "id": 16411462, "events_url": "https://api.github.com/repos/python/mypy/issues/194/events", "updated_at": "2013-07-05T17:02:46Z", "body": "Allow using separate stubs Python 2 code. Initially add a minimal set of basic stubs: builtins, typing, abc and re.\r\n\r\nThe mypy script can use the --py2 PY2INTERPRETER command line option to enable Python 2 mode.", "labels_url": "https://api.github.com/repos/python/mypy/issues/194/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use separate stubs for Python 2", "assignee": null, "closed_at": "2013-07-05T17:02:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/194/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-05T17:02:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 193, "html_url": "https://github.com/python/mypy/issues/193", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/193", "id": 16399886, "events_url": "https://api.github.com/repos/python/mypy/issues/193/events", "updated_at": "2014-07-25T03:43:12Z", "body": "It would reduce code duplication if the same class would be used for string and bytes literals (and unicode literals, after they have been implemented). This applies both to tokens and ast nodes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/193/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use the same token and node class for all string-like literals", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/193/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-05T11:55:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 192, "html_url": "https://github.com/python/mypy/issues/192", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/192", "id": 16394844, "events_url": "https://api.github.com/repos/python/mypy/issues/192/events", "updated_at": "2013-07-05T09:54:24Z", "body": "The type checker complains about the following, even though they are valid in Python:\r\n\r\n    int()\r\n    float()\r\n    str()\r\n    bool()", "labels_url": "https://api.github.com/repos/python/mypy/issues/192/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "int(), float(), str() and bool() not accepted", "assignee": null, "closed_at": "2013-07-05T09:54:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/192/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-05T09:47:03Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 191, "html_url": "https://github.com/python/mypy/issues/191", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/191", "id": 16392572, "events_url": "https://api.github.com/repos/python/mypy/issues/191/events", "updated_at": "2013-07-05T09:54:51Z", "body": "Move the Python 3.2 stubs to stubs/3.2. \r\n\r\nThere should be separate stubs directories for Python 2.x and 3.x. Sharing a single stubs file between 2.x and 3.x is probably not worth it due to the large differences between str/bytes and str/unicode. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/191/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move stubs to stubs/3.2", "assignee": null, "closed_at": "2013-07-05T09:54:51Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/191/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-05T09:00:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 190, "html_url": "https://github.com/python/mypy/issues/190", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/190", "id": 16376826, "events_url": "https://api.github.com/repos/python/mypy/issues/190/events", "updated_at": "2015-05-17T18:15:28Z", "body": "During the migration to new syntax source code pretty printing with original formatting was broken. Fix it. Also add support to all new supported constructs.\r\n\r\nStart with skipped test cases in `mypy/test/data/output.test`.\r\n\r\nPerhaps split this issue into several smaller issues.", "labels_url": "https://api.github.com/repos/python/mypy/issues/190/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix pretty printing original source code from AST", "assignee": null, "closed_at": "2015-05-17T18:15:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/190/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-04T17:50:47Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 189, "html_url": "https://github.com/python/mypy/issues/189", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/189", "id": 16375991, "events_url": "https://api.github.com/repos/python/mypy/issues/189/events", "updated_at": "2015-05-17T17:46:40Z", "body": "Type signatures given as comments can't be easily accessed at runtime, so they can't be (easily) used for function overloading. Instead, we could support defining function signatures using a function decorator.\r\n\r\nHere is a potential syntax:\r\n\r\n    @overload\r\n    @signature([int], None)\r\n    def foo(x):\r\n        ...\r\n\r\nThe syntax was chosen for consistency with `Function[[argt...], ret]`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/189/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Alternative overloaded function syntax for Python 2.x", "assignee": null, "closed_at": "2015-05-17T17:46:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/189/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-07-04T17:13:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 188, "html_url": "https://github.com/python/mypy/issues/188", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/188", "id": 16362346, "events_url": "https://api.github.com/repos/python/mypy/issues/188/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Optimize the parser to make it faster (when running in CPython).", "labels_url": "https://api.github.com/repos/python/mypy/issues/188/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Speed up the parser", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/188/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-04T10:59:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 187, "html_url": "https://github.com/python/mypy/issues/187", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/187", "id": 16362313, "events_url": "https://api.github.com/repos/python/mypy/issues/187/events", "updated_at": "2014-07-25T03:43:12Z", "body": "Optimize the lexer to make it faster (when running in CPython).", "labels_url": "https://api.github.com/repos/python/mypy/issues/187/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Speed up the lexer", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/187/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-04T10:58:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 186, "html_url": "https://github.com/python/mypy/issues/186", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/186", "id": 16361019, "events_url": "https://api.github.com/repos/python/mypy/issues/186/events", "updated_at": "2015-05-17T17:46:09Z", "body": "If a module does not import `typing`, it should not be type checked. Currently all\r\nmodules are type checked (except for dynamically typed functions).\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/186/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not type check modules that don't import typing", "assignee": null, "closed_at": "2015-05-17T17:46:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/186/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-07-04T10:22:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 185, "html_url": "https://github.com/python/mypy/issues/185", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/185", "id": 16360963, "events_url": "https://api.github.com/repos/python/mypy/issues/185/events", "updated_at": "2014-07-19T22:26:01Z", "body": "Code like this works without importing anything from import:\r\n\r\n    x = List[int]()\r\n\r\nThe typing module was added to the auto-import list to fix a build ordering issue, but it had this nasty side effect.", "labels_url": "https://api.github.com/repos/python/mypy/issues/185/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "All definitions in the typing module are implicitly imported", "assignee": null, "closed_at": "2014-07-19T22:26:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/185/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-04T10:20:58Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 184, "html_url": "https://github.com/python/mypy/issues/184", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/184", "id": 16360176, "events_url": "https://api.github.com/repos/python/mypy/issues/184/events", "updated_at": "2015-09-01T02:43:23Z", "body": "We should have a type for variable-length tuples. It could be called `TupleSequence[T]`. \r\n\r\nExample:\r\n\r\n    t = None # type: Tuple[int, ...]\r\n    t = (1, 2) # Okay\r\n    t = (1, 2, 3) # Okay\r\n    n = 1\r\n    print(t[n]) # Okay\r\n    for n in t: print(n) # Okay\r\n    t = [1, 2] # Error\r\n\r\nIt is needed for precise static typing of some builtins, such as `str.startswith`.\r\n\r\nWe would not (generally) infer these types automatically for variables: type inference would still produce `Tuple[...]` types. \r\n\r\nUpdate: Actually, it seems more reasonable to have Tuple[...] as a subtype of TupleSequence[...] assuming type arguments are compatible. Also need to update type joins to handle these.\r\n\r\n**EDIT:** Update to conform to the actual syntax.", "labels_url": "https://api.github.com/repos/python/mypy/issues/184/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add type for variable-length tuples", "assignee": null, "closed_at": "2015-08-31T04:59:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/184/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "pep484", "color": "fef2c0", "url": "https://api.github.com/repos/python/mypy/labels/pep484"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-07-04T09:58:37Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 183, "html_url": "https://github.com/python/mypy/issues/183", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/183", "id": 16335061, "events_url": "https://api.github.com/repos/python/mypy/issues/183/events", "updated_at": "2013-12-26T19:15:00Z", "body": "Brew install python binaries under\r\n\r\n/usr/local/share/python[3]/\r\n\r\nand lib directory is under\r\n\r\n/usr/local/lib\r\n\r\nThe function default_data_dir() throws an error because base_dir is is 'python3'. A simple check would fix this.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/183/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Runtime error \"Broken installation: can't determine base dir\" occurs when installed with brew", "assignee": null, "closed_at": "2013-07-21T10:06:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/183/comments", "labels": [], "created_at": "2013-07-03T18:59:18Z", "user": {"followers_url": "https://api.github.com/users/doboy/followers", "gists_url": "https://api.github.com/users/doboy/gists{/gist_id}", "html_url": "https://github.com/doboy", "following_url": "https://api.github.com/users/doboy/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1144344?v=3", "url": "https://api.github.com/users/doboy", "organizations_url": "https://api.github.com/users/doboy/orgs", "starred_url": "https://api.github.com/users/doboy/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/doboy/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/doboy/subscriptions", "login": "doboy", "repos_url": "https://api.github.com/users/doboy/repos", "received_events_url": "https://api.github.com/users/doboy/received_events", "id": 1144344, "site_admin": false}, "locked": false}, {"milestone": null, "number": 182, "html_url": "https://github.com/python/mypy/issues/182", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/182", "id": 16318612, "events_url": "https://api.github.com/repos/python/mypy/issues/182/events", "updated_at": "2013-07-03T15:18:26Z", "body": "Move test code (mypy/test*.py) to a mypy.test package. Also move test data files in test/data to mypy/test/data.", "labels_url": "https://api.github.com/repos/python/mypy/issues/182/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move test code and data to mypy/test", "assignee": null, "closed_at": "2013-07-03T15:18:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/182/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-03T13:52:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 181, "html_url": "https://github.com/python/mypy/issues/181", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/181", "id": 16318227, "events_url": "https://api.github.com/repos/python/mypy/issues/181/events", "updated_at": "2013-07-03T13:46:58Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/181/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move testpythoneval.py and testcgen.py to mypy/", "assignee": null, "closed_at": "2013-07-03T13:46:58Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/181/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-03T13:44:29Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 180, "html_url": "https://github.com/python/mypy/issues/180", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/180", "id": 16311863, "events_url": "https://api.github.com/repos/python/mypy/issues/180/events", "updated_at": "2015-02-08T22:58:21Z", "body": "Require @overloadable to be used for the first overload variant:\r\n\r\n    @typing.overloadable\r\n    def foo(x: int) -> None: ...\r\n\r\n    @typing.overload\r\n    def foo(x: str) -> None: ...\r\n\r\n    @typing.overload\r\n    def foo(x: Foo) -> None: ...\r\n\r\nThis could improve readability and prevent mistakes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/180/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use @overloadable for the first overload variant", "assignee": null, "closed_at": "2015-02-08T22:58:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/180/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}, {"name": "wontfix", "color": "ffffff", "url": "https://api.github.com/repos/python/mypy/labels/wontfix"}], "created_at": "2013-07-03T10:49:03Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 179, "html_url": "https://github.com/python/mypy/issues/179", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/179", "id": 16310394, "events_url": "https://api.github.com/repos/python/mypy/issues/179/events", "updated_at": "2013-07-05T17:03:06Z", "body": "Support Python 2 string literals:\r\n\r\n    u'foo'    # unicode\r\n    'foo'     # str\r\n    b'foo'    # str (alternative syntax)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/179/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Python 2 string literals", "assignee": null, "closed_at": "2013-07-05T17:03:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/179/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-03T10:05:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 178, "html_url": "https://github.com/python/mypy/issues/178", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/178", "id": 16310347, "events_url": "https://api.github.com/repos/python/mypy/issues/178/events", "updated_at": "2013-07-08T17:12:26Z", "body": "Support simple Python 2 print statements. This issue covers these cases:\r\n\r\n    print e         # single expression\r\n    print e2, e2    # multiple expressions\r\n    print e2,       # trailing comma\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/178/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Basic Python 2 print syntax", "assignee": null, "closed_at": "2013-07-08T17:12:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/178/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-03T10:04:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 177, "html_url": "https://github.com/python/mypy/issues/177", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/177", "id": 16309885, "events_url": "https://api.github.com/repos/python/mypy/issues/177/events", "updated_at": "2013-07-05T08:46:55Z", "body": "Make it possible to declare function signature in a comment. This makes is possible to write statically typed code that is valid Python 2. Here is a trivial example:\r\n\r\n    def inc(x):\r\n        # type: (int) -> int\r\n        return x + 1\r\n\r\nAlso let the type comment included on the same line as the function header:\r\n\r\n    def inc(x): # type: (int) -> int\r\n        return x + 1\r\n\r\nMethods should not include a type for the self argument:\r\n\r\n    class A:\r\n        def foo(self, x, y): # type: (int, str) -> None\r\n            pass\r\n\r\nNote that this is not good for writing overloaded functions. An alternative syntax, such as using a function decorator, is needed for this (in a separate issue).\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/177/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support declaring function signature in a comment", "assignee": null, "closed_at": "2013-07-05T08:46:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/177/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-03T09:52:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 176, "html_url": "https://github.com/python/mypy/issues/176", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/176", "id": 16309165, "events_url": "https://api.github.com/repos/python/mypy/issues/176/events", "updated_at": "2013-07-03T15:27:43Z", "body": "Currently only a single path component can be stored in the MYPYPATH environment variable, which does not make sense. Support multiple components separated by `os.pathsep`, similar to PYTHONPATH.", "labels_url": "https://api.github.com/repos/python/mypy/issues/176/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support multiple paths in MYPYPATH environment variable", "assignee": null, "closed_at": "2013-07-03T15:27:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/176/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-03T09:33:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 175, "html_url": "https://github.com/python/mypy/issues/175", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/175", "id": 16309048, "events_url": "https://api.github.com/repos/python/mypy/issues/175/events", "updated_at": "2015-05-17T17:45:25Z", "body": "Currently the type checker searches for modules based on the value of the MYPYPATH environment variable. We should probably support the PYTHONPATH environment variable as well.\r\n\r\nAlso, it's not obvious whether MYPYPATH would be useful any more if we add support for PYTHONPATH.", "labels_url": "https://api.github.com/repos/python/mypy/issues/175/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use PYTHONPATH to look up modules", "assignee": null, "closed_at": "2015-05-17T17:45:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/175/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-07-03T09:30:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 174, "html_url": "https://github.com/python/mypy/issues/174", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/174", "id": 16308964, "events_url": "https://api.github.com/repos/python/mypy/issues/174/events", "updated_at": "2014-07-25T03:57:02Z", "body": "In Python, built-in/extension classes are different from Python classes in various ways. In particular, having multiple different built-in/extension classes as base classes is not generally supported. For example, this does not work in Python:\r\n\r\n    class A(str, bytes): pass # instance lay-out conflict\r\n\r\nIt makes sense to keep track of this distinction in mypy and reject base classes that are not accepted in Python.\r\n\r\nWe need a syntax for declaring classes as built-in/extension classes. Using a class decorator is one option:\r\n\r\n    @typing.builtinclass\r\n    class Foo: ...\r\n\r\nThere are open questions:\r\n\r\n  1. Do we also need an equivalent @extensionclass decorator, since\r\n  user-defined extension classes are arguably not \"built-in\"?\r\n  2. Would built-in classes be different from ordinary classes in other ways as well?", "labels_url": "https://api.github.com/repos/python/mypy/issues/174/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make subclassing built-in/extension classes special", "assignee": null, "closed_at": "2014-07-25T03:57:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/174/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-07-03T09:28:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 173, "html_url": "https://github.com/python/mypy/issues/173", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/173", "id": 16308637, "events_url": "https://api.github.com/repos/python/mypy/issues/173/events", "updated_at": "2013-07-03T14:09:28Z", "body": "`bool` is a subclass of `int` in Python. Currently `bool` and `int` are unrelated in mypy. Change this to be as in Python. \r\n\r\nFirst implement #172.", "labels_url": "https://api.github.com/repos/python/mypy/issues/173/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make bool a subclass of int", "assignee": null, "closed_at": "2013-07-03T14:09:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/173/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-03T09:20:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 172, "html_url": "https://github.com/python/mypy/issues/172", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/172", "id": 16308366, "events_url": "https://api.github.com/repos/python/mypy/issues/172/events", "updated_at": "2013-07-03T13:56:59Z", "body": "Currently we disallow subclassing int and float, which is incompatible with Python. There is really no need for this restriction when using Python semantics, at least. Even in the native semantics, we can support subclassing int with negligible performance impact, since int objects are arbitrary-precision and may need to be allocated from the heap anyway.", "labels_url": "https://api.github.com/repos/python/mypy/issues/172/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow subclassing int and float", "assignee": null, "closed_at": "2013-07-03T13:56:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/172/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-03T09:13:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 171, "html_url": "https://github.com/python/mypy/issues/171", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/171", "id": 16308176, "events_url": "https://api.github.com/repos/python/mypy/issues/171/events", "updated_at": "2013-07-03T14:35:23Z", "body": "Currently attributes can be defined by assigning via self in the `__init__` method. This should be extended to all methods, in order to improve compatibility with Python:\r\n\r\n    class A:\r\n        def __init__(self) -> None:\r\n            self.x = 1 # Ok, define x\r\n        def foo(self) -> None:\r\n            self.y = 'a' # Ok, define y\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/171/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow attribute definition in any method", "assignee": null, "closed_at": "2013-07-03T14:35:23Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/171/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-07-03T09:09:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 170, "html_url": "https://github.com/python/mypy/issues/170", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/170", "id": 16277498, "events_url": "https://api.github.com/repos/python/mypy/issues/170/events", "updated_at": "2013-07-02T17:49:04Z", "body": "Rename the python-lib directory to lib-python/3.2, since a) it's based on CPython 3.2 b) we also have lib-typing, and lib-python is consistent with it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/170/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename python-lib to lib-python/3.2", "assignee": null, "closed_at": "2013-07-02T17:49:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/170/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-07-02T17:45:56Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 169, "html_url": "https://github.com/python/mypy/issues/169", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/169", "id": 16277393, "events_url": "https://api.github.com/repos/python/mypy/issues/169/events", "updated_at": "2013-07-02T17:43:42Z", "body": "Many test cases fail in Windows. At least some of these seem to be simple path separator issues.", "labels_url": "https://api.github.com/repos/python/mypy/issues/169/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Test cases fail in Windows", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/169/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-07-02T17:43:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 168, "html_url": "https://github.com/python/mypy/issues/168", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/168", "id": 16100973, "events_url": "https://api.github.com/repos/python/mypy/issues/168/events", "updated_at": "2013-07-02T17:42:25Z", "body": "Implement a setup.py script that uses distutils to install the implementation.\r\n\r\nSome open issues:\r\n\r\n * Do we want an exe / bat launcher in Windows?", "labels_url": "https://api.github.com/repos/python/mypy/issues/168/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add setup.py script for installing the implementation", "assignee": null, "closed_at": "2013-07-02T17:42:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/168/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-06-27T16:47:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 167, "html_url": "https://github.com/python/mypy/issues/167", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/167", "id": 16100705, "events_url": "https://api.github.com/repos/python/mypy/issues/167/events", "updated_at": "2013-07-02T17:42:12Z", "body": "Switch to a syntax that is fully Python-compatible. Use Python 3 function annotation syntax. Make it possible to run mypy programs using the Python interpreter, without a translation step.\r\n\r\nWork-in-progress description of the syntax:\r\n\r\nhttp://www.mypy-lang.org/wiki/PythonCompatibleSyntax\r\n\r\nAlso, translate the implementation to use the new syntax.\r\n\r\nAs a side effect, the \"Python back end\" will just be Python!", "labels_url": "https://api.github.com/repos/python/mypy/issues/167/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Switch to Python-compatible syntax", "assignee": null, "closed_at": "2013-07-02T17:42:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/167/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-06-27T16:42:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 166, "html_url": "https://github.com/python/mypy/issues/166", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/166", "id": 11976076, "events_url": "https://api.github.com/repos/python/mypy/issues/166/events", "updated_at": "2016-04-08T18:51:44Z", "body": "A parser generator should be created to replace the current hand built parser. This will allow easier development of the mypy syntax, and language testability. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/166/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Programmer parser/ Parser generator", "assignee": null, "closed_at": "2016-04-08T16:57:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/166/comments", "labels": [], "created_at": "2013-03-13T14:43:53Z", "user": {"followers_url": "https://api.github.com/users/Varriount/followers", "gists_url": "https://api.github.com/users/Varriount/gists{/gist_id}", "html_url": "https://github.com/Varriount", "following_url": "https://api.github.com/users/Varriount/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/524596?v=3", "url": "https://api.github.com/users/Varriount", "organizations_url": "https://api.github.com/users/Varriount/orgs", "starred_url": "https://api.github.com/users/Varriount/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Varriount/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Varriount/subscriptions", "login": "Varriount", "repos_url": "https://api.github.com/users/Varriount/repos", "received_events_url": "https://api.github.com/users/Varriount/received_events", "id": 524596, "site_admin": false}, "locked": false}, {"milestone": null, "number": 165, "html_url": "https://github.com/python/mypy/issues/165", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/165", "id": 11917556, "events_url": "https://api.github.com/repos/python/mypy/issues/165/events", "updated_at": "2015-05-17T19:43:05Z", "body": "### Hi Jukkal,\r\n  Have you heard about software defined network (SDN) and multiple ARM core cluster server? \r\n\r\n  From the roadmap of mypy, it seems you're more interested in another general purpose implementation for python like pypy, which is interesting but might constrain the practical use of this project due to the burden of supporting vast legacy python code. Pypy team takes years' of effort to scratch the surface of the problem.\r\n\r\n  Do you have any intention of creating a python compatible/flavored DSL language to combine the elegance of python, the multi-core concurrency of Erlang and the type safety and many goodness of Haskell? It could be a killer language in my opinion :)  \r\n \r\n### Why do we need above features in mypy more than others, like JVM/iOS/Android support? \r\n  * Java stack is too heavy and resource hungry to ARM based embeded systems.\r\n  * PyPy solves the performance issue for general computing but the attempt of taking GIL away is not promising. Concurrency provided by STM costs too much. Pypy uses a lot of memory too.\r\n  * Erlang does a nice job in concurrent computing and embeded system but it's hard to learn and the single core performance is not good enough. Though there are some interesting dialects to make it fancier: \r\n                   http://www.efenelang.org/    or    http://reia-lang.org/\r\n  * Haskell abounds with features but it's not for soft real time systems like SDN Controllers/Embeded devices which will be the keys to future laterally scalable hardware with a distributed structure.\r\n\r\n### It would be exciting to see a brand new Python implementation to supersede Erlang for next generation concurrent computing !\r\n\r\nBest Regards.", "labels_url": "https://api.github.com/repos/python/mypy/issues/165/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Provide native multi-core concurrency and support scalable hardware strucutures", "assignee": null, "closed_at": "2015-05-17T19:43:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/165/comments", "labels": [], "created_at": "2013-03-12T10:13:32Z", "user": {"followers_url": "https://api.github.com/users/HowardMei/followers", "gists_url": "https://api.github.com/users/HowardMei/gists{/gist_id}", "html_url": "https://github.com/HowardMei", "following_url": "https://api.github.com/users/HowardMei/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1254933?v=3", "url": "https://api.github.com/users/HowardMei", "organizations_url": "https://api.github.com/users/HowardMei/orgs", "starred_url": "https://api.github.com/users/HowardMei/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/HowardMei/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/HowardMei/subscriptions", "login": "HowardMei", "repos_url": "https://api.github.com/users/HowardMei/repos", "received_events_url": "https://api.github.com/users/HowardMei/received_events", "id": 1254933, "site_admin": false}, "locked": false}, {"milestone": null, "number": 164, "html_url": "https://github.com/python/mypy/issues/164", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/164", "id": 11496658, "events_url": "https://api.github.com/repos/python/mypy/issues/164/events", "updated_at": "2014-07-25T03:56:22Z", "body": "Currently IO and TextIO are completely independent types (binary and text files, respectively). Python code often works with both binary and text files, and currently this is not practical without using 'any' types.\r\n\r\nIt seems possible to redesign the type hierarchy to better support this mixed-mode idiom. Here is a sketch (the details may need to be changed):\r\n\r\n    class IO(AbstractGeneric[T]):\r\n        # operations common to all files; t is the type of data read/written\r\n        @abstractmethod\r\n        def read(self, n: int = -1) -> T: pass\r\n        ....\r\n    class TextIO(IO[str]):\r\n        # operations that are specific to text files\r\n        ...\r\n    class BinaryIO(IO[bytes]):\r\n        # operations that are specific to binary files\r\n        ...\r\n\r\nNow the type `IO` (i.e. `IO[Any]`) can be used for arbitrary files. It supports limited type checking, but the results of read operations still have `Any` types. The `IO` type can also serve as documentation: it's much more informative than just `Any`.\r\n\r\nOther improvements are possible, but this change seems fairly straightforward and it does not require language changes.\r\n\r\n**EDIT: Switch to new syntax**", "labels_url": "https://api.github.com/repos/python/mypy/issues/164/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Try to come up with a better IO type design", "assignee": null, "closed_at": "2014-07-25T03:56:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/164/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-02-28T11:20:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 163, "html_url": "https://github.com/python/mypy/issues/163", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/163", "id": 11465618, "events_url": "https://api.github.com/repos/python/mypy/issues/163/events", "updated_at": "2013-02-28T18:22:26Z", "body": "The first argument of a function nested within a method is inferred to be a 'self' argument, which is invalid.", "labels_url": "https://api.github.com/repos/python/mypy/issues/163/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix type checking functions nested within methods", "assignee": null, "closed_at": "2013-02-28T18:22:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/163/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-27T17:30:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 162, "html_url": "https://github.com/python/mypy/issues/162", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/162", "id": 11464558, "events_url": "https://api.github.com/repos/python/mypy/issues/162/events", "updated_at": "2013-09-21T17:38:20Z", "body": "Type inference of the list literal fails below:\r\n\r\n    for any x in [1, False]: pass\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/162/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "For loop type inference problem", "assignee": null, "closed_at": "2013-09-21T17:38:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/162/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-27T17:07:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 161, "html_url": "https://github.com/python/mypy/issues/161", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/161", "id": 11437105, "events_url": "https://api.github.com/repos/python/mypy/issues/161/events", "updated_at": "2014-07-23T04:22:22Z", "body": "Currently, functions with static return types are declared like this:\r\n\r\n    return_type function_name(paramaters):\r\n        body\r\n\r\nWhy not declare the return type like this:\r\n\r\n    def function_name(parameters):\r\n        returns return_type\r\n\r\nThough the first style makes sense, and has been used in a multitude of languages, I have found too many cases where a fully written return type is longer than the actual function name, and reading becomes a challenge of finding where the type ends and the name begins.\r\n\r\nThe first style remedies this by moving the type declaration onto its own line, with its own reserved word, 'returns'.\r\nFurthermore, the second style reads more like natural language. The only drawback to this is slightly more verbosity, which I feel is worth the additional readability. Additionally, the second form is unambiguous grammar-wise, meaning less work for the parser.", "labels_url": "https://api.github.com/repos/python/mypy/issues/161/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Proposal for alternate function return type syntax", "assignee": null, "closed_at": "2014-07-23T04:22:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/161/comments", "labels": [{"name": "needs discussion", "color": "bfdadc", "url": "https://api.github.com/repos/python/mypy/labels/needs%20discussion"}], "created_at": "2013-02-27T01:04:31Z", "user": {"followers_url": "https://api.github.com/users/Varriount/followers", "gists_url": "https://api.github.com/users/Varriount/gists{/gist_id}", "html_url": "https://github.com/Varriount", "following_url": "https://api.github.com/users/Varriount/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/524596?v=3", "url": "https://api.github.com/users/Varriount", "organizations_url": "https://api.github.com/users/Varriount/orgs", "starred_url": "https://api.github.com/users/Varriount/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Varriount/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Varriount/subscriptions", "login": "Varriount", "repos_url": "https://api.github.com/users/Varriount/repos", "received_events_url": "https://api.github.com/users/Varriount/received_events", "id": 524596, "site_admin": false}, "locked": false}, {"milestone": null, "number": 160, "html_url": "https://github.com/python/mypy/issues/160", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/160", "id": 11401723, "events_url": "https://api.github.com/repos/python/mypy/issues/160/events", "updated_at": "2014-07-13T23:32:35Z", "body": "It's not possible to use IO or TextIO types for function overloading when using the Python back end. The translator keeps the references to the names intact, even though they are not present in Python. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/160/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot overload using IO/TextIO types in the Python back end", "assignee": null, "closed_at": "2014-07-13T23:32:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/160/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-26T10:19:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 159, "html_url": "https://github.com/python/mypy/issues/159", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/159", "id": 11373662, "events_url": "https://api.github.com/repos/python/mypy/issues/159/events", "updated_at": "2014-07-25T03:43:12Z", "body": "The following code is rejected by the type checker, even though it's valid:\r\n\r\n    a = <int, int[]> {\r\n        1: [1],\r\n        1: []      # type check failure\r\n    }\r\n\r\nThe type of the empty list is not inferred correctly.\r\n\r\nThe problem is easy to work around by replacing `[]` with `<int> []`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/159/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dictionary literal type checking problem with empty list", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/159/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-25T18:51:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 158, "html_url": "https://github.com/python/mypy/issues/158", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/158", "id": 11372971, "events_url": "https://api.github.com/repos/python/mypy/issues/158/events", "updated_at": "2014-07-13T23:47:08Z", "body": "The following code is rejected by the type checker, even though it should be valid:\r\n\r\n    t = (1, 'x')\r\n    print(len(t)) # error\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/158/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot query length of a tuple", "assignee": null, "closed_at": "2014-07-13T23:47:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/158/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-25T18:39:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 157, "html_url": "https://github.com/python/mypy/issues/157", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/157", "id": 11368046, "events_url": "https://api.github.com/repos/python/mypy/issues/157/events", "updated_at": "2015-05-17T18:17:03Z", "body": "The following code is not accepted by the type checker, even though there seems to be no reason to reject the assignment:\r\n\r\n    func<void(int)> f\r\n    def g(*a): pass\r\n    f = g # error\r\n\r\nIn general, a *arg in a callable type should be compatible with any number of fixed positional arguments (if their types are compatible).", "labels_url": "https://api.github.com/repos/python/mypy/issues/157/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make function subtyping more flexible", "assignee": null, "closed_at": "2015-05-17T18:17:03Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/157/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-25T17:04:06Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 156, "html_url": "https://github.com/python/mypy/issues/156", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/156", "id": 11312886, "events_url": "https://api.github.com/repos/python/mypy/issues/156/events", "updated_at": "2016-04-08T16:58:28Z", "body": "Currently,  Mypy lacks any formal documentation specifying its alternate grammar. A document similar to the formal python grammar specification found at http://docs.python.org/3.4/reference/grammar.html should be constructed. \r\n\r\nSince this may be an ongoing thing,  edited by multiple people,  I have put up an initial copy of the python 3 grammar at https://gist.github.com/Varriount/5017660\r\n\r\nIf other reasoning is needed, having an ebnf file of the grammar means that we can use parser generators in the future instead of hard coded parsing.", "labels_url": "https://api.github.com/repos/python/mypy/issues/156/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Official EBNF Syntax Documentation", "assignee": null, "closed_at": "2016-04-08T16:58:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/156/comments", "labels": [], "created_at": "2013-02-23T00:36:38Z", "user": {"followers_url": "https://api.github.com/users/Varriount/followers", "gists_url": "https://api.github.com/users/Varriount/gists{/gist_id}", "html_url": "https://github.com/Varriount", "following_url": "https://api.github.com/users/Varriount/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/524596?v=3", "url": "https://api.github.com/users/Varriount", "organizations_url": "https://api.github.com/users/Varriount/orgs", "starred_url": "https://api.github.com/users/Varriount/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Varriount/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Varriount/subscriptions", "login": "Varriount", "repos_url": "https://api.github.com/users/Varriount/repos", "received_events_url": "https://api.github.com/users/Varriount/received_events", "id": 524596, "site_admin": false}, "locked": false}, {"milestone": null, "number": 155, "html_url": "https://github.com/python/mypy/issues/155", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/155", "id": 11296379, "events_url": "https://api.github.com/repos/python/mypy/issues/155/events", "updated_at": "2013-02-22T18:01:17Z", "body": "Port some CPython library modules to mypy. A rough translation is fine at this point: some features might not be supported, some tests may fail.\r\n\r\nAdapt the module implementations to static typing whenever it seems useful. Test suites can be dynamically typed.\r\n\r\nOnly support the Python back end (the native back end needs much more work still).", "labels_url": "https://api.github.com/repos/python/mypy/issues/155/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Port Python library modules: fnmatch, glob, getopt, genericpath, base64, posixpath, random", "assignee": null, "closed_at": "2013-02-22T17:59:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/155/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-22T17:59:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 154, "html_url": "https://github.com/python/mypy/issues/154", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/154", "id": 11290039, "events_url": "https://api.github.com/repos/python/mypy/issues/154/events", "updated_at": "2013-02-22T17:51:55Z", "body": "The following code is rejected by the type checker, even though it's valid:\r\n\r\n    b = [b'x', b'y']\r\n    print(b','.join(b))  # incompatible argument type bytes[] to join\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/154/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Call to bytes.join rejected by type checker", "assignee": null, "closed_at": "2013-02-22T17:51:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/154/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-22T15:37:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 153, "html_url": "https://github.com/python/mypy/issues/153", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/153", "id": 11200120, "events_url": "https://api.github.com/repos/python/mypy/issues/153/events", "updated_at": "2015-02-21T22:13:18Z", "body": "The following code is not accepted by the type checker, even though it's arguably valid:\r\n\r\n    def f(a, x=1): pass\r\n    f(*[1], x=2)   # Error: multiple values for keyword argument \"x\"\r\n\r\nThe type checker should probably not complain about multiple argument values if one of the values is from a *arg.\r\n\r\nThe limitation can be worked around by replacing keyword args with dict args (**args).", "labels_url": "https://api.github.com/repos/python/mypy/issues/153/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type checker rejects call with both *args and a keyword arg", "assignee": null, "closed_at": "2015-02-21T22:13:18Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/153/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-02-20T14:58:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 152, "html_url": "https://github.com/python/mypy/issues/152", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/152", "id": 11197557, "events_url": "https://api.github.com/repos/python/mypy/issues/152/events", "updated_at": "2013-02-20T17:31:20Z", "body": "The following code results in an unhandled exception (NotImplementedError) in the type checker:\r\n\r\n    def g(*x, **y): pass\r\n    g(*[])\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/152/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Calling a function with *args results in unhandled exception", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-20T17:31:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/152/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-20T13:51:17Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 151, "html_url": "https://github.com/python/mypy/issues/151", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/151", "id": 11193229, "events_url": "https://api.github.com/repos/python/mypy/issues/151/events", "updated_at": "2014-07-25T03:43:12Z", "body": "The parser raises an unhandled exception when parsing this program:\r\n\r\n    class :          # Note missing class name\r\n        int x = ''\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/151/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Unhandled exception when parsing a class without a name", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/151/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-20T11:19:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 150, "html_url": "https://github.com/python/mypy/issues/150", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/150", "id": 11190928, "events_url": "https://api.github.com/repos/python/mypy/issues/150/events", "updated_at": "2016-01-08T18:48:22Z", "body": "It should be possible to define a function conditionally using if/else. For example, this\r\nshould be fine:\r\n\r\n    if cond:\r\n        def f(): print(1)\r\n    else:\r\n        def f(): print(2)\r\n    f()\r\n\r\nAlso support conditional definition of methods.\r\n\r\nSee also #131.", "labels_url": "https://api.github.com/repos/python/mypy/issues/150/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support more flexible conditional function definition", "assignee": null, "closed_at": "2016-01-08T18:48:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/150/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-20T10:00:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 149, "html_url": "https://github.com/python/mypy/issues/149", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/149", "id": 11149369, "events_url": "https://api.github.com/repos/python/mypy/issues/149/events", "updated_at": "2013-02-20T17:31:20Z", "body": "Currently the exception type in try/except must be a reference to a class definition -- it cannot be an arbitrary expression. This is sometimes limiting. Support arbitrary expressions as exception types.\r\n\r\nFor example, this should be valid:\r\n\r\n    e = (ValueError, TypeError)\r\n    try:\r\n        ...\r\n    except e[0]:\r\n        ...", "labels_url": "https://api.github.com/repos/python/mypy/issues/149/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support arbitrary expressions as exception types in try/except", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-20T17:31:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/149/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-19T11:11:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 148, "html_url": "https://github.com/python/mypy/issues/148", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/148", "id": 11149281, "events_url": "https://api.github.com/repos/python/mypy/issues/148/events", "updated_at": "2013-02-19T16:47:06Z", "body": "Add support for set literals `{x, y, ...}`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/148/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support set literals", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-19T16:47:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/148/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-19T11:08:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 147, "html_url": "https://github.com/python/mypy/issues/147", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/147", "id": 11148994, "events_url": "https://api.github.com/repos/python/mypy/issues/147/events", "updated_at": "2013-02-19T16:47:06Z", "body": "It should be possible to include multiple exception types in a single except block. For example:\r\n\r\n    try:\r\n        ...\r\n    except (ValueError, AttributeError):\r\n        ...\r\n\r\nThis is used frequently in the Python libs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/147/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support multiple exception types per except block", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-19T16:47:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/147/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-19T10:57:41Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 146, "html_url": "https://github.com/python/mypy/issues/146", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/146", "id": 11123940, "events_url": "https://api.github.com/repos/python/mypy/issues/146/events", "updated_at": "2013-02-18T18:05:56Z", "body": "The Python generator can generate names with a double underscore prefix, which is clearly a Bad Idea as it can conflict with Python's double underscore name mangling. Use another scheme for generating names.", "labels_url": "https://api.github.com/repos/python/mypy/issues/146/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not generate names with double underscore prefix", "assignee": null, "closed_at": "2013-02-18T18:05:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/146/comments", "labels": [], "created_at": "2013-02-18T17:26:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 145, "html_url": "https://github.com/python/mypy/issues/145", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/145", "id": 11118189, "events_url": "https://api.github.com/repos/python/mypy/issues/145/events", "updated_at": "2014-07-25T21:58:39Z", "body": "Currently the semantic analyzer gives an error if a program attempts to import a module more than once in the same scope. However, importing the same module more than once is sometimes useful (e.g. in both if and else branches of an if statement), and it should be supported.", "labels_url": "https://api.github.com/repos/python/mypy/issues/145/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow a module to be imported multiple times", "assignee": null, "closed_at": "2014-07-25T21:58:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/145/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-18T15:05:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 144, "html_url": "https://github.com/python/mypy/issues/144", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/144", "id": 11113387, "events_url": "https://api.github.com/repos/python/mypy/issues/144/events", "updated_at": "2014-07-23T04:07:16Z", "body": "The following fragment is not accepted by the parser, even though it is valid Python:\r\n\r\n    def f():\r\n        pass;    # Note trailing semicolon!\r\n    def g():\r\n        pass\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/144/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Parser gets confused by trailing semicolon", "assignee": null, "closed_at": "2014-07-23T04:07:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/144/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-02-18T12:42:28Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 143, "html_url": "https://github.com/python/mypy/issues/143", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/143", "id": 11111898, "events_url": "https://api.github.com/repos/python/mypy/issues/143/events", "updated_at": "2013-02-18T14:08:15Z", "body": "If a module is run using the -m command line option, the `__main__` module in the sys.modules dict refers to the automatically generated 'driver' module, not the actual module being run. This breaks some Python std library test suites, for example.", "labels_url": "https://api.github.com/repos/python/mypy/issues/143/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Modules dict has invalid __main__ module when using -m cmd line option", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-18T14:08:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/143/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-18T11:45:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 142, "html_url": "https://github.com/python/mypy/issues/142", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/142", "id": 11111600, "events_url": "https://api.github.com/repos/python/mypy/issues/142/events", "updated_at": "2014-07-25T03:43:12Z", "body": "The following code is rejected by the type checker, even though it should be valid:\r\n\r\n    void f(a, *, b=None): pass\r\n    any a, b\r\n    f(a, **b)   # \"Too many positional arguments\"\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/142/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "**args type checking problem with bare asterisk", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/142/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-18T11:34:24Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 141, "html_url": "https://github.com/python/mypy/issues/141", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/141", "id": 11111208, "events_url": "https://api.github.com/repos/python/mypy/issues/141/events", "updated_at": "2013-02-20T17:31:30Z", "body": "The following code is rejected:\r\n\r\n    import getopt\r\n    try:\r\n        pass\r\n    except getopt.error:   # not accepted\r\n        pass\r\n\r\nIt's easy to work around the problem, though: just use getopt.GetoptError as the exception type.", "labels_url": "https://api.github.com/repos/python/mypy/issues/141/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "getopt.error should be accepted as an exception type", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-20T17:31:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/141/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-18T11:20:41Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 140, "html_url": "https://github.com/python/mypy/issues/140", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/140", "id": 11109258, "events_url": "https://api.github.com/repos/python/mypy/issues/140/events", "updated_at": "2013-02-18T14:08:15Z", "body": "Currently the re module stubs only support str objects, but the Python re module also supports bytes objects. Update re stubs to work with bytes objects as well.", "labels_url": "https://api.github.com/repos/python/mypy/issues/140/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update re module stubs to support bytes objects", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-18T14:08:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/140/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-18T10:14:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 139, "html_url": "https://github.com/python/mypy/issues/139", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/139", "id": 11109162, "events_url": "https://api.github.com/repos/python/mypy/issues/139/events", "updated_at": "2013-02-18T14:08:15Z", "body": "The definition os os.error is invalid in the library stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/139/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid stub definition of os.error", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-18T14:08:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/139/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-18T10:11:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 138, "html_url": "https://github.com/python/mypy/issues/138", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/138", "id": 11108701, "events_url": "https://api.github.com/repos/python/mypy/issues/138/events", "updated_at": "2015-05-17T18:17:41Z", "body": "Invalid Python is generated for this code:\r\n\r\n    for (x, y) in ...\r\n\r\nThe parentheses are omitted, and the result is like this:\r\n\r\n    forx, y in ...\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/138/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid Python generated for 'for' with parens around index variables", "assignee": null, "closed_at": "2015-05-17T18:17:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/138/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-18T09:54:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 137, "html_url": "https://github.com/python/mypy/issues/137", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/137", "id": 10913788, "events_url": "https://api.github.com/repos/python/mypy/issues/137/events", "updated_at": "2014-07-25T04:00:28Z", "body": "The front end lets programs assign to `None`, `False`, `True` and `__debug__`, even though this is disallowed in Python. Disallow these assignments, similar to Python.", "labels_url": "https://api.github.com/repos/python/mypy/issues/137/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow assignment to None, False, True and __debug__", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/137/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-02-12T16:30:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 136, "html_url": "https://github.com/python/mypy/issues/136", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/136", "id": 10912950, "events_url": "https://api.github.com/repos/python/mypy/issues/136/events", "updated_at": "2013-02-19T16:47:06Z", "body": "Expressions such as `x in (y, z)` are not accepted by the type checker, even though they are quite common in Python code. Add support for them.", "labels_url": "https://api.github.com/repos/python/mypy/issues/136/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support 'in' operator with tuples", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-19T16:47:06Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/136/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-12T16:12:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 135, "html_url": "https://github.com/python/mypy/issues/135", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/135", "id": 10912595, "events_url": "https://api.github.com/repos/python/mypy/issues/135/events", "updated_at": "2015-12-29T17:20:10Z", "body": "Type inference fails for this code fragment:\r\n\r\n    if True:\r\n        x = 1\r\n    x = 2\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/135/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference fails for module-level variables that are first initialized within a block", "assignee": null, "closed_at": "2015-12-29T17:20:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/135/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-12T16:05:43Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 134, "html_url": "https://github.com/python/mypy/issues/134", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/134", "id": 10911400, "events_url": "https://api.github.com/repos/python/mypy/issues/134/events", "updated_at": "2013-02-19T16:47:05Z", "body": "The following code results in a stack trace from the type checker, even though it's valid Python:\r\n\r\n    try:\r\n        1 / 0\r\n    except:\r\n        raise\r\n\r\nAdd support for `raise` without an argument.", "labels_url": "https://api.github.com/repos/python/mypy/issues/134/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow raise without argument", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-19T16:47:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/134/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-12T15:38:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 133, "html_url": "https://github.com/python/mypy/issues/133", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/133", "id": 10911212, "events_url": "https://api.github.com/repos/python/mypy/issues/133/events", "updated_at": "2014-07-23T04:17:55Z", "body": "The following code results in a stack trace from the type checker:\r\n\r\n    def f():\r\n        yield\r\n\r\nFix yield without an argument.", "labels_url": "https://api.github.com/repos/python/mypy/issues/133/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow yield without argument", "assignee": null, "closed_at": "2014-07-23T04:17:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/133/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-02-12T15:33:25Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 132, "html_url": "https://github.com/python/mypy/issues/132", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/132", "id": 10910952, "events_url": "https://api.github.com/repos/python/mypy/issues/132/events", "updated_at": "2014-07-25T03:43:12Z", "body": "The semantic analyzer complains that urllib is multiply defined in the following fragment, even though the code is valid:\r\n\r\n    def f():\r\n        import urllib.request\r\n        import urllib.parse\r\n\r\nThis is easy to work around: if the imports are moved to file top level, they work as expected. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/132/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Multiple imports from the same package within a function not accepted", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/132/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-12T15:26:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 131, "html_url": "https://github.com/python/mypy/issues/131", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/131", "id": 10909811, "events_url": "https://api.github.com/repos/python/mypy/issues/131/events", "updated_at": "2013-02-20T17:31:20Z", "body": "The semantic analyzer rejects this program, although it should be valid:\r\n\r\n    if True:\r\n        def f(): print('hello')\r\n    f()\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/131/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid scope for conditionally defined function", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-20T17:31:20Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/131/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-12T14:57:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 130, "html_url": "https://github.com/python/mypy/issues/130", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/130", "id": 10904277, "events_url": "https://api.github.com/repos/python/mypy/issues/130/events", "updated_at": "2013-09-21T17:40:53Z", "body": "Code like this should be rejected, but it isn't:\r\n\r\n    import re\r\n    import math\r\n    re = math\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/130/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow assignment to modules", "assignee": null, "closed_at": "2013-09-21T17:40:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/130/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-12T11:53:13Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 129, "html_url": "https://github.com/python/mypy/issues/129", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/129", "id": 10870013, "events_url": "https://api.github.com/repos/python/mypy/issues/129/events", "updated_at": "2013-06-27T16:55:09Z", "body": "The builtins include classes `function` and `module`, but these are not present in Python. Rename accesses to these classes or report an error if it can't be done.", "labels_url": "https://api.github.com/repos/python/mypy/issues/129/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Rename access to built-in names 'function' and 'module'", "assignee": null, "closed_at": "2013-06-27T16:55:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/129/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-11T15:32:06Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 128, "html_url": "https://github.com/python/mypy/issues/128", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/128", "id": 10869011, "events_url": "https://api.github.com/repos/python/mypy/issues/128/events", "updated_at": "2014-07-25T05:05:01Z", "body": "Currently the following produces a static type error, even though it's valid in Python:\r\n\r\n    raise ValueError  # same as raise ValueError()\r\n\r\nThe above code should be valid.", "labels_url": "https://api.github.com/repos/python/mypy/issues/128/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support \"raise Class\"", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2014-07-25T05:05:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/128/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-11T15:04:25Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 127, "html_url": "https://github.com/python/mypy/issues/127", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/127", "id": 10868235, "events_url": "https://api.github.com/repos/python/mypy/issues/127/events", "updated_at": "2015-05-17T20:19:15Z", "body": "Currently `__name__` and `__doc__` names within modules have type `Any`, even though they should be strings. For example, this generates no type check errors:\r\n\r\n    __doc__ = 2  # accepted\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/127/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Module __name__ and __doc__ names should have type str", "assignee": null, "closed_at": "2015-05-17T20:19:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/127/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-02-11T14:41:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 126, "html_url": "https://github.com/python/mypy/issues/126", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/126", "id": 10860962, "events_url": "https://api.github.com/repos/python/mypy/issues/126/events", "updated_at": "2014-07-25T21:55:16Z", "body": "When creating a bound method object in statically typed code, the type checker should complain if the type of the method self argument is not compatible with the receiver. For example, this should be an error:\r\n\r\n    class A:\r\n        def f(o: int) -> None: pass\r\n    A().f    # receiver is A, self is int: not compatible\r\n\r\nThe issue #16 is related.", "labels_url": "https://api.github.com/repos/python/mypy/issues/126/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Check the type of self when accessing a method via instance", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/126/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-11T10:10:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 125, "html_url": "https://github.com/python/mypy/issues/125", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/125", "id": 10801774, "events_url": "https://api.github.com/repos/python/mypy/issues/125/events", "updated_at": "2014-07-24T04:55:09Z", "body": "Consider this code fragment:\r\n\r\n    s = 'x'\r\n    n = 1\r\n    s = n  # type check fails\r\n\r\nThe error message is `Incompatible types in assignment` or somesuch which is just plain uninformative. Say something like `Cannot assign 'int' to 'str'` instead. When the types are inferred, it might not be immediately obvious why an assignment is rejected.\r\n\r\nThere is also a similar issue with function argument types. Include both the actual and the expected type.\r\n\r\nShorten the types whenever possible to only include enough information to make the problem clear and obvious. So \r\n\r\n`Cannot assign func<...very long...> to tuple<...very long...>` \r\n\r\nis worse than \r\n\r\n`Cannot assign function to tuple`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/125/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Include more descriptions of types in error messages", "assignee": null, "closed_at": "2014-07-24T04:55:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/125/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-08T23:44:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 124, "html_url": "https://github.com/python/mypy/issues/124", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/124", "id": 10785751, "events_url": "https://api.github.com/repos/python/mypy/issues/124/events", "updated_at": "2013-02-08T17:16:00Z", "body": "The `__enter__` and `__exit__` methods are not used consistently in the stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/124/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Fix __enter__ and __exit__ methods in library stubs", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-08T17:16:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/124/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-08T16:32:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 123, "html_url": "https://github.com/python/mypy/issues/123", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/123", "id": 10780985, "events_url": "https://api.github.com/repos/python/mypy/issues/123/events", "updated_at": "2013-02-08T17:16:00Z", "body": "Support with statements in the front end and the Python back end.", "labels_url": "https://api.github.com/repos/python/mypy/issues/123/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support with statements", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-08T17:16:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/123/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-08T14:31:47Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 122, "html_url": "https://github.com/python/mypy/issues/122", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/122", "id": 10775578, "events_url": "https://api.github.com/repos/python/mypy/issues/122/events", "updated_at": "2013-02-08T14:30:07Z", "body": "Add support for classes within functions and classes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/122/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support nested classes", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-08T14:30:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/122/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-08T11:08:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 121, "html_url": "https://github.com/python/mypy/issues/121", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/121", "id": 10774350, "events_url": "https://api.github.com/repos/python/mypy/issues/121/events", "updated_at": "2013-02-08T10:35:30Z", "body": "Support function decorators.", "labels_url": "https://api.github.com/repos/python/mypy/issues/121/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support function decorators", "assignee": null, "closed_at": "2013-02-08T10:35:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/121/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-08T10:32:15Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 120, "html_url": "https://github.com/python/mypy/issues/120", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/120", "id": 10737827, "events_url": "https://api.github.com/repos/python/mypy/issues/120/events", "updated_at": "2013-02-07T14:22:42Z", "body": "We should allow casts from any callable type to a type variable type and vice versa. The prior would be useful in function decorators, at least. Also allow casts between callable types.", "labels_url": "https://api.github.com/repos/python/mypy/issues/120/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow cast to/from callable type", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-07T14:22:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/120/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-07T14:12:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 119, "html_url": "https://github.com/python/mypy/issues/119", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/119", "id": 10705934, "events_url": "https://api.github.com/repos/python/mypy/issues/119/events", "updated_at": "2013-02-12T11:51:11Z", "body": "Do not allow assignments to methods, functions or classes.\r\n\r\n**Update**: Note that variables with callable types are still fine.", "labels_url": "https://api.github.com/repos/python/mypy/issues/119/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow assignment to method, function or class", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-12T11:51:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/119/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-06T18:46:02Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 118, "html_url": "https://github.com/python/mypy/issues/118", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/118", "id": 10704029, "events_url": "https://api.github.com/repos/python/mypy/issues/118/events", "updated_at": "2013-02-07T13:29:15Z", "body": "Make it possible to access attributes of type objects in statically typed code. \r\nFor example, this should work:\r\n\r\n    print(str.__add__('foo', 'bar'))\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/118/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support type object attributes", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-07T13:29:15Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/118/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-06T18:09:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 117, "html_url": "https://github.com/python/mypy/issues/117", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/117", "id": 10698538, "events_url": "https://api.github.com/repos/python/mypy/issues/117/events", "updated_at": "2015-05-17T18:12:57Z", "body": "Currently there is no error during translation, but the generated code is broken.", "labels_url": "https://api.github.com/repos/python/mypy/issues/117/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Report error if using *args, *kwargs or bare asterisk in overloaded function", "assignee": null, "closed_at": "2015-05-17T18:12:57Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/117/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-06T16:27:17Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 116, "html_url": "https://github.com/python/mypy/issues/116", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/116", "id": 10698428, "events_url": "https://api.github.com/repos/python/mypy/issues/116/events", "updated_at": "2015-05-17T17:55:45Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/116/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support **kwargs in overloaded functions", "assignee": null, "closed_at": "2015-05-17T17:55:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/116/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-06T16:25:10Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 115, "html_url": "https://github.com/python/mypy/issues/115", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/115", "id": 10698415, "events_url": "https://api.github.com/repos/python/mypy/issues/115/events", "updated_at": "2015-05-17T17:55:33Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/115/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support bare asterisk in overloaded functions", "assignee": null, "closed_at": "2015-05-17T17:55:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/115/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-06T16:24:50Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 114, "html_url": "https://github.com/python/mypy/issues/114", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/114", "id": 10698356, "events_url": "https://api.github.com/repos/python/mypy/issues/114/events", "updated_at": "2015-05-17T18:00:39Z", "body": "Overloaded functions should be able to use *args.", "labels_url": "https://api.github.com/repos/python/mypy/issues/114/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support *args in overloaded functions", "assignee": null, "closed_at": "2015-05-17T18:00:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/114/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-06T16:23:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 113, "html_url": "https://github.com/python/mypy/issues/113", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/113", "id": 10698263, "events_url": "https://api.github.com/repos/python/mypy/issues/113/events", "updated_at": "2015-05-17T18:19:46Z", "body": "The following program prints 1, even though the `ff` call should fail:\r\n\r\n    from typing import Any\r\n    def f(x: str) -> None: pass\r\n    def f(y: int) -> None: print(y)\r\n    ff = f # type: Any\r\n    ff(x=1)  # print 1\r\n\r\nIf multiple overload variants have different names in the same argument index, using the argument as keyword argument should be disallowed (rename the argument).\r\n\r\n**EDIT**: Update to current syntax", "labels_url": "https://api.github.com/repos/python/mypy/issues/113/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid keyword argument can be applied to overloaded function", "assignee": null, "closed_at": "2015-05-17T18:19:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/113/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-06T16:21:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 112, "html_url": "https://github.com/python/mypy/issues/112", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/112", "id": 10698093, "events_url": "https://api.github.com/repos/python/mypy/issues/112/events", "updated_at": "2013-06-27T16:55:44Z", "body": "The following program should print 2 but it doesn't:\r\n\r\n    x = 2\r\n    def f(x): pass\r\n    def f(): print(x)\r\n    f() # prints <object object at ...>\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/112/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Name aliasing problem in overloaded function", "assignee": null, "closed_at": "2013-06-27T16:55:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/112/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-06T16:17:39Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 111, "html_url": "https://github.com/python/mypy/issues/111", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/111", "id": 10697761, "events_url": "https://api.github.com/repos/python/mypy/issues/111/events", "updated_at": "2015-05-17T18:18:45Z", "body": "The following program raises an exception, even though it should arguably print 'str':\r\n\r\n    void f(str x): print('str')\r\n    void f(int a): print('int')\r\n    f(None)\r\n\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/111/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "None is not accepted by overloaded function", "assignee": null, "closed_at": "2015-05-17T18:18:45Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/111/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-06T16:09:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 110, "html_url": "https://github.com/python/mypy/issues/110", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/110", "id": 10689175, "events_url": "https://api.github.com/repos/python/mypy/issues/110/events", "updated_at": "2013-02-06T13:33:42Z", "body": "Currently the type name space implementation is different from other name spaces (mypy.nodes.TypeInfo). Migrate it to use an ordinary SymbolTable. This makes it easy to support imports in class bodies and also it will simplify code a bit.", "labels_url": "https://api.github.com/repos/python/mypy/issues/110/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement type name spaces using symbol tables", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-06T13:33:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/110/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-02-06T11:51:31Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 109, "html_url": "https://github.com/python/mypy/issues/109", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/109", "id": 10685982, "events_url": "https://api.github.com/repos/python/mypy/issues/109/events", "updated_at": "2013-02-06T13:33:26Z", "body": "Implement imports in blocks and within functions.", "labels_url": "https://api.github.com/repos/python/mypy/issues/109/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support non-top-level imports", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-06T13:33:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/109/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-06T10:00:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 108, "html_url": "https://github.com/python/mypy/issues/108", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/108", "id": 10661643, "events_url": "https://api.github.com/repos/python/mypy/issues/108/events", "updated_at": "2014-07-23T04:44:10Z", "body": "Code like this is rejected, because the lambda has None as the inferred return type:\r\n\r\n    import typing\r\n    x = lambda: print(1) # type: typing.Function[[], None]\r\n\r\nThe type checker should accept lambdas that don't return a value. Any type for the lambda body should be accepted in this case.", "labels_url": "https://api.github.com/repos/python/mypy/issues/108/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Lambda with void return value rejected", "assignee": null, "closed_at": "2014-07-23T04:44:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/108/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2013-02-05T18:36:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 107, "html_url": "https://github.com/python/mypy/issues/107", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/107", "id": 10660565, "events_url": "https://api.github.com/repos/python/mypy/issues/107/events", "updated_at": "2013-02-05T18:32:52Z", "body": "A recent change (#104) fixed some issues related to function objects as data attributes, but it broke other cases.\r\n\r\nThere are two different ways of associating data attributes with callable values:\r\n\r\n  1. class-level: when accessing via instance, create bound method (implicit self)\r\n  2. instance-level: when accessing via instance, return value as such\r\n\r\nThe fix to #104 fixed 1 but broke 2. \r\n\r\nHere is a simple idea for fixing also 2 (but we may eventually need a better long-term solution):\r\n\r\n - callable data attributes have a flag determining whether they are instance or class level\r\n - if a data attribute with a callable type has an initializer in the class body, it is \r\n    automatically\r\n    class-level; otherwise, the data attribute is instance-level\r\n - perform implicit self processing only for class-level attributes (and methods; they are\r\n    always class-level)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/107/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Distinguish between class-level and instance-level function objects", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-05T18:32:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/107/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-05T18:01:25Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 106, "html_url": "https://github.com/python/mypy/issues/106", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/106", "id": 10658200, "events_url": "https://api.github.com/repos/python/mypy/issues/106/events", "updated_at": "2013-07-04T11:06:52Z", "body": "The test suites that CPython uses to test a python language implementation should be migrated to mypy, with as minimal change as possible.\r\n\r\nThe addition of the test suites would allow developers and users of mypy to test whether certain syntactical constructs are supported, showing what works, and what doesn't.", "labels_url": "https://api.github.com/repos/python/mypy/issues/106/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Migrate and translate cpython test suites", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/106/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2013-02-05T17:02:29Z", "user": {"followers_url": "https://api.github.com/users/Varriount/followers", "gists_url": "https://api.github.com/users/Varriount/gists{/gist_id}", "html_url": "https://github.com/Varriount", "following_url": "https://api.github.com/users/Varriount/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/524596?v=3", "url": "https://api.github.com/users/Varriount", "organizations_url": "https://api.github.com/users/Varriount/orgs", "starred_url": "https://api.github.com/users/Varriount/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Varriount/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Varriount/subscriptions", "login": "Varriount", "repos_url": "https://api.github.com/users/Varriount/repos", "received_events_url": "https://api.github.com/users/Varriount/received_events", "id": 524596, "site_admin": false}, "locked": false}, {"milestone": null, "number": 105, "html_url": "https://github.com/python/mypy/issues/105", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/105", "id": 10654411, "events_url": "https://api.github.com/repos/python/mypy/issues/105/events", "updated_at": "2013-02-05T16:46:14Z", "body": "Add support for nested functions, for example:\r\n\r\n    def f(x):\r\n        def g(): print(x)\r\n        return g\r\n    f(1)()\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/105/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support nested functions", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-05T16:46:14Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/105/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-05T15:35:43Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 104, "html_url": "https://github.com/python/mypy/issues/104", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/104", "id": 10649637, "events_url": "https://api.github.com/repos/python/mypy/issues/104/events", "updated_at": "2013-02-05T14:43:07Z", "body": "This code is not accepted by the type checker:\r\n\r\n    class A:\r\n        def f(self): print(1)\r\n        g = f\r\n    a = A()\r\n    a.g()   # error, even though this is valid in Python\r\n\r\nMake the above code work as expected.", "labels_url": "https://api.github.com/repos/python/mypy/issues/104/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support calling methods defined as data attributes", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-05T14:43:07Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/104/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-05T13:27:10Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 103, "html_url": "https://github.com/python/mypy/issues/103", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/103", "id": 10647688, "events_url": "https://api.github.com/repos/python/mypy/issues/103/events", "updated_at": "2013-02-05T15:09:10Z", "body": "Arbitrary statements should be accepted in the class body. For example, this code should be accepted (it's not supported yet):\r\n\r\n    class A:\r\n        if True:\r\n            x = 1\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/103/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow arbitrary statements in class body", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-05T15:09:10Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/103/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-05T12:17:59Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 102, "html_url": "https://github.com/python/mypy/issues/102", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/102", "id": 10647614, "events_url": "https://api.github.com/repos/python/mypy/issues/102/events", "updated_at": "2013-02-05T13:23:55Z", "body": "Code such as the following is not accepted, though it should be valid:\r\n\r\n    class A:\r\n        x = 1\r\n        y = x   # not supported\r\n        def f(self): pass\r\n        g = f   # not supported", "labels_url": "https://api.github.com/repos/python/mypy/issues/102/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow references to attributes within class body", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-05T13:23:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/102/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-05T12:14:53Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 101, "html_url": "https://github.com/python/mypy/issues/101", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/101", "id": 10617945, "events_url": "https://api.github.com/repos/python/mypy/issues/101/events", "updated_at": "2013-02-04T18:09:36Z", "body": "Update driver usage to mention -m.", "labels_url": "https://api.github.com/repos/python/mypy/issues/101/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Mention -m option in driver usage text", "assignee": null, "closed_at": "2013-02-04T18:09:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/101/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-02-04T17:49:43Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 100, "html_url": "https://github.com/python/mypy/issues/100", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/100", "id": 10617262, "events_url": "https://api.github.com/repos/python/mypy/issues/100/events", "updated_at": "2013-02-04T18:09:36Z", "body": "Cannot run mypy.testparse as a module. ", "labels_url": "https://api.github.com/repos/python/mypy/issues/100/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Running mypy.testparse as a module using -m fails", "assignee": null, "closed_at": "2013-02-04T18:09:36Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/100/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-04T17:31:40Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 99, "html_url": "https://github.com/python/mypy/issues/99", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/99", "id": 10613919, "events_url": "https://api.github.com/repos/python/mypy/issues/99/events", "updated_at": "2013-02-04T17:29:41Z", "body": "Now the program is translated to the Python file `__main__.py`. It would be better to preserve the original program name.\r\n\r\nNote that the `__main__.py` file is needed when using the -m option.", "labels_url": "https://api.github.com/repos/python/mypy/issues/99/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Preserve the program name when translating to Python", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-04T17:29:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/99/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-04T16:09:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 98, "html_url": "https://github.com/python/mypy/issues/98", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/98", "id": 10609149, "events_url": "https://api.github.com/repos/python/mypy/issues/98/events", "updated_at": "2014-07-25T03:58:21Z", "body": "Create package mypy.test for test code. Perform these changes:\r\n\r\n - Move tests.py -> mypy/test/test_all.py (etc.)\r\n - Move mypy/testtranfrom.py -> mypy/test/test_transform.py (etc.)\r\n\r\n(Well, test_all still won't run *all* tests...)\r\n\r\nThen it would be possible to run tests like this:\r\n\r\n    $ <mypy> -m mypy.test.test_all\r\n    $ <mypy> -m mypy.test.test_transform\r\n\r\nDevelopers who are used to just running tests.py can create a shell script tests.sh that does the above.\r\n\r\n#23 is a prerequisite.", "labels_url": "https://api.github.com/repos/python/mypy/issues/98/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Move test code to package mypy.test", "assignee": null, "closed_at": "2014-07-25T03:58:21Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/98/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-02-04T13:59:32Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 97, "html_url": "https://github.com/python/mypy/issues/97", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/97", "id": 10601577, "events_url": "https://api.github.com/repos/python/mypy/issues/97/events", "updated_at": "2014-07-24T05:11:12Z", "body": "It might be useful to have syntax files for popular editors that are optimized for mypy.\r\n\r\nThe editor list could include Vim, Emacs, JEdit, a free Windows editor, Sublime Text (maybe).\r\n\r\nThe process is probably fairly simple: just copy the Python syntax file, and add some additional identifiers to highlight (e.g. List, Map, Sequence).\r\n\r\nAlso set up a github repo (or similar) to host the file, and add a link to the mypy wiki.\r\n\r\nAdd a comment to this issue if you have added or are planning to add support for an editor. This issue will be closed when the list of supported editors seems good enough.\r\n\r\n**Update: remove references to old syntax**", "labels_url": "https://api.github.com/repos/python/mypy/issues/97/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Create mypy syntax files for popular editors", "assignee": null, "closed_at": "2014-07-24T05:11:12Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/97/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2013-02-04T10:13:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 96, "html_url": "https://github.com/python/mypy/pull/96", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/96", "id": 10587248, "events_url": "https://api.github.com/repos/python/mypy/issues/96/events", "updated_at": "2014-07-07T23:04:54Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/96/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Merge package-support into master", "assignee": null, "closed_at": "2013-02-04T12:20:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/96/comments", "labels": [], "created_at": "2013-02-03T18:23:17Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/96.patch", "html_url": "https://github.com/python/mypy/pull/96", "diff_url": "https://github.com/python/mypy/pull/96.diff", "url": "https://api.github.com/repos/python/mypy/pulls/96"}, "locked": false}, {"milestone": null, "number": 95, "html_url": "https://github.com/python/mypy/issues/95", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/95", "id": 10583066, "events_url": "https://api.github.com/repos/python/mypy/issues/95/events", "updated_at": "2014-07-24T05:10:46Z", "body": "I propose that the mypy sources use a different file name extension (.mypy?) for 4 very good reasons:\r\n\r\n- syntax coloring and code introspection - to be able to find mypy functions in the source code\r\n\r\n- import hooks. MyPy source could be importable right into Python with a proper import hook that translated the program in place into __mycache__ (and would find the already compiled file there if it exists), another advantage for an import hook could be that the stack traces could reference the original code for some case where they might not be 1:1\r\n\r\n- to not confuse compiled python target code with the mypy source code.\r\n\r\n- make them work on Windows too or at least not run under the python interpreter when doubleclicked :D", "labels_url": "https://api.github.com/repos/python/mypy/issues/95/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Change the MyPy source filename extension", "assignee": null, "closed_at": "2014-07-24T05:10:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/95/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2013-02-03T10:46:09Z", "user": {"followers_url": "https://api.github.com/users/ztane/followers", "gists_url": "https://api.github.com/users/ztane/gists{/gist_id}", "html_url": "https://github.com/ztane", "following_url": "https://api.github.com/users/ztane/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/704200?v=3", "url": "https://api.github.com/users/ztane", "organizations_url": "https://api.github.com/users/ztane/orgs", "starred_url": "https://api.github.com/users/ztane/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ztane/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ztane/subscriptions", "login": "ztane", "repos_url": "https://api.github.com/users/ztane/repos", "received_events_url": "https://api.github.com/users/ztane/received_events", "id": 704200, "site_admin": false}, "locked": false}, {"milestone": null, "number": 94, "html_url": "https://github.com/python/mypy/issues/94", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/94", "id": 10538814, "events_url": "https://api.github.com/repos/python/mypy/issues/94/events", "updated_at": "2013-02-01T16:49:04Z", "body": "The build manager sometimes schedules type checking of modules in the wrong order (if module a imports b, a is type checked before b). This may result in bogus type checking results.\r\n\r\nSorry, no simple test case available yet, but you can reproduce it with the mypy implementation (for example, typefixture is type checked before nodes).\r\n\r\nThis needs to be fixed soon (for the common case where there are no circular imports).\r\n\r\nCircular imports need not be solved now; #90 will be of help in that case. More generally, we may require explicit type annotations for code that uses circular imports.", "labels_url": "https://api.github.com/repos/python/mypy/issues/94/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Modules are sometimes type checked in the wrong order", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-01T16:49:04Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/94/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-02-01T12:50:20Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 93, "html_url": "https://github.com/python/mypy/issues/93", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/93", "id": 10538567, "events_url": "https://api.github.com/repos/python/mypy/issues/93/events", "updated_at": "2013-02-01T17:06:00Z", "body": "The implementation uses circular imports more than is necessary. This is a historical artifact that is a leftover from the structure of the original Alore implementation (the Alore module system is quite different from Python modules). \r\n\r\nRemove any circular imports that don't increase the readability/maintainability of the code \r\n\r\nSome potential affected modules:\r\n\r\n * nodes, mtypes and visitor (combine into a single module named `ast`, for example)\r\n * check*.py (combine)\r\n * transform*.py (combine)", "labels_url": "https://api.github.com/repos/python/mypy/issues/93/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor code to use fewer circular imports", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/93/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-02-01T12:39:16Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 92, "html_url": "https://github.com/python/mypy/issues/92", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/92", "id": 10496603, "events_url": "https://api.github.com/repos/python/mypy/issues/92/events", "updated_at": "2013-01-31T17:22:16Z", "body": "Support basic operator overloading in the runtime type checking transform.\r\n\r\nThese should be supported:\r\n\r\n  - indexing (gets and sets)\r\n  - binary arithmetic operators\r\n  - comparison operators\r\n  - unary `-` and `~`\r\n  - `in`\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/92/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support operator overloading in runtime type checking transform", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-31T17:22:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/92/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-31T11:18:38Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 91, "html_url": "https://github.com/python/mypy/issues/91", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/91", "id": 10496177, "events_url": "https://api.github.com/repos/python/mypy/issues/91/events", "updated_at": "2013-01-31T11:05:53Z", "body": "Support calling superclass methods.", "labels_url": "https://api.github.com/repos/python/mypy/issues/91/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support calling arbitrary methods using super()", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-31T11:05:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/91/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-31T11:03:04Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 90, "html_url": "https://github.com/python/mypy/issues/90", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/90", "id": 10494480, "events_url": "https://api.github.com/repos/python/mypy/issues/90/events", "updated_at": "2013-02-01T16:49:32Z", "body": "Types are inferred in a file from top to bottom. If we refer to a variable/attribute before its type has been inferred, the type defaults to `any`, which is broken.\r\n\r\nIn this example there is no reported error for `f` since the definition is before class `A` in the file:\r\n\r\n    void f(A a):\r\n        print(a.x + 'x')  # no error\r\n    class A:\r\n        void __init__(self):\r\n            self.x = 2\r\n    void g(A a):\r\n        print(a.x + 'x')  # error\r\n\r\nWe should maintain a flag that indicates whether the type of a variable has been inferred. If code accesses the variable before the flag is set, report an error and ask the programmer to give the type explicitly for the variable (e.g. `int x` in the body of class `A`).\r\n\r\nA long-term fix is to not infer types in strict top-to-bottom order but do it more flexibly. However, this will be a separate issue.\r\n\r\nAlso, this problem is common in cases where there are circular module dependencies.", "labels_url": "https://api.github.com/repos/python/mypy/issues/90/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Detect if a type has not been inferred yet during type checking", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-01T16:49:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/90/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-31T10:03:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 89, "html_url": "https://github.com/python/mypy/issues/89", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/89", "id": 10494288, "events_url": "https://api.github.com/repos/python/mypy/issues/89/events", "updated_at": "2013-02-01T17:23:11Z", "body": "Type checker should not let code access the `__init__` method if the receiver has a static type. The reason is that subclasses can override `__init__` with an incompatible signature (`__init__` is different from ordinary methods).\r\n\r\nThis code should not be accepted:\r\n\r\n    class A:\r\n        void __init__(self, int x): pass\r\n\r\n    a = A(2)\r\n    a.__init__(3)  # Should be a static type error\r\n\r\nThis was implemented in Alore, but it was lost at some point.\r\n\r\nAs an exception, it is valid to use super() to access `__init__` (we know the exact method to call).", "labels_url": "https://api.github.com/repos/python/mypy/issues/89/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow access to __init__ with statically typed receiver", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-01T17:23:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/89/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-31T09:55:59Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 88, "html_url": "https://github.com/python/mypy/issues/88", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/88", "id": 10494070, "events_url": "https://api.github.com/repos/python/mypy/issues/88/events", "updated_at": "2013-01-31T11:05:53Z", "body": "It should be possible to use `super().__init__(...)` in the C back end.", "labels_url": "https://api.github.com/repos/python/mypy/issues/88/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support calling superclass __init__ in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-31T11:05:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/88/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-31T09:48:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 87, "html_url": "https://github.com/python/mypy/issues/87", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/87", "id": 10462870, "events_url": "https://api.github.com/repos/python/mypy/issues/87/events", "updated_at": "2014-07-25T03:39:01Z", "body": "Support booleans in the C back end:\r\n\r\n - the bool type\r\n - True and False\r\n - boolean values in conditions\r\n - printing booleans\r\n - unary not", "labels_url": "https://api.github.com/repos/python/mypy/issues/87/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Booleans in the C back end", "assignee": null, "closed_at": "2014-07-25T03:39:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/87/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-30T15:35:40Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 86, "html_url": "https://github.com/python/mypy/issues/86", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/86", "id": 10461580, "events_url": "https://api.github.com/repos/python/mypy/issues/86/events", "updated_at": "2014-07-25T03:39:52Z", "body": "Support string objects and literals and basic string operations in the C back end.\r\n\r\nThese should work:\r\n - str literals\r\n - len\r\n - concatenation\r\n - equality\r\n - conversion from int\r\n - simple indexing\r\n - `__str__`\r\n - printing strings\r\n - input()", "labels_url": "https://api.github.com/repos/python/mypy/issues/86/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Basic string support in the C back end", "assignee": null, "closed_at": "2014-07-25T03:39:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/86/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-30T15:01:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 85, "html_url": "https://github.com/python/mypy/issues/85", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/85", "id": 10461469, "events_url": "https://api.github.com/repos/python/mypy/issues/85/events", "updated_at": "2014-07-25T03:40:16Z", "body": "Add support for raising exceptions and displaying stack traces to the native back end. Also update primitives to raise exceptions and include a few basic exception classes.\r\n\r\nThis issue does not include support for `finally` or catching exceptions.", "labels_url": "https://api.github.com/repos/python/mypy/issues/85/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Basic exception support in C back end", "assignee": null, "closed_at": "2014-07-25T03:40:16Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/85/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-30T14:58:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 84, "html_url": "https://github.com/python/mypy/issues/84", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/84", "id": 10460121, "events_url": "https://api.github.com/repos/python/mypy/issues/84/events", "updated_at": "2013-01-30T14:24:50Z", "body": "The remove the type from the nodes.VarDef.items attribute. Replace `tuple<Var, Type>[]` with just `Var[]`, since type is available via the Var node.", "labels_url": "https://api.github.com/repos/python/mypy/issues/84/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor nodes.VarDef", "assignee": null, "closed_at": "2013-01-30T14:24:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/84/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2013-01-30T14:24:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 83, "html_url": "https://github.com/python/mypy/issues/83", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/83", "id": 10458156, "events_url": "https://api.github.com/repos/python/mypy/issues/83/events", "updated_at": "2014-07-25T03:42:55Z", "body": "Support evaluation of casts in the C back end. Support only non-generic types in statically typed code at this point.\r\n\r\nIf exceptions are not supported yet, abort the program if a cast fails. Otherwise, raise an exception.\r\n\r\nExample:\r\n\r\n    object o = 3\r\n    int i\r\n    i = (int)o    # ok\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/83/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support simple casts in the C back end", "assignee": null, "closed_at": "2014-07-25T03:42:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/83/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-30T13:22:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 82, "html_url": "https://github.com/python/mypy/issues/82", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/82", "id": 10458081, "events_url": "https://api.github.com/repos/python/mypy/issues/82/events", "updated_at": "2014-07-25T03:42:47Z", "body": "Box (wrap) short int objects automatically when their attributes are accessed. Also support calling int methods such as `__add__`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/82/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support short int autoboxing and calling int methods", "assignee": null, "closed_at": "2014-07-25T03:42:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/82/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-30T13:20:02Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 81, "html_url": "https://github.com/python/mypy/issues/81", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/81", "id": 10457659, "events_url": "https://api.github.com/repos/python/mypy/issues/81/events", "updated_at": "2013-02-04T12:39:21Z", "body": "The following code should print 0, but it prints None:\r\n\r\n    int f(): pass\r\n    print(f()) # 0 expected\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/81/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Return 0 implicitly if function return type is int", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-30T13:10:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/81/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-30T13:05:19Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 80, "html_url": "https://github.com/python/mypy/issues/80", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/80", "id": 10455862, "events_url": "https://api.github.com/repos/python/mypy/issues/80/events", "updated_at": "2013-01-30T12:43:30Z", "body": "Code such as the following should work:\r\n\r\n    class A:\r\n        void __init__(self, int x):\r\n            self.x = x\r\n            self.y = 2\r\n\r\nCurrently it results in invalid generated C.", "labels_url": "https://api.github.com/repos/python/mypy/issues/80/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support implicit attribute definition in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-30T12:43:30Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/80/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-30T11:54:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 79, "html_url": "https://github.com/python/mypy/pull/79", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/79", "id": 10438140, "events_url": "https://api.github.com/repos/python/mypy/issues/79/events", "updated_at": "2013-01-30T13:24:22Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/79/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fix #52", "assignee": null, "closed_at": "2013-01-30T13:24:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/79/comments", "labels": [], "created_at": "2013-01-29T22:52:44Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/79.patch", "html_url": "https://github.com/python/mypy/pull/79", "diff_url": "https://github.com/python/mypy/pull/79.diff", "url": "https://api.github.com/repos/python/mypy/pulls/79"}, "locked": false}, {"milestone": null, "number": 78, "html_url": "https://github.com/python/mypy/issues/78", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/78", "id": 10424535, "events_url": "https://api.github.com/repos/python/mypy/issues/78/events", "updated_at": "2013-01-30T11:25:17Z", "body": "Currently local and global variable definitions with explicit types do not work (except for globals without initializers).\r\n\r\nFor example, this should work:\r\n\r\n    int x = 2\r\n    print(x)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/78/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support local and global variable definitions with explicit types in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-30T11:25:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/78/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-29T17:00:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 77, "html_url": "https://github.com/python/mypy/issues/77", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/77", "id": 10423440, "events_url": "https://api.github.com/repos/python/mypy/issues/77/events", "updated_at": "2013-01-30T12:43:30Z", "body": "There is an uncaught exception in DyncheckTransformVisitor.get_type when transforming this class:\r\n\r\n    class A:\r\n        void __init__(self):\r\n            self.x = 0\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/77/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Transform of class with implicit attribute definition fails", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-30T12:43:29Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/77/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-29T16:35:05Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 76, "html_url": "https://github.com/python/mypy/issues/76", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/76", "id": 10419823, "events_url": "https://api.github.com/repos/python/mypy/issues/76/events", "updated_at": "2014-07-25T03:43:12Z", "body": "The type checker should give a warning if a local variable is only assigned to but never read. \r\nThis is usually a result of  a misspelled variable name.\r\n\r\nPerhaps only do this if warnings have been explicitly enabled using a command line option or via some other mechanism.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/76/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give a warning if a local variable is assigned to but never read", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/76/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-29T15:11:59Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 75, "html_url": "https://github.com/python/mypy/issues/75", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/75", "id": 10418004, "events_url": "https://api.github.com/repos/python/mypy/issues/75/events", "updated_at": "2014-07-25T03:42:34Z", "body": "Currently all values use the same representation: short ints values have the lowest bit clear,  while all other values are pointers with the lowest bit set (+ special None/error value repr). This may reduce the quality of generated code for operations on reference types, since we need to clear the lowest bit (decrement by one) always.\r\n\r\nThis might not actually affect performance significantly on architectures that have read instructions with immediate offsets. However, non-intel architectures might not support 1-byte offsets (maybe they use a granularity of 4/8 bytes?).", "labels_url": "https://api.github.com/repos/python/mypy/issues/75/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use different representations for ints and non-ints", "assignee": null, "closed_at": "2014-07-25T03:42:34Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/75/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-29T14:30:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 74, "html_url": "https://github.com/python/mypy/issues/74", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/74", "id": 10417526, "events_url": "https://api.github.com/repos/python/mypy/issues/74/events", "updated_at": "2014-07-25T03:42:25Z", "body": "Currently two pointer deferences are needed to access the vtable of an object, as the runtime type info structure contains a pointer to the vtable. The vtable should be included inline in the type info structure to save a pointer dereference per method invoke.\r\n\r\nThis may also mean that the type info structure needs to be allocated dynamically. However, if we generate a new C struct type per mypy type, we might be able to still have type info structures initialized statically. This would be good since it could speed up casts and other operations that need to use runtime type information.\r\n\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/74/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Include vtable in the runtime type info structure", "assignee": null, "closed_at": "2014-07-25T03:42:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/74/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-29T14:16:07Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 73, "html_url": "https://github.com/python/mypy/issues/73", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/73", "id": 10416823, "events_url": "https://api.github.com/repos/python/mypy/issues/73/events", "updated_at": "2014-07-25T22:00:31Z", "body": "Add parser, semantic analyzer and type checker support for nullable primitive types (int?, bool? and float? types). These have None as a valid value.\r\n\r\nAlso make None values incompatible with plain int/float/bool types.\r\n\r\nUpdate stubs to use nullable types when relevant (e.g. int arguments with None default argument values).", "labels_url": "https://api.github.com/repos/python/mypy/issues/73/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Nullable primitive types", "assignee": null, "closed_at": "2014-07-25T22:00:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/73/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-29T13:55:03Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 72, "html_url": "https://github.com/python/mypy/issues/72", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/72", "id": 10416074, "events_url": "https://api.github.com/repos/python/mypy/issues/72/events", "updated_at": "2014-07-25T03:42:08Z", "body": "Currently the generated C code is very verbose. It should be simpler. This would make the code easier to read and debug.\r\n\r\nHere are some ideas:\r\n     - Add single icode opcode for `return None`.\r\n     - Remove unnecessary gotos to the next label.\r\n     - Use macros for common int operations (inline functions might degrade efficiency).\r\n     - Use macros/inline functions for calls with 1..4 arguments, for example.\r\n     - Simplify function prolog code.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/72/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make generated C code and icode simpler", "assignee": null, "closed_at": "2014-07-25T03:42:08Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/72/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-29T13:28:24Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 71, "html_url": "https://github.com/python/mypy/issues/71", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/71", "id": 10415776, "events_url": "https://api.github.com/repos/python/mypy/issues/71/events", "updated_at": "2013-01-29T13:45:56Z", "body": "Currently global variables are initialized to 0 always. Initialize global variables with a non-int type to None.", "labels_url": "https://api.github.com/repos/python/mypy/issues/71/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Initialize global variables correctly", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-29T13:45:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/71/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-29T13:16:59Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 70, "html_url": "https://github.com/python/mypy/issues/70", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/70", "id": 10409231, "events_url": "https://api.github.com/repos/python/mypy/issues/70/events", "updated_at": "2013-01-29T15:24:44Z", "body": "Add support for None in the C back end:\r\n\r\n  * References to None, e.g. `x = None`.\r\n  * None checks, e.g. `if x: foo()`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/70/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support None in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-29T15:24:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/70/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-29T09:08:46Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 69, "html_url": "https://github.com/python/mypy/issues/69", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/69", "id": 10409073, "events_url": "https://api.github.com/repos/python/mypy/issues/69/events", "updated_at": "2013-01-30T10:58:13Z", "body": "The C back initializes all stack frame locations to 0, which is wrong for reference types. Initialize reference types to None. \r\n\r\nThe following changes are needed:\r\n * Icode generation keeps track of the types of registers. This includes locals (and   \r\n    function arguments, though they don't have to be initialized).\r\n * Register initialization in the generated C depends on the type.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/69/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Keep track of types of stack frame locations (int vs non-int)", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-30T10:58:13Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/69/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-29T09:01:47Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 68, "html_url": "https://github.com/python/mypy/issues/68", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/68", "id": 10379494, "events_url": "https://api.github.com/repos/python/mypy/issues/68/events", "updated_at": "2013-01-28T17:59:01Z", "body": "The C generator test cases only test compiling and running a program. This makes some compiler changes difficult to do in a test-driven way, as there will be multiple changes in the generated C that depend on each other. These cannot currently be tested individually. \r\n\r\nAdd test cases that perform checks on the generated C code. Focus on parts of the code that are unlikely to change often. Also use these whenever they help improve productivity. There's no need to exhaustively test generated C code related to every language feature and implementation change.", "labels_url": "https://api.github.com/repos/python/mypy/issues/68/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add test cases that test generated C code", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-28T17:59:01Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/68/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2013-01-28T15:42:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 67, "html_url": "https://github.com/python/mypy/issues/67", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/67", "id": 10379161, "events_url": "https://api.github.com/repos/python/mypy/issues/67/events", "updated_at": "2014-07-25T03:42:00Z", "body": "Currently the C back end allocates a fresh temporary (and a stack frame location) for each subexpression. This is very wasteful. Perform some simple reuse of temporaries in the\r\ngenerated code.\r\n\r\nAt this stage there is no need to use a fancy register allocation algorithm. Currently a simple approach is sufficient.", "labels_url": "https://api.github.com/repos/python/mypy/issues/67/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Reuse temporaries in the generated C code", "assignee": null, "closed_at": "2014-07-25T03:42:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/67/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-28T15:33:43Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 66, "html_url": "https://github.com/python/mypy/issues/66", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/66", "id": 10376214, "events_url": "https://api.github.com/repos/python/mypy/issues/66/events", "updated_at": "2014-07-25T03:41:52Z", "body": "The C code currently does not follow the conventions outlined in the wiki. Update the code to conform to the conventions. Also, perhaps the conventions should be more detailed.\r\n\r\nIt's probably best to postpone this task until the garbage collector and arbitrary-precision integer implementation have been integrated.\r\n\r\nAlso, to avoid breaking any branches, notify about this change at least 3 days before making it.", "labels_url": "https://api.github.com/repos/python/mypy/issues/66/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Update C code to follow conventions", "assignee": null, "closed_at": "2014-07-25T03:41:52Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/66/comments", "labels": [{"name": "refactoring", "color": "aaeeee", "url": "https://api.github.com/repos/python/mypy/labels/refactoring"}], "created_at": "2013-01-28T14:07:17Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 65, "html_url": "https://github.com/python/mypy/issues/65", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/65", "id": 10370996, "events_url": "https://api.github.com/repos/python/mypy/issues/65/events", "updated_at": "2013-02-05T22:16:42Z", "body": "We should decide which technical terms to prefer for various language constructs (etc.) in the source code and implementation documentation. This would make the code more consistent and easier to read. \r\n\r\nThese don't have to be the same as in user-facing documentation. For example, brevity might be more desirable than conformance to Python conventions.\r\n\r\nHere are some choices we need to make:\r\n\r\n * data attribute / field / data member / member variable\r\n * base class / superclass\r\n * base interface / implemented interface / superinterface\r\n * a subclass / a derived class\r\n * inherit / inherit from / extend (a class)\r\n * implement an interface / extend an interface / inherit an interface\r\n * attribute / member (for both data attributes and methods)\r\n * method / member function\r\n\r\nPlease state your preferences, if any, in comments. You can also propose additional concepts and terms.", "labels_url": "https://api.github.com/repos/python/mypy/issues/65/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Decide which technical terms to use and stick to them", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/65/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2013-01-28T10:47:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 64, "html_url": "https://github.com/python/mypy/issues/64", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/64", "id": 10369745, "events_url": "https://api.github.com/repos/python/mypy/issues/64/events", "updated_at": "2014-07-25T03:40:35Z", "body": "Currently the C back end recompiles all runtime support C code during each compile. This is obviously not desirable. Instead, it should be possible to compile the C code separately and just link it during compilation.", "labels_url": "https://api.github.com/repos/python/mypy/issues/64/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Better build system for C runtime files", "assignee": null, "closed_at": "2014-07-25T03:40:35Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/64/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-28T10:00:41Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 63, "html_url": "https://github.com/python/mypy/issues/63", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/63", "id": 10369636, "events_url": "https://api.github.com/repos/python/mypy/issues/63/events", "updated_at": "2014-07-25T03:41:42Z", "body": "Implement a minimal C extension API. It should be based on the Python C API, but it needs to be incompatible for these reasons:\r\n\r\n * We must support a precise moving gc.\r\n * The API must support real multithreading.\r\n * Is has to be efficient.\r\n * The API should probably also support multiple runtime instances (i.e. avoid C globals).\r\n * We want to support a \"compatibility Python C API\" as well later, so we will reserve the\r\n    Python C API symbols for this purpose. This compatibility API could be single-threaded\r\n    and less efficient in order to improve Python compatibility.", "labels_url": "https://api.github.com/repos/python/mypy/issues/63/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement minimal C extension API", "assignee": null, "closed_at": "2014-07-25T03:41:42Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/63/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-28T09:57:18Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 62, "html_url": "https://github.com/python/mypy/issues/62", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/62", "id": 10368706, "events_url": "https://api.github.com/repos/python/mypy/issues/62/events", "updated_at": "2014-07-25T03:41:28Z", "body": "Currently the generated C code can have name clashes, since the name mangling is too simplicistic.\r\n\r\nThe following requirements should be met by the mangling scheme:\r\n\r\n * most names are still human-understandable (preserve original identifiers in the names somehow most of the time)\r\n * no name clashes with VM symbols (e.g. use a different prefix)\r\n * generated names are unique in all programs (obviously)\r\n * generated names are stable and do not change arbitrarily as programs are modified (to support separate compilation)\r\n * generated names are not overly long (this is just for convenience; it also affects efficiency)\r\n\r\nA simple approach would be something like this:\r\n\r\n    <prefix><module><separator><kind><class><separator><member><overload>\r\n\r\nThe separator could perhaps be underscore if other underscores are suitably escaped. So the second overload variant of method foo of class bar.Zar could be encoded like this:\r\n\r\n    M_bar_CZar_foo_2\r\n\r\nHere 'C' signifies a class name (to distinguish from function name Zar_foo). Underscore in the member name would not have to be escaped (unless followed by a number), but elsewhere an underscore could be encoded as `U_`, for example.\r\n\r\nThe details of the scheme need to worked out, and the above idea is something simple I came up with in 10 minutes. An alternative is to use length-prefixed names instead of magic separators and escapes.\r\n\r\nOverloads are tricky. We could do it like in C++ and encode signature information in the overloads, but the names would be very long for types involving package names such as `mypackage.hasalso.subpackages`.\r\n\r\nIf new overloads are generally added as the last overload item, libraries can still retain binary compatibility even if they add overload variants. Besides, the order of overload variants matters sometimes anyway, so the order is conceptually part of the public interface.", "labels_url": "https://api.github.com/repos/python/mypy/issues/62/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Proper name mangling in the generated C code", "assignee": null, "closed_at": "2014-07-25T03:41:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/62/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-28T09:18:41Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 61, "html_url": "https://github.com/python/mypy/issues/61", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/61", "id": 10358474, "events_url": "https://api.github.com/repos/python/mypy/issues/61/events", "updated_at": "2015-07-26T21:31:06Z", "body": "If `a.py` contains\r\n\r\n```python\r\nimport b\r\nname = 'a'\r\nprint(b.name)\r\n```\r\n\r\nand `b.py` contains\r\n\r\n```python\r\nimport a\r\nname = 'b'\r\nprint(a.name)\r\n```\r\n\r\nthen mypy compiles `a.py` without error, but the generated python throws an error because of the circular import.\r\n\r\n(Found this one while refactoring mypy itself into packages)", "labels_url": "https://api.github.com/repos/python/mypy/issues/61/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Bad circular imports are not rejected", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/61/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-27T20:27:00Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "locked": false}, {"milestone": null, "number": 60, "html_url": "https://github.com/python/mypy/issues/60", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/60", "id": 10358195, "events_url": "https://api.github.com/repos/python/mypy/issues/60/events", "updated_at": "2015-07-02T20:17:11Z", "body": "The following is currently a parse error:\r\n\r\n```python\r\nfrom .a import b\r\n```", "labels_url": "https://api.github.com/repos/python/mypy/issues/60/labels{/name}", "comments": 14, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support relative imports", "assignee": null, "closed_at": "2014-12-07T22:49:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/60/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-01-27T20:06:05Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "locked": false}, {"milestone": null, "number": 59, "html_url": "https://github.com/python/mypy/issues/59", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/59", "id": 10353404, "events_url": "https://api.github.com/repos/python/mypy/issues/59/events", "updated_at": "2014-12-08T00:40:47Z", "body": "The compiler rejects `1j` for example as `Invalid numeric literal`.", "labels_url": "https://api.github.com/repos/python/mypy/issues/59/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support complex number literals", "assignee": null, "closed_at": "2014-12-08T00:40:47Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/59/comments", "labels": [{"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}, {"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-01-27T12:33:43Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "locked": false}, {"milestone": null, "number": 58, "html_url": "https://github.com/python/mypy/pull/58", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/58", "id": 10345471, "events_url": "https://api.github.com/repos/python/mypy/issues/58/events", "updated_at": "2013-01-28T09:46:32Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/58/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "add stubs-auto directory & fix #34", "assignee": null, "closed_at": "2013-01-28T09:46:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/58/comments", "labels": [], "created_at": "2013-01-27T00:21:41Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/58.patch", "html_url": "https://github.com/python/mypy/pull/58", "diff_url": "https://github.com/python/mypy/pull/58.diff", "url": "https://api.github.com/repos/python/mypy/pulls/58"}, "locked": false}, {"milestone": null, "number": 57, "html_url": "https://github.com/python/mypy/issues/57", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/57", "id": 10343596, "events_url": "https://api.github.com/repos/python/mypy/issues/57/events", "updated_at": "2013-02-12T08:38:24Z", "body": "The following example causes the compiler to get into an infinite loop in `check_unique_interface_implementations`:\r\n\r\n```python\r\nclass A(A):\r\n    pass\r\n```\r\n\r\nCPython gives the following error for the same case:\r\n\r\n    NameError: name 'A' is not defined ", "labels_url": "https://api.github.com/repos/python/mypy/issues/57/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "circular definitions cause compiler to hang", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-12T08:38:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/57/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-26T21:38:48Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "locked": false}, {"milestone": null, "number": 56, "html_url": "https://github.com/python/mypy/issues/56", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/56", "id": 10309496, "events_url": "https://api.github.com/repos/python/mypy/issues/56/events", "updated_at": "2013-01-25T17:07:11Z", "body": "Update icode generation to support basic class features (in statically typed code):\r\n\r\n  * simple methods\r\n  * attributes\r\n  * instance construction", "labels_url": "https://api.github.com/repos/python/mypy/issues/56/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Generate icode for basic classes", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-25T17:07:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/56/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T12:38:54Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 55, "html_url": "https://github.com/python/mypy/issues/55", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/55", "id": 10309302, "events_url": "https://api.github.com/repos/python/mypy/issues/55/events", "updated_at": "2014-07-25T03:40:55Z", "body": "The C back end currently aborts the program if an integer operation would overflow a C fixed-width integer. Add support for arbitrary-precision integer arithmetic. (Actually, it currently aborts sometimes even if there is no overflow, as the overflow detection is a bit rudimentary.)\r\n\r\nPotentially port the arbitrary-precision integer code from the Alore VM, as it already plays nicely with a precise garbage collector.", "labels_url": "https://api.github.com/repos/python/mypy/issues/55/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support arbitrary-precision integers in the C back end", "assignee": null, "closed_at": "2014-07-25T03:40:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/55/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T12:31:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 54, "html_url": "https://github.com/python/mypy/issues/54", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/54", "id": 10309220, "events_url": "https://api.github.com/repos/python/mypy/issues/54/events", "updated_at": "2014-07-25T03:40:25Z", "body": "The current runtime does not include a garbage collector (gc). Integrate the precise copying / incremental mark-sweep gc from the Alore VM. \r\n\r\nNote that the C code generator implementation already includes some preparations for precise garbage collection. In particular, function stack frames are kept visible to the gc.", "labels_url": "https://api.github.com/repos/python/mypy/issues/54/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add garbage collector", "assignee": null, "closed_at": "2014-07-25T03:40:25Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/54/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T12:28:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 53, "html_url": "https://github.com/python/mypy/issues/53", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/53", "id": 10307925, "events_url": "https://api.github.com/repos/python/mypy/issues/53/events", "updated_at": "2014-07-25T03:49:54Z", "body": "Interfaces should be able to declare data attributes. However, a class must implement them explicitly (a base class can also implement them).\r\n\r\nThis should be valid:\r\n\r\n    interface A:\r\n        int x\r\n    class B(A):\r\n        int x\r\n    A a = B()\r\n    a.x = 4\r\n\r\nThis should be rejected:\r\n\r\n    interface A:\r\n        int x\r\n    class B(A): pass # does not define 'x'\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/53/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support interface data attributes", "assignee": null, "closed_at": "2014-07-25T03:49:54Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/53/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T11:32:01Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 52, "html_url": "https://github.com/python/mypy/issues/52", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/52", "id": 10307858, "events_url": "https://api.github.com/repos/python/mypy/issues/52/events", "updated_at": "2013-01-30T13:24:24Z", "body": "An interface that defines `__init__` should be rejected. Only classes can have constructors.", "labels_url": "https://api.github.com/repos/python/mypy/issues/52/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow __init__ in interfaces", "assignee": null, "closed_at": "2013-01-30T13:24:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/52/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-25T11:29:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 51, "html_url": "https://github.com/python/mypy/issues/51", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/51", "id": 10307772, "events_url": "https://api.github.com/repos/python/mypy/issues/51/events", "updated_at": "2015-05-17T18:01:27Z", "body": "Currently interfaces with default method implementations are not supported. For example,\r\nthis code is rejected:\r\n\r\n    interface A:\r\n        def f(self): return 1\r\n    class B(A): pass\r\n\r\nAlso, it should be an error if multiple implemented interfaces have a default implementation\r\nfor a method, but the class and its base classes don't defined the method.", "labels_url": "https://api.github.com/repos/python/mypy/issues/51/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support interfaces with default method implementations", "assignee": null, "closed_at": "2015-05-17T18:01:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/51/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T11:26:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 50, "html_url": "https://github.com/python/mypy/issues/50", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/50", "id": 10307677, "events_url": "https://api.github.com/repos/python/mypy/issues/50/events", "updated_at": "2013-02-11T10:36:27Z", "body": "It should not be possible to extend int and float. This code is accepted now, but it should be rejected by the type checker:\r\n\r\n    class n(int): pass\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/50/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Disallow int and float as base classes", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-11T10:36:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/50/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-25T11:22:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 49, "html_url": "https://github.com/python/mypy/issues/49", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/49", "id": 10307462, "events_url": "https://api.github.com/repos/python/mypy/issues/49/events", "updated_at": "2013-01-26T13:24:50Z", "body": "Add support for global variables to the C back end.", "labels_url": "https://api.github.com/repos/python/mypy/issues/49/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support global variables in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-26T13:24:50Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/49/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T11:13:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 48, "html_url": "https://github.com/python/mypy/issues/48", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/48", "id": 10307422, "events_url": "https://api.github.com/repos/python/mypy/issues/48/events", "updated_at": "2013-01-31T09:47:17Z", "body": "Add basic support for implementation inheritance in statically typed code to the C back end. The basic support only includes inheritance between non-generic classes.", "labels_url": "https://api.github.com/repos/python/mypy/issues/48/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support simple inheritance in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-31T09:47:17Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/48/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T11:12:10Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 47, "html_url": "https://github.com/python/mypy/issues/47", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/47", "id": 10307397, "events_url": "https://api.github.com/repos/python/mypy/issues/47/events", "updated_at": "2014-07-25T03:40:46Z", "body": "Add support for statically typed generic types in the C back end. In particular, add a simple, unoptimized list implementation with a few methods.", "labels_url": "https://api.github.com/repos/python/mypy/issues/47/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support simple generic types in the C back end", "assignee": null, "closed_at": "2014-07-25T03:40:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/47/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T11:10:57Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 46, "html_url": "https://github.com/python/mypy/issues/46", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/46", "id": 10307359, "events_url": "https://api.github.com/repos/python/mypy/issues/46/events", "updated_at": "2013-01-29T16:31:26Z", "body": "Support statically typed `__init__` methods in the C back end.", "labels_url": "https://api.github.com/repos/python/mypy/issues/46/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support __init__ method in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-29T16:31:26Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/46/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T11:09:23Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 45, "html_url": "https://github.com/python/mypy/issues/45", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/45", "id": 10307339, "events_url": "https://api.github.com/repos/python/mypy/issues/45/events", "updated_at": "2013-01-28T17:59:39Z", "body": "Support statically typed methods in the C back end.\r\n\r\nCode like this should work:\r\n\r\n    class A:\r\n        void f(self, int x):\r\n            print(x + 1)\r\n    a = A()\r\n    a.f(4)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/45/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support simple methods in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-28T17:59:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/45/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T11:08:30Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 44, "html_url": "https://github.com/python/mypy/issues/44", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/44", "id": 10307303, "events_url": "https://api.github.com/repos/python/mypy/issues/44/events", "updated_at": "2013-01-29T13:17:32Z", "body": "Add C back end support for simple statically typed classes which contain attributes only. For example, this code should work:\r\n\r\n    class A:\r\n        int x\r\n    a = A()\r\n    a.x = 5\r\n    print(a.x)\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/44/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support simple classes in the C back end", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-29T13:17:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/44/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-25T11:07:00Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 43, "html_url": "https://github.com/python/mypy/issues/43", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/43", "id": 10279526, "events_url": "https://api.github.com/repos/python/mypy/issues/43/events", "updated_at": "2015-02-28T23:52:49Z", "body": "A tool to generate module stubs from python files.\r\nFrom http://www.mypy-lang.org/wiki/StubGeneratorTool", "labels_url": "https://api.github.com/repos/python/mypy/issues/43/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Stub Generator Tool", "assignee": null, "closed_at": "2015-02-28T23:52:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/43/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-24T16:44:44Z", "user": {"followers_url": "https://api.github.com/users/Varriount/followers", "gists_url": "https://api.github.com/users/Varriount/gists{/gist_id}", "html_url": "https://github.com/Varriount", "following_url": "https://api.github.com/users/Varriount/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/524596?v=3", "url": "https://api.github.com/users/Varriount", "organizations_url": "https://api.github.com/users/Varriount/orgs", "starred_url": "https://api.github.com/users/Varriount/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Varriount/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Varriount/subscriptions", "login": "Varriount", "repos_url": "https://api.github.com/users/Varriount/repos", "received_events_url": "https://api.github.com/users/Varriount/received_events", "id": 524596, "site_admin": false}, "locked": false}, {"milestone": null, "number": 42, "html_url": "https://github.com/python/mypy/issues/42", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/42", "id": 10247299, "events_url": "https://api.github.com/repos/python/mypy/issues/42/events", "updated_at": "2014-07-24T05:13:43Z", "body": "Mypy currently lacks support for function and class decorators.\r\n(Sorry if the example is wrong, still learning mypy syntax)\r\nEx.\r\nFunction decorate(Function f):\r\n    f.return foo():\r\n        print(\"hi\")\r\n       return f()\r\n@decorate\r\nvoid foo():\r\n    print(\"hi\")", "labels_url": "https://api.github.com/repos/python/mypy/issues/42/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Add support for decorators", "assignee": null, "closed_at": "2014-07-24T05:13:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/42/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-23T19:45:08Z", "user": {"followers_url": "https://api.github.com/users/Varriount/followers", "gists_url": "https://api.github.com/users/Varriount/gists{/gist_id}", "html_url": "https://github.com/Varriount", "following_url": "https://api.github.com/users/Varriount/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/524596?v=3", "url": "https://api.github.com/users/Varriount", "organizations_url": "https://api.github.com/users/Varriount/orgs", "starred_url": "https://api.github.com/users/Varriount/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/Varriount/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/Varriount/subscriptions", "login": "Varriount", "repos_url": "https://api.github.com/users/Varriount/repos", "received_events_url": "https://api.github.com/users/Varriount/received_events", "id": 524596, "site_admin": false}, "locked": false}, {"milestone": null, "number": 41, "html_url": "https://github.com/python/mypy/issues/41", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/41", "id": 10185427, "events_url": "https://api.github.com/repos/python/mypy/issues/41/events", "updated_at": "2013-02-04T12:29:02Z", "body": "Currently the implementation does not use packages, because the Python translator does not support them yet (#24). Refactor the implementation to use packages.\r\n\r\nThe first step could be to translate all modules m into modules mypy.m (e.g. mypy.build). Later on, we could use a deeper hierarchy (e.g. mypy.checker.expressions, mypy.transform.functions).\r\n\r\nAlso rename mtypes to mypy.types (the name mtypes was used to avoid name clash with the types module).", "labels_url": "https://api.github.com/repos/python/mypy/issues/41/labels{/name}", "comments": 10, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Refactor code into packages", "assignee": null, "closed_at": "2013-02-04T12:29:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/41/comments", "labels": [{"name": "task", "color": "02e10c", "url": "https://api.github.com/repos/python/mypy/labels/task"}], "created_at": "2013-01-22T09:21:35Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 40, "html_url": "https://github.com/python/mypy/issues/40", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/40", "id": 10094775, "events_url": "https://api.github.com/repos/python/mypy/issues/40/events", "updated_at": "2013-02-11T14:38:43Z", "body": "There are no type check errors reported for the following code:\r\n\r\n    import re\r\n    re()        # Should be an error\r\n    int x = re  # Should be an error\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/40/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid operations on module objects allowed by type checker", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-11T14:38:43Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/40/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-18T11:02:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 39, "html_url": "https://github.com/python/mypy/issues/39", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/39", "id": 9945639, "events_url": "https://api.github.com/repos/python/mypy/issues/39/events", "updated_at": "2014-08-25T02:03:00Z", "body": "The type inference of the final line in this example fails:\r\n\r\n    class A(SupportsAbs[float]):\r\n        def __abs__(self) -> float: return 5.5\r\n    \r\n    print(abs(A()))        # Error\r\n\r\nThe abs type argument should be inferred automatically.", "labels_url": "https://api.github.com/repos/python/mypy/issues/39/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference of abs with user-defined argument type fails", "assignee": null, "closed_at": "2014-08-25T02:03:00Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/39/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "priority", "color": "f7c6c7", "url": "https://api.github.com/repos/python/mypy/labels/priority"}], "created_at": "2013-01-14T15:35:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 38, "html_url": "https://github.com/python/mypy/issues/38", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/38", "id": 9852113, "events_url": "https://api.github.com/repos/python/mypy/issues/38/events", "updated_at": "2013-02-11T14:38:44Z", "body": "The following code is rejected by the type checker, even though it's valid Python:\r\n\r\n    import re\r\n    print(re.__doc__)   # type check fails; no __doc__ attribute\r\n\r\nThe docstring attributes of modules, functions and classes should be accessible.\r\n\r\nAs a workaround, you can cast the module object to any:\r\n\r\n    import re\r\n    print(((any)re).__doc__)   # works", "labels_url": "https://api.github.com/repos/python/mypy/issues/38/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "It should be possible to access __doc__ attributes (etc) in statically typed code", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-11T14:38:44Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/38/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2013-01-10T17:39:10Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 37, "html_url": "https://github.com/python/mypy/issues/37", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/37", "id": 9851958, "events_url": "https://api.github.com/repos/python/mypy/issues/37/events", "updated_at": "2013-06-27T16:56:49Z", "body": "When the Python back end inserts imports, they are always at the beginning of the generated file. This breaks module docstrings. The imports should be inserted only after the docstring.\r\n\r\nAlso imports should be inserted after an initial comment such as #!/usr/..., as a #! comment only has any significance as the first line.\r\n\r\nExample 1:\r\n\r\n    \"\"\"docstring\"\"\"\r\n    x = Sized  # imports collections in generated Python code\r\n\r\nGenerated code:\r\n\r\n    import collections as __collections\r\n    \"\"\"docstring\"\"\"\r\n    x = __collections.Sized  # imports collections in generated Python code\r\n\r\nExample 2:\r\n\r\n    #!/usr/bin/...\r\n    x = Sized\r\n\r\n(the generated code is similar to example 1)", "labels_url": "https://api.github.com/repos/python/mypy/issues/37/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "The Python back end inserts import statements before the module docstring and initial comment", "assignee": null, "closed_at": "2013-06-27T16:56:49Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/37/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-10T17:34:47Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 36, "html_url": "https://github.com/python/mypy/issues/36", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/36", "id": 9851501, "events_url": "https://api.github.com/repos/python/mypy/issues/36/events", "updated_at": "2013-01-22T09:23:11Z", "body": "The parser parses `list<list<int>>()` as an expression involving < and >> operators, but it should construct an int[][] instance.\r\n\r\nThe bug affects other nested generic types as well, not just lists.", "labels_url": "https://api.github.com/repos/python/mypy/issues/36/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid parse result for expressions such as list<list<int>>()", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-22T09:23:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/36/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2013-01-10T17:22:44Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 35, "html_url": "https://github.com/python/mypy/issues/35", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/35", "id": 9466001, "events_url": "https://api.github.com/repos/python/mypy/issues/35/events", "updated_at": "2013-01-14T15:25:38Z", "body": "It would be nice to be able to \"self reference\" local methods and variables/fields so that you can write the type definition once and refer to it elsewhere in the class definition.\r\n\r\nIf that's not easily doable, an informative error message would be preferable over a stack trace :-)\r\n\r\nclass A:\r\n  int b\r\n  void __init__(A self, A.b b):\r\n    print(b + 2)\r\n\r\nExpected output:\r\nb is defined as int, the print statement outputs the sum of b + 2.\r\n\r\nReceived output:\r\n\r\nTraceback (most recent call last):\r\n  File \"../../mypy-py/mypy.py\", line 138, in <module>\r\n    main()\r\n  File \"../../mypy-py/mypy.py\", line 52, in main\r\n    True)\r\n  File \"/home/toor/mypydev/mypy-py/build.py\", line 99, in build\r\n    return manager.process(UnprocessedFile(info, program_text))\r\n  File \"/home/toor/mypydev/mypy-py/build.py\", line 180, in process\r\n    next.process()\r\n  File \"/home/toor/mypydev/mypy-py/build.py\", line 516, in process\r\n    self.sem_analyzer().visit_file(self.tree, self.tree.path)\r\n  File \"/home/toor/mypydev/mypy-py/semanal.py\", line 170, in visit_file\r\n    d.accept(self)\r\n  File \"/home/toor/mypydev/mypy-py/nodes.py\", line 321, in accept\r\n    return visitor.visit_type_def(self)\r\n  File \"/home/toor/mypydev/mypy-py/semanal.py\", line 281, in visit_type_def\r\n    defn.defs.accept(self)\r\n  File \"/home/toor/mypydev/mypy-py/nodes.py\", line 386, in accept\r\n    return visitor.visit_block(self)\r\n  File \"/home/toor/mypydev/mypy-py/semanal.py\", line 351, in visit_block\r\n    s.accept(self)\r\n  File \"/home/toor/mypydev/mypy-py/nodes.py\", line 255, in accept\r\n    return visitor.visit_func_def(self)\r\n  File \"/home/toor/mypydev/mypy-py/semanal.py\", line 188, in visit_func_def\r\n    self.analyse_function(defn)\r\n  File \"/home/toor/mypydev/mypy-py/semanal.py\", line 209, in analyse_function\r\n    defn.typ.accept(self)\r\n  File \"/home/toor/mypydev/mypy-py/nodes.py\", line 907, in accept\r\n    return visitor.visit_annotation(self)\r\n  File \"/home/toor/mypydev/mypy-py/semanal.py\", line 300, in visit_annotation\r\n    ann.typ = self.anal_type(ann.typ)\r\n  File \"/home/toor/mypydev/mypy-py/semanal.py\", line 382, in anal_type\r\n    return t.accept(a)\r\n  File \"/home/toor/mypydev/mypy-py/mtypes.py\", line 208, in accept\r\n    return visitor.visit_callable(self)\r\n  File \"/home/toor/mypydev/mypy-py/typeanal.py\", line 81, in visit_callable\r\n    res = Callable(self.anal_array(t.arg_types),\r\n  File \"/home/toor/mypydev/mypy-py/typeanal.py\", line 98, in anal_array\r\n    res.append(t.accept(self))\r\n  File \"/home/toor/mypydev/mypy-py/mtypes.py\", line 38, in accept\r\n    return visitor.visit_unbound_type(self)\r\n  File \"/home/toor/mypydev/mypy-py/typeanal.py\", line 20, in visit_unbound_type\r\n    sym = self.lookup(t.name, t)\r\n  File \"/home/toor/mypydev/mypy-py/semanal.py\", line 704, in lookup_qualified\r\n    n = (n.node).names.get(parts[i], None)\r\nAttributeError: 'TypeInfo' object has no attribute 'names'", "labels_url": "https://api.github.com/repos/python/mypy/issues/35/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Copy type definition from local variables/methods in class definitions", "assignee": null, "closed_at": "2013-01-14T15:25:38Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/35/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-21T14:21:52Z", "user": {"followers_url": "https://api.github.com/users/khukri/followers", "gists_url": "https://api.github.com/users/khukri/gists{/gist_id}", "html_url": "https://github.com/khukri", "following_url": "https://api.github.com/users/khukri/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3095014?v=3", "url": "https://api.github.com/users/khukri", "organizations_url": "https://api.github.com/users/khukri/orgs", "starred_url": "https://api.github.com/users/khukri/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/khukri/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/khukri/subscriptions", "login": "khukri", "repos_url": "https://api.github.com/users/khukri/repos", "received_events_url": "https://api.github.com/users/khukri/received_events", "id": 3095014, "site_admin": false}, "locked": false}, {"milestone": null, "number": 34, "html_url": "https://github.com/python/mypy/issues/34", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/34", "id": 9432508, "events_url": "https://api.github.com/repos/python/mypy/issues/34/events", "updated_at": "2013-01-28T09:46:53Z", "body": "The code\r\n\r\n    void f(str na):\r\n        pass\r\n\r\ngets translated into\r\n\r\n    def f( na):\r\n        pass\r\n\r\nThere should not a space before `na`. \r\n\r\nNote that if `na` is replaced with `n`, the extra space is no longer generated.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/34/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Extra space in generated Python code", "assignee": null, "closed_at": "2013-01-28T09:46:53Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/34/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-20T12:26:18Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 33, "html_url": "https://github.com/python/mypy/issues/33", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/33", "id": 9365050, "events_url": "https://api.github.com/repos/python/mypy/issues/33/events", "updated_at": "2014-07-25T03:31:39Z", "body": "The use of bytes and bytearray in the library stubs is inconsistent. Some modules do not properly support bytes objects (e.g. os) even though they work in Python. \r\n\r\nAlso some Python functions accept only bytes objects, but others accept bytearrays as well. This needs to be reflected in the library stubs (however, Python documentation is not always explicit about this, which complicates the issue).", "labels_url": "https://api.github.com/repos/python/mypy/issues/33/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Use bytes and bytearray consistently in the library stubs", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/33/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "stubs", "color": "bfe5bf", "url": "https://api.github.com/repos/python/mypy/labels/stubs"}], "created_at": "2012-12-18T11:48:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 32, "html_url": "https://github.com/python/mypy/issues/32", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/32", "id": 9364898, "events_url": "https://api.github.com/repos/python/mypy/issues/32/events", "updated_at": "2015-12-29T17:21:59Z", "body": "The type checker cannot infer the type of the list in this example:\r\n\r\n    str[] x\r\n    x = [None] * 5   # Cannot infer correct type (str[]) for [None]\r\n\r\nInstead, the type has to be spelled out explicitly, which is inconvenient:\r\n\r\n    x = <str> [None] * 5\r\n\r\nThe type checker should infer the type correctly based on context.", "labels_url": "https://api.github.com/repos/python/mypy/issues/32/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Type inference of expressions such as [None] * n often produces incorrect results", "assignee": null, "closed_at": "2015-12-29T17:21:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/32/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-18T11:40:52Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 31, "html_url": "https://github.com/python/mypy/issues/31", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/31", "id": 9364433, "events_url": "https://api.github.com/repos/python/mypy/issues/31/events", "updated_at": "2012-12-18T11:18:15Z", "body": "Currently there is no documentation for Python standard library modules, other than a list of supported modules in the wiki. Users will have to rely on Python documentation. This is generally fine, but sometimes it's not obvious how some things translate to mypy. Additionally some Python library features are not supported yet in the stubs.\r\n\r\nWe should generate automatically HTML documentation based on the library stubs. They don't have to duplicate the Python library reference (at least initially; this would be good to have later in the project). There should be at least the following information per module:\r\n\r\n - all variables, functions, types and methods defined in the module, including their static types\r\n - link to relevevant information in the Python library reference (version 3.2)\r\n - additional notes about things that are different from Python or that might not be obvious to the reader (these notes could be stored in a separate file and merged automatically when building the HTML files)\r\n\r\nAdditionally there should be a contents page that lists all supported modules.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/31/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document library modules", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/31/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2012-12-18T11:18:15Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 30, "html_url": "https://github.com/python/mypy/issues/30", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/30", "id": 9364176, "events_url": "https://api.github.com/repos/python/mypy/issues/30/events", "updated_at": "2014-07-14T19:44:59Z", "body": "Interfaces such as `Iterable` and `Sized` that are defined in the mypy builtins are actually defined in the collections module in Python. Currently references to them are not translated correctly to Python:\r\n\r\n    class A(Sized): ...\r\n\r\ngets translated into\r\n\r\n    class A(Sized): ...\r\n\r\nwhich is invalid. It should be translated into something like this:\r\n\r\n    import collections as __collections\r\n    class A(__collections.Sized): ...\r\n\r\nThis affects all references to the interfaces, including these:\r\n\r\n - as base type in class or interface definition\r\n - as argument type in overloaded function\r\n - in an isinstance check", "labels_url": "https://api.github.com/repos/python/mypy/issues/30/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "References to built-in interfaces such as Iterable are not translated correctly", "assignee": null, "closed_at": "2014-07-14T19:44:59Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/30/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-18T11:07:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 29, "html_url": "https://github.com/python/mypy/issues/29", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/29", "id": 9315622, "events_url": "https://api.github.com/repos/python/mypy/issues/29/events", "updated_at": "2014-07-25T03:43:12Z", "body": "An assertion such as \r\n\r\n    assert (c, s)\r\n\r\n is always true, even though the programmer probably intended\r\n\r\n    assert c, s\r\n\r\nGive a warning if using the first form (like Python does).", "labels_url": "https://api.github.com/repos/python/mypy/issues/29/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give warning for assert (c, s)", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/29/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-16T12:17:08Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 28, "html_url": "https://github.com/python/mypy/issues/28", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/28", "id": 9268586, "events_url": "https://api.github.com/repos/python/mypy/issues/28/events", "updated_at": "2015-12-12T22:21:01Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/28/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "time.py stub missing", "assignee": null, "closed_at": "2013-01-21T21:23:48Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/28/comments", "labels": [], "created_at": "2012-12-13T22:11:08Z", "user": {"followers_url": "https://api.github.com/users/ron-mypy/followers", "gists_url": "https://api.github.com/users/ron-mypy/gists{/gist_id}", "html_url": "https://github.com/ron-mypy", "following_url": "https://api.github.com/users/ron-mypy/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/3002833?v=3", "url": "https://api.github.com/users/ron-mypy", "organizations_url": "https://api.github.com/users/ron-mypy/orgs", "starred_url": "https://api.github.com/users/ron-mypy/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ron-mypy/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ron-mypy/subscriptions", "login": "ron-mypy", "repos_url": "https://api.github.com/users/ron-mypy/repos", "received_events_url": "https://api.github.com/users/ron-mypy/received_events", "id": 3002833, "site_admin": false}, "locked": false}, {"milestone": null, "number": 27, "html_url": "https://github.com/python/mypy/issues/27", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/27", "id": 9253909, "events_url": "https://api.github.com/repos/python/mypy/issues/27/events", "updated_at": "2013-02-11T14:38:56Z", "body": "Type checking this code\r\n\r\n    def f(): pass\r\n    def g(): pass\r\n    def g(a): pass\r\n    f.x\r\n    g.x\r\n\r\nproduces these errors\r\n\r\n    t.py, line 4: function has no member \"x\"\r\n    t.py, line 5: object has no member \"x\"\r\n\r\nNote that the error messages are different, even though both refer to functions (the first message refers to an ordinary function, the second to an overloaded function).\r\n\r\nIt would be better if the error message were consistent.", "labels_url": "https://api.github.com/repos/python/mypy/issues/27/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Inconsistent error messages for overloaded functions", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-11T14:38:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/27/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-13T14:50:17Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 26, "html_url": "https://github.com/python/mypy/issues/26", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/26", "id": 9252894, "events_url": "https://api.github.com/repos/python/mypy/issues/26/events", "updated_at": "2013-01-10T10:27:05Z", "body": "Consider this program\r\n\r\n    import m\r\n    m.f([])\r\n\r\nassuming this module m:\r\n\r\n    void f(any[] x): print('list')\r\n    void f(int y): print('int')\r\n\r\nWhen running the program, Python raises an exception:\r\n\r\n    File \"...m.py\", line 7, in f\r\n        if isinstance(x, __builtins__.list):\r\n    AttributeError: 'dict' object has no attribute 'list'\r\n\r\nApparently we can't use `__builtins__` to refer to the type object `list`. However, the above function `f` works if it is in the main file of a program instead of a module (strange).\r\n\r\nRelevant discussion (Python 2 specific, though):\r\n\r\nhttp://stackoverflow.com/questions/1184016/why-builtins-is-both-module-and-dict\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/26/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Overloading with list types does not work in modules", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-01-10T10:27:05Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/26/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-13T14:11:40Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 25, "html_url": "https://github.com/python/mypy/issues/25", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/25", "id": 9251247, "events_url": "https://api.github.com/repos/python/mypy/issues/25/events", "updated_at": "2015-05-17T17:52:41Z", "body": "Currently the stubs are only searched automatically from the directory stubs below the directory containing (the translated) mypy.py. It would be useful to also look for stubs in a directory relative to the program being type checked/run.\r\n\r\nFor example, consider the following hierarchy:\r\n\r\n    d/foo.py\r\n    d/stubs/mylib.py\r\n\r\nNow if d/foo.py does `import mylib`, it should refer to the mylib.py file in the stubs directory under d. `stubs` is a magic directory name for stubs.", "labels_url": "https://api.github.com/repos/python/mypy/issues/25/labels{/name}", "comments": 4, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Make it possible to use local stubs", "assignee": null, "closed_at": "2015-05-17T17:52:41Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/25/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-13T13:06:04Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 24, "html_url": "https://github.com/python/mypy/issues/24", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/24", "id": 9250730, "events_url": "https://api.github.com/repos/python/mypy/issues/24/events", "updated_at": "2015-12-12T22:20:58Z", "body": "The translator to Python should support packages (nested modules). \r\n\r\nThe type checker already supports packages.", "labels_url": "https://api.github.com/repos/python/mypy/issues/24/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support translating packages", "assignee": null, "closed_at": "2013-02-04T12:23:22Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/24/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-13T12:41:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 23, "html_url": "https://github.com/python/mypy/issues/23", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/23", "id": 9250693, "events_url": "https://api.github.com/repos/python/mypy/issues/23/events", "updated_at": "2013-02-04T16:06:40Z", "body": "Similar to Python, mypy.py should support running a module as a script with the `-m` command line argument.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/23/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Support -m command line argument for running a module as a script", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-04T16:06:40Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/23/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-13T12:39:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 22, "html_url": "https://github.com/python/mypy/issues/22", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/22", "id": 9250638, "events_url": "https://api.github.com/repos/python/mypy/issues/22/events", "updated_at": "2013-06-27T16:57:27Z", "body": "This code\r\n\r\n    void f(x,  # Foo\r\n           int y):\r\n        pass\r\n\r\ngets translated into\r\n\r\n    def f(x, y):\r\n        pass\r\n\r\nNote that the line break, spaces and comment before `int y` are omitted. The translation should preserve the line break, whitespace and comments in this case and only remove the type `int`.\r\n\r\nThe translation works correctly if we remove the type `int` from the source program.\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/22/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Whitespace and comments in argument lists are sometimes omitted in translation", "assignee": null, "closed_at": "2013-06-27T16:57:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/22/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-13T12:37:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 21, "html_url": "https://github.com/python/mypy/issues/21", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/21", "id": 9250460, "events_url": "https://api.github.com/repos/python/mypy/issues/21/events", "updated_at": "2013-07-23T12:07:24Z", "body": "This code is rejected by the type checker, even though return without an argument is valid inside generator in Python:\r\n\r\n    from typing import Iterator\r\n\r\n    def f() -> Iterator[int]:\r\n        yield 1\r\n        return # Error\r\n\r\nThe compiler should accept the above code.", "labels_url": "https://api.github.com/repos/python/mypy/issues/21/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Allow return without argument in generator", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-07-23T12:07:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/21/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-13T12:29:43Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 20, "html_url": "https://github.com/python/mypy/issues/20", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/20", "id": 9250405, "events_url": "https://api.github.com/repos/python/mypy/issues/20/events", "updated_at": "2016-01-20T23:23:39Z", "body": "The following is accepted by the compiler, even though it is not valid in Python:\r\n\r\n    def f():\r\n        yield 1\r\n        return 1\r\n\r\nThere should be a compile error if mixing return with an argument and yield within the same function.\r\n\r\n**Update: only disallow this in Python 2 (see below).**", "labels_url": "https://api.github.com/repos/python/mypy/issues/20/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Do not allow returns with arguments in generators", "assignee": null, "closed_at": "2016-01-20T23:23:39Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/20/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2012-12-13T12:27:02Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 19, "html_url": "https://github.com/python/mypy/issues/19", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/19", "id": 9250245, "events_url": "https://api.github.com/repos/python/mypy/issues/19/events", "updated_at": "2014-07-25T03:43:11Z", "body": "If we introduce `__init__` with `def`, the compiler complains if an argument has an explicit type:\r\n\r\n    class A:\r\n        def __init__(self, int x): pass\r\n\r\n    t.py: In member \"__init__\" of class \"A\":\r\n    t.py, line 2: Cannot define return type for \"__init__\"\r\n\r\nThis should be valid, since it works for other methods and can be useful with overloading.\r\n\r\nMore generally, the return type of `__init__` should be allowed to be `void` or `any` only.", "labels_url": "https://api.github.com/repos/python/mypy/issues/19/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Dynamically typed __init__ with argument types rejected", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/19/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-13T12:19:49Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 18, "html_url": "https://github.com/python/mypy/issues/18", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/18", "id": 9249128, "events_url": "https://api.github.com/repos/python/mypy/issues/18/events", "updated_at": "2013-02-06T16:39:09Z", "body": "This code\r\n\r\n    void f(int x, str y='x'): print(1)\r\n    void f(str x): print(2)\r\n\r\n    f(1)\r\n    f('x')\r\n\r\nis translated into\r\n\r\n    def f(x, *args):\r\n        def f1(x, y='x'): print(1)\r\n        def f2(x): print(2)\r\n\r\n        if len(args) == 0 and isinstance(x, int) and isinstance(args[0], str):   # INVALID\r\n            return f1(x, args[0])\r\n        elif len(args) == 0 and isinstance(x, str):\r\n            return f2(x)\r\n        else:\r\n            raise TypeError(\"Invalid argument types\")\r\n\r\n    f(1)\r\n    f('x')\r\n\r\nNote the # INVALID comment: the tuple index is out of range. \r\n\r\nFor optional arguments, there should 2 or more `if` cases in the dispatcher, for example:\r\n\r\n    ...\r\n        if len(args) == 0 and isinstance(x, int):\r\n            return f1(x)\r\n        elif len(args) == 1 and isinstance(x, int) and isinstance(args[0], str):\r\n            return f1(x, args[0])\r\n    ...\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/18/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid Python generated for overload with optional arg", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-06T16:39:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/18/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-13T11:28:12Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 17, "html_url": "https://github.com/python/mypy/issues/17", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/17", "id": 9248480, "events_url": "https://api.github.com/repos/python/mypy/issues/17/events", "updated_at": "2013-01-10T09:12:32Z", "body": "The type checker cannot properly deal with `or` and `and` operators (it infers the results to be bool, which is obviously very bad).", "labels_url": "https://api.github.com/repos/python/mypy/issues/17/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid type inferred for 'or' and 'and' expressions", "assignee": null, "closed_at": "2013-01-10T09:12:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/17/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-13T10:58:34Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 16, "html_url": "https://github.com/python/mypy/issues/16", "state": "open", "url": "https://api.github.com/repos/python/mypy/issues/16", "id": 9217677, "events_url": "https://api.github.com/repos/python/mypy/issues/16/events", "updated_at": "2016-02-27T09:23:20Z", "body": "For example, the following program should not be accepted:\r\n\r\n    class A:\r\n        def f(self: Any): pass\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/16/labels{/name}", "comments": 2, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Report error if self has explicit type", "assignee": null, "closed_at": null, "comments_url": "https://api.github.com/repos/python/mypy/issues/16/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2012-12-12T14:39:59Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 15, "html_url": "https://github.com/python/mypy/issues/15", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/15", "id": 9185325, "events_url": "https://api.github.com/repos/python/mypy/issues/15/events", "updated_at": "2012-12-14T13:34:09Z", "body": "Currently function types are invariant with respect to argument types. This makes it impossible to use some useful and common idioms, for example:\r\n\r\n    print(list(map(str, [1, 2, 3])))\r\n\r\nFunction subtyping (and type inference, if needed) should be modified so that the above code works.\r\n\r\nHowever, argument types should perhaps still be invariant in overriding to avoid complications with overloading.", "labels_url": "https://api.github.com/repos/python/mypy/issues/15/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Arguments in function types should be contravariant", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2012-12-14T13:34:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/15/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-11T16:34:11Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 14, "html_url": "https://github.com/python/mypy/issues/14", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/14", "id": 9184181, "events_url": "https://api.github.com/repos/python/mypy/issues/14/events", "updated_at": "2016-03-23T13:54:43Z", "body": "This code is accepted, even though it should generate an error:\r\n\r\n    class A: pass\r\n    class B: pass\r\n    class C(A, B): pass\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/14/labels{/name}", "comments": 22, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Give an error if a class extends two classes", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-11T10:36:27Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/14/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-11T16:03:48Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 13, "html_url": "https://github.com/python/mypy/issues/13", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/13", "id": 9183955, "events_url": "https://api.github.com/repos/python/mypy/issues/13/events", "updated_at": "2014-07-25T22:19:32Z", "body": "The following code is accepted by the parser, even though Python gives a syntax error:\r\n\r\n    def f(*x, *, y = 1): pass\r\n\r\nThe code should generate a parse error.", "labels_url": "https://api.github.com/repos/python/mypy/issues/13/labels{/name}", "comments": 3, "repository_url": "https://api.github.com/repos/python/mypy", "title": "No error for bare asterisk after *args", "assignee": null, "closed_at": "2014-07-25T22:19:32Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/13/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}, {"name": "easy", "color": "d4c5f9", "url": "https://api.github.com/repos/python/mypy/labels/easy"}], "created_at": "2012-12-11T15:56:41Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 12, "html_url": "https://github.com/python/mypy/issues/12", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/12", "id": 9183879, "events_url": "https://api.github.com/repos/python/mypy/issues/12/events", "updated_at": "2013-01-10T09:27:31Z", "body": "Invalid Python is generated from this function:\r\n\r\n    def f(*x, y = 1): pass\r\n\r\nThe output is like this:\r\n\r\n    def f(*x =, y 1): pass\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/12/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid Python generated for optional argument after *arg", "assignee": null, "closed_at": "2013-01-10T09:27:31Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/12/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-11T15:54:27Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 11, "html_url": "https://github.com/python/mypy/issues/11", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/11", "id": 9183511, "events_url": "https://api.github.com/repos/python/mypy/issues/11/events", "updated_at": "2014-07-25T23:58:02Z", "body": "Nested list comprehensions are not accepted by the parser. Example:\r\n\r\n    print([(x, y) for x in range(5) for y in range(3)])", "labels_url": "https://api.github.com/repos/python/mypy/issues/11/labels{/name}", "comments": 6, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement nested list comprehensions", "assignee": null, "closed_at": "2014-07-25T23:58:02Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/11/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-11T15:44:33Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 10, "html_url": "https://github.com/python/mypy/issues/10", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/10", "id": 9180884, "events_url": "https://api.github.com/repos/python/mypy/issues/10/events", "updated_at": "2012-12-11T16:06:24Z", "body": "The following code is not accepted:\r\n\r\n    str f(str a): pass\r\n    t f<t>(t a): pass\r\n    f<int>(1) # Error: Invalid type application target type\r\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/10/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cannot give explicit type arguments when calling a generic overloaded function", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2012-12-11T16:06:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/10/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-11T14:22:14Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 9, "html_url": "https://github.com/python/mypy/issues/9", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/9", "id": 9180254, "events_url": "https://api.github.com/repos/python/mypy/issues/9/events", "updated_at": "2012-12-11T14:12:28Z", "body": "Python generation preserves explicit type arguments for generic functions/classes. It should erase them.", "labels_url": "https://api.github.com/repos/python/mypy/issues/9/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Invalid Python generated for calls such as foo<int>() ", "assignee": null, "closed_at": "2012-12-11T14:12:28Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/9/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-11T14:03:42Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 8, "html_url": "https://github.com/python/mypy/issues/8", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/8", "id": 9122538, "events_url": "https://api.github.com/repos/python/mypy/issues/8/events", "updated_at": "2012-12-14T16:01:46Z", "body": "I don't think it's completely clear what the following example should print:\n\n```python\nclass A: pass\nclass B(A): pass\n\ndef f(A a): print('A')\ndef f(B b): print('B')\n\nf(B())\n```\n\nOne might intuitively expect the 'best match' to be chosen, which would print 'B', but the current implementation actually chooses the 'first match', which would print 'A'. This isn't wrong per se but I think it's at least worth documenting.", "labels_url": "https://api.github.com/repos/python/mypy/issues/8/labels{/name}", "comments": 5, "repository_url": "https://api.github.com/repos/python/mypy", "title": "defining the choice of overload when more than one applies", "assignee": null, "closed_at": "2012-12-14T16:01:46Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/8/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2012-12-09T18:16:40Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "locked": false}, {"milestone": null, "number": 7, "html_url": "https://github.com/python/mypy/pull/7", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/7", "id": 9120390, "events_url": "https://api.github.com/repos/python/mypy/issues/7/events", "updated_at": "2012-12-11T11:21:09Z", "body": "", "labels_url": "https://api.github.com/repos/python/mypy/issues/7/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "fix a couple of function overloading corner cases", "assignee": null, "closed_at": "2012-12-11T11:21:09Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/7/comments", "labels": [], "created_at": "2012-12-09T13:52:49Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "pull_request": {"patch_url": "https://github.com/python/mypy/pull/7.patch", "html_url": "https://github.com/python/mypy/pull/7", "diff_url": "https://github.com/python/mypy/pull/7.diff", "url": "https://api.github.com/repos/python/mypy/pulls/7"}, "locked": false}, {"milestone": null, "number": 6, "html_url": "https://github.com/python/mypy/issues/6", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/6", "id": 9120346, "events_url": "https://api.github.com/repos/python/mypy/issues/6/events", "updated_at": "2013-02-11T16:36:33Z", "body": "Add support for type checking simple chained assignments, for example:\n\n    x = y = 1\n\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/6/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Implement chained assignment", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2013-02-11T16:36:33Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/6/comments", "labels": [{"name": "feature", "color": "84b6eb", "url": "https://api.github.com/repos/python/mypy/labels/feature"}], "created_at": "2012-12-09T13:43:21Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 5, "html_url": "https://github.com/python/mypy/issues/5", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/5", "id": 9112558, "events_url": "https://api.github.com/repos/python/mypy/issues/5/events", "updated_at": "2012-12-11T11:22:55Z", "body": "Contrived example:\n\n```python\ndef print_type(int x):\n    print('int')\n\ndef print_type(x):\n    print('unknown')\n```\n\ntranslates to\n\n```python\ndef print_type(x):\n    def print_type1(x):\n        print('int')\n    \n    def print_type2(x):\n        print('unknown')\n    \n    if isinstance(x, int):\n        return print_type1(x)\n    elif : # <--- invalid syntax\n        return print_type2(x)\n    else:\n        raise TypeError(\"Invalid argument types\")\n```\n\n(comment added by me)", "labels_url": "https://api.github.com/repos/python/mypy/issues/5/labels{/name}", "comments": 0, "repository_url": "https://api.github.com/repos/python/mypy", "title": "overloaded functions can get translated to invalid python", "assignee": null, "closed_at": "2012-12-11T11:22:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/5/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-08T17:09:01Z", "user": {"followers_url": "https://api.github.com/users/ashleyh/followers", "gists_url": "https://api.github.com/users/ashleyh/gists{/gist_id}", "html_url": "https://github.com/ashleyh", "following_url": "https://api.github.com/users/ashleyh/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/472266?v=3", "url": "https://api.github.com/users/ashleyh", "organizations_url": "https://api.github.com/users/ashleyh/orgs", "starred_url": "https://api.github.com/users/ashleyh/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/ashleyh/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/ashleyh/subscriptions", "login": "ashleyh", "repos_url": "https://api.github.com/users/ashleyh/repos", "received_events_url": "https://api.github.com/users/ashleyh/received_events", "id": 472266, "site_admin": false}, "locked": false}, {"milestone": null, "number": 4, "html_url": "https://github.com/python/mypy/issues/4", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/4", "id": 9112183, "events_url": "https://api.github.com/repos/python/mypy/issues/4/events", "updated_at": "2012-12-11T13:58:11Z", "body": "it's very cool! yes, it is!", "labels_url": "https://api.github.com/repos/python/mypy/issues/4/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Cool Project", "assignee": null, "closed_at": "2012-12-11T13:58:11Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/4/comments", "labels": [], "created_at": "2012-12-08T16:24:55Z", "user": {"followers_url": "https://api.github.com/users/lifei/followers", "gists_url": "https://api.github.com/users/lifei/gists{/gist_id}", "html_url": "https://github.com/lifei", "following_url": "https://api.github.com/users/lifei/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/350000?v=3", "url": "https://api.github.com/users/lifei", "organizations_url": "https://api.github.com/users/lifei/orgs", "starred_url": "https://api.github.com/users/lifei/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/lifei/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/lifei/subscriptions", "login": "lifei", "repos_url": "https://api.github.com/users/lifei/repos", "received_events_url": "https://api.github.com/users/lifei/received_events", "id": 350000, "site_admin": false}, "locked": false}, {"milestone": null, "number": 3, "html_url": "https://github.com/python/mypy/issues/3", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/3", "id": 9109526, "events_url": "https://api.github.com/repos/python/mypy/issues/3/events", "updated_at": "2012-12-14T16:02:55Z", "body": "Currently there's no documentation about supported Python modules. Users have to manually inspect the `stubs`directory (and that's not documented either).", "labels_url": "https://api.github.com/repos/python/mypy/issues/3/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Document which Python modules are supported", "assignee": null, "closed_at": "2012-12-14T16:02:55Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/3/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2012-12-08T09:34:22Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 2, "html_url": "https://github.com/python/mypy/issues/2", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/2", "id": 9109512, "events_url": "https://api.github.com/repos/python/mypy/issues/2/events", "updated_at": "2012-12-14T13:38:56Z", "body": "You can use lambdas in code, but the type checker basically ignores them and always gives them the 'any' type.\n\nCode like this is accepted, which is obviously wrong:\n\n    int x = lambda y: 'x'", "labels_url": "https://api.github.com/repos/python/mypy/issues/2/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "Lambdas are accepted by the type checker but not actually checked", "assignee": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "closed_at": "2012-12-14T13:38:56Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/2/comments", "labels": [{"name": "bug", "color": "fc2929", "url": "https://api.github.com/repos/python/mypy/labels/bug"}], "created_at": "2012-12-08T09:32:06Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}, {"milestone": null, "number": 1, "html_url": "https://github.com/python/mypy/issues/1", "state": "closed", "url": "https://api.github.com/repos/python/mypy/issues/1", "id": 9109495, "events_url": "https://api.github.com/repos/python/mypy/issues/1/events", "updated_at": "2012-12-20T17:41:24Z", "body": "The mypy language overview should mention list and dict literals with explicit types, for example:\n\n    names = <str> []  # Equivalent to str[] names = []\n    counts = <str, int> {}  # Equivalent to dict<str, int> counts = {}\n", "labels_url": "https://api.github.com/repos/python/mypy/issues/1/labels{/name}", "comments": 1, "repository_url": "https://api.github.com/repos/python/mypy", "title": "List and dict literals with explicit types not documented", "assignee": null, "closed_at": "2012-12-20T17:41:24Z", "comments_url": "https://api.github.com/repos/python/mypy/issues/1/comments", "labels": [{"name": "documentation", "color": "0b02e1", "url": "https://api.github.com/repos/python/mypy/labels/documentation"}], "created_at": "2012-12-08T09:29:45Z", "user": {"followers_url": "https://api.github.com/users/JukkaL/followers", "gists_url": "https://api.github.com/users/JukkaL/gists{/gist_id}", "html_url": "https://github.com/JukkaL", "following_url": "https://api.github.com/users/JukkaL/following{/other_user}", "avatar_url": "https://avatars.githubusercontent.com/u/1107911?v=3", "url": "https://api.github.com/users/JukkaL", "organizations_url": "https://api.github.com/users/JukkaL/orgs", "starred_url": "https://api.github.com/users/JukkaL/starred{/owner}{/repo}", "type": "User", "events_url": "https://api.github.com/users/JukkaL/events{/privacy}", "gravatar_id": "", "subscriptions_url": "https://api.github.com/users/JukkaL/subscriptions", "login": "JukkaL", "repos_url": "https://api.github.com/users/JukkaL/repos", "received_events_url": "https://api.github.com/users/JukkaL/received_events", "id": 1107911, "site_admin": false}, "locked": false}]